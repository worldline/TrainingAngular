"bundle";
System.register("src/services/slidesDefs.js", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var SlideLinkModel;
    return {
        setters: [],
        execute: function () {
            // Just a been which contains data about a slide
            // Have a look at the SLideLink component to see
            // where it's used
            SlideLinkModel = function () {
                function SlideLinkModel() {}
                SlideLinkModel.prototype.getComponentName = function () {
                    return this.componentName;
                };
                SlideLinkModel.prototype.setComponentName = function (componentName) {
                    this.componentName = componentName;
                };
                SlideLinkModel.prototype.getId = function () {
                    return this.id;
                };
                SlideLinkModel.prototype.setId = function (id) {
                    this.id = id;
                };
                SlideLinkModel.prototype.getText = function () {
                    return this.text;
                };
                SlideLinkModel.prototype.setText = function (text) {
                    this.text = text;
                };
                SlideLinkModel.prototype.getTooltip = function () {
                    return this.tooltip;
                };
                SlideLinkModel.prototype.setTooltip = function (tooltip) {
                    this.tooltip = tooltip;
                };
                // Create an instance of SlideLinkModel based on a RouteDefinition object
                // and an index (index the slide)
                SlideLinkModel.fromRouteAndIndex = function (routeDef, index) {
                    var newslide = new SlideLinkModel();
                    newslide.setId(index);
                    newslide.setComponentName(routeDef.name);
                    var slidePath = routeDef.slidePath;
                    newslide.setTooltip(slidePath);
                    newslide.setText('' + (index + 1));
                    return newslide;
                };
                return SlideLinkModel;
            }();
            exports_1("SlideLinkModel", SlideLinkModel);
        }
    };
});
System.register("src/components/slideLink/slideLink.js", ["npm:@angular/core@2.0.0-rc.1.js"], function (exports_1, context_1) {
    "use strict";

    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, SlideLink;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }],
        execute: function () {
            // Basic class which contains informations about a slide ( its name, its index)
            // These informations can be used to display a tooltip when the cursor is on the 
            // link element, and can also be used to navigate to a given slide
            SlideLink = function () {
                function SlideLink() {
                    var _this = this;
                    this.navigate = new core_1.EventEmitter();
                    // Send an event to the parent component (menu)
                    // to trigger a change of slide
                    this.goToSlide = function () {
                        _this.navigate.next(_this.model.getId());
                        return false;
                    };
                }
                Object.defineProperty(SlideLink.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    // Set the model informations for a slide (some text based on the component name, and the slide index)
                    set: function (model) {
                        this._model = model;
                    },
                    enumerable: true,
                    configurable: true
                });
                return SlideLink;
            }();
            __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], SlideLink.prototype, "navigate", void 0);
            SlideLink = __decorate([core_1.Component({
                selector: 'slide-link',
                styleUrls: ['src/components/slideLink/slideLink.css'],
                templateUrl: 'src/components/slideLink/slideLink.html',
                inputs: ['model']
            }), __metadata("design:paramtypes", [])], SlideLink);
            exports_1("SlideLink", SlideLink);
        }
    };
});
System.register("src/components/slideMove/slideMoveLeft.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:rxjs@5.0.0-beta.6/add/observable/fromEvent.js", "src/services/slidesHelper.js", "src/services/keyupListener.js", "src/services/slideMove.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slidesHelper_1, keyupListener_1, slideMove_1, SlideMoveLeft;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (_1) {}, function (slidesHelper_1_1) {
            slidesHelper_1 = slidesHelper_1_1;
        }, function (keyupListener_1_1) {
            keyupListener_1 = keyupListener_1_1;
        }, function (slideMove_1_1) {
            slideMove_1 = slideMove_1_1;
        }],
        execute: function () {
            // Display a button which can be clicked to navigate to the previous slide (see template)
            // Also observe the left arrow keypress to navigate to the previous slide
            SlideMoveLeft = function (_super) {
                __extends(SlideMoveLeft, _super);
                function SlideMoveLeft(slidesHelper, keyupListener) {
                    _super.call(this, slidesHelper, keyupListener);
                    this.label = 'left';
                }
                // Return the stream which has to be obesrved and which corresponds
                // to left keypress
                SlideMoveLeft.prototype.getObservable = function () {
                    return this.keyupListener.leftObservable;
                };
                //Navigate to previous slide
                SlideMoveLeft.prototype.goToSlide = function () {
                    this.slidesHelper.previousSlide();
                };
                return SlideMoveLeft;
            }(slideMove_1.SlideMove);
            SlideMoveLeft = __decorate([core_1.Component({
                selector: 'slide-move-left',
                templateUrl: 'src/components/slideMove/slideMove.html',
                directives: []
            }), __metadata("design:paramtypes", [slidesHelper_1.SlidesHelper, keyupListener_1.KeyupListener])], SlideMoveLeft);
            exports_1("SlideMoveLeft", SlideMoveLeft);
        }
    };
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/observable/FromEventObservable.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/util/tryCatch.js', 'npm:rxjs@5.0.0-beta.6/util/errorObject.js', 'npm:rxjs@5.0.0-beta.6/Subscription.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var tryCatch_1 = $__require('npm:rxjs@5.0.0-beta.6/util/tryCatch.js');
  var errorObject_1 = $__require('npm:rxjs@5.0.0-beta.6/util/errorObject.js');
  var Subscription_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscription.js');
  function isNodeStyleEventEmmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
  }
  function isJQueryStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
  }
  function isNodeList(sourceObj) {
    return !!sourceObj && sourceObj.toString() === '[object NodeList]';
  }
  function isHTMLCollection(sourceObj) {
    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';
  }
  function isEventTarget(sourceObj) {
    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
  }
  var FromEventObservable = function (_super) {
    __extends(FromEventObservable, _super);
    function FromEventObservable(sourceObj, eventName, selector) {
      _super.call(this);
      this.sourceObj = sourceObj;
      this.eventName = eventName;
      this.selector = selector;
    }
    FromEventObservable.create = function (sourceObj, eventName, selector) {
      return new FromEventObservable(sourceObj, eventName, selector);
    };
    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber) {
      var unsubscribe;
      if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {
        for (var i = 0, len = sourceObj.length; i < len; i++) {
          FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);
        }
      } else if (isEventTarget(sourceObj)) {
        sourceObj.addEventListener(eventName, handler);
        unsubscribe = function () {
          return sourceObj.removeEventListener(eventName, handler);
        };
      } else if (isJQueryStyleEventEmitter(sourceObj)) {
        sourceObj.on(eventName, handler);
        unsubscribe = function () {
          return sourceObj.off(eventName, handler);
        };
      } else if (isNodeStyleEventEmmitter(sourceObj)) {
        sourceObj.addListener(eventName, handler);
        unsubscribe = function () {
          return sourceObj.removeListener(eventName, handler);
        };
      }
      subscriber.add(new Subscription_1.Subscription(unsubscribe));
    };
    FromEventObservable.prototype._subscribe = function (subscriber) {
      var sourceObj = this.sourceObj;
      var eventName = this.eventName;
      var selector = this.selector;
      var handler = selector ? function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i - 0] = arguments[_i];
        }
        var result = tryCatch_1.tryCatch(selector).apply(void 0, args);
        if (result === errorObject_1.errorObject) {
          subscriber.error(errorObject_1.errorObject.e);
        } else {
          subscriber.next(result);
        }
      } : function (e) {
        return subscriber.next(e);
      };
      FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);
    };
    return FromEventObservable;
  }(Observable_1.Observable);
  exports.FromEventObservable = FromEventObservable;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/observable/fromEvent.js", ["npm:rxjs@5.0.0-beta.6/observable/FromEventObservable.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var FromEventObservable_1 = $__require("npm:rxjs@5.0.0-beta.6/observable/FromEventObservable.js");
  exports.fromEvent = FromEventObservable_1.FromEventObservable.create;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/observable/fromEvent.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/observable/fromEvent.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var fromEvent_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/fromEvent.js');
  Observable_1.Observable.fromEvent = fromEvent_1.fromEvent;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/zip.js', ['npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js', 'npm:rxjs@5.0.0-beta.6/util/isArray.js', 'npm:rxjs@5.0.0-beta.6/Subscriber.js', 'npm:rxjs@5.0.0-beta.6/OuterSubscriber.js', 'npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js', 'npm:rxjs@5.0.0-beta.6/symbol/iterator.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var ArrayObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js');
  var isArray_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isArray.js');
  var Subscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscriber.js');
  var OuterSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/OuterSubscriber.js');
  var subscribeToResult_1 = $__require('npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js');
  var iterator_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/iterator.js');
  function zipProto() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      observables[_i - 0] = arguments[_i];
    }
    observables.unshift(this);
    return zipStatic.apply(this, observables);
  }
  exports.zipProto = zipProto;
  function zipStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      observables[_i - 0] = arguments[_i];
    }
    var project = observables[observables.length - 1];
    if (typeof project === 'function') {
      observables.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));
  }
  exports.zipStatic = zipStatic;
  var ZipOperator = function () {
    function ZipOperator(project) {
      this.project = project;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
      return source._subscribe(new ZipSubscriber(subscriber, this.project));
    };
    return ZipOperator;
  }();
  exports.ZipOperator = ZipOperator;
  var ZipSubscriber = function (_super) {
    __extends(ZipSubscriber, _super);
    function ZipSubscriber(destination, project, values) {
      if (values === void 0) {
        values = Object.create(null);
      }
      _super.call(this, destination);
      this.index = 0;
      this.iterators = [];
      this.active = 0;
      this.project = typeof project === 'function' ? project : null;
      this.values = values;
    }
    ZipSubscriber.prototype._next = function (value) {
      var iterators = this.iterators;
      var index = this.index++;
      if (isArray_1.isArray(value)) {
        iterators.push(new StaticArrayIterator(value));
      } else if (typeof value[iterator_1.$$iterator] === 'function') {
        iterators.push(new StaticIterator(value[iterator_1.$$iterator]()));
      } else {
        iterators.push(new ZipBufferIterator(this.destination, this, value, index));
      }
    };
    ZipSubscriber.prototype._complete = function () {
      var iterators = this.iterators;
      var len = iterators.length;
      this.active = len;
      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];
        if (iterator.stillUnsubscribed) {
          this.add(iterator.subscribe(iterator, i));
        } else {
          this.active--;
        }
      }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
      this.active--;
      if (this.active === 0) {
        this.destination.complete();
      }
    };
    ZipSubscriber.prototype.checkIterators = function () {
      var iterators = this.iterators;
      var len = iterators.length;
      var destination = this.destination;
      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];
        if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
          return;
        }
      }
      var shouldComplete = false;
      var args = [];
      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];
        var result = iterator.next();
        if (iterator.hasCompleted()) {
          shouldComplete = true;
        }
        if (result.done) {
          destination.complete();
          return;
        }
        args.push(result.value);
      }
      if (this.project) {
        this._tryProject(args);
      } else {
        destination.next(args);
      }
      if (shouldComplete) {
        destination.complete();
      }
    };
    ZipSubscriber.prototype._tryProject = function (args) {
      var result;
      try {
        result = this.project.apply(this, args);
      } catch (err) {
        this.destination.error(err);
        return;
      }
      this.destination.next(result);
    };
    return ZipSubscriber;
  }(Subscriber_1.Subscriber);
  exports.ZipSubscriber = ZipSubscriber;
  var StaticIterator = function () {
    function StaticIterator(iterator) {
      this.iterator = iterator;
      this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
      return true;
    };
    StaticIterator.prototype.next = function () {
      var result = this.nextResult;
      this.nextResult = this.iterator.next();
      return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
      var nextResult = this.nextResult;
      return nextResult && nextResult.done;
    };
    return StaticIterator;
  }();
  var StaticArrayIterator = function () {
    function StaticArrayIterator(array) {
      this.array = array;
      this.index = 0;
      this.length = 0;
      this.length = array.length;
    }
    StaticArrayIterator.prototype[iterator_1.$$iterator] = function () {
      return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
      var i = this.index++;
      var array = this.array;
      return i < this.length ? {
        value: array[i],
        done: false
      } : { done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
      return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
      return this.array.length === this.index;
    };
    return StaticArrayIterator;
  }();
  var ZipBufferIterator = function (_super) {
    __extends(ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable, index) {
      _super.call(this, destination);
      this.parent = parent;
      this.observable = observable;
      this.index = index;
      this.stillUnsubscribed = true;
      this.buffer = [];
      this.isComplete = false;
    }
    ZipBufferIterator.prototype[iterator_1.$$iterator] = function () {
      return this;
    };
    ZipBufferIterator.prototype.next = function () {
      var buffer = this.buffer;
      if (buffer.length === 0 && this.isComplete) {
        return { done: true };
      } else {
        return {
          value: buffer.shift(),
          done: false
        };
      }
    };
    ZipBufferIterator.prototype.hasValue = function () {
      return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
      return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
      if (this.buffer.length > 0) {
        this.isComplete = true;
        this.parent.notifyInactive();
      } else {
        this.destination.complete();
      }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
      this.buffer.push(innerValue);
      this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
      return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);
    };
    return ZipBufferIterator;
  }(OuterSubscriber_1.OuterSubscriber);
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/observable/RangeObservable.js", ["npm:rxjs@5.0.0-beta.6/Observable.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require("npm:rxjs@5.0.0-beta.6/Observable.js");
  var RangeObservable = function (_super) {
    __extends(RangeObservable, _super);
    function RangeObservable(start, count, scheduler) {
      _super.call(this);
      this.start = start;
      this._count = count;
      this.scheduler = scheduler;
    }
    RangeObservable.create = function (start, count, scheduler) {
      if (start === void 0) {
        start = 0;
      }
      if (count === void 0) {
        count = 0;
      }
      return new RangeObservable(start, count, scheduler);
    };
    RangeObservable.dispatch = function (state) {
      var start = state.start,
          index = state.index,
          count = state.count,
          subscriber = state.subscriber;
      if (index >= count) {
        subscriber.complete();
        return;
      }
      subscriber.next(start);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.index = index + 1;
      state.start = start + 1;
      this.schedule(state);
    };
    RangeObservable.prototype._subscribe = function (subscriber) {
      var index = 0;
      var start = this.start;
      var count = this._count;
      var scheduler = this.scheduler;
      if (scheduler) {
        return scheduler.schedule(RangeObservable.dispatch, 0, {
          index: index,
          count: count,
          start: start,
          subscriber: subscriber
        });
      } else {
        do {
          if (index++ >= count) {
            subscriber.complete();
            break;
          }
          subscriber.next(start++);
          if (subscriber.isUnsubscribed) {
            break;
          }
        } while (true);
      }
    };
    return RangeObservable;
  }(Observable_1.Observable);
  exports.RangeObservable = RangeObservable;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/observable/range.js", ["npm:rxjs@5.0.0-beta.6/observable/RangeObservable.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var RangeObservable_1 = $__require("npm:rxjs@5.0.0-beta.6/observable/RangeObservable.js");
  exports.range = RangeObservable_1.RangeObservable.create;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/observable/range.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/observable/range.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var range_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/range.js');
  Observable_1.Observable.range = range_1.range;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/observable/IteratorObservable.js', ['npm:rxjs@5.0.0-beta.6/util/root.js', 'npm:rxjs@5.0.0-beta.6/util/isObject.js', 'npm:rxjs@5.0.0-beta.6/util/tryCatch.js', 'npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/util/isFunction.js', 'npm:rxjs@5.0.0-beta.6/symbol/iterator.js', 'npm:rxjs@5.0.0-beta.6/util/errorObject.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var isObject_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isObject.js');
  var tryCatch_1 = $__require('npm:rxjs@5.0.0-beta.6/util/tryCatch.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var isFunction_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isFunction.js');
  var iterator_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/iterator.js');
  var errorObject_1 = $__require('npm:rxjs@5.0.0-beta.6/util/errorObject.js');
  var IteratorObservable = function (_super) {
    __extends(IteratorObservable, _super);
    function IteratorObservable(iterator, project, thisArg, scheduler) {
      _super.call(this);
      if (iterator == null) {
        throw new Error('iterator cannot be null.');
      }
      if (isObject_1.isObject(project)) {
        this.thisArg = project;
        this.scheduler = thisArg;
      } else if (isFunction_1.isFunction(project)) {
        this.project = project;
        this.thisArg = thisArg;
        this.scheduler = scheduler;
      } else if (project != null) {
        throw new Error('When provided, `project` must be a function.');
      }
      this.iterator = getIterator(iterator);
    }
    IteratorObservable.create = function (iterator, project, thisArg, scheduler) {
      return new IteratorObservable(iterator, project, thisArg, scheduler);
    };
    IteratorObservable.dispatch = function (state) {
      var index = state.index,
          hasError = state.hasError,
          thisArg = state.thisArg,
          project = state.project,
          iterator = state.iterator,
          subscriber = state.subscriber;
      if (hasError) {
        subscriber.error(state.error);
        return;
      }
      var result = iterator.next();
      if (result.done) {
        subscriber.complete();
        return;
      }
      if (project) {
        result = tryCatch_1.tryCatch(project).call(thisArg, result.value, index);
        if (result === errorObject_1.errorObject) {
          state.error = errorObject_1.errorObject.e;
          state.hasError = true;
        } else {
          subscriber.next(result);
          state.index = index + 1;
        }
      } else {
        subscriber.next(result.value);
        state.index = index + 1;
      }
      if (subscriber.isUnsubscribed) {
        return;
      }
      this.schedule(state);
    };
    IteratorObservable.prototype._subscribe = function (subscriber) {
      var index = 0;
      var _a = this,
          iterator = _a.iterator,
          project = _a.project,
          thisArg = _a.thisArg,
          scheduler = _a.scheduler;
      if (scheduler) {
        return scheduler.schedule(IteratorObservable.dispatch, 0, {
          index: index,
          thisArg: thisArg,
          project: project,
          iterator: iterator,
          subscriber: subscriber
        });
      } else {
        do {
          var result = iterator.next();
          if (result.done) {
            subscriber.complete();
            break;
          } else if (project) {
            result = tryCatch_1.tryCatch(project).call(thisArg, result.value, index++);
            if (result === errorObject_1.errorObject) {
              subscriber.error(errorObject_1.errorObject.e);
              break;
            }
            subscriber.next(result);
          } else {
            subscriber.next(result.value);
          }
          if (subscriber.isUnsubscribed) {
            break;
          }
        } while (true);
      }
    };
    return IteratorObservable;
  }(Observable_1.Observable);
  exports.IteratorObservable = IteratorObservable;
  var StringIterator = function () {
    function StringIterator(str, idx, len) {
      if (idx === void 0) {
        idx = 0;
      }
      if (len === void 0) {
        len = str.length;
      }
      this.str = str;
      this.idx = idx;
      this.len = len;
    }
    StringIterator.prototype[iterator_1.$$iterator] = function () {
      return this;
    };
    StringIterator.prototype.next = function () {
      return this.idx < this.len ? {
        done: false,
        value: this.str.charAt(this.idx++)
      } : {
        done: true,
        value: undefined
      };
    };
    return StringIterator;
  }();
  var ArrayIterator = function () {
    function ArrayIterator(arr, idx, len) {
      if (idx === void 0) {
        idx = 0;
      }
      if (len === void 0) {
        len = toLength(arr);
      }
      this.arr = arr;
      this.idx = idx;
      this.len = len;
    }
    ArrayIterator.prototype[iterator_1.$$iterator] = function () {
      return this;
    };
    ArrayIterator.prototype.next = function () {
      return this.idx < this.len ? {
        done: false,
        value: this.arr[this.idx++]
      } : {
        done: true,
        value: undefined
      };
    };
    return ArrayIterator;
  }();
  function getIterator(obj) {
    var i = obj[iterator_1.$$iterator];
    if (!i && typeof obj === 'string') {
      return new StringIterator(obj);
    }
    if (!i && obj.length !== undefined) {
      return new ArrayIterator(obj);
    }
    if (!i) {
      throw new TypeError('Object is not iterable');
    }
    return obj[iterator_1.$$iterator]();
  }
  var maxSafeInteger = Math.pow(2, 53) - 1;
  function toLength(o) {
    var len = +o.length;
    if (isNaN(len)) {
      return 0;
    }
    if (len === 0 || !numberIsFinite(len)) {
      return len;
    }
    len = sign(len) * Math.floor(Math.abs(len));
    if (len <= 0) {
      return 0;
    }
    if (len > maxSafeInteger) {
      return maxSafeInteger;
    }
    return len;
  }
  function numberIsFinite(value) {
    return typeof value === 'number' && root_1.root.isFinite(value);
  }
  function sign(value) {
    var valueAsNumber = +value;
    if (valueAsNumber === 0) {
      return valueAsNumber;
    }
    if (isNaN(valueAsNumber)) {
      return valueAsNumber;
    }
    return valueAsNumber < 0 ? -1 : 1;
  }
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/observable/ArrayLikeObservable.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/observable/ScalarObservable.js', 'npm:rxjs@5.0.0-beta.6/observable/EmptyObservable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var ScalarObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/ScalarObservable.js');
  var EmptyObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/EmptyObservable.js');
  var ArrayLikeObservable = function (_super) {
    __extends(ArrayLikeObservable, _super);
    function ArrayLikeObservable(arrayLike, mapFn, thisArg, scheduler) {
      _super.call(this);
      this.arrayLike = arrayLike;
      this.scheduler = scheduler;
      if (!mapFn && !scheduler && arrayLike.length === 1) {
        this._isScalar = true;
        this.value = arrayLike[0];
      }
      if (mapFn) {
        this.mapFn = mapFn.bind(thisArg);
      }
    }
    ArrayLikeObservable.create = function (arrayLike, mapFn, thisArg, scheduler) {
      var length = arrayLike.length;
      if (length === 0) {
        return new EmptyObservable_1.EmptyObservable();
      } else if (length === 1 && !mapFn) {
        return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);
      } else {
        return new ArrayLikeObservable(arrayLike, mapFn, thisArg, scheduler);
      }
    };
    ArrayLikeObservable.dispatch = function (state) {
      var arrayLike = state.arrayLike,
          index = state.index,
          length = state.length,
          mapFn = state.mapFn,
          subscriber = state.subscriber;
      if (subscriber.isUnsubscribed) {
        return;
      }
      if (index >= length) {
        subscriber.complete();
        return;
      }
      var result = mapFn ? mapFn(arrayLike[index], index) : arrayLike[index];
      subscriber.next(result);
      state.index = index + 1;
      this.schedule(state);
    };
    ArrayLikeObservable.prototype._subscribe = function (subscriber) {
      var index = 0;
      var _a = this,
          arrayLike = _a.arrayLike,
          mapFn = _a.mapFn,
          scheduler = _a.scheduler;
      var length = arrayLike.length;
      if (scheduler) {
        return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {
          arrayLike: arrayLike,
          index: index,
          length: length,
          mapFn: mapFn,
          subscriber: subscriber
        });
      } else {
        for (var i = 0; i < length && !subscriber.isUnsubscribed; i++) {
          var result = mapFn ? mapFn(arrayLike[i], i) : arrayLike[i];
          subscriber.next(result);
        }
        subscriber.complete();
      }
    };
    return ArrayLikeObservable;
  }(Observable_1.Observable);
  exports.ArrayLikeObservable = ArrayLikeObservable;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/Notification.js', ['npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var Notification = function () {
    function Notification(kind, value, exception) {
      this.kind = kind;
      this.value = value;
      this.exception = exception;
      this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
      switch (this.kind) {
        case 'N':
          return observer.next && observer.next(this.value);
        case 'E':
          return observer.error && observer.error(this.exception);
        case 'C':
          return observer.complete && observer.complete();
      }
    };
    Notification.prototype.do = function (next, error, complete) {
      var kind = this.kind;
      switch (kind) {
        case 'N':
          return next && next(this.value);
        case 'E':
          return error && error(this.exception);
        case 'C':
          return complete && complete();
      }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
      if (nextOrObserver && typeof nextOrObserver.next === 'function') {
        return this.observe(nextOrObserver);
      } else {
        return this.do(nextOrObserver, error, complete);
      }
    };
    Notification.prototype.toObservable = function () {
      var kind = this.kind;
      switch (kind) {
        case 'N':
          return Observable_1.Observable.of(this.value);
        case 'E':
          return Observable_1.Observable.throw(this.exception);
        case 'C':
          return Observable_1.Observable.empty();
      }
    };
    Notification.createNext = function (value) {
      if (typeof value !== 'undefined') {
        return new Notification('N', value);
      }
      return this.undefinedValueNotification;
    };
    Notification.createError = function (err) {
      return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
      return this.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
  }();
  exports.Notification = Notification;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/observeOn.js', ['npm:rxjs@5.0.0-beta.6/Subscriber.js', 'npm:rxjs@5.0.0-beta.6/Notification.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscriber.js');
  var Notification_1 = $__require('npm:rxjs@5.0.0-beta.6/Notification.js');
  function observeOn(scheduler, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    return this.lift(new ObserveOnOperator(scheduler, delay));
  }
  exports.observeOn = observeOn;
  var ObserveOnOperator = function () {
    function ObserveOnOperator(scheduler, delay) {
      if (delay === void 0) {
        delay = 0;
      }
      this.scheduler = scheduler;
      this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
      return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
  }();
  exports.ObserveOnOperator = ObserveOnOperator;
  var ObserveOnSubscriber = function (_super) {
    __extends(ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
      if (delay === void 0) {
        delay = 0;
      }
      _super.call(this, destination);
      this.scheduler = scheduler;
      this.delay = delay;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
      var notification = arg.notification,
          destination = arg.destination;
      notification.observe(destination);
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
      this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
      this.scheduleMessage(Notification_1.Notification.createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
      this.scheduleMessage(Notification_1.Notification.createError(err));
    };
    ObserveOnSubscriber.prototype._complete = function () {
      this.scheduleMessage(Notification_1.Notification.createComplete());
    };
    return ObserveOnSubscriber;
  }(Subscriber_1.Subscriber);
  exports.ObserveOnSubscriber = ObserveOnSubscriber;
  var ObserveOnMessage = function () {
    function ObserveOnMessage(notification, destination) {
      this.notification = notification;
      this.destination = destination;
    }
    return ObserveOnMessage;
  }();
  exports.ObserveOnMessage = ObserveOnMessage;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/observable/FromObservable.js', ['npm:rxjs@5.0.0-beta.6/util/isArray.js', 'npm:rxjs@5.0.0-beta.6/util/isFunction.js', 'npm:rxjs@5.0.0-beta.6/util/isPromise.js', 'npm:rxjs@5.0.0-beta.6/util/isScheduler.js', 'npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js', 'npm:rxjs@5.0.0-beta.6/observable/IteratorObservable.js', 'npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js', 'npm:rxjs@5.0.0-beta.6/observable/ArrayLikeObservable.js', 'npm:rxjs@5.0.0-beta.6/symbol/observable.js', 'npm:rxjs@5.0.0-beta.6/symbol/iterator.js', 'npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/operator/observeOn.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var isArray_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isArray.js');
  var isFunction_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isFunction.js');
  var isPromise_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isPromise.js');
  var isScheduler_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isScheduler.js');
  var PromiseObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js');
  var IteratorObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/IteratorObservable.js');
  var ArrayObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js');
  var ArrayLikeObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/ArrayLikeObservable.js');
  var observable_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/observable.js');
  var iterator_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/iterator.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var observeOn_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/observeOn.js');
  var isArrayLike = function (x) {
    return x && typeof x.length === 'number';
  };
  var FromObservable = function (_super) {
    __extends(FromObservable, _super);
    function FromObservable(ish, scheduler) {
      _super.call(this, null);
      this.ish = ish;
      this.scheduler = scheduler;
    }
    FromObservable.create = function (ish, mapFnOrScheduler, thisArg, lastScheduler) {
      var scheduler = null;
      var mapFn = null;
      if (isFunction_1.isFunction(mapFnOrScheduler)) {
        scheduler = lastScheduler || null;
        mapFn = mapFnOrScheduler;
      } else if (isScheduler_1.isScheduler(scheduler)) {
        scheduler = mapFnOrScheduler;
      }
      if (ish != null) {
        if (typeof ish[observable_1.$$observable] === 'function') {
          if (ish instanceof Observable_1.Observable && !scheduler) {
            return ish;
          }
          return new FromObservable(ish, scheduler);
        } else if (isArray_1.isArray(ish)) {
          return new ArrayObservable_1.ArrayObservable(ish, scheduler);
        } else if (isPromise_1.isPromise(ish)) {
          return new PromiseObservable_1.PromiseObservable(ish, scheduler);
        } else if (typeof ish[iterator_1.$$iterator] === 'function' || typeof ish === 'string') {
          return new IteratorObservable_1.IteratorObservable(ish, null, null, scheduler);
        } else if (isArrayLike(ish)) {
          return new ArrayLikeObservable_1.ArrayLikeObservable(ish, mapFn, thisArg, scheduler);
        }
      }
      throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');
    };
    FromObservable.prototype._subscribe = function (subscriber) {
      var ish = this.ish;
      var scheduler = this.scheduler;
      if (scheduler == null) {
        return ish[observable_1.$$observable]().subscribe(subscriber);
      } else {
        return ish[observable_1.$$observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));
      }
    };
    return FromObservable;
  }(Observable_1.Observable);
  exports.FromObservable = FromObservable;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/observable/from.js", ["npm:rxjs@5.0.0-beta.6/observable/FromObservable.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var FromObservable_1 = $__require("npm:rxjs@5.0.0-beta.6/observable/FromObservable.js");
  exports.from = FromObservable_1.FromObservable.create;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/observable/from.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/observable/from.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var from_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/from.js');
  Observable_1.Observable.from = from_1.from;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/mergeMap.js', ['npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js', 'npm:rxjs@5.0.0-beta.6/OuterSubscriber.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var subscribeToResult_1 = $__require('npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js');
  var OuterSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/OuterSubscriber.js');
  function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'number') {
      concurrent = resultSelector;
      resultSelector = null;
    }
    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));
  }
  exports.mergeMap = mergeMap;
  var MergeMapOperator = function () {
    function MergeMapOperator(project, resultSelector, concurrent) {
      if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
      }
      this.project = project;
      this.resultSelector = resultSelector;
      this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
      return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));
    };
    return MergeMapOperator;
  }();
  exports.MergeMapOperator = MergeMapOperator;
  var MergeMapSubscriber = function (_super) {
    __extends(MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {
      if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
      }
      _super.call(this, destination);
      this.project = project;
      this.resultSelector = resultSelector;
      this.concurrent = concurrent;
      this.hasCompleted = false;
      this.buffer = [];
      this.active = 0;
      this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function (value) {
      if (this.active < this.concurrent) {
        this._tryNext(value);
      } else {
        this.buffer.push(value);
      }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
      var result;
      var index = this.index++;
      try {
        result = this.project(value, index);
      } catch (err) {
        this.destination.error(err);
        return;
      }
      this.active++;
      this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
      this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function () {
      this.hasCompleted = true;
      if (this.active === 0 && this.buffer.length === 0) {
        this.destination.complete();
      }
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
      if (this.resultSelector) {
        this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);
      } else {
        this.destination.next(innerValue);
      }
    };
    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
      var result;
      try {
        result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
      } catch (err) {
        this.destination.error(err);
        return;
      }
      this.destination.next(result);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
      var buffer = this.buffer;
      this.remove(innerSub);
      this.active--;
      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        this.destination.complete();
      }
    };
    return MergeMapSubscriber;
  }(OuterSubscriber_1.OuterSubscriber);
  exports.MergeMapSubscriber = MergeMapSubscriber;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/operator/mergeMap.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/operator/mergeMap.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var mergeMap_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/mergeMap.js');
  Observable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
  Observable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/operator/toArray.js", ["npm:rxjs@5.0.0-beta.6/Subscriber.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscriber_1 = $__require("npm:rxjs@5.0.0-beta.6/Subscriber.js");
  function toArray() {
    return this.lift(new ToArrayOperator());
  }
  exports.toArray = toArray;
  var ToArrayOperator = function () {
    function ToArrayOperator() {}
    ToArrayOperator.prototype.call = function (subscriber, source) {
      return source._subscribe(new ToArraySubscriber(subscriber));
    };
    return ToArrayOperator;
  }();
  var ToArraySubscriber = function (_super) {
    __extends(ToArraySubscriber, _super);
    function ToArraySubscriber(destination) {
      _super.call(this, destination);
      this.array = [];
    }
    ToArraySubscriber.prototype._next = function (x) {
      this.array.push(x);
    };
    ToArraySubscriber.prototype._complete = function () {
      this.destination.next(this.array);
      this.destination.complete();
    };
    return ToArraySubscriber;
  }(Subscriber_1.Subscriber);
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/operator/toArray.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/operator/toArray.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var toArray_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/toArray.js');
  Observable_1.Observable.prototype.toArray = toArray_1.toArray;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/observable/ScalarObservable.js", ["npm:rxjs@5.0.0-beta.6/Observable.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require("npm:rxjs@5.0.0-beta.6/Observable.js");
  var ScalarObservable = function (_super) {
    __extends(ScalarObservable, _super);
    function ScalarObservable(value, scheduler) {
      _super.call(this);
      this.value = value;
      this.scheduler = scheduler;
      this._isScalar = true;
    }
    ScalarObservable.create = function (value, scheduler) {
      return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function (state) {
      var done = state.done,
          value = state.value,
          subscriber = state.subscriber;
      if (done) {
        subscriber.complete();
        return;
      }
      subscriber.next(value);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.done = true;
      this.schedule(state);
    };
    ScalarObservable.prototype._subscribe = function (subscriber) {
      var value = this.value;
      var scheduler = this.scheduler;
      if (scheduler) {
        return scheduler.schedule(ScalarObservable.dispatch, 0, {
          done: false,
          value: value,
          subscriber: subscriber
        });
      } else {
        subscriber.next(value);
        if (!subscriber.isUnsubscribed) {
          subscriber.complete();
        }
      }
    };
    return ScalarObservable;
  }(Observable_1.Observable);
  exports.ScalarObservable = ScalarObservable;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/observable/EmptyObservable.js", ["npm:rxjs@5.0.0-beta.6/Observable.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require("npm:rxjs@5.0.0-beta.6/Observable.js");
  var EmptyObservable = function (_super) {
    __extends(EmptyObservable, _super);
    function EmptyObservable(scheduler) {
      _super.call(this);
      this.scheduler = scheduler;
    }
    EmptyObservable.create = function (scheduler) {
      return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function (arg) {
      var subscriber = arg.subscriber;
      subscriber.complete();
    };
    EmptyObservable.prototype._subscribe = function (subscriber) {
      var scheduler = this.scheduler;
      if (scheduler) {
        return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });
      } else {
        subscriber.complete();
      }
    };
    return EmptyObservable;
  }(Observable_1.Observable);
  exports.EmptyObservable = EmptyObservable;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/isScheduler.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    function isScheduler(value) {
        return value && typeof value.schedule === 'function';
    }
    exports.isScheduler = isScheduler;
    

    return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/observable/ScalarObservable.js', 'npm:rxjs@5.0.0-beta.6/observable/EmptyObservable.js', 'npm:rxjs@5.0.0-beta.6/util/isScheduler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var ScalarObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/ScalarObservable.js');
  var EmptyObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/EmptyObservable.js');
  var isScheduler_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isScheduler.js');
  var ArrayObservable = function (_super) {
    __extends(ArrayObservable, _super);
    function ArrayObservable(array, scheduler) {
      _super.call(this);
      this.array = array;
      this.scheduler = scheduler;
      if (!scheduler && array.length === 1) {
        this._isScalar = true;
        this.value = array[0];
      }
    }
    ArrayObservable.create = function (array, scheduler) {
      return new ArrayObservable(array, scheduler);
    };
    ArrayObservable.of = function () {
      var array = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
      }
      var scheduler = array[array.length - 1];
      if (isScheduler_1.isScheduler(scheduler)) {
        array.pop();
      } else {
        scheduler = null;
      }
      var len = array.length;
      if (len > 1) {
        return new ArrayObservable(array, scheduler);
      } else if (len === 1) {
        return new ScalarObservable_1.ScalarObservable(array[0], scheduler);
      } else {
        return new EmptyObservable_1.EmptyObservable(scheduler);
      }
    };
    ArrayObservable.dispatch = function (state) {
      var array = state.array,
          index = state.index,
          count = state.count,
          subscriber = state.subscriber;
      if (index >= count) {
        subscriber.complete();
        return;
      }
      subscriber.next(array[index]);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.index = index + 1;
      this.schedule(state);
    };
    ArrayObservable.prototype._subscribe = function (subscriber) {
      var index = 0;
      var array = this.array;
      var count = array.length;
      var scheduler = this.scheduler;
      if (scheduler) {
        return scheduler.schedule(ArrayObservable.dispatch, 0, {
          array: array,
          index: index,
          count: count,
          subscriber: subscriber
        });
      } else {
        for (var i = 0; i < count && !subscriber.isUnsubscribed; i++) {
          subscriber.next(array[i]);
        }
        subscriber.complete();
      }
    };
    return ArrayObservable;
  }(Observable_1.Observable);
  exports.ArrayObservable = ArrayObservable;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/OuterSubscriber.js", ["npm:rxjs@5.0.0-beta.6/Subscriber.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscriber_1 = $__require("npm:rxjs@5.0.0-beta.6/Subscriber.js");
  var OuterSubscriber = function (_super) {
    __extends(OuterSubscriber, _super);
    function OuterSubscriber() {
      _super.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
      this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
      this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
      this.destination.complete();
    };
    return OuterSubscriber;
  }(Subscriber_1.Subscriber);
  exports.OuterSubscriber = OuterSubscriber;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/util/isPromise.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    function isPromise(value) {
        return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
    }
    exports.isPromise = isPromise;
    

    return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/symbol/iterator.js', ['npm:rxjs@5.0.0-beta.6/util/root.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var Symbol = root_1.root.Symbol;
  if (typeof Symbol === 'function') {
    if (Symbol.iterator) {
      exports.$$iterator = Symbol.iterator;
    } else if (typeof Symbol.for === 'function') {
      exports.$$iterator = Symbol.for('iterator');
    }
  } else {
    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {
      exports.$$iterator = '@@iterator';
    } else if (root_1.root.Map) {
      var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {
          exports.$$iterator = key;
          break;
        }
      }
    } else {
      exports.$$iterator = '@@iterator';
    }
  }
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/InnerSubscriber.js", ["npm:rxjs@5.0.0-beta.6/Subscriber.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscriber_1 = $__require("npm:rxjs@5.0.0-beta.6/Subscriber.js");
  var InnerSubscriber = function (_super) {
    __extends(InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
      _super.call(this);
      this.parent = parent;
      this.outerValue = outerValue;
      this.outerIndex = outerIndex;
      this.index = 0;
    }
    InnerSubscriber.prototype._next = function (value) {
      this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
      this.parent.notifyError(error, this);
      this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
      this.parent.notifyComplete(this);
      this.unsubscribe();
    };
    return InnerSubscriber;
  }(Subscriber_1.Subscriber);
  exports.InnerSubscriber = InnerSubscriber;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js', ['npm:rxjs@5.0.0-beta.6/util/root.js', 'npm:rxjs@5.0.0-beta.6/util/isArray.js', 'npm:rxjs@5.0.0-beta.6/util/isPromise.js', 'npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/symbol/iterator.js', 'npm:rxjs@5.0.0-beta.6/symbol/observable.js', 'npm:rxjs@5.0.0-beta.6/InnerSubscriber.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var isArray_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isArray.js');
  var isPromise_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isPromise.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var iterator_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/iterator.js');
  var observable_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/observable.js');
  var InnerSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/InnerSubscriber.js');
  function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
    if (destination.isUnsubscribed) {
      return;
    }
    if (result instanceof Observable_1.Observable) {
      if (result._isScalar) {
        destination.next(result.value);
        destination.complete();
        return;
      } else {
        return result.subscribe(destination);
      }
    }
    if (isArray_1.isArray(result)) {
      for (var i = 0, len = result.length; i < len && !destination.isUnsubscribed; i++) {
        destination.next(result[i]);
      }
      if (!destination.isUnsubscribed) {
        destination.complete();
      }
    } else if (isPromise_1.isPromise(result)) {
      result.then(function (value) {
        if (!destination.isUnsubscribed) {
          destination.next(value);
          destination.complete();
        }
      }, function (err) {
        return destination.error(err);
      }).then(null, function (err) {
        root_1.root.setTimeout(function () {
          throw err;
        });
      });
      return destination;
    } else if (typeof result[iterator_1.$$iterator] === 'function') {
      for (var _i = 0, _a = result; _i < _a.length; _i++) {
        var item = _a[_i];
        destination.next(item);
        if (destination.isUnsubscribed) {
          break;
        }
      }
      if (!destination.isUnsubscribed) {
        destination.complete();
      }
    } else if (typeof result[observable_1.$$observable] === 'function') {
      var obs = result[observable_1.$$observable]();
      if (typeof obs.subscribe !== 'function') {
        destination.error('invalid observable');
      } else {
        return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));
      }
    } else {
      destination.error(new TypeError('unknown type returned'));
    }
  }
  exports.subscribeToResult = subscribeToResult;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/mergeAll.js', ['npm:rxjs@5.0.0-beta.6/OuterSubscriber.js', 'npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var OuterSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/OuterSubscriber.js');
  var subscribeToResult_1 = $__require('npm:rxjs@5.0.0-beta.6/util/subscribeToResult.js');
  function mergeAll(concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }
    return this.lift(new MergeAllOperator(concurrent));
  }
  exports.mergeAll = mergeAll;
  var MergeAllOperator = function () {
    function MergeAllOperator(concurrent) {
      this.concurrent = concurrent;
    }
    MergeAllOperator.prototype.call = function (observer, source) {
      return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));
    };
    return MergeAllOperator;
  }();
  exports.MergeAllOperator = MergeAllOperator;
  var MergeAllSubscriber = function (_super) {
    __extends(MergeAllSubscriber, _super);
    function MergeAllSubscriber(destination, concurrent) {
      _super.call(this, destination);
      this.concurrent = concurrent;
      this.hasCompleted = false;
      this.buffer = [];
      this.active = 0;
    }
    MergeAllSubscriber.prototype._next = function (observable) {
      if (this.active < this.concurrent) {
        this.active++;
        this.add(subscribeToResult_1.subscribeToResult(this, observable));
      } else {
        this.buffer.push(observable);
      }
    };
    MergeAllSubscriber.prototype._complete = function () {
      this.hasCompleted = true;
      if (this.active === 0 && this.buffer.length === 0) {
        this.destination.complete();
      }
    };
    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {
      var buffer = this.buffer;
      this.remove(innerSub);
      this.active--;
      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        this.destination.complete();
      }
    };
    return MergeAllSubscriber;
  }(OuterSubscriber_1.OuterSubscriber);
  exports.MergeAllSubscriber = MergeAllSubscriber;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/concat.js', ['npm:rxjs@5.0.0-beta.6/util/isScheduler.js', 'npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js', 'npm:rxjs@5.0.0-beta.6/operator/mergeAll.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var isScheduler_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isScheduler.js');
  var ArrayObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/ArrayObservable.js');
  var mergeAll_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/mergeAll.js');
  function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      observables[_i - 0] = arguments[_i];
    }
    return concatStatic.apply(void 0, [this].concat(observables));
  }
  exports.concat = concat;
  function concatStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      observables[_i - 0] = arguments[_i];
    }
    var scheduler = null;
    var args = observables;
    if (isScheduler_1.isScheduler(args[observables.length - 1])) {
      scheduler = args.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));
  }
  exports.concatStatic = concatStatic;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/operator/concat.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/operator/concat.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var concat_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/concat.js');
  Observable_1.Observable.prototype.concat = concat_1.concat;
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_outlet.js", ["npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js", "npm:@angular/core@2.0.0-rc.1.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/route_lifecycle_reflector.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var __metadata = this && this.__metadata || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
  };
  var __param = this && this.__param || function (paramIndex, decorator) {
    return function (target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var async_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js");
  var collection_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js");
  var lang_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js");
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  var routerMod = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js");
  var instruction_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js");
  var hookMod = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations.js");
  var route_lifecycle_reflector_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/route_lifecycle_reflector.js");
  var _resolveToTrue = async_1.PromiseWrapper.resolve(true);
  var RouterOutlet = function () {
    function RouterOutlet(_viewContainerRef, _loader, _parentRouter, nameAttr) {
      this._viewContainerRef = _viewContainerRef;
      this._loader = _loader;
      this._parentRouter = _parentRouter;
      this.name = null;
      this._componentRef = null;
      this._currentInstruction = null;
      this.activateEvents = new async_1.EventEmitter();
      if (lang_1.isPresent(nameAttr)) {
        this.name = nameAttr;
        this._parentRouter.registerAuxOutlet(this);
      } else {
        this._parentRouter.registerPrimaryOutlet(this);
      }
    }
    RouterOutlet.prototype.activate = function (nextInstruction) {
      var _this = this;
      var previousInstruction = this._currentInstruction;
      this._currentInstruction = nextInstruction;
      var componentType = nextInstruction.componentType;
      var childRouter = this._parentRouter.childRouter(componentType);
      var providers = core_1.ReflectiveInjector.resolve([core_1.provide(instruction_1.RouteData, { useValue: nextInstruction.routeData }), core_1.provide(instruction_1.RouteParams, { useValue: new instruction_1.RouteParams(nextInstruction.params) }), core_1.provide(routerMod.Router, { useValue: childRouter })]);
      this._componentRef = this._loader.loadNextToLocation(componentType, this._viewContainerRef, providers);
      return this._componentRef.then(function (componentRef) {
        _this.activateEvents.emit(componentRef.instance);
        if (route_lifecycle_reflector_1.hasLifecycleHook(hookMod.routerOnActivate, componentType)) {
          return _this._componentRef.then(function (ref) {
            return ref.instance.routerOnActivate(nextInstruction, previousInstruction);
          });
        } else {
          return componentRef;
        }
      });
    };
    RouterOutlet.prototype.reuse = function (nextInstruction) {
      var previousInstruction = this._currentInstruction;
      this._currentInstruction = nextInstruction;
      if (lang_1.isBlank(this._componentRef)) {
        return this.activate(nextInstruction);
      } else {
        return async_1.PromiseWrapper.resolve(route_lifecycle_reflector_1.hasLifecycleHook(hookMod.routerOnReuse, this._currentInstruction.componentType) ? this._componentRef.then(function (ref) {
          return ref.instance.routerOnReuse(nextInstruction, previousInstruction);
        }) : true);
      }
    };
    RouterOutlet.prototype.deactivate = function (nextInstruction) {
      var _this = this;
      var next = _resolveToTrue;
      if (lang_1.isPresent(this._componentRef) && lang_1.isPresent(this._currentInstruction) && route_lifecycle_reflector_1.hasLifecycleHook(hookMod.routerOnDeactivate, this._currentInstruction.componentType)) {
        next = this._componentRef.then(function (ref) {
          return ref.instance.routerOnDeactivate(nextInstruction, _this._currentInstruction);
        });
      }
      return next.then(function (_) {
        if (lang_1.isPresent(_this._componentRef)) {
          var onDispose = _this._componentRef.then(function (ref) {
            return ref.destroy();
          });
          _this._componentRef = null;
          return onDispose;
        }
      });
    };
    RouterOutlet.prototype.routerCanDeactivate = function (nextInstruction) {
      var _this = this;
      if (lang_1.isBlank(this._currentInstruction)) {
        return _resolveToTrue;
      }
      if (route_lifecycle_reflector_1.hasLifecycleHook(hookMod.routerCanDeactivate, this._currentInstruction.componentType)) {
        return this._componentRef.then(function (ref) {
          return ref.instance.routerCanDeactivate(nextInstruction, _this._currentInstruction);
        });
      } else {
        return _resolveToTrue;
      }
    };
    RouterOutlet.prototype.routerCanReuse = function (nextInstruction) {
      var _this = this;
      var result;
      if (lang_1.isBlank(this._currentInstruction) || this._currentInstruction.componentType != nextInstruction.componentType) {
        result = false;
      } else if (route_lifecycle_reflector_1.hasLifecycleHook(hookMod.routerCanReuse, this._currentInstruction.componentType)) {
        result = this._componentRef.then(function (ref) {
          return ref.instance.routerCanReuse(nextInstruction, _this._currentInstruction);
        });
      } else {
        result = nextInstruction == this._currentInstruction || lang_1.isPresent(nextInstruction.params) && lang_1.isPresent(this._currentInstruction.params) && collection_1.StringMapWrapper.equals(nextInstruction.params, this._currentInstruction.params);
      }
      return async_1.PromiseWrapper.resolve(result);
    };
    RouterOutlet.prototype.ngOnDestroy = function () {
      this._parentRouter.unregisterPrimaryOutlet(this);
    };
    __decorate([core_1.Output('activate'), __metadata('design:type', Object)], RouterOutlet.prototype, "activateEvents", void 0);
    RouterOutlet = __decorate([core_1.Directive({ selector: 'router-outlet' }), __param(3, core_1.Attribute('name')), __metadata('design:paramtypes', [core_1.ViewContainerRef, core_1.DynamicComponentLoader, routerMod.Router, String])], RouterOutlet);
    return RouterOutlet;
  }();
  exports.RouterOutlet = RouterOutlet;
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_link.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:@angular/common@2.0.0-rc.1.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var __metadata = this && this.__metadata || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
  };
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  var common_1 = $__require("npm:@angular/common@2.0.0-rc.1.js");
  var lang_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js");
  var router_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js");
  var RouterLink = function () {
    function RouterLink(_router, _location) {
      var _this = this;
      this._router = _router;
      this._location = _location;
      this._router.subscribe(function (_) {
        return _this._updateLink();
      });
    }
    RouterLink.prototype._updateLink = function () {
      this._navigationInstruction = this._router.generate(this._routeParams);
      var navigationHref = this._navigationInstruction.toLinkUrl();
      this.visibleHref = this._location.prepareExternalUrl(navigationHref);
    };
    Object.defineProperty(RouterLink.prototype, "isRouteActive", {
      get: function () {
        return this._router.isRouteActive(this._navigationInstruction);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RouterLink.prototype, "routeParams", {
      set: function (changes) {
        this._routeParams = changes;
        this._updateLink();
      },
      enumerable: true,
      configurable: true
    });
    RouterLink.prototype.onClick = function () {
      if (!lang_1.isString(this.target) || this.target == '_self') {
        this._router.navigateByInstruction(this._navigationInstruction);
        return false;
      }
      return true;
    };
    RouterLink = __decorate([core_1.Directive({
      selector: '[routerLink]',
      inputs: ['routeParams: routerLink', 'target: target'],
      host: {
        '(click)': 'onClick()',
        '[attr.href]': 'visibleHref',
        '[class.router-link-active]': 'isRouteActive'
      }
    }), __metadata('design:paramtypes', [router_1.Router, common_1.Location])], RouterLink);
    return RouterLink;
  }();
  exports.RouterLink = RouterLink;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/core_private.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations_impl.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_private_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/core_private.js');
  var lifecycle_annotations_impl_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations_impl.js');
  var lifecycle_annotations_impl_2 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations_impl.js');
  exports.routerCanReuse = lifecycle_annotations_impl_2.routerCanReuse;
  exports.routerCanDeactivate = lifecycle_annotations_impl_2.routerCanDeactivate;
  exports.routerOnActivate = lifecycle_annotations_impl_2.routerOnActivate;
  exports.routerOnReuse = lifecycle_annotations_impl_2.routerOnReuse;
  exports.routerOnDeactivate = lifecycle_annotations_impl_2.routerOnDeactivate;
  exports.CanActivate = core_private_1.makeDecorator(lifecycle_annotations_impl_1.CanActivate);
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations_impl.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /* @ts2dart_const */

    var define,
        global = this || self,
        GLOBAL = global;
    var RouteLifecycleHook = function () {
        function RouteLifecycleHook(name) {
            this.name = name;
        }
        return RouteLifecycleHook;
    }();
    exports.RouteLifecycleHook = RouteLifecycleHook;
    /* @ts2dart_const */
    var CanActivate = function () {
        function CanActivate(fn) {
            this.fn = fn;
        }
        return CanActivate;
    }();
    exports.CanActivate = CanActivate;
    exports.routerCanReuse =
    /*@ts2dart_const*/new RouteLifecycleHook("routerCanReuse");
    exports.routerCanDeactivate =
    /*@ts2dart_const*/new RouteLifecycleHook("routerCanDeactivate");
    exports.routerOnActivate =
    /*@ts2dart_const*/new RouteLifecycleHook("routerOnActivate");
    exports.routerOnReuse =
    /*@ts2dart_const*/new RouteLifecycleHook("routerOnReuse");
    exports.routerOnDeactivate =
    /*@ts2dart_const*/new RouteLifecycleHook("routerOnDeactivate");
    

    return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/route_lifecycle_reflector.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations_impl.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lifecycle_annotations_impl_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations_impl.js');
  var core_2 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  function hasLifecycleHook(e, type) {
    if (!(type instanceof core_1.Type)) return false;
    return e.name in type.prototype;
  }
  exports.hasLifecycleHook = hasLifecycleHook;
  function getCanActivateHook(type) {
    var annotations = core_2.reflector.annotations(type);
    for (var i = 0; i < annotations.length; i += 1) {
      var annotation = annotations[i];
      if (annotation instanceof lifecycle_annotations_impl_1.CanActivate) {
        return annotation.fn;
      }
    }
    return null;
  }
  exports.getCanActivateHook = getCanActivateHook;
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js", ["npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js", "npm:@angular/common@2.0.0-rc.1.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/route_lifecycle_reflector.js", "npm:@angular/core@2.0.0-rc.1.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var __metadata = this && this.__metadata || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
  };
  var __param = this && this.__param || function (paramIndex, decorator) {
    return function (target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var async_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js");
  var collection_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js");
  var lang_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js");
  var exceptions_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js");
  var common_1 = $__require("npm:@angular/common@2.0.0-rc.1.js");
  var route_registry_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js");
  var route_lifecycle_reflector_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/route_lifecycle_reflector.js");
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  var _resolveToTrue = async_1.PromiseWrapper.resolve(true);
  var _resolveToFalse = async_1.PromiseWrapper.resolve(false);
  var Router = function () {
    function Router(registry, parent, hostComponent, root) {
      this.registry = registry;
      this.parent = parent;
      this.hostComponent = hostComponent;
      this.root = root;
      this.navigating = false;
      this.currentInstruction = null;
      this._currentNavigation = _resolveToTrue;
      this._outlet = null;
      this._auxRouters = new collection_1.Map();
      this._subject = new async_1.EventEmitter();
    }
    Router.prototype.childRouter = function (hostComponent) {
      return this._childRouter = new ChildRouter(this, hostComponent);
    };
    Router.prototype.auxRouter = function (hostComponent) {
      return new ChildRouter(this, hostComponent);
    };
    Router.prototype.registerPrimaryOutlet = function (outlet) {
      if (lang_1.isPresent(outlet.name)) {
        throw new exceptions_1.BaseException("registerPrimaryOutlet expects to be called with an unnamed outlet.");
      }
      if (lang_1.isPresent(this._outlet)) {
        throw new exceptions_1.BaseException("Primary outlet is already registered.");
      }
      this._outlet = outlet;
      if (lang_1.isPresent(this.currentInstruction)) {
        return this.commit(this.currentInstruction, false);
      }
      return _resolveToTrue;
    };
    Router.prototype.unregisterPrimaryOutlet = function (outlet) {
      if (lang_1.isPresent(outlet.name)) {
        throw new exceptions_1.BaseException("registerPrimaryOutlet expects to be called with an unnamed outlet.");
      }
      this._outlet = null;
    };
    Router.prototype.registerAuxOutlet = function (outlet) {
      var outletName = outlet.name;
      if (lang_1.isBlank(outletName)) {
        throw new exceptions_1.BaseException("registerAuxOutlet expects to be called with an outlet with a name.");
      }
      var router = this.auxRouter(this.hostComponent);
      this._auxRouters.set(outletName, router);
      router._outlet = outlet;
      var auxInstruction;
      if (lang_1.isPresent(this.currentInstruction) && lang_1.isPresent(auxInstruction = this.currentInstruction.auxInstruction[outletName])) {
        return router.commit(auxInstruction);
      }
      return _resolveToTrue;
    };
    Router.prototype.isRouteActive = function (instruction) {
      var _this = this;
      var router = this;
      if (lang_1.isBlank(this.currentInstruction)) {
        return false;
      }
      while (lang_1.isPresent(router.parent) && lang_1.isPresent(instruction.child)) {
        router = router.parent;
        instruction = instruction.child;
      }
      if (lang_1.isBlank(instruction.component) || lang_1.isBlank(this.currentInstruction.component) || this.currentInstruction.component.routeName != instruction.component.routeName) {
        return false;
      }
      var paramEquals = true;
      if (lang_1.isPresent(this.currentInstruction.component.params)) {
        collection_1.StringMapWrapper.forEach(instruction.component.params, function (value, key) {
          if (_this.currentInstruction.component.params[key] !== value) {
            paramEquals = false;
          }
        });
      }
      return paramEquals;
    };
    Router.prototype.config = function (definitions) {
      var _this = this;
      definitions.forEach(function (routeDefinition) {
        _this.registry.config(_this.hostComponent, routeDefinition);
      });
      return this.renavigate();
    };
    Router.prototype.navigate = function (linkParams) {
      var instruction = this.generate(linkParams);
      return this.navigateByInstruction(instruction, false);
    };
    Router.prototype.navigateByUrl = function (url, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      return this._currentNavigation = this._currentNavigation.then(function (_) {
        _this.lastNavigationAttempt = url;
        _this._startNavigating();
        return _this._afterPromiseFinishNavigating(_this.recognize(url).then(function (instruction) {
          if (lang_1.isBlank(instruction)) {
            return false;
          }
          return _this._navigate(instruction, _skipLocationChange);
        }));
      });
    };
    Router.prototype.navigateByInstruction = function (instruction, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      if (lang_1.isBlank(instruction)) {
        return _resolveToFalse;
      }
      return this._currentNavigation = this._currentNavigation.then(function (_) {
        _this._startNavigating();
        return _this._afterPromiseFinishNavigating(_this._navigate(instruction, _skipLocationChange));
      });
    };
    Router.prototype._settleInstruction = function (instruction) {
      var _this = this;
      return instruction.resolveComponent().then(function (_) {
        var unsettledInstructions = [];
        if (lang_1.isPresent(instruction.component)) {
          instruction.component.reuse = false;
        }
        if (lang_1.isPresent(instruction.child)) {
          unsettledInstructions.push(_this._settleInstruction(instruction.child));
        }
        collection_1.StringMapWrapper.forEach(instruction.auxInstruction, function (instruction, _) {
          unsettledInstructions.push(_this._settleInstruction(instruction));
        });
        return async_1.PromiseWrapper.all(unsettledInstructions);
      });
    };
    Router.prototype._navigate = function (instruction, _skipLocationChange) {
      var _this = this;
      return this._settleInstruction(instruction).then(function (_) {
        return _this._routerCanReuse(instruction);
      }).then(function (_) {
        return _this._canActivate(instruction);
      }).then(function (result) {
        if (!result) {
          return false;
        }
        return _this._routerCanDeactivate(instruction).then(function (result) {
          if (result) {
            return _this.commit(instruction, _skipLocationChange).then(function (_) {
              _this._emitNavigationFinish(instruction.toRootUrl());
              return true;
            });
          }
        });
      });
    };
    Router.prototype._emitNavigationFinish = function (url) {
      async_1.ObservableWrapper.callEmit(this._subject, url);
    };
    Router.prototype._emitNavigationFail = function (url) {
      async_1.ObservableWrapper.callError(this._subject, url);
    };
    Router.prototype._afterPromiseFinishNavigating = function (promise) {
      var _this = this;
      return async_1.PromiseWrapper.catchError(promise.then(function (_) {
        return _this._finishNavigating();
      }), function (err) {
        _this._finishNavigating();
        throw err;
      });
    };
    Router.prototype._routerCanReuse = function (instruction) {
      var _this = this;
      if (lang_1.isBlank(this._outlet)) {
        return _resolveToFalse;
      }
      if (lang_1.isBlank(instruction.component)) {
        return _resolveToTrue;
      }
      return this._outlet.routerCanReuse(instruction.component).then(function (result) {
        instruction.component.reuse = result;
        if (result && lang_1.isPresent(_this._childRouter) && lang_1.isPresent(instruction.child)) {
          return _this._childRouter._routerCanReuse(instruction.child);
        }
      });
    };
    Router.prototype._canActivate = function (nextInstruction) {
      return canActivateOne(nextInstruction, this.currentInstruction);
    };
    Router.prototype._routerCanDeactivate = function (instruction) {
      var _this = this;
      if (lang_1.isBlank(this._outlet)) {
        return _resolveToTrue;
      }
      var next;
      var childInstruction = null;
      var reuse = false;
      var componentInstruction = null;
      if (lang_1.isPresent(instruction)) {
        childInstruction = instruction.child;
        componentInstruction = instruction.component;
        reuse = lang_1.isBlank(instruction.component) || instruction.component.reuse;
      }
      if (reuse) {
        next = _resolveToTrue;
      } else {
        next = this._outlet.routerCanDeactivate(componentInstruction);
      }
      return next.then(function (result) {
        if (result == false) {
          return false;
        }
        if (lang_1.isPresent(_this._childRouter)) {
          return _this._childRouter._routerCanDeactivate(childInstruction);
        }
        return true;
      });
    };
    Router.prototype.commit = function (instruction, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      this.currentInstruction = instruction;
      var next = _resolveToTrue;
      if (lang_1.isPresent(this._outlet) && lang_1.isPresent(instruction.component)) {
        var componentInstruction = instruction.component;
        if (componentInstruction.reuse) {
          next = this._outlet.reuse(componentInstruction);
        } else {
          next = this.deactivate(instruction).then(function (_) {
            return _this._outlet.activate(componentInstruction);
          });
        }
        if (lang_1.isPresent(instruction.child)) {
          next = next.then(function (_) {
            if (lang_1.isPresent(_this._childRouter)) {
              return _this._childRouter.commit(instruction.child);
            }
          });
        }
      }
      var promises = [];
      this._auxRouters.forEach(function (router, name) {
        if (lang_1.isPresent(instruction.auxInstruction[name])) {
          promises.push(router.commit(instruction.auxInstruction[name]));
        }
      });
      return next.then(function (_) {
        return async_1.PromiseWrapper.all(promises);
      });
    };
    Router.prototype._startNavigating = function () {
      this.navigating = true;
    };
    Router.prototype._finishNavigating = function () {
      this.navigating = false;
    };
    Router.prototype.subscribe = function (onNext, onError) {
      return async_1.ObservableWrapper.subscribe(this._subject, onNext, onError);
    };
    Router.prototype.deactivate = function (instruction) {
      var _this = this;
      var childInstruction = null;
      var componentInstruction = null;
      if (lang_1.isPresent(instruction)) {
        childInstruction = instruction.child;
        componentInstruction = instruction.component;
      }
      var next = _resolveToTrue;
      if (lang_1.isPresent(this._childRouter)) {
        next = this._childRouter.deactivate(childInstruction);
      }
      if (lang_1.isPresent(this._outlet)) {
        next = next.then(function (_) {
          return _this._outlet.deactivate(componentInstruction);
        });
      }
      return next;
    };
    Router.prototype.recognize = function (url) {
      var ancestorComponents = this._getAncestorInstructions();
      return this.registry.recognize(url, ancestorComponents);
    };
    Router.prototype._getAncestorInstructions = function () {
      var ancestorInstructions = [this.currentInstruction];
      var ancestorRouter = this;
      while (lang_1.isPresent(ancestorRouter = ancestorRouter.parent)) {
        ancestorInstructions.unshift(ancestorRouter.currentInstruction);
      }
      return ancestorInstructions;
    };
    Router.prototype.renavigate = function () {
      if (lang_1.isBlank(this.lastNavigationAttempt)) {
        return this._currentNavigation;
      }
      return this.navigateByUrl(this.lastNavigationAttempt);
    };
    Router.prototype.generate = function (linkParams) {
      var ancestorInstructions = this._getAncestorInstructions();
      return this.registry.generate(linkParams, ancestorInstructions);
    };
    Router = __decorate([core_1.Injectable(), __metadata('design:paramtypes', [route_registry_1.RouteRegistry, Router, Object, Router])], Router);
    return Router;
  }();
  exports.Router = Router;
  var RootRouter = function (_super) {
    __extends(RootRouter, _super);
    function RootRouter(registry, location, primaryComponent) {
      var _this = this;
      _super.call(this, registry, null, primaryComponent);
      this.root = this;
      this._location = location;
      this._locationSub = this._location.subscribe(function (change) {
        _this.recognize(change['url']).then(function (instruction) {
          if (lang_1.isPresent(instruction)) {
            _this.navigateByInstruction(instruction, lang_1.isPresent(change['pop'])).then(function (_) {
              if (lang_1.isPresent(change['pop']) && change['type'] != 'hashchange') {
                return;
              }
              var emitPath = instruction.toUrlPath();
              var emitQuery = instruction.toUrlQuery();
              if (emitPath.length > 0 && emitPath[0] != '/') {
                emitPath = '/' + emitPath;
              }
              if (change['type'] == 'hashchange') {
                if (instruction.toRootUrl() != _this._location.path()) {
                  _this._location.replaceState(emitPath, emitQuery);
                }
              } else {
                _this._location.go(emitPath, emitQuery);
              }
            });
          } else {
            _this._emitNavigationFail(change['url']);
          }
        });
      });
      this.registry.configFromComponent(primaryComponent);
      this.navigateByUrl(location.path());
    }
    RootRouter.prototype.commit = function (instruction, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      var emitPath = instruction.toUrlPath();
      var emitQuery = instruction.toUrlQuery();
      if (emitPath.length > 0 && emitPath[0] != '/') {
        emitPath = '/' + emitPath;
      }
      var promise = _super.prototype.commit.call(this, instruction);
      if (!_skipLocationChange) {
        promise = promise.then(function (_) {
          _this._location.go(emitPath, emitQuery);
        });
      }
      return promise;
    };
    RootRouter.prototype.dispose = function () {
      if (lang_1.isPresent(this._locationSub)) {
        async_1.ObservableWrapper.dispose(this._locationSub);
        this._locationSub = null;
      }
    };
    RootRouter = __decorate([core_1.Injectable(), __param(2, core_1.Inject(route_registry_1.ROUTER_PRIMARY_COMPONENT)), __metadata('design:paramtypes', [route_registry_1.RouteRegistry, common_1.Location, lang_1.Type])], RootRouter);
    return RootRouter;
  }(Router);
  exports.RootRouter = RootRouter;
  var ChildRouter = function (_super) {
    __extends(ChildRouter, _super);
    function ChildRouter(parent, hostComponent) {
      _super.call(this, parent.registry, parent, hostComponent, parent.root);
      this.parent = parent;
    }
    ChildRouter.prototype.navigateByUrl = function (url, _skipLocationChange) {
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      return this.parent.navigateByUrl(url, _skipLocationChange);
    };
    ChildRouter.prototype.navigateByInstruction = function (instruction, _skipLocationChange) {
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      return this.parent.navigateByInstruction(instruction, _skipLocationChange);
    };
    return ChildRouter;
  }(Router);
  function canActivateOne(nextInstruction, prevInstruction) {
    var next = _resolveToTrue;
    if (lang_1.isBlank(nextInstruction.component)) {
      return next;
    }
    if (lang_1.isPresent(nextInstruction.child)) {
      next = canActivateOne(nextInstruction.child, lang_1.isPresent(prevInstruction) ? prevInstruction.child : null);
    }
    return next.then(function (result) {
      if (result == false) {
        return false;
      }
      if (nextInstruction.component.reuse) {
        return true;
      }
      var hook = route_lifecycle_reflector_1.getCanActivateHook(nextInstruction.component.componentType);
      if (lang_1.isPresent(hook)) {
        return hook(nextInstruction.component, lang_1.isPresent(prevInstruction) ? prevInstruction.component : null);
      }
      return true;
    });
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rules.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/promise.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js');
  var promise_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/promise.js');
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var url_parser_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js');
  var instruction_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js');
  var RouteMatch = function () {
    function RouteMatch() {}
    return RouteMatch;
  }();
  exports.RouteMatch = RouteMatch;
  var PathMatch = function (_super) {
    __extends(PathMatch, _super);
    function PathMatch(instruction, remaining, remainingAux) {
      _super.call(this);
      this.instruction = instruction;
      this.remaining = remaining;
      this.remainingAux = remainingAux;
    }
    return PathMatch;
  }(RouteMatch);
  exports.PathMatch = PathMatch;
  var RedirectMatch = function (_super) {
    __extends(RedirectMatch, _super);
    function RedirectMatch(redirectTo, specificity) {
      _super.call(this);
      this.redirectTo = redirectTo;
      this.specificity = specificity;
    }
    return RedirectMatch;
  }(RouteMatch);
  exports.RedirectMatch = RedirectMatch;
  var RedirectRule = function () {
    function RedirectRule(_pathRecognizer, redirectTo) {
      this._pathRecognizer = _pathRecognizer;
      this.redirectTo = redirectTo;
      this.hash = this._pathRecognizer.hash;
    }
    Object.defineProperty(RedirectRule.prototype, "path", {
      get: function () {
        return this._pathRecognizer.toString();
      },
      set: function (val) {
        throw new exceptions_1.BaseException('you cannot set the path of a RedirectRule directly');
      },
      enumerable: true,
      configurable: true
    });
    RedirectRule.prototype.recognize = function (beginningSegment) {
      var match = null;
      if (lang_1.isPresent(this._pathRecognizer.matchUrl(beginningSegment))) {
        match = new RedirectMatch(this.redirectTo, this._pathRecognizer.specificity);
      }
      return promise_1.PromiseWrapper.resolve(match);
    };
    RedirectRule.prototype.generate = function (params) {
      throw new exceptions_1.BaseException("Tried to generate a redirect.");
    };
    return RedirectRule;
  }();
  exports.RedirectRule = RedirectRule;
  var RouteRule = function () {
    function RouteRule(_routePath, handler, _routeName) {
      this._routePath = _routePath;
      this.handler = handler;
      this._routeName = _routeName;
      this._cache = new collection_1.Map();
      this.specificity = this._routePath.specificity;
      this.hash = this._routePath.hash;
      this.terminal = this._routePath.terminal;
    }
    Object.defineProperty(RouteRule.prototype, "path", {
      get: function () {
        return this._routePath.toString();
      },
      set: function (val) {
        throw new exceptions_1.BaseException('you cannot set the path of a RouteRule directly');
      },
      enumerable: true,
      configurable: true
    });
    RouteRule.prototype.recognize = function (beginningSegment) {
      var _this = this;
      var res = this._routePath.matchUrl(beginningSegment);
      if (lang_1.isBlank(res)) {
        return null;
      }
      return this.handler.resolveComponentType().then(function (_) {
        var componentInstruction = _this._getInstruction(res.urlPath, res.urlParams, res.allParams);
        return new PathMatch(componentInstruction, res.rest, res.auxiliary);
      });
    };
    RouteRule.prototype.generate = function (params) {
      var generated = this._routePath.generateUrl(params);
      var urlPath = generated.urlPath;
      var urlParams = generated.urlParams;
      return this._getInstruction(urlPath, url_parser_1.convertUrlParamsToArray(urlParams), params);
    };
    RouteRule.prototype.generateComponentPathValues = function (params) {
      return this._routePath.generateUrl(params);
    };
    RouteRule.prototype._getInstruction = function (urlPath, urlParams, params) {
      if (lang_1.isBlank(this.handler.componentType)) {
        throw new exceptions_1.BaseException("Tried to get instruction before the type was loaded.");
      }
      var hashKey = urlPath + '?' + urlParams.join('&');
      if (this._cache.has(hashKey)) {
        return this._cache.get(hashKey);
      }
      var instruction = new instruction_1.ComponentInstruction(urlPath, urlParams, this.handler.data, this.handler.componentType, this.terminal, this.specificity, params, this._routeName);
      this._cache.set(hashKey, instruction);
      return instruction;
    };
    return RouteRule;
  }();
  exports.RouteRule = RouteRule;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_handlers/async_route_handler.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var instruction_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js');
  var AsyncRouteHandler = function () {
    function AsyncRouteHandler(_loader, data) {
      if (data === void 0) {
        data = null;
      }
      this._loader = _loader;
      this._resolvedComponent = null;
      this.data = lang_1.isPresent(data) ? new instruction_1.RouteData(data) : instruction_1.BLANK_ROUTE_DATA;
    }
    AsyncRouteHandler.prototype.resolveComponentType = function () {
      var _this = this;
      if (lang_1.isPresent(this._resolvedComponent)) {
        return this._resolvedComponent;
      }
      return this._resolvedComponent = this._loader().then(function (componentType) {
        _this.componentType = componentType;
        return componentType;
      });
    };
    return AsyncRouteHandler;
  }();
  exports.AsyncRouteHandler = AsyncRouteHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_handlers/sync_route_handler.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var async_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js');
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var instruction_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js');
  var SyncRouteHandler = function () {
    function SyncRouteHandler(componentType, data) {
      this.componentType = componentType;
      this._resolvedComponent = null;
      this._resolvedComponent = async_1.PromiseWrapper.resolve(componentType);
      this.data = lang_1.isPresent(data) ? new instruction_1.RouteData(data) : instruction_1.BLANK_ROUTE_DATA;
    }
    SyncRouteHandler.prototype.resolveComponentType = function () {
      return this._resolvedComponent;
    };
    return SyncRouteHandler;
  }();
  exports.SyncRouteHandler = SyncRouteHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/utils.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var TouchMap = function () {
    function TouchMap(map) {
      var _this = this;
      this.map = {};
      this.keys = {};
      if (lang_1.isPresent(map)) {
        collection_1.StringMapWrapper.forEach(map, function (value, key) {
          _this.map[key] = lang_1.isPresent(value) ? value.toString() : null;
          _this.keys[key] = true;
        });
      }
    }
    TouchMap.prototype.get = function (key) {
      collection_1.StringMapWrapper.delete(this.keys, key);
      return this.map[key];
    };
    TouchMap.prototype.getUnused = function () {
      var _this = this;
      var unused = {};
      var keys = collection_1.StringMapWrapper.keys(this.keys);
      keys.forEach(function (key) {
        return unused[key] = collection_1.StringMapWrapper.get(_this.map, key);
      });
      return unused;
    };
    return TouchMap;
  }();
  exports.TouchMap = TouchMap;
  function normalizeString(obj) {
    if (lang_1.isBlank(obj)) {
      return null;
    } else {
      return obj.toString();
    }
  }
  exports.normalizeString = normalizeString;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/param_route_path.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/utils.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/route_path.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var utils_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/utils.js');
  var url_parser_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js');
  var route_path_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/route_path.js');
  var ContinuationPathSegment = function () {
    function ContinuationPathSegment() {
      this.name = '';
      this.specificity = '';
      this.hash = '...';
    }
    ContinuationPathSegment.prototype.generate = function (params) {
      return '';
    };
    ContinuationPathSegment.prototype.match = function (path) {
      return true;
    };
    return ContinuationPathSegment;
  }();
  var StaticPathSegment = function () {
    function StaticPathSegment(path) {
      this.path = path;
      this.name = '';
      this.specificity = '2';
      this.hash = path;
    }
    StaticPathSegment.prototype.match = function (path) {
      return path == this.path;
    };
    StaticPathSegment.prototype.generate = function (params) {
      return this.path;
    };
    return StaticPathSegment;
  }();
  var DynamicPathSegment = function () {
    function DynamicPathSegment(name) {
      this.name = name;
      this.specificity = '1';
      this.hash = ':';
    }
    DynamicPathSegment.prototype.match = function (path) {
      return path.length > 0;
    };
    DynamicPathSegment.prototype.generate = function (params) {
      if (!collection_1.StringMapWrapper.contains(params.map, this.name)) {
        throw new exceptions_1.BaseException("Route generator for '" + this.name + "' was not included in parameters passed.");
      }
      return encodeDynamicSegment(utils_1.normalizeString(params.get(this.name)));
    };
    DynamicPathSegment.paramMatcher = /^:([^\/]+)$/g;
    return DynamicPathSegment;
  }();
  var StarPathSegment = function () {
    function StarPathSegment(name) {
      this.name = name;
      this.specificity = '0';
      this.hash = '*';
    }
    StarPathSegment.prototype.match = function (path) {
      return true;
    };
    StarPathSegment.prototype.generate = function (params) {
      return utils_1.normalizeString(params.get(this.name));
    };
    StarPathSegment.wildcardMatcher = /^\*([^\/]+)$/g;
    return StarPathSegment;
  }();
  var ParamRoutePath = function () {
    function ParamRoutePath(routePath) {
      this.routePath = routePath;
      this.terminal = true;
      this._assertValidPath(routePath);
      this._parsePathString(routePath);
      this.specificity = this._calculateSpecificity();
      this.hash = this._calculateHash();
      var lastSegment = this._segments[this._segments.length - 1];
      this.terminal = !(lastSegment instanceof ContinuationPathSegment);
    }
    ParamRoutePath.prototype.matchUrl = function (url) {
      var nextUrlSegment = url;
      var currentUrlSegment;
      var positionalParams = {};
      var captured = [];
      for (var i = 0; i < this._segments.length; i += 1) {
        var pathSegment = this._segments[i];
        currentUrlSegment = nextUrlSegment;
        if (pathSegment instanceof ContinuationPathSegment) {
          break;
        }
        if (lang_1.isPresent(currentUrlSegment)) {
          if (pathSegment instanceof StarPathSegment) {
            positionalParams[pathSegment.name] = currentUrlSegment.toString();
            captured.push(currentUrlSegment.toString());
            nextUrlSegment = null;
            break;
          }
          captured.push(currentUrlSegment.path);
          if (pathSegment instanceof DynamicPathSegment) {
            positionalParams[pathSegment.name] = decodeDynamicSegment(currentUrlSegment.path);
          } else if (!pathSegment.match(currentUrlSegment.path)) {
            return null;
          }
          nextUrlSegment = currentUrlSegment.child;
        } else if (!pathSegment.match('')) {
          return null;
        }
      }
      if (this.terminal && lang_1.isPresent(nextUrlSegment)) {
        return null;
      }
      var urlPath = captured.join('/');
      var auxiliary = [];
      var urlParams = [];
      var allParams = positionalParams;
      if (lang_1.isPresent(currentUrlSegment)) {
        var paramsSegment = url instanceof url_parser_1.RootUrl ? url : currentUrlSegment;
        if (lang_1.isPresent(paramsSegment.params)) {
          allParams = collection_1.StringMapWrapper.merge(paramsSegment.params, positionalParams);
          urlParams = url_parser_1.convertUrlParamsToArray(paramsSegment.params);
        } else {
          allParams = positionalParams;
        }
        auxiliary = currentUrlSegment.auxiliary;
      }
      return new route_path_1.MatchedUrl(urlPath, urlParams, allParams, auxiliary, nextUrlSegment);
    };
    ParamRoutePath.prototype.generateUrl = function (params) {
      var paramTokens = new utils_1.TouchMap(params);
      var path = [];
      for (var i = 0; i < this._segments.length; i++) {
        var segment = this._segments[i];
        if (!(segment instanceof ContinuationPathSegment)) {
          path.push(segment.generate(paramTokens));
        }
      }
      var urlPath = path.join('/');
      var nonPositionalParams = paramTokens.getUnused();
      var urlParams = nonPositionalParams;
      return new route_path_1.GeneratedUrl(urlPath, urlParams);
    };
    ParamRoutePath.prototype.toString = function () {
      return this.routePath;
    };
    ParamRoutePath.prototype._parsePathString = function (routePath) {
      if (routePath.startsWith("/")) {
        routePath = routePath.substring(1);
      }
      var segmentStrings = routePath.split('/');
      this._segments = [];
      var limit = segmentStrings.length - 1;
      for (var i = 0; i <= limit; i++) {
        var segment = segmentStrings[i],
            match;
        if (lang_1.isPresent(match = lang_1.RegExpWrapper.firstMatch(DynamicPathSegment.paramMatcher, segment))) {
          this._segments.push(new DynamicPathSegment(match[1]));
        } else if (lang_1.isPresent(match = lang_1.RegExpWrapper.firstMatch(StarPathSegment.wildcardMatcher, segment))) {
          this._segments.push(new StarPathSegment(match[1]));
        } else if (segment == '...') {
          if (i < limit) {
            throw new exceptions_1.BaseException("Unexpected \"...\" before the end of the path for \"" + routePath + "\".");
          }
          this._segments.push(new ContinuationPathSegment());
        } else {
          this._segments.push(new StaticPathSegment(segment));
        }
      }
    };
    ParamRoutePath.prototype._calculateSpecificity = function () {
      var i,
          length = this._segments.length,
          specificity;
      if (length == 0) {
        specificity += '2';
      } else {
        specificity = '';
        for (i = 0; i < length; i++) {
          specificity += this._segments[i].specificity;
        }
      }
      return specificity;
    };
    ParamRoutePath.prototype._calculateHash = function () {
      var i,
          length = this._segments.length;
      var hashParts = [];
      for (i = 0; i < length; i++) {
        hashParts.push(this._segments[i].hash);
      }
      return hashParts.join('/');
    };
    ParamRoutePath.prototype._assertValidPath = function (path) {
      if (lang_1.StringWrapper.contains(path, '#')) {
        throw new exceptions_1.BaseException("Path \"" + path + "\" should not include \"#\". Use \"HashLocationStrategy\" instead.");
      }
      var illegalCharacter = lang_1.RegExpWrapper.firstMatch(ParamRoutePath.RESERVED_CHARS, path);
      if (lang_1.isPresent(illegalCharacter)) {
        throw new exceptions_1.BaseException("Path \"" + path + "\" contains \"" + illegalCharacter[0] + "\" which is not allowed in a route config.");
      }
    };
    ParamRoutePath.RESERVED_CHARS = lang_1.RegExpWrapper.create('//|\\(|\\)|;|\\?|=');
    return ParamRoutePath;
  }();
  exports.ParamRoutePath = ParamRoutePath;
  var REGEXP_PERCENT = /%/g;
  var REGEXP_SLASH = /\//g;
  var REGEXP_OPEN_PARENT = /\(/g;
  var REGEXP_CLOSE_PARENT = /\)/g;
  var REGEXP_SEMICOLON = /;/g;
  function encodeDynamicSegment(value) {
    if (lang_1.isBlank(value)) {
      return null;
    }
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_PERCENT, '%25');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_SLASH, '%2F');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_OPEN_PARENT, '%28');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_CLOSE_PARENT, '%29');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_SEMICOLON, '%3B');
    return value;
  }
  var REGEXP_ENC_SEMICOLON = /%3B/ig;
  var REGEXP_ENC_CLOSE_PARENT = /%29/ig;
  var REGEXP_ENC_OPEN_PARENT = /%28/ig;
  var REGEXP_ENC_SLASH = /%2F/ig;
  var REGEXP_ENC_PERCENT = /%25/ig;
  function decodeDynamicSegment(value) {
    if (lang_1.isBlank(value)) {
      return null;
    }
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_ENC_SEMICOLON, ';');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_ENC_CLOSE_PARENT, ')');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_ENC_OPEN_PARENT, '(');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_ENC_SLASH, '/');
    value = lang_1.StringWrapper.replaceAll(value, REGEXP_ENC_PERCENT, '%');
    return value;
  }
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/route_path.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var MatchedUrl = function () {
        function MatchedUrl(urlPath, urlParams, allParams, auxiliary, rest) {
            this.urlPath = urlPath;
            this.urlParams = urlParams;
            this.allParams = allParams;
            this.auxiliary = auxiliary;
            this.rest = rest;
        }
        return MatchedUrl;
    }();
    exports.MatchedUrl = MatchedUrl;
    var GeneratedUrl = function () {
        function GeneratedUrl(urlPath, urlParams) {
            this.urlPath = urlPath;
            this.urlParams = urlParams;
        }
        return GeneratedUrl;
    }();
    exports.GeneratedUrl = GeneratedUrl;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/regex_route_path.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/route_path.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var route_path_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/route_path.js');
  var RegexRoutePath = function () {
    function RegexRoutePath(_reString, _serializer) {
      this._reString = _reString;
      this._serializer = _serializer;
      this.terminal = true;
      this.specificity = '2';
      this.hash = this._reString;
      this._regex = lang_1.RegExpWrapper.create(this._reString);
    }
    RegexRoutePath.prototype.matchUrl = function (url) {
      var urlPath = url.toString();
      var params = {};
      var matcher = lang_1.RegExpWrapper.matcher(this._regex, urlPath);
      var match = lang_1.RegExpMatcherWrapper.next(matcher);
      if (lang_1.isBlank(match)) {
        return null;
      }
      for (var i = 0; i < match.length; i += 1) {
        params[i.toString()] = match[i];
      }
      return new route_path_1.MatchedUrl(urlPath, [], params, [], null);
    };
    RegexRoutePath.prototype.generateUrl = function (params) {
      return this._serializer(params);
    };
    RegexRoutePath.prototype.toString = function () {
      return this._reString;
    };
    return RegexRoutePath;
  }();
  exports.RegexRoutePath = RegexRoutePath;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rule_set.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rules.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_handlers/async_route_handler.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_handlers/sync_route_handler.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/param_route_path.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/regex_route_path.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var async_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js');
  var rules_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rules.js');
  var route_config_impl_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js');
  var async_route_handler_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_handlers/async_route_handler.js');
  var sync_route_handler_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_handlers/sync_route_handler.js');
  var param_route_path_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/param_route_path.js');
  var regex_route_path_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/route_paths/regex_route_path.js');
  var RuleSet = function () {
    function RuleSet() {
      this.rulesByName = new collection_1.Map();
      this.auxRulesByName = new collection_1.Map();
      this.auxRulesByPath = new collection_1.Map();
      this.rules = [];
      this.defaultRule = null;
    }
    RuleSet.prototype.config = function (config) {
      var handler;
      if (lang_1.isPresent(config.name) && config.name[0].toUpperCase() != config.name[0]) {
        var suggestedName = config.name[0].toUpperCase() + config.name.substring(1);
        throw new exceptions_1.BaseException("Route \"" + config.path + "\" with name \"" + config.name + "\" does not begin with an uppercase letter. Route names should be CamelCase like \"" + suggestedName + "\".");
      }
      if (config instanceof route_config_impl_1.AuxRoute) {
        handler = new sync_route_handler_1.SyncRouteHandler(config.component, config.data);
        var routePath_1 = this._getRoutePath(config);
        var auxRule = new rules_1.RouteRule(routePath_1, handler, config.name);
        this.auxRulesByPath.set(routePath_1.toString(), auxRule);
        if (lang_1.isPresent(config.name)) {
          this.auxRulesByName.set(config.name, auxRule);
        }
        return auxRule.terminal;
      }
      var useAsDefault = false;
      if (config instanceof route_config_impl_1.Redirect) {
        var routePath_2 = this._getRoutePath(config);
        var redirector = new rules_1.RedirectRule(routePath_2, config.redirectTo);
        this._assertNoHashCollision(redirector.hash, config.path);
        this.rules.push(redirector);
        return true;
      }
      if (config instanceof route_config_impl_1.Route) {
        handler = new sync_route_handler_1.SyncRouteHandler(config.component, config.data);
        useAsDefault = lang_1.isPresent(config.useAsDefault) && config.useAsDefault;
      } else if (config instanceof route_config_impl_1.AsyncRoute) {
        handler = new async_route_handler_1.AsyncRouteHandler(config.loader, config.data);
        useAsDefault = lang_1.isPresent(config.useAsDefault) && config.useAsDefault;
      }
      var routePath = this._getRoutePath(config);
      var newRule = new rules_1.RouteRule(routePath, handler, config.name);
      this._assertNoHashCollision(newRule.hash, config.path);
      if (useAsDefault) {
        if (lang_1.isPresent(this.defaultRule)) {
          throw new exceptions_1.BaseException("Only one route can be default");
        }
        this.defaultRule = newRule;
      }
      this.rules.push(newRule);
      if (lang_1.isPresent(config.name)) {
        this.rulesByName.set(config.name, newRule);
      }
      return newRule.terminal;
    };
    RuleSet.prototype.recognize = function (urlParse) {
      var solutions = [];
      this.rules.forEach(function (routeRecognizer) {
        var pathMatch = routeRecognizer.recognize(urlParse);
        if (lang_1.isPresent(pathMatch)) {
          solutions.push(pathMatch);
        }
      });
      if (solutions.length == 0 && lang_1.isPresent(urlParse) && urlParse.auxiliary.length > 0) {
        return [async_1.PromiseWrapper.resolve(new rules_1.PathMatch(null, null, urlParse.auxiliary))];
      }
      return solutions;
    };
    RuleSet.prototype.recognizeAuxiliary = function (urlParse) {
      var routeRecognizer = this.auxRulesByPath.get(urlParse.path);
      if (lang_1.isPresent(routeRecognizer)) {
        return [routeRecognizer.recognize(urlParse)];
      }
      return [async_1.PromiseWrapper.resolve(null)];
    };
    RuleSet.prototype.hasRoute = function (name) {
      return this.rulesByName.has(name);
    };
    RuleSet.prototype.componentLoaded = function (name) {
      return this.hasRoute(name) && lang_1.isPresent(this.rulesByName.get(name).handler.componentType);
    };
    RuleSet.prototype.loadComponent = function (name) {
      return this.rulesByName.get(name).handler.resolveComponentType();
    };
    RuleSet.prototype.generate = function (name, params) {
      var rule = this.rulesByName.get(name);
      if (lang_1.isBlank(rule)) {
        return null;
      }
      return rule.generate(params);
    };
    RuleSet.prototype.generateAuxiliary = function (name, params) {
      var rule = this.auxRulesByName.get(name);
      if (lang_1.isBlank(rule)) {
        return null;
      }
      return rule.generate(params);
    };
    RuleSet.prototype._assertNoHashCollision = function (hash, path) {
      this.rules.forEach(function (rule) {
        if (hash == rule.hash) {
          throw new exceptions_1.BaseException("Configuration '" + path + "' conflicts with existing route '" + rule.path + "'");
        }
      });
    };
    RuleSet.prototype._getRoutePath = function (config) {
      if (lang_1.isPresent(config.regex)) {
        if (lang_1.isFunction(config.serializer)) {
          return new regex_route_path_1.RegexRoutePath(config.regex, config.serializer);
        } else {
          throw new exceptions_1.BaseException("Route provides a regex property, '" + config.regex + "', but no serializer property");
        }
      }
      if (lang_1.isPresent(config.path)) {
        var path = config instanceof route_config_impl_1.AuxRoute && config.path.startsWith('/') ? config.path.substring(1) : config.path;
        return new param_route_path_1.ParamRoutePath(path);
      }
      throw new exceptions_1.BaseException('Route must provide either a path or regex property');
    };
    return RuleSet;
  }();
  exports.RuleSet = RuleSet;
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/promise.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var PromiseCompleter = function () {
        function PromiseCompleter() {
            var _this = this;
            this.promise = new Promise(function (res, rej) {
                _this.resolve = res;
                _this.reject = rej;
            });
        }
        return PromiseCompleter;
    }();
    exports.PromiseCompleter = PromiseCompleter;
    var PromiseWrapper = function () {
        function PromiseWrapper() {}
        PromiseWrapper.resolve = function (obj) {
            return Promise.resolve(obj);
        };
        PromiseWrapper.reject = function (obj, _) {
            return Promise.reject(obj);
        };
        // Note: We can't rename this method into `catch`, as this is not a valid
        // method name in Dart.
        PromiseWrapper.catchError = function (promise, onError) {
            return promise.catch(onError);
        };
        PromiseWrapper.all = function (promises) {
            if (promises.length == 0) return Promise.resolve([]);
            return Promise.all(promises);
        };
        PromiseWrapper.then = function (promise, success, rejection) {
            return promise.then(success, rejection);
        };
        PromiseWrapper.wrap = function (computation) {
            return new Promise(function (res, rej) {
                try {
                    res(computation());
                } catch (e) {
                    rej(e);
                }
            });
        };
        PromiseWrapper.scheduleMicrotask = function (computation) {
            PromiseWrapper.then(PromiseWrapper.resolve(null), computation, function (_) {});
        };
        PromiseWrapper.isPromise = function (obj) {
            return obj instanceof Promise;
        };
        PromiseWrapper.completer = function () {
            return new PromiseCompleter();
        };
        return PromiseWrapper;
    }();
    exports.PromiseWrapper = PromiseWrapper;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/promise.js', 'npm:rxjs@5.0.0-beta.6/Subject.js', 'npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js', 'npm:rxjs@5.0.0-beta.6/operator/toPromise.js', 'npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var promise_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/promise.js');
  exports.PromiseWrapper = promise_1.PromiseWrapper;
  exports.PromiseCompleter = promise_1.PromiseCompleter;
  var Subject_1 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  var PromiseObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js');
  var toPromise_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/toPromise.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  exports.Observable = Observable_1.Observable;
  var Subject_2 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  exports.Subject = Subject_2.Subject;
  var TimerWrapper = function () {
    function TimerWrapper() {}
    TimerWrapper.setTimeout = function (fn, millis) {
      return lang_1.global.setTimeout(fn, millis);
    };
    TimerWrapper.clearTimeout = function (id) {
      lang_1.global.clearTimeout(id);
    };
    TimerWrapper.setInterval = function (fn, millis) {
      return lang_1.global.setInterval(fn, millis);
    };
    TimerWrapper.clearInterval = function (id) {
      lang_1.global.clearInterval(id);
    };
    return TimerWrapper;
  }();
  exports.TimerWrapper = TimerWrapper;
  var ObservableWrapper = function () {
    function ObservableWrapper() {}
    ObservableWrapper.subscribe = function (emitter, onNext, onError, onComplete) {
      if (onComplete === void 0) {
        onComplete = function () {};
      }
      onError = typeof onError === "function" && onError || lang_1.noop;
      onComplete = typeof onComplete === "function" && onComplete || lang_1.noop;
      return emitter.subscribe({
        next: onNext,
        error: onError,
        complete: onComplete
      });
    };
    ObservableWrapper.isObservable = function (obs) {
      return !!obs.subscribe;
    };
    ObservableWrapper.hasSubscribers = function (obs) {
      return obs.observers.length > 0;
    };
    ObservableWrapper.dispose = function (subscription) {
      subscription.unsubscribe();
    };
    ObservableWrapper.callNext = function (emitter, value) {
      emitter.next(value);
    };
    ObservableWrapper.callEmit = function (emitter, value) {
      emitter.emit(value);
    };
    ObservableWrapper.callError = function (emitter, error) {
      emitter.error(error);
    };
    ObservableWrapper.callComplete = function (emitter) {
      emitter.complete();
    };
    ObservableWrapper.fromPromise = function (promise) {
      return PromiseObservable_1.PromiseObservable.create(promise);
    };
    ObservableWrapper.toPromise = function (obj) {
      return toPromise_1.toPromise.call(obj);
    };
    return ObservableWrapper;
  }();
  exports.ObservableWrapper = ObservableWrapper;
  var EventEmitter = function (_super) {
    __extends(EventEmitter, _super);
    function EventEmitter(isAsync) {
      if (isAsync === void 0) {
        isAsync = true;
      }
      _super.call(this);
      this._isAsync = isAsync;
    }
    EventEmitter.prototype.emit = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.next = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {
      var schedulerFn;
      var errorFn = function (err) {
        return null;
      };
      var completeFn = function () {
        return null;
      };
      if (generatorOrNext && typeof generatorOrNext === 'object') {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext.next(value);
          });
        } : function (value) {
          generatorOrNext.next(value);
        };
        if (generatorOrNext.error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return generatorOrNext.error(err);
            });
          } : function (err) {
            generatorOrNext.error(err);
          };
        }
        if (generatorOrNext.complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return generatorOrNext.complete();
            });
          } : function () {
            generatorOrNext.complete();
          };
        }
      } else {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext(value);
          });
        } : function (value) {
          generatorOrNext(value);
        };
        if (error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return error(err);
            });
          } : function (err) {
            error(err);
          };
        }
        if (complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return complete();
            });
          } : function () {
            complete();
          };
        }
      }
      return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);
    };
    return EventEmitter;
  }(Subject_1.Subject);
  exports.EventEmitter = EventEmitter;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var async_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js');
  var RouteParams = function () {
    function RouteParams(params) {
      this.params = params;
    }
    RouteParams.prototype.get = function (param) {
      return lang_1.normalizeBlank(collection_1.StringMapWrapper.get(this.params, param));
    };
    return RouteParams;
  }();
  exports.RouteParams = RouteParams;
  var RouteData = function () {
    function RouteData(data) {
      if (data === void 0) {
        data = {};
      }
      this.data = data;
    }
    RouteData.prototype.get = function (key) {
      return lang_1.normalizeBlank(collection_1.StringMapWrapper.get(this.data, key));
    };
    return RouteData;
  }();
  exports.RouteData = RouteData;
  exports.BLANK_ROUTE_DATA = new RouteData();
  var Instruction = function () {
    function Instruction(component, child, auxInstruction) {
      this.component = component;
      this.child = child;
      this.auxInstruction = auxInstruction;
    }
    Object.defineProperty(Instruction.prototype, "urlPath", {
      get: function () {
        return lang_1.isPresent(this.component) ? this.component.urlPath : '';
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Instruction.prototype, "urlParams", {
      get: function () {
        return lang_1.isPresent(this.component) ? this.component.urlParams : [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Instruction.prototype, "specificity", {
      get: function () {
        var total = '';
        if (lang_1.isPresent(this.component)) {
          total += this.component.specificity;
        }
        if (lang_1.isPresent(this.child)) {
          total += this.child.specificity;
        }
        return total;
      },
      enumerable: true,
      configurable: true
    });
    Instruction.prototype.toRootUrl = function () {
      return this.toUrlPath() + this.toUrlQuery();
    };
    Instruction.prototype._toNonRootUrl = function () {
      return this._stringifyPathMatrixAuxPrefixed() + (lang_1.isPresent(this.child) ? this.child._toNonRootUrl() : '');
    };
    Instruction.prototype.toUrlQuery = function () {
      return this.urlParams.length > 0 ? '?' + this.urlParams.join('&') : '';
    };
    Instruction.prototype.replaceChild = function (child) {
      return new ResolvedInstruction(this.component, child, this.auxInstruction);
    };
    Instruction.prototype.toUrlPath = function () {
      return this.urlPath + this._stringifyAux() + (lang_1.isPresent(this.child) ? this.child._toNonRootUrl() : '');
    };
    Instruction.prototype.toLinkUrl = function () {
      return this.urlPath + this._stringifyAux() + (lang_1.isPresent(this.child) ? this.child._toLinkUrl() : '') + this.toUrlQuery();
    };
    Instruction.prototype._toLinkUrl = function () {
      return this._stringifyPathMatrixAuxPrefixed() + (lang_1.isPresent(this.child) ? this.child._toLinkUrl() : '');
    };
    Instruction.prototype._stringifyPathMatrixAuxPrefixed = function () {
      var primary = this._stringifyPathMatrixAux();
      if (primary.length > 0) {
        primary = '/' + primary;
      }
      return primary;
    };
    Instruction.prototype._stringifyMatrixParams = function () {
      return this.urlParams.length > 0 ? ';' + this.urlParams.join(';') : '';
    };
    Instruction.prototype._stringifyPathMatrixAux = function () {
      if (lang_1.isBlank(this.component)) {
        return '';
      }
      return this.urlPath + this._stringifyMatrixParams() + this._stringifyAux();
    };
    Instruction.prototype._stringifyAux = function () {
      var routes = [];
      collection_1.StringMapWrapper.forEach(this.auxInstruction, function (auxInstruction, _) {
        routes.push(auxInstruction._stringifyPathMatrixAux());
      });
      if (routes.length > 0) {
        return '(' + routes.join('//') + ')';
      }
      return '';
    };
    return Instruction;
  }();
  exports.Instruction = Instruction;
  var ResolvedInstruction = function (_super) {
    __extends(ResolvedInstruction, _super);
    function ResolvedInstruction(component, child, auxInstruction) {
      _super.call(this, component, child, auxInstruction);
    }
    ResolvedInstruction.prototype.resolveComponent = function () {
      return async_1.PromiseWrapper.resolve(this.component);
    };
    return ResolvedInstruction;
  }(Instruction);
  exports.ResolvedInstruction = ResolvedInstruction;
  var DefaultInstruction = function (_super) {
    __extends(DefaultInstruction, _super);
    function DefaultInstruction(component, child) {
      _super.call(this, component, child, {});
    }
    DefaultInstruction.prototype.toLinkUrl = function () {
      return '';
    };
    DefaultInstruction.prototype._toLinkUrl = function () {
      return '';
    };
    return DefaultInstruction;
  }(ResolvedInstruction);
  exports.DefaultInstruction = DefaultInstruction;
  var UnresolvedInstruction = function (_super) {
    __extends(UnresolvedInstruction, _super);
    function UnresolvedInstruction(_resolver, _urlPath, _urlParams) {
      if (_urlPath === void 0) {
        _urlPath = '';
      }
      if (_urlParams === void 0) {
        _urlParams = [];
      }
      _super.call(this, null, null, {});
      this._resolver = _resolver;
      this._urlPath = _urlPath;
      this._urlParams = _urlParams;
    }
    Object.defineProperty(UnresolvedInstruction.prototype, "urlPath", {
      get: function () {
        if (lang_1.isPresent(this.component)) {
          return this.component.urlPath;
        }
        if (lang_1.isPresent(this._urlPath)) {
          return this._urlPath;
        }
        return '';
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(UnresolvedInstruction.prototype, "urlParams", {
      get: function () {
        if (lang_1.isPresent(this.component)) {
          return this.component.urlParams;
        }
        if (lang_1.isPresent(this._urlParams)) {
          return this._urlParams;
        }
        return [];
      },
      enumerable: true,
      configurable: true
    });
    UnresolvedInstruction.prototype.resolveComponent = function () {
      var _this = this;
      if (lang_1.isPresent(this.component)) {
        return async_1.PromiseWrapper.resolve(this.component);
      }
      return this._resolver().then(function (instruction) {
        _this.child = lang_1.isPresent(instruction) ? instruction.child : null;
        return _this.component = lang_1.isPresent(instruction) ? instruction.component : null;
      });
    };
    return UnresolvedInstruction;
  }(Instruction);
  exports.UnresolvedInstruction = UnresolvedInstruction;
  var RedirectInstruction = function (_super) {
    __extends(RedirectInstruction, _super);
    function RedirectInstruction(component, child, auxInstruction, _specificity) {
      _super.call(this, component, child, auxInstruction);
      this._specificity = _specificity;
    }
    Object.defineProperty(RedirectInstruction.prototype, "specificity", {
      get: function () {
        return this._specificity;
      },
      enumerable: true,
      configurable: true
    });
    return RedirectInstruction;
  }(ResolvedInstruction);
  exports.RedirectInstruction = RedirectInstruction;
  var ComponentInstruction = function () {
    function ComponentInstruction(urlPath, urlParams, data, componentType, terminal, specificity, params, routeName) {
      if (params === void 0) {
        params = null;
      }
      this.urlPath = urlPath;
      this.urlParams = urlParams;
      this.componentType = componentType;
      this.terminal = terminal;
      this.specificity = specificity;
      this.params = params;
      this.routeName = routeName;
      this.reuse = false;
      this.routeData = lang_1.isPresent(data) ? data : exports.BLANK_ROUTE_DATA;
    }
    return ComponentInstruction;
  }();
  exports.ComponentInstruction = ComponentInstruction;
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __make_dart_analyzer_happy = null;
    /**
     * The `RouteConfig` decorator defines routes for a given component.
     *
     * It takes an array of {@link RouteDefinition}s.
     * @ts2dart_const
     */
    var RouteConfig = function () {
        function RouteConfig(configs) {
            this.configs = configs;
        }
        return RouteConfig;
    }();
    exports.RouteConfig = RouteConfig;
    /* @ts2dart_const */
    var AbstractRoute = function () {
        function AbstractRoute(_a) {
            var name = _a.name,
                useAsDefault = _a.useAsDefault,
                path = _a.path,
                regex = _a.regex,
                serializer = _a.serializer,
                data = _a.data;
            this.name = name;
            this.useAsDefault = useAsDefault;
            this.path = path;
            this.regex = regex;
            this.serializer = serializer;
            this.data = data;
        }
        return AbstractRoute;
    }();
    exports.AbstractRoute = AbstractRoute;
    /**
     * `Route` is a type of {@link RouteDefinition} used to route a path to a component.
     *
     * It has the following properties:
     * - `path` is a string that uses the route matcher DSL.
     * - `component` a component type.
     * - `name` is an optional `CamelCase` string representing the name of the route.
     * - `data` is an optional property of any type representing arbitrary route metadata for the given
     * route. It is injectable via {@link RouteData}.
     * - `useAsDefault` is a boolean value. If `true`, the child route will be navigated to if no child
     * route is specified during the navigation.
     *
     * ### Example
     * ```
     * import {RouteConfig, Route} from '@angular/router-deprecated';
     *
     * @RouteConfig([
     *   new Route({path: '/home', component: HomeCmp, name: 'HomeCmp' })
     * ])
     * class MyApp {}
     * ```
     * @ts2dart_const
     */
    var Route = function (_super) {
        __extends(Route, _super);
        function Route(_a) {
            var name = _a.name,
                useAsDefault = _a.useAsDefault,
                path = _a.path,
                regex = _a.regex,
                serializer = _a.serializer,
                data = _a.data,
                component = _a.component;
            _super.call(this, {
                name: name,
                useAsDefault: useAsDefault,
                path: path,
                regex: regex,
                serializer: serializer,
                data: data
            });
            this.aux = null;
            this.component = component;
        }
        return Route;
    }(AbstractRoute);
    exports.Route = Route;
    /**
     * `AuxRoute` is a type of {@link RouteDefinition} used to define an auxiliary route.
     *
     * It takes an object with the following properties:
     * - `path` is a string that uses the route matcher DSL.
     * - `component` a component type.
     * - `name` is an optional `CamelCase` string representing the name of the route.
     * - `data` is an optional property of any type representing arbitrary route metadata for the given
     * route. It is injectable via {@link RouteData}.
     *
     * ### Example
     * ```
     * import {RouteConfig, AuxRoute} from '@angular/router-deprecated';
     *
     * @RouteConfig([
     *   new AuxRoute({path: '/home', component: HomeCmp})
     * ])
     * class MyApp {}
     * ```
     * @ts2dart_const
     */
    var AuxRoute = function (_super) {
        __extends(AuxRoute, _super);
        function AuxRoute(_a) {
            var name = _a.name,
                useAsDefault = _a.useAsDefault,
                path = _a.path,
                regex = _a.regex,
                serializer = _a.serializer,
                data = _a.data,
                component = _a.component;
            _super.call(this, {
                name: name,
                useAsDefault: useAsDefault,
                path: path,
                regex: regex,
                serializer: serializer,
                data: data
            });
            this.component = component;
        }
        return AuxRoute;
    }(AbstractRoute);
    exports.AuxRoute = AuxRoute;
    /**
     * `AsyncRoute` is a type of {@link RouteDefinition} used to route a path to an asynchronously
     * loaded component.
     *
     * It has the following properties:
     * - `path` is a string that uses the route matcher DSL.
     * - `loader` is a function that returns a promise that resolves to a component.
     * - `name` is an optional `CamelCase` string representing the name of the route.
     * - `data` is an optional property of any type representing arbitrary route metadata for the given
     * route. It is injectable via {@link RouteData}.
     * - `useAsDefault` is a boolean value. If `true`, the child route will be navigated to if no child
     * route is specified during the navigation.
     *
     * ### Example
     * ```
     * import {RouteConfig, AsyncRoute} from '@angular/router-deprecated';
     *
     * @RouteConfig([
     *   new AsyncRoute({path: '/home', loader: () => Promise.resolve(MyLoadedCmp), name:
     * 'MyLoadedCmp'})
     * ])
     * class MyApp {}
     * ```
     * @ts2dart_const
     */
    var AsyncRoute = function (_super) {
        __extends(AsyncRoute, _super);
        function AsyncRoute(_a) {
            var name = _a.name,
                useAsDefault = _a.useAsDefault,
                path = _a.path,
                regex = _a.regex,
                serializer = _a.serializer,
                data = _a.data,
                loader = _a.loader;
            _super.call(this, {
                name: name,
                useAsDefault: useAsDefault,
                path: path,
                regex: regex,
                serializer: serializer,
                data: data
            });
            this.aux = null;
            this.loader = loader;
        }
        return AsyncRoute;
    }(AbstractRoute);
    exports.AsyncRoute = AsyncRoute;
    /**
     * `Redirect` is a type of {@link RouteDefinition} used to route a path to a canonical route.
     *
     * It has the following properties:
     * - `path` is a string that uses the route matcher DSL.
     * - `redirectTo` is an array representing the link DSL.
     *
     * Note that redirects **do not** affect how links are generated. For that, see the `useAsDefault`
     * option.
     *
     * ### Example
     * ```
     * import {RouteConfig, Route, Redirect} from '@angular/router-deprecated';
     *
     * @RouteConfig([
     *   new Redirect({path: '/', redirectTo: ['/Home'] }),
     *   new Route({path: '/home', component: HomeCmp, name: 'Home'})
     * ])
     * class MyApp {}
     * ```
     * @ts2dart_const
     */
    var Redirect = function (_super) {
        __extends(Redirect, _super);
        function Redirect(_a) {
            var name = _a.name,
                useAsDefault = _a.useAsDefault,
                path = _a.path,
                regex = _a.regex,
                serializer = _a.serializer,
                data = _a.data,
                redirectTo = _a.redirectTo;
            _super.call(this, {
                name: name,
                useAsDefault: useAsDefault,
                path: path,
                regex: regex,
                serializer: serializer,
                data: data
            });
            this.redirectTo = redirectTo;
        }
        return Redirect;
    }(AbstractRoute);
    exports.Redirect = Redirect;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/core_private.js", ["npm:@angular/core@2.0.0-rc.1.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  exports.makeDecorator = core_1.__core_private__.makeDecorator;
  

  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_decorator.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/core_private.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var route_config_impl_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js');
  var core_private_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/core_private.js');
  var route_config_impl_2 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js');
  exports.Route = route_config_impl_2.Route;
  exports.Redirect = route_config_impl_2.Redirect;
  exports.AuxRoute = route_config_impl_2.AuxRoute;
  exports.AsyncRoute = route_config_impl_2.AsyncRoute;
  exports.RouteConfig = core_private_1.makeDecorator(route_config_impl_1.RouteConfig);
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_normalizer.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_decorator.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var route_config_decorator_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_decorator.js');
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js');
  function normalizeRouteConfig(config, registry) {
    if (config instanceof route_config_decorator_1.AsyncRoute) {
      var wrappedLoader = wrapLoaderToReconfigureRegistry(config.loader, registry);
      return new route_config_decorator_1.AsyncRoute({
        path: config.path,
        loader: wrappedLoader,
        name: config.name,
        data: config.data,
        useAsDefault: config.useAsDefault
      });
    }
    if (config instanceof route_config_decorator_1.Route || config instanceof route_config_decorator_1.Redirect || config instanceof route_config_decorator_1.AuxRoute) {
      return config;
    }
    if (+!!config.component + +!!config.redirectTo + +!!config.loader != 1) {
      throw new exceptions_1.BaseException("Route config should contain exactly one \"component\", \"loader\", or \"redirectTo\" property.");
    }
    if (config.as && config.name) {
      throw new exceptions_1.BaseException("Route config should contain exactly one \"as\" or \"name\" property.");
    }
    if (config.as) {
      config.name = config.as;
    }
    if (config.loader) {
      var wrappedLoader = wrapLoaderToReconfigureRegistry(config.loader, registry);
      return new route_config_decorator_1.AsyncRoute({
        path: config.path,
        loader: wrappedLoader,
        name: config.name,
        data: config.data,
        useAsDefault: config.useAsDefault
      });
    }
    if (config.aux) {
      return new route_config_decorator_1.AuxRoute({
        path: config.aux,
        component: config.component,
        name: config.name
      });
    }
    if (config.component) {
      if (typeof config.component == 'object') {
        var componentDefinitionObject = config.component;
        if (componentDefinitionObject.type == 'constructor') {
          return new route_config_decorator_1.Route({
            path: config.path,
            component: componentDefinitionObject.constructor,
            name: config.name,
            data: config.data,
            useAsDefault: config.useAsDefault
          });
        } else if (componentDefinitionObject.type == 'loader') {
          return new route_config_decorator_1.AsyncRoute({
            path: config.path,
            loader: componentDefinitionObject.loader,
            name: config.name,
            data: config.data,
            useAsDefault: config.useAsDefault
          });
        } else {
          throw new exceptions_1.BaseException("Invalid component type \"" + componentDefinitionObject.type + "\". Valid types are \"constructor\" and \"loader\".");
        }
      }
      return new route_config_decorator_1.Route(config);
    }
    if (config.redirectTo) {
      return new route_config_decorator_1.Redirect({
        path: config.path,
        redirectTo: config.redirectTo
      });
    }
    return config;
  }
  exports.normalizeRouteConfig = normalizeRouteConfig;
  function wrapLoaderToReconfigureRegistry(loader, registry) {
    return function () {
      return loader().then(function (componentType) {
        registry.configFromComponent(componentType);
        return componentType;
      });
    };
  }
  function assertComponentExists(component, path) {
    if (!lang_1.isType(component)) {
      throw new exceptions_1.BaseException("Component for route \"" + path + "\" is not defined, or is not a class.");
    }
  }
  exports.assertComponentExists = assertComponentExists;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js');
  function convertUrlParamsToArray(urlParams) {
    var paramsArray = [];
    if (lang_1.isBlank(urlParams)) {
      return [];
    }
    collection_1.StringMapWrapper.forEach(urlParams, function (value, key) {
      paramsArray.push(value === true ? key : key + '=' + value);
    });
    return paramsArray;
  }
  exports.convertUrlParamsToArray = convertUrlParamsToArray;
  function serializeParams(urlParams, joiner) {
    if (joiner === void 0) {
      joiner = '&';
    }
    return convertUrlParamsToArray(urlParams).join(joiner);
  }
  exports.serializeParams = serializeParams;
  var Url = function () {
    function Url(path, child, auxiliary, params) {
      if (child === void 0) {
        child = null;
      }
      if (auxiliary === void 0) {
        auxiliary = [];
      }
      if (params === void 0) {
        params = {};
      }
      this.path = path;
      this.child = child;
      this.auxiliary = auxiliary;
      this.params = params;
    }
    Url.prototype.toString = function () {
      return this.path + this._matrixParamsToString() + this._auxToString() + this._childString();
    };
    Url.prototype.segmentToString = function () {
      return this.path + this._matrixParamsToString();
    };
    Url.prototype._auxToString = function () {
      return this.auxiliary.length > 0 ? '(' + this.auxiliary.map(function (sibling) {
        return sibling.toString();
      }).join('//') + ')' : '';
    };
    Url.prototype._matrixParamsToString = function () {
      var paramString = serializeParams(this.params, ';');
      if (paramString.length > 0) {
        return ';' + paramString;
      }
      return '';
    };
    Url.prototype._childString = function () {
      return lang_1.isPresent(this.child) ? '/' + this.child.toString() : '';
    };
    return Url;
  }();
  exports.Url = Url;
  var RootUrl = function (_super) {
    __extends(RootUrl, _super);
    function RootUrl(path, child, auxiliary, params) {
      if (child === void 0) {
        child = null;
      }
      if (auxiliary === void 0) {
        auxiliary = [];
      }
      if (params === void 0) {
        params = null;
      }
      _super.call(this, path, child, auxiliary, params);
    }
    RootUrl.prototype.toString = function () {
      return this.path + this._auxToString() + this._childString() + this._queryParamsToString();
    };
    RootUrl.prototype.segmentToString = function () {
      return this.path + this._queryParamsToString();
    };
    RootUrl.prototype._queryParamsToString = function () {
      if (lang_1.isBlank(this.params)) {
        return '';
      }
      return '?' + serializeParams(this.params);
    };
    return RootUrl;
  }(Url);
  exports.RootUrl = RootUrl;
  function pathSegmentsToUrl(pathSegments) {
    var url = new Url(pathSegments[pathSegments.length - 1]);
    for (var i = pathSegments.length - 2; i >= 0; i -= 1) {
      url = new Url(pathSegments[i], url);
    }
    return url;
  }
  exports.pathSegmentsToUrl = pathSegmentsToUrl;
  var SEGMENT_RE = lang_1.RegExpWrapper.create('^[^\\/\\(\\)\\?;=&#]+');
  function matchUrlSegment(str) {
    var match = lang_1.RegExpWrapper.firstMatch(SEGMENT_RE, str);
    return lang_1.isPresent(match) ? match[0] : '';
  }
  var QUERY_PARAM_VALUE_RE = lang_1.RegExpWrapper.create('^[^\\(\\)\\?;&#]+');
  function matchUrlQueryParamValue(str) {
    var match = lang_1.RegExpWrapper.firstMatch(QUERY_PARAM_VALUE_RE, str);
    return lang_1.isPresent(match) ? match[0] : '';
  }
  var UrlParser = function () {
    function UrlParser() {}
    UrlParser.prototype.peekStartsWith = function (str) {
      return this._remaining.startsWith(str);
    };
    UrlParser.prototype.capture = function (str) {
      if (!this._remaining.startsWith(str)) {
        throw new exceptions_1.BaseException("Expected \"" + str + "\".");
      }
      this._remaining = this._remaining.substring(str.length);
    };
    UrlParser.prototype.parse = function (url) {
      this._remaining = url;
      if (url == '' || url == '/') {
        return new Url('');
      }
      return this.parseRoot();
    };
    UrlParser.prototype.parseRoot = function () {
      if (this.peekStartsWith('/')) {
        this.capture('/');
      }
      var path = matchUrlSegment(this._remaining);
      this.capture(path);
      var aux = [];
      if (this.peekStartsWith('(')) {
        aux = this.parseAuxiliaryRoutes();
      }
      if (this.peekStartsWith(';')) {
        this.parseMatrixParams();
      }
      var child = null;
      if (this.peekStartsWith('/') && !this.peekStartsWith('//')) {
        this.capture('/');
        child = this.parseSegment();
      }
      var queryParams = null;
      if (this.peekStartsWith('?')) {
        queryParams = this.parseQueryParams();
      }
      return new RootUrl(path, child, aux, queryParams);
    };
    UrlParser.prototype.parseSegment = function () {
      if (this._remaining.length == 0) {
        return null;
      }
      if (this.peekStartsWith('/')) {
        this.capture('/');
      }
      var path = matchUrlSegment(this._remaining);
      this.capture(path);
      var matrixParams = null;
      if (this.peekStartsWith(';')) {
        matrixParams = this.parseMatrixParams();
      }
      var aux = [];
      if (this.peekStartsWith('(')) {
        aux = this.parseAuxiliaryRoutes();
      }
      var child = null;
      if (this.peekStartsWith('/') && !this.peekStartsWith('//')) {
        this.capture('/');
        child = this.parseSegment();
      }
      return new Url(path, child, aux, matrixParams);
    };
    UrlParser.prototype.parseQueryParams = function () {
      var params = {};
      this.capture('?');
      this.parseQueryParam(params);
      while (this._remaining.length > 0 && this.peekStartsWith('&')) {
        this.capture('&');
        this.parseQueryParam(params);
      }
      return params;
    };
    UrlParser.prototype.parseMatrixParams = function () {
      var params = {};
      while (this._remaining.length > 0 && this.peekStartsWith(';')) {
        this.capture(';');
        this.parseParam(params);
      }
      return params;
    };
    UrlParser.prototype.parseParam = function (params) {
      var key = matchUrlSegment(this._remaining);
      if (lang_1.isBlank(key)) {
        return;
      }
      this.capture(key);
      var value = true;
      if (this.peekStartsWith('=')) {
        this.capture('=');
        var valueMatch = matchUrlSegment(this._remaining);
        if (lang_1.isPresent(valueMatch)) {
          value = valueMatch;
          this.capture(value);
        }
      }
      params[key] = value;
    };
    UrlParser.prototype.parseQueryParam = function (params) {
      var key = matchUrlSegment(this._remaining);
      if (lang_1.isBlank(key)) {
        return;
      }
      this.capture(key);
      var value = true;
      if (this.peekStartsWith('=')) {
        this.capture('=');
        var valueMatch = matchUrlQueryParamValue(this._remaining);
        if (lang_1.isPresent(valueMatch)) {
          value = valueMatch;
          this.capture(value);
        }
      }
      params[key] = value;
    };
    UrlParser.prototype.parseAuxiliaryRoutes = function () {
      var routes = [];
      this.capture('(');
      while (!this.peekStartsWith(')') && this._remaining.length > 0) {
        routes.push(this.parseSegment());
        if (this.peekStartsWith('//')) {
          this.capture('//');
        }
      }
      this.capture(')');
      return routes;
    };
    return UrlParser;
  }();
  exports.UrlParser = UrlParser;
  exports.parser = new UrlParser();
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js", ["npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js", "npm:@angular/core@2.0.0-rc.1.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rules.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rule_set.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_normalizer.js", "npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var __metadata = this && this.__metadata || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
  };
  var __param = this && this.__param || function (paramIndex, decorator) {
    return function (target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var collection_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js");
  var async_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/async.js");
  var lang_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js");
  var exceptions_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js");
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  var route_config_impl_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_impl.js");
  var rules_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rules.js");
  var rule_set_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/rules/rule_set.js");
  var instruction_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js");
  var route_config_normalizer_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_normalizer.js");
  var url_parser_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/url_parser.js");
  var _resolveToNull = async_1.PromiseWrapper.resolve(null);
  exports.ROUTER_PRIMARY_COMPONENT = new core_1.OpaqueToken('RouterPrimaryComponent');
  var RouteRegistry = function () {
    function RouteRegistry(_rootComponent) {
      this._rootComponent = _rootComponent;
      this._rules = new collection_1.Map();
    }
    RouteRegistry.prototype.config = function (parentComponent, config) {
      config = route_config_normalizer_1.normalizeRouteConfig(config, this);
      if (config instanceof route_config_impl_1.Route) {
        route_config_normalizer_1.assertComponentExists(config.component, config.path);
      } else if (config instanceof route_config_impl_1.AuxRoute) {
        route_config_normalizer_1.assertComponentExists(config.component, config.path);
      }
      var rules = this._rules.get(parentComponent);
      if (lang_1.isBlank(rules)) {
        rules = new rule_set_1.RuleSet();
        this._rules.set(parentComponent, rules);
      }
      var terminal = rules.config(config);
      if (config instanceof route_config_impl_1.Route) {
        if (terminal) {
          assertTerminalComponent(config.component, config.path);
        } else {
          this.configFromComponent(config.component);
        }
      }
    };
    RouteRegistry.prototype.configFromComponent = function (component) {
      var _this = this;
      if (!lang_1.isType(component)) {
        return;
      }
      if (this._rules.has(component)) {
        return;
      }
      var annotations = core_1.reflector.annotations(component);
      if (lang_1.isPresent(annotations)) {
        for (var i = 0; i < annotations.length; i++) {
          var annotation = annotations[i];
          if (annotation instanceof route_config_impl_1.RouteConfig) {
            var routeCfgs = annotation.configs;
            routeCfgs.forEach(function (config) {
              return _this.config(component, config);
            });
          }
        }
      }
    };
    RouteRegistry.prototype.recognize = function (url, ancestorInstructions) {
      var parsedUrl = url_parser_1.parser.parse(url);
      return this._recognize(parsedUrl, []);
    };
    RouteRegistry.prototype._recognize = function (parsedUrl, ancestorInstructions, _aux) {
      var _this = this;
      if (_aux === void 0) {
        _aux = false;
      }
      var parentInstruction = collection_1.ListWrapper.last(ancestorInstructions);
      var parentComponent = lang_1.isPresent(parentInstruction) ? parentInstruction.component.componentType : this._rootComponent;
      var rules = this._rules.get(parentComponent);
      if (lang_1.isBlank(rules)) {
        return _resolveToNull;
      }
      var possibleMatches = _aux ? rules.recognizeAuxiliary(parsedUrl) : rules.recognize(parsedUrl);
      var matchPromises = possibleMatches.map(function (candidate) {
        return candidate.then(function (candidate) {
          if (candidate instanceof rules_1.PathMatch) {
            var auxParentInstructions = ancestorInstructions.length > 0 ? [collection_1.ListWrapper.last(ancestorInstructions)] : [];
            var auxInstructions = _this._auxRoutesToUnresolved(candidate.remainingAux, auxParentInstructions);
            var instruction = new instruction_1.ResolvedInstruction(candidate.instruction, null, auxInstructions);
            if (lang_1.isBlank(candidate.instruction) || candidate.instruction.terminal) {
              return instruction;
            }
            var newAncestorInstructions = ancestorInstructions.concat([instruction]);
            return _this._recognize(candidate.remaining, newAncestorInstructions).then(function (childInstruction) {
              if (lang_1.isBlank(childInstruction)) {
                return null;
              }
              if (childInstruction instanceof instruction_1.RedirectInstruction) {
                return childInstruction;
              }
              instruction.child = childInstruction;
              return instruction;
            });
          }
          if (candidate instanceof rules_1.RedirectMatch) {
            var instruction = _this.generate(candidate.redirectTo, ancestorInstructions.concat([null]));
            return new instruction_1.RedirectInstruction(instruction.component, instruction.child, instruction.auxInstruction, candidate.specificity);
          }
        });
      });
      if ((lang_1.isBlank(parsedUrl) || parsedUrl.path == '') && possibleMatches.length == 0) {
        return async_1.PromiseWrapper.resolve(this.generateDefault(parentComponent));
      }
      return async_1.PromiseWrapper.all(matchPromises).then(mostSpecific);
    };
    RouteRegistry.prototype._auxRoutesToUnresolved = function (auxRoutes, parentInstructions) {
      var _this = this;
      var unresolvedAuxInstructions = {};
      auxRoutes.forEach(function (auxUrl) {
        unresolvedAuxInstructions[auxUrl.path] = new instruction_1.UnresolvedInstruction(function () {
          return _this._recognize(auxUrl, parentInstructions, true);
        });
      });
      return unresolvedAuxInstructions;
    };
    RouteRegistry.prototype.generate = function (linkParams, ancestorInstructions, _aux) {
      if (_aux === void 0) {
        _aux = false;
      }
      var params = splitAndFlattenLinkParams(linkParams);
      var prevInstruction;
      if (collection_1.ListWrapper.first(params) == '') {
        params.shift();
        prevInstruction = collection_1.ListWrapper.first(ancestorInstructions);
        ancestorInstructions = [];
      } else {
        prevInstruction = ancestorInstructions.length > 0 ? ancestorInstructions.pop() : null;
        if (collection_1.ListWrapper.first(params) == '.') {
          params.shift();
        } else if (collection_1.ListWrapper.first(params) == '..') {
          while (collection_1.ListWrapper.first(params) == '..') {
            if (ancestorInstructions.length <= 0) {
              throw new exceptions_1.BaseException("Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" has too many \"../\" segments.");
            }
            prevInstruction = ancestorInstructions.pop();
            params = collection_1.ListWrapper.slice(params, 1);
          }
        } else {
          var routeName = collection_1.ListWrapper.first(params);
          var parentComponentType = this._rootComponent;
          var grandparentComponentType = null;
          if (ancestorInstructions.length > 1) {
            var parentComponentInstruction = ancestorInstructions[ancestorInstructions.length - 1];
            var grandComponentInstruction = ancestorInstructions[ancestorInstructions.length - 2];
            parentComponentType = parentComponentInstruction.component.componentType;
            grandparentComponentType = grandComponentInstruction.component.componentType;
          } else if (ancestorInstructions.length == 1) {
            parentComponentType = ancestorInstructions[0].component.componentType;
            grandparentComponentType = this._rootComponent;
          }
          var childRouteExists = this.hasRoute(routeName, parentComponentType);
          var parentRouteExists = lang_1.isPresent(grandparentComponentType) && this.hasRoute(routeName, grandparentComponentType);
          if (parentRouteExists && childRouteExists) {
            var msg = "Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" is ambiguous, use \"./\" or \"../\" to disambiguate.";
            throw new exceptions_1.BaseException(msg);
          }
          if (parentRouteExists) {
            prevInstruction = ancestorInstructions.pop();
          }
        }
      }
      if (params[params.length - 1] == '') {
        params.pop();
      }
      if (params.length > 0 && params[0] == '') {
        params.shift();
      }
      if (params.length < 1) {
        var msg = "Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" must include a route name.";
        throw new exceptions_1.BaseException(msg);
      }
      var generatedInstruction = this._generate(params, ancestorInstructions, prevInstruction, _aux, linkParams);
      for (var i = ancestorInstructions.length - 1; i >= 0; i--) {
        var ancestorInstruction = ancestorInstructions[i];
        if (lang_1.isBlank(ancestorInstruction)) {
          break;
        }
        generatedInstruction = ancestorInstruction.replaceChild(generatedInstruction);
      }
      return generatedInstruction;
    };
    RouteRegistry.prototype._generate = function (linkParams, ancestorInstructions, prevInstruction, _aux, _originalLink) {
      var _this = this;
      if (_aux === void 0) {
        _aux = false;
      }
      var parentComponentType = this._rootComponent;
      var componentInstruction = null;
      var auxInstructions = {};
      var parentInstruction = collection_1.ListWrapper.last(ancestorInstructions);
      if (lang_1.isPresent(parentInstruction) && lang_1.isPresent(parentInstruction.component)) {
        parentComponentType = parentInstruction.component.componentType;
      }
      if (linkParams.length == 0) {
        var defaultInstruction = this.generateDefault(parentComponentType);
        if (lang_1.isBlank(defaultInstruction)) {
          throw new exceptions_1.BaseException("Link \"" + collection_1.ListWrapper.toJSON(_originalLink) + "\" does not resolve to a terminal instruction.");
        }
        return defaultInstruction;
      }
      if (lang_1.isPresent(prevInstruction) && !_aux) {
        auxInstructions = collection_1.StringMapWrapper.merge(prevInstruction.auxInstruction, auxInstructions);
        componentInstruction = prevInstruction.component;
      }
      var rules = this._rules.get(parentComponentType);
      if (lang_1.isBlank(rules)) {
        throw new exceptions_1.BaseException("Component \"" + lang_1.getTypeNameForDebugging(parentComponentType) + "\" has no route config.");
      }
      var linkParamIndex = 0;
      var routeParams = {};
      if (linkParamIndex < linkParams.length && lang_1.isString(linkParams[linkParamIndex])) {
        var routeName = linkParams[linkParamIndex];
        if (routeName == '' || routeName == '.' || routeName == '..') {
          throw new exceptions_1.BaseException("\"" + routeName + "/\" is only allowed at the beginning of a link DSL.");
        }
        linkParamIndex += 1;
        if (linkParamIndex < linkParams.length) {
          var linkParam = linkParams[linkParamIndex];
          if (lang_1.isStringMap(linkParam) && !lang_1.isArray(linkParam)) {
            routeParams = linkParam;
            linkParamIndex += 1;
          }
        }
        var routeRecognizer = (_aux ? rules.auxRulesByName : rules.rulesByName).get(routeName);
        if (lang_1.isBlank(routeRecognizer)) {
          throw new exceptions_1.BaseException("Component \"" + lang_1.getTypeNameForDebugging(parentComponentType) + "\" has no route named \"" + routeName + "\".");
        }
        if (lang_1.isBlank(routeRecognizer.handler.componentType)) {
          var generatedUrl = routeRecognizer.generateComponentPathValues(routeParams);
          return new instruction_1.UnresolvedInstruction(function () {
            return routeRecognizer.handler.resolveComponentType().then(function (_) {
              return _this._generate(linkParams, ancestorInstructions, prevInstruction, _aux, _originalLink);
            });
          }, generatedUrl.urlPath, url_parser_1.convertUrlParamsToArray(generatedUrl.urlParams));
        }
        componentInstruction = _aux ? rules.generateAuxiliary(routeName, routeParams) : rules.generate(routeName, routeParams);
      }
      while (linkParamIndex < linkParams.length && lang_1.isArray(linkParams[linkParamIndex])) {
        var auxParentInstruction = [parentInstruction];
        var auxInstruction = this._generate(linkParams[linkParamIndex], auxParentInstruction, null, true, _originalLink);
        auxInstructions[auxInstruction.component.urlPath] = auxInstruction;
        linkParamIndex += 1;
      }
      var instruction = new instruction_1.ResolvedInstruction(componentInstruction, null, auxInstructions);
      if (lang_1.isPresent(componentInstruction) && lang_1.isPresent(componentInstruction.componentType)) {
        var childInstruction = null;
        if (componentInstruction.terminal) {
          if (linkParamIndex >= linkParams.length) {}
        } else {
          var childAncestorComponents = ancestorInstructions.concat([instruction]);
          var remainingLinkParams = linkParams.slice(linkParamIndex);
          childInstruction = this._generate(remainingLinkParams, childAncestorComponents, null, false, _originalLink);
        }
        instruction.child = childInstruction;
      }
      return instruction;
    };
    RouteRegistry.prototype.hasRoute = function (name, parentComponent) {
      var rules = this._rules.get(parentComponent);
      if (lang_1.isBlank(rules)) {
        return false;
      }
      return rules.hasRoute(name);
    };
    RouteRegistry.prototype.generateDefault = function (componentCursor) {
      var _this = this;
      if (lang_1.isBlank(componentCursor)) {
        return null;
      }
      var rules = this._rules.get(componentCursor);
      if (lang_1.isBlank(rules) || lang_1.isBlank(rules.defaultRule)) {
        return null;
      }
      var defaultChild = null;
      if (lang_1.isPresent(rules.defaultRule.handler.componentType)) {
        var componentInstruction = rules.defaultRule.generate({});
        if (!rules.defaultRule.terminal) {
          defaultChild = this.generateDefault(rules.defaultRule.handler.componentType);
        }
        return new instruction_1.DefaultInstruction(componentInstruction, defaultChild);
      }
      return new instruction_1.UnresolvedInstruction(function () {
        return rules.defaultRule.handler.resolveComponentType().then(function (_) {
          return _this.generateDefault(componentCursor);
        });
      });
    };
    RouteRegistry = __decorate([core_1.Injectable(), __param(0, core_1.Inject(exports.ROUTER_PRIMARY_COMPONENT)), __metadata('design:paramtypes', [lang_1.Type])], RouteRegistry);
    return RouteRegistry;
  }();
  exports.RouteRegistry = RouteRegistry;
  function splitAndFlattenLinkParams(linkParams) {
    var accumulation = [];
    linkParams.forEach(function (item) {
      if (lang_1.isString(item)) {
        var strItem = item;
        accumulation = accumulation.concat(strItem.split('/'));
      } else {
        accumulation.push(item);
      }
    });
    return accumulation;
  }
  function mostSpecific(instructions) {
    instructions = instructions.filter(function (instruction) {
      return lang_1.isPresent(instruction);
    });
    if (instructions.length == 0) {
      return null;
    }
    if (instructions.length == 1) {
      return instructions[0];
    }
    var first = instructions[0];
    var rest = instructions.slice(1);
    return rest.reduce(function (instruction, contender) {
      if (compareSpecificityStrings(contender.specificity, instruction.specificity) == -1) {
        return contender;
      }
      return instruction;
    }, first);
  }
  function compareSpecificityStrings(a, b) {
    var l = lang_1.Math.min(a.length, b.length);
    for (var i = 0; i < l; i += 1) {
      var ai = lang_1.StringWrapper.charCodeAt(a, i);
      var bi = lang_1.StringWrapper.charCodeAt(b, i);
      var difference = bi - ai;
      if (difference != 0) {
        return difference;
      }
    }
    return a.length - b.length;
  }
  function assertTerminalComponent(component, path) {
    if (!lang_1.isType(component)) {
      return;
    }
    var annotations = core_1.reflector.annotations(component);
    if (lang_1.isPresent(annotations)) {
      for (var i = 0; i < annotations.length; i++) {
        var annotation = annotations[i];
        if (annotation instanceof route_config_impl_1.RouteConfig) {
          throw new exceptions_1.BaseException("Child routes are not allowed for \"" + path + "\". Use \"...\" on the parent's route path.");
        }
      }
    }
  }
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/base_wrapped_exception.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
     * A base class for the WrappedException that can be used to identify
     * a WrappedException from ExceptionHandler without adding circular
     * dependency.
     */
    var BaseWrappedException = function (_super) {
        __extends(BaseWrappedException, _super);
        function BaseWrappedException(message) {
            _super.call(this, message);
        }
        Object.defineProperty(BaseWrappedException.prototype, "wrapperMessage", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "wrapperStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalException", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "context", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "message", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        return BaseWrappedException;
    }(Error);
    exports.BaseWrappedException = BaseWrappedException;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js", ["npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js");
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = function () {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  }();
  var createMapFromMap = function () {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function (v, k) {
        map.set(k, v);
      });
      return map;
    };
  }();
  var _clearValues = function () {
    if (new exports.Map().keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!(k = keyIterator.next()).done) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function (v, k) {
          m.set(k, null);
        });
      };
    }
  }();
  var _arrayFromMap = function () {
    try {
      if (new exports.Map().values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function (v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  }();
  var MapWrapper = function () {
    function MapWrapper() {}
    MapWrapper.clone = function (m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function (stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function (m) {
      var r = {};
      m.forEach(function (v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function (pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function (m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function (m) {
      return m;
    };
    MapWrapper.keys = function (m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function (m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  }();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = function () {
    function StringMapWrapper() {}
    StringMapWrapper.create = function () {
      return {};
    };
    StringMapWrapper.contains = function (map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function (map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function (map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function (map) {
      return Object.keys(map);
    };
    StringMapWrapper.values = function (map) {
      return Object.keys(map).reduce(function (r, a) {
        r.push(map[a]);
        return r;
      }, []);
    };
    StringMapWrapper.isEmpty = function (map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function (map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function (map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function (m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function (m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  }();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = function () {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function (size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function (size) {
      return new Array(size);
    };
    ListWrapper.clone = function (array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function (array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function (array) {
      if (!array) return null;
      return array[0];
    };
    ListWrapper.last = function (array) {
      if (!array || array.length == 0) return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function (array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function (list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function (array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function (a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function (list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function (list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function (list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function (list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function (list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function (list) {
      return list.length == 0;
    };
    ListWrapper.fill = function (list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function (a, b) {
      if (a.length != b.length) return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    };
    ListWrapper.slice = function (l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function (l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function (l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function (l) {
      return l.toString();
    };
    ListWrapper.toJSON = function (l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function (list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    ListWrapper.flatten = function (list) {
      var target = [];
      _flattenArray(list, target);
      return target;
    };
    ListWrapper.addAll = function (list, source) {
      for (var i = 0; i < source.length; i++) {
        list.push(source[i]);
      }
    };
    return ListWrapper;
  }();
  exports.ListWrapper = ListWrapper;
  function _flattenArray(source, target) {
    if (lang_1.isPresent(source)) {
      for (var i = 0; i < source.length; i++) {
        var item = source[i];
        if (lang_1.isArray(item)) {
          _flattenArray(item, target);
        } else {
          target.push(item);
        }
      }
    }
    return target;
  }
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj)) return false;
    return lang_1.isArray(obj) || !(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj;
  }
  exports.isListLikeIterable = isListLikeIterable;
  function areIterablesEqual(a, b, comparator) {
    var iterator1 = a[lang_1.getSymbolIterator()]();
    var iterator2 = b[lang_1.getSymbolIterator()]();
    while (true) {
      var item1 = iterator1.next();
      var item2 = iterator2.next();
      if (item1.done && item2.done) return true;
      if (item1.done || item2.done) return false;
      if (!comparator(item1.value, item2.value)) return false;
    }
  }
  exports.areIterablesEqual = areIterablesEqual;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!(item = iterator.next()).done) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = function () {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  }();
  var SetWrapper = function () {
    function SetWrapper() {}
    SetWrapper.createFromList = function (lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function (s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function (m, k) {
      m.delete(k);
    };
    return SetWrapper;
  }();
  exports.SetWrapper = SetWrapper;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exception_handler.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/lang.js');
  var base_wrapped_exception_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var collection_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/collection.js');
  var _ArrayLogger = function () {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function () {};
    ;
    return _ArrayLogger;
  }();
  var ExceptionHandler = function () {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException) throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function (exception) {
      return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function (exception) {
      try {
        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception.originalException;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  }();
  exports.ExceptionHandler = ExceptionHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exception_handler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var base_wrapped_exception_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var exception_handler_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exception_handler.js');
  var exception_handler_2 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exception_handler.js');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = function (_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = new Error(message).stack;
    }
    BaseException.prototype.toString = function () {
      return this.message;
    };
    return BaseException;
  }(Error);
  exports.BaseException = BaseException;
  var WrappedException = function (_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = new Error(_wrapperMessage).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function () {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function () {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function () {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function () {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function () {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function () {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function () {
      return this.message;
    };
    return WrappedException;
  }(base_wrapped_exception_1.BaseWrappedException);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers_common.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var common_1 = $__require('npm:@angular/common@2.0.0-rc.1.js');
  var router_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js');
  var route_registry_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js');
  var exceptions_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/facade/exceptions.js');
  exports.ROUTER_PROVIDERS_COMMON = [route_registry_1.RouteRegistry, {
    provide: common_1.LocationStrategy,
    useClass: common_1.PathLocationStrategy
  }, common_1.Location, {
    provide: router_1.Router,
    useFactory: routerFactory,
    deps: [route_registry_1.RouteRegistry, common_1.Location, route_registry_1.ROUTER_PRIMARY_COMPONENT, core_1.ApplicationRef]
  }, {
    provide: route_registry_1.ROUTER_PRIMARY_COMPONENT,
    useFactory: routerPrimaryComponentFactory,
    deps: [core_1.ApplicationRef]
  }];
  function routerFactory(registry, location, primaryComponent, appRef) {
    var rootRouter = new router_1.RootRouter(registry, location, primaryComponent);
    appRef.registerDisposeListener(function () {
      return rootRouter.dispose();
    });
    return rootRouter;
  }
  function routerPrimaryComponentFactory(app) {
    if (app.componentTypes.length == 0) {
      throw new exceptions_1.BaseException("Bootstrap at least one component before injecting Router.");
    }
    return app.componentTypes[0];
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/private_export.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_builder.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_options.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/browser_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var animation_builder = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js');
  var css_animation_builder = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_builder.js');
  var browser_details = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js');
  var css_animation_options = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_options.js');
  var animation = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation.js');
  var dom_adapter = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var browser_adapter = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/browser_adapter.js');
  var __platform_browser_private__;
  (function (__platform_browser_private__) {
    __platform_browser_private__.DomAdapter = dom_adapter.DomAdapter;
    function getDOM() {
      return dom_adapter.getDOM();
    }
    __platform_browser_private__.getDOM = getDOM;
    function setDOM(adapter) {
      return dom_adapter.setDOM(adapter);
    }
    __platform_browser_private__.setDOM = setDOM;
    __platform_browser_private__.setRootDomAdapter = dom_adapter.setRootDomAdapter;
    __platform_browser_private__.BrowserDomAdapter = browser_adapter.BrowserDomAdapter;
    __platform_browser_private__.AnimationBuilder = animation_builder.AnimationBuilder;
    __platform_browser_private__.CssAnimationBuilder = css_animation_builder.CssAnimationBuilder;
    __platform_browser_private__.CssAnimationOptions = css_animation_options.CssAnimationOptions;
    __platform_browser_private__.Animation = animation.Animation;
    __platform_browser_private__.BrowserDetails = browser_details.BrowserDetails;
  })(__platform_browser_private__ = exports.__platform_browser_private__ || (exports.__platform_browser_private__ = {}));
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/security/url_sanitizer.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * A pattern that recognizes a commonly useful subset of URLs that are safe.
    *
    * This regular expression matches a subset of URLs that will not cause script
    * execution if used in URL context within a HTML document. Specifically, this
    * regular expression matches if (comment from here on and regex copied from
    * Soy's EscapingConventions):
    * (1) Either a protocol in a whitelist (http, https, mailto or ftp).
    * (2) or no protocol.  A protocol must be followed by a colon. The below
    *     allows that by allowing colons only after one of the characters [/?#].
    *     A colon after a hash (#) must be in the fragment.
    *     Otherwise, a colon after a (?) must be in a query.
    *     Otherwise, a colon after a single solidus (/) must be in a path.
    *     Otherwise, a colon after a double solidus (//) must be in the authority
    *     (before port).
    *
    * The pattern disallows &, used in HTML entity declarations before
    * one of the characters in [/?#]. This disallows HTML entities used in the
    * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
    * It also disallows HTML entities in the first path part of a relative path,
    * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
    * that. More importantly, it disallows masking of a colon,
    * e.g. "javascript&#58;...".
    *
    * This regular expression was taken from the Closure sanitization library.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;
    function sanitizeUrl(url) {
        if (String(url).match(SAFE_URL_PATTERN)) return url;
        return 'unsafe:' + url;
    }
    exports.sanitizeUrl = sanitizeUrl;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/security/style_sanitizer.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * Regular expression for safe style values.
    *
    * Quotes (" and ') are allowed, but a check must be done elsewhere to ensure
    * they're balanced.
    *
    * ',' allows multiple values to be assigned to the same property
    * (e.g. background-attachment or font-family) and hence could allow
    * multiple values to get injected, but that should pose no risk of XSS.
    *
    * The rgb() and rgba() expression checks only for XSS safety, not for CSS
    * validity.
    *
    * This regular expression was taken from the Closure sanitization library.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    var SAFE_STYLE_VALUE = /^([-,."'%_!# a-zA-Z0-9]+|(?:rgb|hsl)a?\([0-9.%, ]+\))$/;
    /**
     * Checks that quotes (" and ') are properly balanced inside a string. Assumes
     * that neither escape (\) nor any other character that could result in
     * breaking out of a string parsing context are allowed;
     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.
     *
     * This code was taken from the Closure sanitization library.
     */
    function hasBalancedQuotes(value) {
        var outsideSingle = true;
        var outsideDouble = true;
        for (var i = 0; i < value.length; i++) {
            var c = value.charAt(i);
            if (c === '\'' && outsideDouble) {
                outsideSingle = !outsideSingle;
            } else if (c === '"' && outsideSingle) {
                outsideDouble = !outsideDouble;
            }
        }
        return outsideSingle && outsideDouble;
    }
    function sanitizeStyle(value) {
        if (String(value).match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) return value;
        return 'unsafe';
    }
    exports.sanitizeStyle = sanitizeStyle;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/security/dom_sanitization_service.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/security/url_sanitizer.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/security/style_sanitizer.js', 'npm:@angular/platform-browser@2.0.0-rc.1/core_private.js', 'npm:@angular/core@2.0.0-rc.1.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var url_sanitizer_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/security/url_sanitizer.js');
  var style_sanitizer_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/security/style_sanitizer.js');
  var core_private_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/core_private.js');
  exports.SecurityContext = core_private_1.SecurityContext;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var DomSanitizationService = function () {
    function DomSanitizationService() {}
    return DomSanitizationService;
  }();
  exports.DomSanitizationService = DomSanitizationService;
  var DomSanitizationServiceImpl = function (_super) {
    __extends(DomSanitizationServiceImpl, _super);
    function DomSanitizationServiceImpl() {
      _super.apply(this, arguments);
    }
    DomSanitizationServiceImpl.prototype.sanitize = function (ctx, value) {
      if (value == null) return null;
      switch (ctx) {
        case core_private_1.SecurityContext.NONE:
          return value;
        case core_private_1.SecurityContext.HTML:
          if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;
          this.checkNotSafeValue(value, 'HTML');
          return this.sanitizeHtml(String(value));
        case core_private_1.SecurityContext.STYLE:
          if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;
          this.checkNotSafeValue(value, 'Style');
          return style_sanitizer_1.sanitizeStyle(value);
        case core_private_1.SecurityContext.SCRIPT:
          if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;
          this.checkNotSafeValue(value, 'Script');
          throw new Error('unsafe value used in a script context');
        case core_private_1.SecurityContext.URL:
          if (value instanceof SafeUrlImpl) return value.changingThisBreaksApplicationSecurity;
          this.checkNotSafeValue(value, 'URL');
          return url_sanitizer_1.sanitizeUrl(String(value));
        case core_private_1.SecurityContext.RESOURCE_URL:
          if (value instanceof SafeResourceUrlImpl) {
            return value.changingThisBreaksApplicationSecurity;
          }
          this.checkNotSafeValue(value, 'ResourceURL');
          throw new Error('unsafe value used in a resource URL context');
        default:
          throw new Error("Unexpected SecurityContext " + ctx);
      }
    };
    DomSanitizationServiceImpl.prototype.checkNotSafeValue = function (value, expectedType) {
      if (value instanceof SafeValueImpl) {
        throw new Error('Required a safe ' + expectedType + ', got a ' + value.getTypeName());
      }
    };
    DomSanitizationServiceImpl.prototype.sanitizeHtml = function (value) {
      return value;
    };
    DomSanitizationServiceImpl.prototype.bypassSecurityTrustHtml = function (value) {
      return new SafeHtmlImpl(value);
    };
    DomSanitizationServiceImpl.prototype.bypassSecurityTrustStyle = function (value) {
      return new SafeStyleImpl(value);
    };
    DomSanitizationServiceImpl.prototype.bypassSecurityTrustScript = function (value) {
      return new SafeScriptImpl(value);
    };
    DomSanitizationServiceImpl.prototype.bypassSecurityTrustUrl = function (value) {
      return new SafeUrlImpl(value);
    };
    DomSanitizationServiceImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {
      return new SafeResourceUrlImpl(value);
    };
    DomSanitizationServiceImpl.decorators = [{ type: core_1.Injectable }];
    return DomSanitizationServiceImpl;
  }(DomSanitizationService);
  exports.DomSanitizationServiceImpl = DomSanitizationServiceImpl;
  var SafeValueImpl = function () {
    function SafeValueImpl(changingThisBreaksApplicationSecurity) {
      this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;
    }
    return SafeValueImpl;
  }();
  var SafeHtmlImpl = function (_super) {
    __extends(SafeHtmlImpl, _super);
    function SafeHtmlImpl() {
      _super.apply(this, arguments);
    }
    SafeHtmlImpl.prototype.getTypeName = function () {
      return 'HTML';
    };
    return SafeHtmlImpl;
  }(SafeValueImpl);
  var SafeStyleImpl = function (_super) {
    __extends(SafeStyleImpl, _super);
    function SafeStyleImpl() {
      _super.apply(this, arguments);
    }
    SafeStyleImpl.prototype.getTypeName = function () {
      return 'Style';
    };
    return SafeStyleImpl;
  }(SafeValueImpl);
  var SafeScriptImpl = function (_super) {
    __extends(SafeScriptImpl, _super);
    function SafeScriptImpl() {
      _super.apply(this, arguments);
    }
    SafeScriptImpl.prototype.getTypeName = function () {
      return 'Script';
    };
    return SafeScriptImpl;
  }(SafeValueImpl);
  var SafeUrlImpl = function (_super) {
    __extends(SafeUrlImpl, _super);
    function SafeUrlImpl() {
      _super.apply(this, arguments);
    }
    SafeUrlImpl.prototype.getTypeName = function () {
      return 'URL';
    };
    return SafeUrlImpl;
  }(SafeValueImpl);
  var SafeResourceUrlImpl = function (_super) {
    __extends(SafeResourceUrlImpl, _super);
    function SafeResourceUrlImpl() {
      _super.apply(this, arguments);
    }
    SafeResourceUrlImpl.prototype.getTypeName = function () {
      return 'ResourceURL';
    };
    return SafeResourceUrlImpl;
  }(SafeValueImpl);
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/generic_browser_adapter.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var GenericBrowserDomAdapter = function (_super) {
    __extends(GenericBrowserDomAdapter, _super);
    function GenericBrowserDomAdapter() {
      var _this = this;
      _super.call(this);
      this._animationPrefix = null;
      this._transitionEnd = null;
      try {
        var element = this.createElement('div', this.defaultDoc());
        if (lang_1.isPresent(this.getStyle(element, 'animationName'))) {
          this._animationPrefix = '';
        } else {
          var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];
          for (var i = 0; i < domPrefixes.length; i++) {
            if (lang_1.isPresent(this.getStyle(element, domPrefixes[i] + 'AnimationName'))) {
              this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';
              break;
            }
          }
        }
        var transEndEventNames = {
          WebkitTransition: 'webkitTransitionEnd',
          MozTransition: 'transitionend',
          OTransition: 'oTransitionEnd otransitionend',
          transition: 'transitionend'
        };
        collection_1.StringMapWrapper.forEach(transEndEventNames, function (value, key) {
          if (lang_1.isPresent(_this.getStyle(element, key))) {
            _this._transitionEnd = value;
          }
        });
      } catch (e) {
        this._animationPrefix = null;
        this._transitionEnd = null;
      }
    }
    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) {
      return el.getDistributedNodes();
    };
    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {
      el.href = href == null ? baseUrl : baseUrl + '/../' + href;
    };
    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () {
      return true;
    };
    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {
      return lang_1.isFunction(this.defaultDoc().body.createShadowRoot);
    };
    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () {
      return lang_1.isPresent(this._animationPrefix) ? this._animationPrefix : "";
    };
    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () {
      return lang_1.isPresent(this._transitionEnd) ? this._transitionEnd : "";
    };
    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {
      return lang_1.isPresent(this._animationPrefix) && lang_1.isPresent(this._transitionEnd);
    };
    return GenericBrowserDomAdapter;
  }(dom_adapter_1.DomAdapter);
  exports.GenericBrowserDomAdapter = GenericBrowserDomAdapter;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/browser_adapter.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/generic_browser_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var generic_browser_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/generic_browser_adapter.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var _attrToPropMap = {
    'class': 'className',
    'innerHtml': 'innerHTML',
    'readonly': 'readOnly',
    'tabindex': 'tabIndex'
  };
  var DOM_KEY_LOCATION_NUMPAD = 3;
  var _keyMap = {
    '\b': 'Backspace',
    '\t': 'Tab',
    '\x7F': 'Delete',
    '\x1B': 'Escape',
    'Del': 'Delete',
    'Esc': 'Escape',
    'Left': 'ArrowLeft',
    'Right': 'ArrowRight',
    'Up': 'ArrowUp',
    'Down': 'ArrowDown',
    'Menu': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'Win': 'OS'
  };
  var _chromeNumKeyPadMap = {
    'A': '1',
    'B': '2',
    'C': '3',
    'D': '4',
    'E': '5',
    'F': '6',
    'G': '7',
    'H': '8',
    'I': '9',
    'J': '*',
    'K': '+',
    'M': '-',
    'N': '.',
    'O': '/',
    '\x60': '0',
    '\x90': 'NumLock'
  };
  var BrowserDomAdapter = function (_super) {
    __extends(BrowserDomAdapter, _super);
    function BrowserDomAdapter() {
      _super.apply(this, arguments);
    }
    BrowserDomAdapter.prototype.parse = function (templateHtml) {
      throw new Error("parse not implemented");
    };
    BrowserDomAdapter.makeCurrent = function () {
      dom_adapter_1.setRootDomAdapter(new BrowserDomAdapter());
    };
    BrowserDomAdapter.prototype.hasProperty = function (element, name) {
      return name in element;
    };
    BrowserDomAdapter.prototype.setProperty = function (el, name, value) {
      el[name] = value;
    };
    BrowserDomAdapter.prototype.getProperty = function (el, name) {
      return el[name];
    };
    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {
      el[methodName].apply(el, args);
    };
    BrowserDomAdapter.prototype.logError = function (error) {
      if (window.console.error) {
        window.console.error(error);
      } else {
        window.console.log(error);
      }
    };
    BrowserDomAdapter.prototype.log = function (error) {
      window.console.log(error);
    };
    BrowserDomAdapter.prototype.logGroup = function (error) {
      if (window.console.group) {
        window.console.group(error);
        this.logError(error);
      } else {
        window.console.log(error);
      }
    };
    BrowserDomAdapter.prototype.logGroupEnd = function () {
      if (window.console.groupEnd) {
        window.console.groupEnd();
      }
    };
    Object.defineProperty(BrowserDomAdapter.prototype, "attrToPropMap", {
      get: function () {
        return _attrToPropMap;
      },
      enumerable: true,
      configurable: true
    });
    BrowserDomAdapter.prototype.query = function (selector) {
      return document.querySelector(selector);
    };
    BrowserDomAdapter.prototype.querySelector = function (el, selector) {
      return el.querySelector(selector);
    };
    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) {
      return el.querySelectorAll(selector);
    };
    BrowserDomAdapter.prototype.on = function (el, evt, listener) {
      el.addEventListener(evt, listener, false);
    };
    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {
      el.addEventListener(evt, listener, false);
      return function () {
        el.removeEventListener(evt, listener, false);
      };
    };
    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) {
      el.dispatchEvent(evt);
    };
    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {
      var evt = document.createEvent('MouseEvent');
      evt.initEvent(eventType, true, true);
      return evt;
    };
    BrowserDomAdapter.prototype.createEvent = function (eventType) {
      var evt = document.createEvent('Event');
      evt.initEvent(eventType, true, true);
      return evt;
    };
    BrowserDomAdapter.prototype.preventDefault = function (evt) {
      evt.preventDefault();
      evt.returnValue = false;
    };
    BrowserDomAdapter.prototype.isPrevented = function (evt) {
      return evt.defaultPrevented || lang_1.isPresent(evt.returnValue) && !evt.returnValue;
    };
    BrowserDomAdapter.prototype.getInnerHTML = function (el) {
      return el.innerHTML;
    };
    BrowserDomAdapter.prototype.getOuterHTML = function (el) {
      return el.outerHTML;
    };
    BrowserDomAdapter.prototype.nodeName = function (node) {
      return node.nodeName;
    };
    BrowserDomAdapter.prototype.nodeValue = function (node) {
      return node.nodeValue;
    };
    BrowserDomAdapter.prototype.type = function (node) {
      return node.type;
    };
    BrowserDomAdapter.prototype.content = function (node) {
      if (this.hasProperty(node, "content")) {
        return node.content;
      } else {
        return node;
      }
    };
    BrowserDomAdapter.prototype.firstChild = function (el) {
      return el.firstChild;
    };
    BrowserDomAdapter.prototype.nextSibling = function (el) {
      return el.nextSibling;
    };
    BrowserDomAdapter.prototype.parentElement = function (el) {
      return el.parentNode;
    };
    BrowserDomAdapter.prototype.childNodes = function (el) {
      return el.childNodes;
    };
    BrowserDomAdapter.prototype.childNodesAsList = function (el) {
      var childNodes = el.childNodes;
      var res = collection_1.ListWrapper.createFixedSize(childNodes.length);
      for (var i = 0; i < childNodes.length; i++) {
        res[i] = childNodes[i];
      }
      return res;
    };
    BrowserDomAdapter.prototype.clearNodes = function (el) {
      while (el.firstChild) {
        el.removeChild(el.firstChild);
      }
    };
    BrowserDomAdapter.prototype.appendChild = function (el, node) {
      el.appendChild(node);
    };
    BrowserDomAdapter.prototype.removeChild = function (el, node) {
      el.removeChild(node);
    };
    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) {
      el.replaceChild(newChild, oldChild);
    };
    BrowserDomAdapter.prototype.remove = function (node) {
      if (node.parentNode) {
        node.parentNode.removeChild(node);
      }
      return node;
    };
    BrowserDomAdapter.prototype.insertBefore = function (el, node) {
      el.parentNode.insertBefore(node, el);
    };
    BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {
      nodes.forEach(function (n) {
        return el.parentNode.insertBefore(n, el);
      });
    };
    BrowserDomAdapter.prototype.insertAfter = function (el, node) {
      el.parentNode.insertBefore(node, el.nextSibling);
    };
    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) {
      el.innerHTML = value;
    };
    BrowserDomAdapter.prototype.getText = function (el) {
      return el.textContent;
    };
    BrowserDomAdapter.prototype.setText = function (el, value) {
      el.textContent = value;
    };
    BrowserDomAdapter.prototype.getValue = function (el) {
      return el.value;
    };
    BrowserDomAdapter.prototype.setValue = function (el, value) {
      el.value = value;
    };
    BrowserDomAdapter.prototype.getChecked = function (el) {
      return el.checked;
    };
    BrowserDomAdapter.prototype.setChecked = function (el, value) {
      el.checked = value;
    };
    BrowserDomAdapter.prototype.createComment = function (text) {
      return document.createComment(text);
    };
    BrowserDomAdapter.prototype.createTemplate = function (html) {
      var t = document.createElement('template');
      t.innerHTML = html;
      return t;
    };
    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createElement(tagName);
    };
    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createElementNS(ns, tagName);
    };
    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createTextNode(text);
    };
    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {
      if (doc === void 0) {
        doc = document;
      }
      var el = doc.createElement('SCRIPT');
      el.setAttribute(attrName, attrValue);
      return el;
    };
    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {
      if (doc === void 0) {
        doc = document;
      }
      var style = doc.createElement('style');
      this.appendChild(style, this.createTextNode(css));
      return style;
    };
    BrowserDomAdapter.prototype.createShadowRoot = function (el) {
      return el.createShadowRoot();
    };
    BrowserDomAdapter.prototype.getShadowRoot = function (el) {
      return el.shadowRoot;
    };
    BrowserDomAdapter.prototype.getHost = function (el) {
      return el.host;
    };
    BrowserDomAdapter.prototype.clone = function (node) {
      return node.cloneNode(true);
    };
    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {
      return element.getElementsByClassName(name);
    };
    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {
      return element.getElementsByTagName(name);
    };
    BrowserDomAdapter.prototype.classList = function (element) {
      return Array.prototype.slice.call(element.classList, 0);
    };
    BrowserDomAdapter.prototype.addClass = function (element, className) {
      element.classList.add(className);
    };
    BrowserDomAdapter.prototype.removeClass = function (element, className) {
      element.classList.remove(className);
    };
    BrowserDomAdapter.prototype.hasClass = function (element, className) {
      return element.classList.contains(className);
    };
    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {
      element.style[styleName] = styleValue;
    };
    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {
      element.style[stylename] = null;
    };
    BrowserDomAdapter.prototype.getStyle = function (element, stylename) {
      return element.style[stylename];
    };
    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {
      if (styleValue === void 0) {
        styleValue = null;
      }
      var value = this.getStyle(element, styleName) || '';
      return styleValue ? value == styleValue : value.length > 0;
    };
    BrowserDomAdapter.prototype.tagName = function (element) {
      return element.tagName;
    };
    BrowserDomAdapter.prototype.attributeMap = function (element) {
      var res = new Map();
      var elAttrs = element.attributes;
      for (var i = 0; i < elAttrs.length; i++) {
        var attrib = elAttrs[i];
        res.set(attrib.name, attrib.value);
      }
      return res;
    };
    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {
      return element.hasAttribute(attribute);
    };
    BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {
      return element.hasAttributeNS(ns, attribute);
    };
    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {
      return element.getAttribute(attribute);
    };
    BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {
      return element.getAttributeNS(ns, name);
    };
    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) {
      element.setAttribute(name, value);
    };
    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {
      element.setAttributeNS(ns, name, value);
    };
    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) {
      element.removeAttribute(attribute);
    };
    BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {
      element.removeAttributeNS(ns, name);
    };
    BrowserDomAdapter.prototype.templateAwareRoot = function (el) {
      return this.isTemplateElement(el) ? this.content(el) : el;
    };
    BrowserDomAdapter.prototype.createHtmlDocument = function () {
      return document.implementation.createHTMLDocument('fakeTitle');
    };
    BrowserDomAdapter.prototype.defaultDoc = function () {
      return document;
    };
    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {
      try {
        return el.getBoundingClientRect();
      } catch (e) {
        return {
          top: 0,
          bottom: 0,
          left: 0,
          right: 0,
          width: 0,
          height: 0
        };
      }
    };
    BrowserDomAdapter.prototype.getTitle = function () {
      return document.title;
    };
    BrowserDomAdapter.prototype.setTitle = function (newTitle) {
      document.title = newTitle || '';
    };
    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {
      var matches = false;
      if (n instanceof HTMLElement) {
        if (n.matches) {
          matches = n.matches(selector);
        } else if (n.msMatchesSelector) {
          matches = n.msMatchesSelector(selector);
        } else if (n.webkitMatchesSelector) {
          matches = n.webkitMatchesSelector(selector);
        }
      }
      return matches;
    };
    BrowserDomAdapter.prototype.isTemplateElement = function (el) {
      return el instanceof HTMLElement && el.nodeName == "TEMPLATE";
    };
    BrowserDomAdapter.prototype.isTextNode = function (node) {
      return node.nodeType === Node.TEXT_NODE;
    };
    BrowserDomAdapter.prototype.isCommentNode = function (node) {
      return node.nodeType === Node.COMMENT_NODE;
    };
    BrowserDomAdapter.prototype.isElementNode = function (node) {
      return node.nodeType === Node.ELEMENT_NODE;
    };
    BrowserDomAdapter.prototype.hasShadowRoot = function (node) {
      return node instanceof HTMLElement && lang_1.isPresent(node.shadowRoot);
    };
    BrowserDomAdapter.prototype.isShadowRoot = function (node) {
      return node instanceof DocumentFragment;
    };
    BrowserDomAdapter.prototype.importIntoDoc = function (node) {
      var toImport = node;
      if (this.isTemplateElement(node)) {
        toImport = this.content(node);
      }
      return document.importNode(toImport, true);
    };
    BrowserDomAdapter.prototype.adoptNode = function (node) {
      return document.adoptNode(node);
    };
    BrowserDomAdapter.prototype.getHref = function (el) {
      return el.href;
    };
    BrowserDomAdapter.prototype.getEventKey = function (event) {
      var key = event.key;
      if (lang_1.isBlank(key)) {
        key = event.keyIdentifier;
        if (lang_1.isBlank(key)) {
          return 'Unidentified';
        }
        if (key.startsWith('U+')) {
          key = String.fromCharCode(parseInt(key.substring(2), 16));
          if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {
            key = _chromeNumKeyPadMap[key];
          }
        }
      }
      if (_keyMap.hasOwnProperty(key)) {
        key = _keyMap[key];
      }
      return key;
    };
    BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {
      if (target == "window") {
        return window;
      } else if (target == "document") {
        return document;
      } else if (target == "body") {
        return document.body;
      }
    };
    BrowserDomAdapter.prototype.getHistory = function () {
      return window.history;
    };
    BrowserDomAdapter.prototype.getLocation = function () {
      return window.location;
    };
    BrowserDomAdapter.prototype.getBaseHref = function () {
      var href = getBaseElementHref();
      if (lang_1.isBlank(href)) {
        return null;
      }
      return relativePath(href);
    };
    BrowserDomAdapter.prototype.resetBaseElement = function () {
      baseElement = null;
    };
    BrowserDomAdapter.prototype.getUserAgent = function () {
      return window.navigator.userAgent;
    };
    BrowserDomAdapter.prototype.setData = function (element, name, value) {
      this.setAttribute(element, 'data-' + name, value);
    };
    BrowserDomAdapter.prototype.getData = function (element, name) {
      return this.getAttribute(element, 'data-' + name);
    };
    BrowserDomAdapter.prototype.getComputedStyle = function (element) {
      return getComputedStyle(element);
    };
    BrowserDomAdapter.prototype.setGlobalVar = function (path, value) {
      lang_1.setValueOnPath(lang_1.global, path, value);
    };
    BrowserDomAdapter.prototype.requestAnimationFrame = function (callback) {
      return window.requestAnimationFrame(callback);
    };
    BrowserDomAdapter.prototype.cancelAnimationFrame = function (id) {
      window.cancelAnimationFrame(id);
    };
    BrowserDomAdapter.prototype.performanceNow = function () {
      if (lang_1.isPresent(window.performance) && lang_1.isPresent(window.performance.now)) {
        return window.performance.now();
      } else {
        return lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());
      }
    };
    return BrowserDomAdapter;
  }(generic_browser_adapter_1.GenericBrowserDomAdapter);
  exports.BrowserDomAdapter = BrowserDomAdapter;
  var baseElement = null;
  function getBaseElementHref() {
    if (lang_1.isBlank(baseElement)) {
      baseElement = document.querySelector('base');
      if (lang_1.isBlank(baseElement)) {
        return null;
      }
    }
    return baseElement.getAttribute('href');
  }
  var urlParsingNode = null;
  function relativePath(url) {
    if (lang_1.isBlank(urlParsingNode)) {
      urlParsingNode = document.createElement("a");
    }
    urlParsingNode.setAttribute('href', url);
    return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/testability.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var PublicTestability = function () {
    function PublicTestability(testability) {
      this._testability = testability;
    }
    PublicTestability.prototype.isStable = function () {
      return this._testability.isStable();
    };
    PublicTestability.prototype.whenStable = function (callback) {
      this._testability.whenStable(callback);
    };
    PublicTestability.prototype.findBindings = function (using, provider, exactMatch) {
      return this.findProviders(using, provider, exactMatch);
    };
    PublicTestability.prototype.findProviders = function (using, provider, exactMatch) {
      return this._testability.findBindings(using, provider, exactMatch);
    };
    return PublicTestability;
  }();
  var BrowserGetTestability = function () {
    function BrowserGetTestability() {}
    BrowserGetTestability.init = function () {
      core_1.setTestabilityGetter(new BrowserGetTestability());
    };
    BrowserGetTestability.prototype.addToWindow = function (registry) {
      lang_1.global.getAngularTestability = function (elem, findInAncestors) {
        if (findInAncestors === void 0) {
          findInAncestors = true;
        }
        var testability = registry.findTestabilityInTree(elem, findInAncestors);
        if (testability == null) {
          throw new Error('Could not find testability for element.');
        }
        return new PublicTestability(testability);
      };
      lang_1.global.getAllAngularTestabilities = function () {
        var testabilities = registry.getAllTestabilities();
        return testabilities.map(function (testability) {
          return new PublicTestability(testability);
        });
      };
      lang_1.global.getAllAngularRootElements = function () {
        return registry.getAllRootElements();
      };
      var whenAllStable = function (callback) {
        var testabilities = lang_1.global.getAllAngularTestabilities();
        var count = testabilities.length;
        var didWork = false;
        var decrement = function (didWork_) {
          didWork = didWork || didWork_;
          count--;
          if (count == 0) {
            callback(didWork);
          }
        };
        testabilities.forEach(function (testability) {
          testability.whenStable(decrement);
        });
      };
      if (!lang_1.global.frameworkStabilizers) {
        lang_1.global.frameworkStabilizers = collection_1.ListWrapper.createGrowableSize(0);
      }
      lang_1.global.frameworkStabilizers.push(whenAllStable);
    };
    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {
      if (elem == null) {
        return null;
      }
      var t = registry.getTestability(elem);
      if (lang_1.isPresent(t)) {
        return t;
      } else if (!findInAncestors) {
        return null;
      }
      if (dom_adapter_1.getDOM().isShadowRoot(elem)) {
        return this.findTestabilityInTree(registry, dom_adapter_1.getDOM().getHost(elem), true);
      }
      return this.findTestabilityInTree(registry, dom_adapter_1.getDOM().parentElement(elem), true);
    };
    return BrowserGetTestability;
  }();
  exports.BrowserGetTestability = BrowserGetTestability;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/key_events.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
    var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
    var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
    var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
    var event_manager_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js');
    var modifierKeys = ['alt', 'control', 'meta', 'shift'];
    var modifierKeyGetters = {
      'alt': function (event) {
        return event.altKey;
      },
      'control': function (event) {
        return event.ctrlKey;
      },
      'meta': function (event) {
        return event.metaKey;
      },
      'shift': function (event) {
        return event.shiftKey;
      }
    };
    var KeyEventsPlugin = function (_super) {
      __extends(KeyEventsPlugin, _super);
      function KeyEventsPlugin() {
        _super.call(this);
      }
      KeyEventsPlugin.prototype.supports = function (eventName) {
        return lang_1.isPresent(KeyEventsPlugin.parseEventName(eventName));
      };
      KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {
        var parsedEvent = KeyEventsPlugin.parseEventName(eventName);
        var outsideHandler = KeyEventsPlugin.eventCallback(element, collection_1.StringMapWrapper.get(parsedEvent, 'fullKey'), handler, this.manager.getZone());
        return this.manager.getZone().runOutsideAngular(function () {
          return dom_adapter_1.getDOM().onAndCancel(element, collection_1.StringMapWrapper.get(parsedEvent, 'domEventName'), outsideHandler);
        });
      };
      KeyEventsPlugin.parseEventName = function (eventName) {
        var parts = eventName.toLowerCase().split('.');
        var domEventName = parts.shift();
        if (parts.length === 0 || !(lang_1.StringWrapper.equals(domEventName, 'keydown') || lang_1.StringWrapper.equals(domEventName, 'keyup'))) {
          return null;
        }
        var key = KeyEventsPlugin._normalizeKey(parts.pop());
        var fullKey = '';
        modifierKeys.forEach(function (modifierName) {
          if (collection_1.ListWrapper.contains(parts, modifierName)) {
            collection_1.ListWrapper.remove(parts, modifierName);
            fullKey += modifierName + '.';
          }
        });
        fullKey += key;
        if (parts.length != 0 || key.length === 0) {
          return null;
        }
        var result = collection_1.StringMapWrapper.create();
        collection_1.StringMapWrapper.set(result, 'domEventName', domEventName);
        collection_1.StringMapWrapper.set(result, 'fullKey', fullKey);
        return result;
      };
      KeyEventsPlugin.getEventFullKey = function (event) {
        var fullKey = '';
        var key = dom_adapter_1.getDOM().getEventKey(event);
        key = key.toLowerCase();
        if (lang_1.StringWrapper.equals(key, ' ')) {
          key = 'space';
        } else if (lang_1.StringWrapper.equals(key, '.')) {
          key = 'dot';
        }
        modifierKeys.forEach(function (modifierName) {
          if (modifierName != key) {
            var modifierGetter = collection_1.StringMapWrapper.get(modifierKeyGetters, modifierName);
            if (modifierGetter(event)) {
              fullKey += modifierName + '.';
            }
          }
        });
        fullKey += key;
        return fullKey;
      };
      KeyEventsPlugin.eventCallback = function (element, fullKey, handler, zone) {
        return function (event) {
          if (lang_1.StringWrapper.equals(KeyEventsPlugin.getEventFullKey(event), fullKey)) {
            zone.runGuarded(function () {
              return handler(event);
            });
          }
        };
      };
      KeyEventsPlugin._normalizeKey = function (keyName) {
        switch (keyName) {
          case 'esc':
            return 'escape';
          default:
            return keyName;
        }
      };
      KeyEventsPlugin.decorators = [{ type: core_1.Injectable }];
      KeyEventsPlugin.ctorParameters = [];
      return KeyEventsPlugin;
    }(event_manager_1.EventManagerPlugin);
    exports.KeyEventsPlugin = KeyEventsPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/dom_events.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var event_manager_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js');
  var DomEventsPlugin = function (_super) {
    __extends(DomEventsPlugin, _super);
    function DomEventsPlugin() {
      _super.apply(this, arguments);
    }
    DomEventsPlugin.prototype.supports = function (eventName) {
      return true;
    };
    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {
      var zone = this.manager.getZone();
      var outsideHandler = function (event) {
        return zone.runGuarded(function () {
          return handler(event);
        });
      };
      return this.manager.getZone().runOutsideAngular(function () {
        return dom_adapter_1.getDOM().onAndCancel(element, eventName, outsideHandler);
      });
    };
    DomEventsPlugin.prototype.addGlobalEventListener = function (target, eventName, handler) {
      var element = dom_adapter_1.getDOM().getGlobalEventTarget(target);
      var zone = this.manager.getZone();
      var outsideHandler = function (event) {
        return zone.runGuarded(function () {
          return handler(event);
        });
      };
      return this.manager.getZone().runOutsideAngular(function () {
        return dom_adapter_1.getDOM().onAndCancel(element, eventName, outsideHandler);
      });
    };
    DomEventsPlugin.decorators = [{ type: core_1.Injectable }];
    return DomEventsPlugin;
  }(event_manager_1.EventManagerPlugin);
  exports.DomEventsPlugin = DomEventsPlugin;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_common.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var event_manager_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js');
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var _eventNames = {
    'pan': true,
    'panstart': true,
    'panmove': true,
    'panend': true,
    'pancancel': true,
    'panleft': true,
    'panright': true,
    'panup': true,
    'pandown': true,
    'pinch': true,
    'pinchstart': true,
    'pinchmove': true,
    'pinchend': true,
    'pinchcancel': true,
    'pinchin': true,
    'pinchout': true,
    'press': true,
    'pressup': true,
    'rotate': true,
    'rotatestart': true,
    'rotatemove': true,
    'rotateend': true,
    'rotatecancel': true,
    'swipe': true,
    'swipeleft': true,
    'swiperight': true,
    'swipeup': true,
    'swipedown': true,
    'tap': true
  };
  var HammerGesturesPluginCommon = function (_super) {
    __extends(HammerGesturesPluginCommon, _super);
    function HammerGesturesPluginCommon() {
      _super.call(this);
    }
    HammerGesturesPluginCommon.prototype.supports = function (eventName) {
      eventName = eventName.toLowerCase();
      return collection_1.StringMapWrapper.contains(_eventNames, eventName);
    };
    return HammerGesturesPluginCommon;
  }(event_manager_1.EventManagerPlugin);
  exports.HammerGesturesPluginCommon = HammerGesturesPluginCommon;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_gestures.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_common.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js');
  var hammer_common_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_common.js');
  exports.HAMMER_GESTURE_CONFIG = new core_1.OpaqueToken("HammerGestureConfig");
  var HammerGestureConfig = function () {
    function HammerGestureConfig() {
      this.events = [];
      this.overrides = {};
    }
    HammerGestureConfig.prototype.buildHammer = function (element) {
      var mc = new Hammer(element);
      mc.get('pinch').set({ enable: true });
      mc.get('rotate').set({ enable: true });
      for (var eventName in this.overrides) {
        mc.get(eventName).set(this.overrides[eventName]);
      }
      return mc;
    };
    HammerGestureConfig.decorators = [{ type: core_1.Injectable }];
    return HammerGestureConfig;
  }();
  exports.HammerGestureConfig = HammerGestureConfig;
  var HammerGesturesPlugin = function (_super) {
    __extends(HammerGesturesPlugin, _super);
    function HammerGesturesPlugin(_config) {
      _super.call(this);
      this._config = _config;
    }
    HammerGesturesPlugin.prototype.supports = function (eventName) {
      if (!_super.prototype.supports.call(this, eventName) && !this.isCustomEvent(eventName)) return false;
      if (!lang_1.isPresent(window['Hammer'])) {
        throw new exceptions_1.BaseException("Hammer.js is not loaded, can not bind " + eventName + " event");
      }
      return true;
    };
    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {
      var _this = this;
      var zone = this.manager.getZone();
      eventName = eventName.toLowerCase();
      return zone.runOutsideAngular(function () {
        var mc = _this._config.buildHammer(element);
        var callback = function (eventObj) {
          zone.runGuarded(function () {
            handler(eventObj);
          });
        };
        mc.on(eventName, callback);
        return function () {
          mc.off(eventName, callback);
        };
      });
    };
    HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) {
      return this._config.events.indexOf(eventName) > -1;
    };
    HammerGesturesPlugin.decorators = [{ type: core_1.Injectable }];
    HammerGesturesPlugin.ctorParameters = [{
      type: HammerGestureConfig,
      decorators: [{
        type: core_1.Inject,
        args: [exports.HAMMER_GESTURE_CONFIG]
      }]
    }];
    return HammerGesturesPlugin;
  }(hammer_common_1.HammerGesturesPluginCommon);
  exports.HammerGesturesPlugin = HammerGesturesPlugin;
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/browser/title.js", ["npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var dom_adapter_1 = $__require("npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js");
  var Title = function () {
    function Title() {}
    Title.prototype.getTitle = function () {
      return dom_adapter_1.getDOM().getTitle();
    };
    Title.prototype.setTitle = function (newTitle) {
      dom_adapter_1.getDOM().setTitle(newTitle);
    };
    return Title;
  }();
  exports.Title = Title;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/browser.js', [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /**
  * JS version of browser APIs. This library can only run in the browser.
  */

  var define,
      global = this || self,
      GLOBAL = global;
  var win = typeof window !== 'undefined' && window || {};
  exports.window = win;
  exports.document = win.document;
  exports.location = win.location;
  exports.gc = win['gc'] ? function () {
    return win['gc']();
  } : function () {
    return null;
  };
  exports.performance = win['performance'] ? win['performance'] : null;
  exports.Event = win['Event'];
  exports.MouseEvent = win['MouseEvent'];
  exports.KeyboardEvent = win['KeyboardEvent'];
  exports.EventTarget = win['EventTarget'];
  exports.History = win['History'];
  exports.Location = win['Location'];
  exports.EventListener = win['EventListener'];
  

  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/tools/common_tools.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/browser.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var browser_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/browser.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var ChangeDetectionPerfRecord = function () {
    function ChangeDetectionPerfRecord(msPerTick, numTicks) {
      this.msPerTick = msPerTick;
      this.numTicks = numTicks;
    }
    return ChangeDetectionPerfRecord;
  }();
  exports.ChangeDetectionPerfRecord = ChangeDetectionPerfRecord;
  var AngularTools = function () {
    function AngularTools(ref) {
      this.profiler = new AngularProfiler(ref);
    }
    return AngularTools;
  }();
  exports.AngularTools = AngularTools;
  var AngularProfiler = function () {
    function AngularProfiler(ref) {
      this.appRef = ref.injector.get(core_1.ApplicationRef);
    }
    AngularProfiler.prototype.timeChangeDetection = function (config) {
      var record = lang_1.isPresent(config) && config['record'];
      var profileName = 'Change Detection';
      var isProfilerAvailable = lang_1.isPresent(browser_1.window.console.profile);
      if (record && isProfilerAvailable) {
        browser_1.window.console.profile(profileName);
      }
      var start = dom_adapter_1.getDOM().performanceNow();
      var numTicks = 0;
      while (numTicks < 5 || dom_adapter_1.getDOM().performanceNow() - start < 500) {
        this.appRef.tick();
        numTicks++;
      }
      var end = dom_adapter_1.getDOM().performanceNow();
      if (record && isProfilerAvailable) {
        browser_1.window.console.profileEnd(profileName);
      }
      var msPerTick = (end - start) / numTicks;
      browser_1.window.console.log("ran " + numTicks + " change detection cycles");
      browser_1.window.console.log(lang_1.NumberWrapper.toFixed(msPerTick, 2) + " ms per check");
      return new ChangeDetectionPerfRecord(msPerTick, numTicks);
    };
    return AngularProfiler;
  }();
  exports.AngularProfiler = AngularProfiler;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/tools/tools.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/tools/common_tools.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var common_tools_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/tools/common_tools.js');
  var context = lang_1.global;
  function enableDebugTools(ref) {
    context.ng = new common_tools_1.AngularTools(ref);
  }
  exports.enableDebugTools = enableDebugTools;
  function disableDebugTools() {
    delete context.ng;
  }
  exports.disableDebugTools = disableDebugTools;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/by.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var By = function () {
    function By() {}
    By.all = function () {
      return function (debugElement) {
        return true;
      };
    };
    By.css = function (selector) {
      return function (debugElement) {
        return lang_1.isPresent(debugElement.nativeElement) ? dom_adapter_1.getDOM().elementMatches(debugElement.nativeElement, selector) : false;
      };
    };
    By.directive = function (type) {
      return function (debugElement) {
        return debugElement.providerTokens.indexOf(type) !== -1;
      };
    };
    return By;
  }();
  exports.By = By;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/core_private.js', 'npm:@angular/common@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/security/dom_sanitization_service.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/browser_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/testability.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_renderer.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/shared_styles_host.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/key_events.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/dom_events.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_gestures.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/title.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/tools/tools.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/by.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/core_private.js');
  var common_1 = $__require('npm:@angular/common@2.0.0-rc.1.js');
  var dom_sanitization_service_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/security/dom_sanitization_service.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var browser_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/browser_adapter.js');
  var testability_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/testability.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var dom_tokens_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js');
  var event_manager_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js');
  var dom_renderer_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_renderer.js');
  var shared_styles_host_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/shared_styles_host.js');
  var key_events_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/key_events.js');
  var ng_probe_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js');
  var dom_events_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/dom_events.js');
  var hammer_gestures_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_gestures.js');
  var shared_styles_host_2 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/shared_styles_host.js');
  var animation_builder_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js');
  var browser_details_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js');
  var title_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/title.js');
  exports.Title = title_1.Title;
  var browser_adapter_2 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/browser_adapter.js');
  exports.BrowserDomAdapter = browser_adapter_2.BrowserDomAdapter;
  var tools_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/tools/tools.js');
  exports.enableDebugTools = tools_1.enableDebugTools;
  exports.disableDebugTools = tools_1.disableDebugTools;
  var by_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/by.js');
  exports.By = by_1.By;
  exports.BROWSER_PLATFORM_MARKER = new core_1.OpaqueToken('BrowserPlatformMarker');
  exports.BROWSER_PROVIDERS = [{
    provide: exports.BROWSER_PLATFORM_MARKER,
    useValue: true
  }, core_1.PLATFORM_COMMON_PROVIDERS, {
    provide: core_1.PLATFORM_INITIALIZER,
    useValue: initDomAdapter,
    multi: true
  }];
  function _exceptionHandler() {
    return new core_1.ExceptionHandler(dom_adapter_1.getDOM(), !lang_1.IS_DART);
  }
  function _document() {
    return dom_adapter_1.getDOM().defaultDoc();
  }
  exports.BROWSER_SANITIZATION_PROVIDERS = [{
    provide: core_private_1.SanitizationService,
    useExisting: dom_sanitization_service_1.DomSanitizationService
  }, {
    provide: dom_sanitization_service_1.DomSanitizationService,
    useClass: dom_sanitization_service_1.DomSanitizationServiceImpl
  }];
  exports.BROWSER_APP_COMMON_PROVIDERS = [core_1.APPLICATION_COMMON_PROVIDERS, common_1.FORM_PROVIDERS, exports.BROWSER_SANITIZATION_PROVIDERS, {
    provide: core_1.PLATFORM_PIPES,
    useValue: common_1.COMMON_PIPES,
    multi: true
  }, {
    provide: core_1.PLATFORM_DIRECTIVES,
    useValue: common_1.COMMON_DIRECTIVES,
    multi: true
  }, {
    provide: core_1.ExceptionHandler,
    useFactory: _exceptionHandler,
    deps: []
  }, {
    provide: dom_tokens_1.DOCUMENT,
    useFactory: _document,
    deps: []
  }, {
    provide: event_manager_1.EVENT_MANAGER_PLUGINS,
    useClass: dom_events_1.DomEventsPlugin,
    multi: true
  }, {
    provide: event_manager_1.EVENT_MANAGER_PLUGINS,
    useClass: key_events_1.KeyEventsPlugin,
    multi: true
  }, {
    provide: event_manager_1.EVENT_MANAGER_PLUGINS,
    useClass: hammer_gestures_1.HammerGesturesPlugin,
    multi: true
  }, {
    provide: hammer_gestures_1.HAMMER_GESTURE_CONFIG,
    useClass: hammer_gestures_1.HammerGestureConfig
  }, {
    provide: dom_renderer_1.DomRootRenderer,
    useClass: dom_renderer_1.DomRootRenderer_
  }, {
    provide: core_1.RootRenderer,
    useExisting: dom_renderer_1.DomRootRenderer
  }, {
    provide: shared_styles_host_1.SharedStylesHost,
    useExisting: shared_styles_host_2.DomSharedStylesHost
  }, shared_styles_host_2.DomSharedStylesHost, core_1.Testability, browser_details_1.BrowserDetails, animation_builder_1.AnimationBuilder, event_manager_1.EventManager, ng_probe_1.ELEMENT_PROBE_PROVIDERS];
  var hammer_gestures_2 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/hammer_gestures.js');
  exports.HAMMER_GESTURE_CONFIG = hammer_gestures_2.HAMMER_GESTURE_CONFIG;
  exports.HammerGestureConfig = hammer_gestures_2.HammerGestureConfig;
  function initDomAdapter() {
    browser_adapter_1.BrowserDomAdapter.makeCurrent();
    core_private_1.wtfInit();
    testability_1.BrowserGetTestability.init();
  }
  exports.initDomAdapter = initDomAdapter;
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/core_private.js", ["npm:@angular/core@2.0.0-rc.1.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  exports.RenderDebugInfo = core_1.__core_private__.RenderDebugInfo;
  exports.wtfInit = core_1.__core_private__.wtfInit;
  exports.ReflectionCapabilities = core_1.__core_private__.ReflectionCapabilities;
  exports.VIEW_ENCAPSULATION_VALUES = core_1.__core_private__.VIEW_ENCAPSULATION_VALUES;
  exports.DebugDomRootRenderer = core_1.__core_private__.DebugDomRootRenderer;
  exports.SecurityContext = core_1.__core_private__.SecurityContext;
  exports.SanitizationService = core_1.__core_private__.SanitizationService;
  

  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_options.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var CssAnimationOptions = function () {
        function CssAnimationOptions() {
            /** classes to be added to the element */
            this.classesToAdd = [];
            /** classes to be removed from the element */
            this.classesToRemove = [];
            /** classes to be added for the duration of the animation */
            this.animationClasses = [];
        }
        return CssAnimationOptions;
    }();
    exports.CssAnimationOptions = CssAnimationOptions;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/math.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/util.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var math_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/math.js');
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var util_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/util.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var Animation = function () {
    function Animation(element, data, browserDetails) {
      var _this = this;
      this.element = element;
      this.data = data;
      this.browserDetails = browserDetails;
      this.callbacks = [];
      this.eventClearFunctions = [];
      this.completed = false;
      this._stringPrefix = '';
      this.startTime = lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());
      this._stringPrefix = dom_adapter_1.getDOM().getAnimationPrefix();
      this.setup();
      this.wait(function (timestamp) {
        return _this.start();
      });
    }
    Object.defineProperty(Animation.prototype, "totalTime", {
      get: function () {
        var delay = this.computedDelay != null ? this.computedDelay : 0;
        var duration = this.computedDuration != null ? this.computedDuration : 0;
        return delay + duration;
      },
      enumerable: true,
      configurable: true
    });
    Animation.prototype.wait = function (callback) {
      this.browserDetails.raf(callback, 2);
    };
    Animation.prototype.setup = function () {
      if (this.data.fromStyles != null) this.applyStyles(this.data.fromStyles);
      if (this.data.duration != null) this.applyStyles({ 'transitionDuration': this.data.duration.toString() + 'ms' });
      if (this.data.delay != null) this.applyStyles({ 'transitionDelay': this.data.delay.toString() + 'ms' });
    };
    Animation.prototype.start = function () {
      this.addClasses(this.data.classesToAdd);
      this.addClasses(this.data.animationClasses);
      this.removeClasses(this.data.classesToRemove);
      if (this.data.toStyles != null) this.applyStyles(this.data.toStyles);
      var computedStyles = dom_adapter_1.getDOM().getComputedStyle(this.element);
      this.computedDelay = math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-delay')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-delay')));
      this.computedDuration = math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-duration')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-duration')));
      this.addEvents();
    };
    Animation.prototype.applyStyles = function (styles) {
      var _this = this;
      collection_1.StringMapWrapper.forEach(styles, function (value, key) {
        var dashCaseKey = util_1.camelCaseToDashCase(key);
        if (lang_1.isPresent(dom_adapter_1.getDOM().getStyle(_this.element, dashCaseKey))) {
          dom_adapter_1.getDOM().setStyle(_this.element, dashCaseKey, value.toString());
        } else {
          dom_adapter_1.getDOM().setStyle(_this.element, _this._stringPrefix + dashCaseKey, value.toString());
        }
      });
    };
    Animation.prototype.addClasses = function (classes) {
      for (var i = 0, len = classes.length; i < len; i++) dom_adapter_1.getDOM().addClass(this.element, classes[i]);
    };
    Animation.prototype.removeClasses = function (classes) {
      for (var i = 0, len = classes.length; i < len; i++) dom_adapter_1.getDOM().removeClass(this.element, classes[i]);
    };
    Animation.prototype.addEvents = function () {
      var _this = this;
      if (this.totalTime > 0) {
        this.eventClearFunctions.push(dom_adapter_1.getDOM().onAndCancel(this.element, dom_adapter_1.getDOM().getTransitionEnd(), function (event) {
          return _this.handleAnimationEvent(event);
        }));
      } else {
        this.handleAnimationCompleted();
      }
    };
    Animation.prototype.handleAnimationEvent = function (event) {
      var elapsedTime = math_1.Math.round(event.elapsedTime * 1000);
      if (!this.browserDetails.elapsedTimeIncludesDelay) elapsedTime += this.computedDelay;
      event.stopPropagation();
      if (elapsedTime >= this.totalTime) this.handleAnimationCompleted();
    };
    Animation.prototype.handleAnimationCompleted = function () {
      this.removeClasses(this.data.animationClasses);
      this.callbacks.forEach(function (callback) {
        return callback();
      });
      this.callbacks = [];
      this.eventClearFunctions.forEach(function (fn) {
        return fn();
      });
      this.eventClearFunctions = [];
      this.completed = true;
    };
    Animation.prototype.onComplete = function (callback) {
      if (this.completed) {
        callback();
      } else {
        this.callbacks.push(callback);
      }
      return this;
    };
    Animation.prototype.parseDurationString = function (duration) {
      var maxValue = 0;
      if (duration == null || duration.length < 2) {
        return maxValue;
      } else if (duration.substring(duration.length - 2) == 'ms') {
        var value = lang_1.NumberWrapper.parseInt(this.stripLetters(duration), 10);
        if (value > maxValue) maxValue = value;
      } else if (duration.substring(duration.length - 1) == 's') {
        var ms = lang_1.NumberWrapper.parseFloat(this.stripLetters(duration)) * 1000;
        var value = math_1.Math.floor(ms);
        if (value > maxValue) maxValue = value;
      }
      return maxValue;
    };
    Animation.prototype.stripLetters = function (str) {
      return lang_1.StringWrapper.replaceAll(str, lang_1.RegExpWrapper.create('[^0-9]+$', ''), '');
    };
    return Animation;
  }();
  exports.Animation = Animation;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_builder.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_options.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var css_animation_options_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_options.js');
  var animation_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation.js');
  var CssAnimationBuilder = function () {
    function CssAnimationBuilder(browserDetails) {
      this.browserDetails = browserDetails;
      this.data = new css_animation_options_1.CssAnimationOptions();
    }
    CssAnimationBuilder.prototype.addAnimationClass = function (className) {
      this.data.animationClasses.push(className);
      return this;
    };
    CssAnimationBuilder.prototype.addClass = function (className) {
      this.data.classesToAdd.push(className);
      return this;
    };
    CssAnimationBuilder.prototype.removeClass = function (className) {
      this.data.classesToRemove.push(className);
      return this;
    };
    CssAnimationBuilder.prototype.setDuration = function (duration) {
      this.data.duration = duration;
      return this;
    };
    CssAnimationBuilder.prototype.setDelay = function (delay) {
      this.data.delay = delay;
      return this;
    };
    CssAnimationBuilder.prototype.setStyles = function (from, to) {
      return this.setFromStyles(from).setToStyles(to);
    };
    CssAnimationBuilder.prototype.setFromStyles = function (from) {
      this.data.fromStyles = from;
      return this;
    };
    CssAnimationBuilder.prototype.setToStyles = function (to) {
      this.data.toStyles = to;
      return this;
    };
    CssAnimationBuilder.prototype.start = function (element) {
      return new animation_1.Animation(element, this.data, this.browserDetails);
    };
    return CssAnimationBuilder;
  }();
  exports.CssAnimationBuilder = CssAnimationBuilder;
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/facade/math.js", ["npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js");
  exports.Math = lang_1.global.Math;
  exports.NaN = typeof exports.NaN;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/math.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var math_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/math.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var BrowserDetails = function () {
    function BrowserDetails() {
      this.elapsedTimeIncludesDelay = false;
      this.doesElapsedTimeIncludesDelay();
    }
    BrowserDetails.prototype.doesElapsedTimeIncludesDelay = function () {
      var _this = this;
      var div = dom_adapter_1.getDOM().createElement('div');
      dom_adapter_1.getDOM().setAttribute(div, 'style', "position: absolute; top: -9999px; left: -9999px; width: 1px;\n      height: 1px; transition: all 1ms linear 1ms;");
      this.raf(function (timestamp) {
        dom_adapter_1.getDOM().on(div, 'transitionend', function (event) {
          var elapsed = math_1.Math.round(event.elapsedTime * 1000);
          _this.elapsedTimeIncludesDelay = elapsed == 2;
          dom_adapter_1.getDOM().remove(div);
        });
        dom_adapter_1.getDOM().setStyle(div, 'width', '2px');
      }, 2);
    };
    BrowserDetails.prototype.raf = function (callback, frames) {
      if (frames === void 0) {
        frames = 1;
      }
      var queue = new RafQueue(callback, frames);
      return function () {
        return queue.cancel();
      };
    };
    BrowserDetails.decorators = [{ type: core_1.Injectable }];
    BrowserDetails.ctorParameters = [];
    return BrowserDetails;
  }();
  exports.BrowserDetails = BrowserDetails;
  var RafQueue = function () {
    function RafQueue(callback, frames) {
      this.callback = callback;
      this.frames = frames;
      this._raf();
    }
    RafQueue.prototype._raf = function () {
      var _this = this;
      this.currentFrameId = dom_adapter_1.getDOM().requestAnimationFrame(function (timestamp) {
        return _this._nextFrame(timestamp);
      });
    };
    RafQueue.prototype._nextFrame = function (timestamp) {
      this.frames--;
      if (this.frames > 0) {
        this._raf();
      } else {
        this.callback(timestamp);
      }
    };
    RafQueue.prototype.cancel = function () {
      dom_adapter_1.getDOM().cancelAnimationFrame(this.currentFrameId);
      this.currentFrameId = null;
    };
    return RafQueue;
  }();
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_builder.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var css_animation_builder_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/css_animation_builder.js');
  var browser_details_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/browser_details.js');
  var AnimationBuilder = function () {
    function AnimationBuilder(browserDetails) {
      this.browserDetails = browserDetails;
    }
    AnimationBuilder.prototype.css = function () {
      return new css_animation_builder_1.CssAnimationBuilder(this.browserDetails);
    };
    AnimationBuilder.decorators = [{ type: core_1.Injectable }];
    AnimationBuilder.ctorParameters = [{ type: browser_details_1.BrowserDetails }];
    return AnimationBuilder;
  }();
  exports.AnimationBuilder = AnimationBuilder;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/shared_styles_host.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var dom_tokens_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js');
  var SharedStylesHost = function () {
    function SharedStylesHost() {
      this._styles = [];
      this._stylesSet = new Set();
    }
    SharedStylesHost.prototype.addStyles = function (styles) {
      var _this = this;
      var additions = [];
      styles.forEach(function (style) {
        if (!collection_1.SetWrapper.has(_this._stylesSet, style)) {
          _this._stylesSet.add(style);
          _this._styles.push(style);
          additions.push(style);
        }
      });
      this.onStylesAdded(additions);
    };
    SharedStylesHost.prototype.onStylesAdded = function (additions) {};
    SharedStylesHost.prototype.getAllStyles = function () {
      return this._styles;
    };
    SharedStylesHost.decorators = [{ type: core_1.Injectable }];
    SharedStylesHost.ctorParameters = [];
    return SharedStylesHost;
  }();
  exports.SharedStylesHost = SharedStylesHost;
  var DomSharedStylesHost = function (_super) {
    __extends(DomSharedStylesHost, _super);
    function DomSharedStylesHost(doc) {
      _super.call(this);
      this._hostNodes = new Set();
      this._hostNodes.add(doc.head);
    }
    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {
      for (var i = 0; i < styles.length; i++) {
        var style = styles[i];
        dom_adapter_1.getDOM().appendChild(host, dom_adapter_1.getDOM().createStyleElement(style));
      }
    };
    DomSharedStylesHost.prototype.addHost = function (hostNode) {
      this._addStylesToHost(this._styles, hostNode);
      this._hostNodes.add(hostNode);
    };
    DomSharedStylesHost.prototype.removeHost = function (hostNode) {
      collection_1.SetWrapper.delete(this._hostNodes, hostNode);
    };
    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {
      var _this = this;
      this._hostNodes.forEach(function (hostNode) {
        _this._addStylesToHost(additions, hostNode);
      });
    };
    DomSharedStylesHost.decorators = [{ type: core_1.Injectable }];
    DomSharedStylesHost.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Inject,
        args: [dom_tokens_1.DOCUMENT]
      }]
    }];
    return DomSharedStylesHost;
  }(SharedStylesHost);
  exports.DomSharedStylesHost = DomSharedStylesHost;
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/facade/base_wrapped_exception.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
    * A base class for the WrappedException that can be used to identify
    * a WrappedException from ExceptionHandler without adding circular
    * dependency.
    */
    var BaseWrappedException = function (_super) {
        __extends(BaseWrappedException, _super);
        function BaseWrappedException(message) {
            _super.call(this, message);
        }
        Object.defineProperty(BaseWrappedException.prototype, "wrapperMessage", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "wrapperStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalException", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "context", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "message", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        return BaseWrappedException;
    }(Error);
    exports.BaseWrappedException = BaseWrappedException;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exception_handler.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var base_wrapped_exception_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  var _ArrayLogger = function () {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function () {};
    ;
    return _ArrayLogger;
  }();
  var ExceptionHandler = function () {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException) throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function (exception) {
      return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function (exception) {
      try {
        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception.originalException;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  }();
  exports.ExceptionHandler = ExceptionHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exception_handler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var base_wrapped_exception_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var exception_handler_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exception_handler.js');
  var exception_handler_2 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exception_handler.js');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = function (_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = new Error(message).stack;
    }
    BaseException.prototype.toString = function () {
      return this.message;
    };
    return BaseException;
  }(Error);
  exports.BaseException = BaseException;
  var WrappedException = function (_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = new Error(_wrapperMessage).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function () {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function () {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function () {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function () {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function () {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function () {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function () {
      return this.message;
    };
    return WrappedException;
  }(base_wrapped_exception_1.BaseWrappedException);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js", ["npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js");
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = function () {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  }();
  var createMapFromMap = function () {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function (v, k) {
        map.set(k, v);
      });
      return map;
    };
  }();
  var _clearValues = function () {
    if (new exports.Map().keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!(k = keyIterator.next()).done) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function (v, k) {
          m.set(k, null);
        });
      };
    }
  }();
  var _arrayFromMap = function () {
    try {
      if (new exports.Map().values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function (v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  }();
  var MapWrapper = function () {
    function MapWrapper() {}
    MapWrapper.clone = function (m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function (stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function (m) {
      var r = {};
      m.forEach(function (v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function (pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function (m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function (m) {
      return m;
    };
    MapWrapper.keys = function (m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function (m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  }();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = function () {
    function StringMapWrapper() {}
    StringMapWrapper.create = function () {
      return {};
    };
    StringMapWrapper.contains = function (map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function (map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function (map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function (map) {
      return Object.keys(map);
    };
    StringMapWrapper.values = function (map) {
      return Object.keys(map).reduce(function (r, a) {
        r.push(map[a]);
        return r;
      }, []);
    };
    StringMapWrapper.isEmpty = function (map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function (map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function (map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function (m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function (m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  }();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = function () {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function (size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function (size) {
      return new Array(size);
    };
    ListWrapper.clone = function (array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function (array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function (array) {
      if (!array) return null;
      return array[0];
    };
    ListWrapper.last = function (array) {
      if (!array || array.length == 0) return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function (array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function (list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function (array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function (a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function (list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function (list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function (list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function (list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function (list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function (list) {
      return list.length == 0;
    };
    ListWrapper.fill = function (list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function (a, b) {
      if (a.length != b.length) return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    };
    ListWrapper.slice = function (l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function (l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function (l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function (l) {
      return l.toString();
    };
    ListWrapper.toJSON = function (l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function (list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    ListWrapper.flatten = function (list) {
      var target = [];
      _flattenArray(list, target);
      return target;
    };
    ListWrapper.addAll = function (list, source) {
      for (var i = 0; i < source.length; i++) {
        list.push(source[i]);
      }
    };
    return ListWrapper;
  }();
  exports.ListWrapper = ListWrapper;
  function _flattenArray(source, target) {
    if (lang_1.isPresent(source)) {
      for (var i = 0; i < source.length; i++) {
        var item = source[i];
        if (lang_1.isArray(item)) {
          _flattenArray(item, target);
        } else {
          target.push(item);
        }
      }
    }
    return target;
  }
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj)) return false;
    return lang_1.isArray(obj) || !(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj;
  }
  exports.isListLikeIterable = isListLikeIterable;
  function areIterablesEqual(a, b, comparator) {
    var iterator1 = a[lang_1.getSymbolIterator()]();
    var iterator2 = b[lang_1.getSymbolIterator()]();
    while (true) {
      var item1 = iterator1.next();
      var item2 = iterator2.next();
      if (item1.done && item2.done) return true;
      if (item1.done || item2.done) return false;
      if (!comparator(item1.value, item2.value)) return false;
    }
  }
  exports.areIterablesEqual = areIterablesEqual;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!(item = iterator.next()).done) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = function () {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  }();
  var SetWrapper = function () {
    function SetWrapper() {}
    SetWrapper.createFromList = function (lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function (s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function (m, k) {
      m.delete(k);
    };
    return SetWrapper;
  }();
  exports.SetWrapper = SetWrapper;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var exceptions_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/collection.js');
  exports.EVENT_MANAGER_PLUGINS = new core_1.OpaqueToken("EventManagerPlugins");
  var EventManager = function () {
    function EventManager(plugins, _zone) {
      var _this = this;
      this._zone = _zone;
      plugins.forEach(function (p) {
        return p.manager = _this;
      });
      this._plugins = collection_1.ListWrapper.reversed(plugins);
    }
    EventManager.prototype.addEventListener = function (element, eventName, handler) {
      var plugin = this._findPluginFor(eventName);
      return plugin.addEventListener(element, eventName, handler);
    };
    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {
      var plugin = this._findPluginFor(eventName);
      return plugin.addGlobalEventListener(target, eventName, handler);
    };
    EventManager.prototype.getZone = function () {
      return this._zone;
    };
    EventManager.prototype._findPluginFor = function (eventName) {
      var plugins = this._plugins;
      for (var i = 0; i < plugins.length; i++) {
        var plugin = plugins[i];
        if (plugin.supports(eventName)) {
          return plugin;
        }
      }
      throw new exceptions_1.BaseException("No event manager plugin found for event " + eventName);
    };
    EventManager.decorators = [{ type: core_1.Injectable }];
    EventManager.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Inject,
        args: [exports.EVENT_MANAGER_PLUGINS]
      }]
    }, { type: core_1.NgZone }];
    return EventManager;
  }();
  exports.EventManager = EventManager;
  var EventManagerPlugin = function () {
    function EventManagerPlugin() {}
    EventManagerPlugin.prototype.supports = function (eventName) {
      return false;
    };
    EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) {
      throw "not implemented";
    };
    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {
      throw "not implemented";
    };
    return EventManagerPlugin;
  }();
  exports.EventManagerPlugin = EventManagerPlugin;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js', ['npm:@angular/core@2.0.0-rc.1.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  /**
   * A DI Token representing the main rendering context. In a browser this is the DOM Document.
   *
   * Note: Document might not be available in the Application Context when Application and Rendering
   * Contexts are not the same (e.g. when running the application into a Web Worker).
   */
  exports.DOCUMENT = new core_1.OpaqueToken('DocumentToken');
  

  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/util.js', ['npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var CAMEL_CASE_REGEXP = /([A-Z])/g;
  var DASH_CASE_REGEXP = /-([a-z])/g;
  function camelCaseToDashCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function (m) {
      return '-' + m[1].toLowerCase();
    });
  }
  exports.camelCaseToDashCase = camelCaseToDashCase;
  function dashCaseToCamelCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function (m) {
      return m[1].toUpperCase();
    });
  }
  exports.dashCaseToCamelCase = dashCaseToCamelCase;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_renderer.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/shared_styles_host.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var animation_builder_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/animate/animation_builder.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/exceptions.js');
  var shared_styles_host_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/shared_styles_host.js');
  var event_manager_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js');
  var dom_tokens_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var util_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/util.js');
  var NAMESPACE_URIS = {
    'xlink': 'http://www.w3.org/1999/xlink',
    'svg': 'http://www.w3.org/2000/svg'
  };
  var TEMPLATE_COMMENT_TEXT = 'template bindings={}';
  var TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/g;
  var DomRootRenderer = function () {
    function DomRootRenderer(document, eventManager, sharedStylesHost, animate) {
      this.document = document;
      this.eventManager = eventManager;
      this.sharedStylesHost = sharedStylesHost;
      this.animate = animate;
      this._registeredComponents = new Map();
    }
    DomRootRenderer.prototype.renderComponent = function (componentProto) {
      var renderer = this._registeredComponents.get(componentProto.id);
      if (lang_1.isBlank(renderer)) {
        renderer = new DomRenderer(this, componentProto);
        this._registeredComponents.set(componentProto.id, renderer);
      }
      return renderer;
    };
    return DomRootRenderer;
  }();
  exports.DomRootRenderer = DomRootRenderer;
  var DomRootRenderer_ = function (_super) {
    __extends(DomRootRenderer_, _super);
    function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animate) {
      _super.call(this, _document, _eventManager, sharedStylesHost, animate);
    }
    DomRootRenderer_.decorators = [{ type: core_1.Injectable }];
    DomRootRenderer_.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Inject,
        args: [dom_tokens_1.DOCUMENT]
      }]
    }, { type: event_manager_1.EventManager }, { type: shared_styles_host_1.DomSharedStylesHost }, { type: animation_builder_1.AnimationBuilder }];
    return DomRootRenderer_;
  }(DomRootRenderer);
  exports.DomRootRenderer_ = DomRootRenderer_;
  var DomRenderer = function () {
    function DomRenderer(_rootRenderer, componentProto) {
      this._rootRenderer = _rootRenderer;
      this.componentProto = componentProto;
      this._styles = _flattenStyles(componentProto.id, componentProto.styles, []);
      if (componentProto.encapsulation !== core_1.ViewEncapsulation.Native) {
        this._rootRenderer.sharedStylesHost.addStyles(this._styles);
      }
      if (this.componentProto.encapsulation === core_1.ViewEncapsulation.Emulated) {
        this._contentAttr = _shimContentAttribute(componentProto.id);
        this._hostAttr = _shimHostAttribute(componentProto.id);
      } else {
        this._contentAttr = null;
        this._hostAttr = null;
      }
    }
    DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {
      var el;
      if (lang_1.isString(selectorOrNode)) {
        el = dom_adapter_1.getDOM().querySelector(this._rootRenderer.document, selectorOrNode);
        if (lang_1.isBlank(el)) {
          throw new exceptions_1.BaseException("The selector \"" + selectorOrNode + "\" did not match any elements");
        }
      } else {
        el = selectorOrNode;
      }
      dom_adapter_1.getDOM().clearNodes(el);
      return el;
    };
    DomRenderer.prototype.createElement = function (parent, name, debugInfo) {
      var nsAndName = splitNamespace(name);
      var el = lang_1.isPresent(nsAndName[0]) ? dom_adapter_1.getDOM().createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) : dom_adapter_1.getDOM().createElement(nsAndName[1]);
      if (lang_1.isPresent(this._contentAttr)) {
        dom_adapter_1.getDOM().setAttribute(el, this._contentAttr, '');
      }
      if (lang_1.isPresent(parent)) {
        dom_adapter_1.getDOM().appendChild(parent, el);
      }
      return el;
    };
    DomRenderer.prototype.createViewRoot = function (hostElement) {
      var nodesParent;
      if (this.componentProto.encapsulation === core_1.ViewEncapsulation.Native) {
        nodesParent = dom_adapter_1.getDOM().createShadowRoot(hostElement);
        this._rootRenderer.sharedStylesHost.addHost(nodesParent);
        for (var i = 0; i < this._styles.length; i++) {
          dom_adapter_1.getDOM().appendChild(nodesParent, dom_adapter_1.getDOM().createStyleElement(this._styles[i]));
        }
      } else {
        if (lang_1.isPresent(this._hostAttr)) {
          dom_adapter_1.getDOM().setAttribute(hostElement, this._hostAttr, '');
        }
        nodesParent = hostElement;
      }
      return nodesParent;
    };
    DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {
      var comment = dom_adapter_1.getDOM().createComment(TEMPLATE_COMMENT_TEXT);
      if (lang_1.isPresent(parentElement)) {
        dom_adapter_1.getDOM().appendChild(parentElement, comment);
      }
      return comment;
    };
    DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {
      var node = dom_adapter_1.getDOM().createTextNode(value);
      if (lang_1.isPresent(parentElement)) {
        dom_adapter_1.getDOM().appendChild(parentElement, node);
      }
      return node;
    };
    DomRenderer.prototype.projectNodes = function (parentElement, nodes) {
      if (lang_1.isBlank(parentElement)) return;
      appendNodes(parentElement, nodes);
    };
    DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {
      moveNodesAfterSibling(node, viewRootNodes);
      for (var i = 0; i < viewRootNodes.length; i++) this.animateNodeEnter(viewRootNodes[i]);
    };
    DomRenderer.prototype.detachView = function (viewRootNodes) {
      for (var i = 0; i < viewRootNodes.length; i++) {
        var node = viewRootNodes[i];
        dom_adapter_1.getDOM().remove(node);
        this.animateNodeLeave(node);
      }
    };
    DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {
      if (this.componentProto.encapsulation === core_1.ViewEncapsulation.Native && lang_1.isPresent(hostElement)) {
        this._rootRenderer.sharedStylesHost.removeHost(dom_adapter_1.getDOM().getShadowRoot(hostElement));
      }
    };
    DomRenderer.prototype.listen = function (renderElement, name, callback) {
      return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));
    };
    DomRenderer.prototype.listenGlobal = function (target, name, callback) {
      return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));
    };
    DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {
      dom_adapter_1.getDOM().setProperty(renderElement, propertyName, propertyValue);
    };
    DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {
      var attrNs;
      var nsAndName = splitNamespace(attributeName);
      if (lang_1.isPresent(nsAndName[0])) {
        attributeName = nsAndName[0] + ':' + nsAndName[1];
        attrNs = NAMESPACE_URIS[nsAndName[0]];
      }
      if (lang_1.isPresent(attributeValue)) {
        if (lang_1.isPresent(attrNs)) {
          dom_adapter_1.getDOM().setAttributeNS(renderElement, attrNs, attributeName, attributeValue);
        } else {
          dom_adapter_1.getDOM().setAttribute(renderElement, attributeName, attributeValue);
        }
      } else {
        if (lang_1.isPresent(attrNs)) {
          dom_adapter_1.getDOM().removeAttributeNS(renderElement, attrNs, nsAndName[1]);
        } else {
          dom_adapter_1.getDOM().removeAttribute(renderElement, attributeName);
        }
      }
    };
    DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {
      var dashCasedPropertyName = util_1.camelCaseToDashCase(propertyName);
      if (dom_adapter_1.getDOM().isCommentNode(renderElement)) {
        var existingBindings = lang_1.RegExpWrapper.firstMatch(TEMPLATE_BINDINGS_EXP, lang_1.StringWrapper.replaceAll(dom_adapter_1.getDOM().getText(renderElement), /\n/g, ''));
        var parsedBindings = lang_1.Json.parse(existingBindings[1]);
        parsedBindings[dashCasedPropertyName] = propertyValue;
        dom_adapter_1.getDOM().setText(renderElement, lang_1.StringWrapper.replace(TEMPLATE_COMMENT_TEXT, '{}', lang_1.Json.stringify(parsedBindings)));
      } else {
        this.setElementAttribute(renderElement, propertyName, propertyValue);
      }
    };
    DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {
      if (isAdd) {
        dom_adapter_1.getDOM().addClass(renderElement, className);
      } else {
        dom_adapter_1.getDOM().removeClass(renderElement, className);
      }
    };
    DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {
      if (lang_1.isPresent(styleValue)) {
        dom_adapter_1.getDOM().setStyle(renderElement, styleName, lang_1.stringify(styleValue));
      } else {
        dom_adapter_1.getDOM().removeStyle(renderElement, styleName);
      }
    };
    DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {
      dom_adapter_1.getDOM().invoke(renderElement, methodName, args);
    };
    DomRenderer.prototype.setText = function (renderNode, text) {
      dom_adapter_1.getDOM().setText(renderNode, text);
    };
    DomRenderer.prototype.animateNodeEnter = function (node) {
      if (dom_adapter_1.getDOM().isElementNode(node) && dom_adapter_1.getDOM().hasClass(node, 'ng-animate')) {
        dom_adapter_1.getDOM().addClass(node, 'ng-enter');
        this._rootRenderer.animate.css().addAnimationClass('ng-enter-active').start(node).onComplete(function () {
          dom_adapter_1.getDOM().removeClass(node, 'ng-enter');
        });
      }
    };
    DomRenderer.prototype.animateNodeLeave = function (node) {
      if (dom_adapter_1.getDOM().isElementNode(node) && dom_adapter_1.getDOM().hasClass(node, 'ng-animate')) {
        dom_adapter_1.getDOM().addClass(node, 'ng-leave');
        this._rootRenderer.animate.css().addAnimationClass('ng-leave-active').start(node).onComplete(function () {
          dom_adapter_1.getDOM().removeClass(node, 'ng-leave');
          dom_adapter_1.getDOM().remove(node);
        });
      } else {
        dom_adapter_1.getDOM().remove(node);
      }
    };
    return DomRenderer;
  }();
  exports.DomRenderer = DomRenderer;
  function moveNodesAfterSibling(sibling, nodes) {
    var parent = dom_adapter_1.getDOM().parentElement(sibling);
    if (nodes.length > 0 && lang_1.isPresent(parent)) {
      var nextSibling = dom_adapter_1.getDOM().nextSibling(sibling);
      if (lang_1.isPresent(nextSibling)) {
        for (var i = 0; i < nodes.length; i++) {
          dom_adapter_1.getDOM().insertBefore(nextSibling, nodes[i]);
        }
      } else {
        for (var i = 0; i < nodes.length; i++) {
          dom_adapter_1.getDOM().appendChild(parent, nodes[i]);
        }
      }
    }
  }
  function appendNodes(parent, nodes) {
    for (var i = 0; i < nodes.length; i++) {
      dom_adapter_1.getDOM().appendChild(parent, nodes[i]);
    }
  }
  function decoratePreventDefault(eventHandler) {
    return function (event) {
      var allowDefaultBehavior = eventHandler(event);
      if (allowDefaultBehavior === false) {
        dom_adapter_1.getDOM().preventDefault(event);
      }
    };
  }
  var COMPONENT_REGEX = /%COMP%/g;
  exports.COMPONENT_VARIABLE = '%COMP%';
  exports.HOST_ATTR = "_nghost-" + exports.COMPONENT_VARIABLE;
  exports.CONTENT_ATTR = "_ngcontent-" + exports.COMPONENT_VARIABLE;
  function _shimContentAttribute(componentShortId) {
    return lang_1.StringWrapper.replaceAll(exports.CONTENT_ATTR, COMPONENT_REGEX, componentShortId);
  }
  function _shimHostAttribute(componentShortId) {
    return lang_1.StringWrapper.replaceAll(exports.HOST_ATTR, COMPONENT_REGEX, componentShortId);
  }
  function _flattenStyles(compId, styles, target) {
    for (var i = 0; i < styles.length; i++) {
      var style = styles[i];
      if (lang_1.isArray(style)) {
        _flattenStyles(compId, style, target);
      } else {
        style = lang_1.StringWrapper.replaceAll(style, COMPONENT_REGEX, compId);
        target.push(style);
      }
    }
    return target;
  }
  var NS_PREFIX_RE = /^@([^:]+):(.+)/g;
  function splitNamespace(name) {
    if (name[0] != '@') {
      return [null, name];
    }
    var match = lang_1.RegExpWrapper.firstMatch(NS_PREFIX_RE, name);
    return [match[1], match[2]];
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/core_private.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_renderer.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var dom_renderer_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_renderer.js');
  var CORE_TOKENS = {
    'ApplicationRef': core_1.ApplicationRef,
    'NgZone': core_1.NgZone
  };
  var INSPECT_GLOBAL_NAME = 'ng.probe';
  var CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';
  function inspectNativeElement(element) {
    return core_1.getDebugNode(element);
  }
  exports.inspectNativeElement = inspectNativeElement;
  function _createConditionalRootRenderer(rootRenderer) {
    if (lang_1.assertionsEnabled()) {
      return _createRootRenderer(rootRenderer);
    }
    return rootRenderer;
  }
  function _createRootRenderer(rootRenderer) {
    dom_adapter_1.getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);
    dom_adapter_1.getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, CORE_TOKENS);
    return new core_private_1.DebugDomRootRenderer(rootRenderer);
  }
  exports.ELEMENT_PROBE_PROVIDERS = [{
    provide: core_1.RootRenderer,
    useFactory: _createConditionalRootRenderer,
    deps: [dom_renderer_1.DomRootRenderer]
  }];
  exports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = [{
    provide: core_1.RootRenderer,
    useFactory: _createRootRenderer,
    deps: [dom_renderer_1.DomRootRenderer]
  }];
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js", ["npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js");
  var _DOM = null;
  function getDOM() {
    return _DOM;
  }
  exports.getDOM = getDOM;
  function setDOM(adapter) {
    _DOM = adapter;
  }
  exports.setDOM = setDOM;
  function setRootDomAdapter(adapter) {
    if (lang_1.isBlank(_DOM)) {
      _DOM = adapter;
    }
  }
  exports.setRootDomAdapter = setRootDomAdapter;
  var DomAdapter = function () {
    function DomAdapter() {
      this.xhrType = null;
    }
    DomAdapter.prototype.getXHR = function () {
      return this.xhrType;
    };
    Object.defineProperty(DomAdapter.prototype, "attrToPropMap", {
      get: function () {
        return this._attrToPropMap;
      },
      set: function (value) {
        this._attrToPropMap = value;
      },
      enumerable: true,
      configurable: true
    });
    ;
    ;
    return DomAdapter;
  }();
  exports.DomAdapter = DomAdapter;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/location/browser_platform_location.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var common_1 = $__require('npm:@angular/common@2.0.0-rc.1.js');
  var dom_adapter_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_adapter.js');
  var BrowserPlatformLocation = function (_super) {
    __extends(BrowserPlatformLocation, _super);
    function BrowserPlatformLocation() {
      _super.call(this);
      this._init();
    }
    BrowserPlatformLocation.prototype._init = function () {
      this._location = dom_adapter_1.getDOM().getLocation();
      this._history = dom_adapter_1.getDOM().getHistory();
    };
    Object.defineProperty(BrowserPlatformLocation.prototype, "location", {
      get: function () {
        return this._location;
      },
      enumerable: true,
      configurable: true
    });
    BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () {
      return dom_adapter_1.getDOM().getBaseHref();
    };
    BrowserPlatformLocation.prototype.onPopState = function (fn) {
      dom_adapter_1.getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);
    };
    BrowserPlatformLocation.prototype.onHashChange = function (fn) {
      dom_adapter_1.getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);
    };
    Object.defineProperty(BrowserPlatformLocation.prototype, "pathname", {
      get: function () {
        return this._location.pathname;
      },
      set: function (newPath) {
        this._location.pathname = newPath;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(BrowserPlatformLocation.prototype, "search", {
      get: function () {
        return this._location.search;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(BrowserPlatformLocation.prototype, "hash", {
      get: function () {
        return this._location.hash;
      },
      enumerable: true,
      configurable: true
    });
    BrowserPlatformLocation.prototype.pushState = function (state, title, url) {
      this._history.pushState(state, title, url);
    };
    BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {
      this._history.replaceState(state, title, url);
    };
    BrowserPlatformLocation.prototype.forward = function () {
      this._history.forward();
    };
    BrowserPlatformLocation.prototype.back = function () {
      this._history.back();
    };
    BrowserPlatformLocation.decorators = [{ type: core_1.Injectable }];
    BrowserPlatformLocation.ctorParameters = [];
    return BrowserPlatformLocation;
  }(common_1.PlatformLocation);
  exports.BrowserPlatformLocation = BrowserPlatformLocation;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/platform_browser_static.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser/location/browser_platform_location.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var browser_common_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js');
  var ng_probe_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js');
  exports.ELEMENT_PROBE_PROVIDERS = ng_probe_1.ELEMENT_PROBE_PROVIDERS;
  var browser_platform_location_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser/location/browser_platform_location.js');
  exports.BrowserPlatformLocation = browser_platform_location_1.BrowserPlatformLocation;
  var browser_common_2 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js');
  exports.BROWSER_PROVIDERS = browser_common_2.BROWSER_PROVIDERS;
  exports.By = browser_common_2.By;
  exports.Title = browser_common_2.Title;
  exports.enableDebugTools = browser_common_2.enableDebugTools;
  exports.disableDebugTools = browser_common_2.disableDebugTools;
  exports.BROWSER_APP_STATIC_PROVIDERS = browser_common_1.BROWSER_APP_COMMON_PROVIDERS;
  function browserStaticPlatform() {
    if (lang_1.isBlank(core_1.getPlatform())) {
      core_1.createPlatform(core_1.ReflectiveInjector.resolveAndCreate(browser_common_1.BROWSER_PROVIDERS));
    }
    return core_1.assertPlatform(browser_common_1.BROWSER_PLATFORM_MARKER);
  }
  exports.browserStaticPlatform = browserStaticPlatform;
  function bootstrapStatic(appComponentType, customProviders, initReflector) {
    if (lang_1.isPresent(initReflector)) {
      initReflector();
    }
    var appProviders = lang_1.isPresent(customProviders) ? [exports.BROWSER_APP_STATIC_PROVIDERS, customProviders] : exports.BROWSER_APP_STATIC_PROVIDERS;
    var appInjector = core_1.ReflectiveInjector.resolveAndCreate(appProviders, browserStaticPlatform().injector);
    return core_1.coreLoadAndBootstrap(appInjector, appComponentType);
  }
  exports.bootstrapStatic = bootstrapStatic;
  return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser@2.0.0-rc.1/src/platform_browser.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/dom_events.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js', 'npm:@angular/platform-browser@2.0.0-rc.1/private_export.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/security/dom_sanitization_service.js', 'npm:@angular/platform-browser@2.0.0-rc.1/src/platform_browser_static.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/facade/lang.js');
  var browser_common_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js');
  var dom_events_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/dom_events.js');
  exports.DomEventsPlugin = dom_events_1.DomEventsPlugin;
  var event_manager_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/events/event_manager.js');
  exports.EventManager = event_manager_1.EventManager;
  exports.EVENT_MANAGER_PLUGINS = event_manager_1.EVENT_MANAGER_PLUGINS;
  var ng_probe_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/debug/ng_probe.js');
  exports.ELEMENT_PROBE_PROVIDERS = ng_probe_1.ELEMENT_PROBE_PROVIDERS;
  var browser_common_2 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/browser_common.js');
  exports.BROWSER_APP_COMMON_PROVIDERS = browser_common_2.BROWSER_APP_COMMON_PROVIDERS;
  exports.BROWSER_SANITIZATION_PROVIDERS = browser_common_2.BROWSER_SANITIZATION_PROVIDERS;
  exports.BROWSER_PROVIDERS = browser_common_2.BROWSER_PROVIDERS;
  exports.By = browser_common_2.By;
  exports.Title = browser_common_2.Title;
  exports.enableDebugTools = browser_common_2.enableDebugTools;
  exports.disableDebugTools = browser_common_2.disableDebugTools;
  exports.HAMMER_GESTURE_CONFIG = browser_common_2.HAMMER_GESTURE_CONFIG;
  exports.HammerGestureConfig = browser_common_2.HammerGestureConfig;
  __export($__require('npm:@angular/platform-browser@2.0.0-rc.1/private_export.js'));
  var dom_tokens_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/dom/dom_tokens.js');
  exports.DOCUMENT = dom_tokens_1.DOCUMENT;
  var dom_sanitization_service_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/security/dom_sanitization_service.js');
  exports.DomSanitizationService = dom_sanitization_service_1.DomSanitizationService;
  exports.SecurityContext = dom_sanitization_service_1.SecurityContext;
  var platform_browser_static_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1/src/platform_browser_static.js');
  exports.bootstrapStatic = platform_browser_static_1.bootstrapStatic;
  exports.browserStaticPlatform = platform_browser_static_1.browserStaticPlatform;
  exports.BROWSER_APP_STATIC_PROVIDERS = platform_browser_static_1.BROWSER_APP_STATIC_PROVIDERS;
  exports.BrowserPlatformLocation = platform_browser_static_1.BrowserPlatformLocation;
  function browserPlatform() {
    if (lang_1.isBlank(core_1.getPlatform())) {
      core_1.createPlatform(core_1.ReflectiveInjector.resolveAndCreate(browser_common_1.BROWSER_PROVIDERS));
    }
    return core_1.assertPlatform(browser_common_1.BROWSER_PLATFORM_MARKER);
  }
  exports.browserPlatform = browserPlatform;
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1/index.js", ["npm:@angular/platform-browser@2.0.0-rc.1/src/platform_browser.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("npm:@angular/platform-browser@2.0.0-rc.1/src/platform_browser.js"));
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser@2.0.0-rc.1.js", ["npm:@angular/platform-browser@2.0.0-rc.1/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@angular/platform-browser@2.0.0-rc.1/index.js");
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers_common.js', 'npm:@angular/platform-browser@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var router_providers_common_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers_common.js');
  var platform_browser_1 = $__require('npm:@angular/platform-browser@2.0.0-rc.1.js');
  var common_1 = $__require('npm:@angular/common@2.0.0-rc.1.js');
  exports.ROUTER_PROVIDERS = [router_providers_common_1.ROUTER_PROVIDERS_COMMON, {
    provide: common_1.PlatformLocation,
    useClass: platform_browser_1.BrowserPlatformLocation
  }];
  exports.ROUTER_BINDINGS = exports.ROUTER_PROVIDERS;
  return module.exports;
});
System.registerDynamic('npm:@angular/router-deprecated@2.0.0-rc.1/router.js', ['npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_outlet.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_link.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_decorator.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations.js', 'npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers_common.js', 'npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  var router_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/router.js');
  exports.Router = router_1.Router;
  var router_outlet_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_outlet.js');
  exports.RouterOutlet = router_outlet_1.RouterOutlet;
  var router_link_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_link.js');
  exports.RouterLink = router_link_1.RouterLink;
  var instruction_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js');
  exports.RouteParams = instruction_1.RouteParams;
  exports.RouteData = instruction_1.RouteData;
  var route_registry_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_registry.js');
  exports.RouteRegistry = route_registry_1.RouteRegistry;
  exports.ROUTER_PRIMARY_COMPONENT = route_registry_1.ROUTER_PRIMARY_COMPONENT;
  __export($__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/route_config/route_config_decorator.js'));
  var lifecycle_annotations_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/lifecycle/lifecycle_annotations.js');
  exports.CanActivate = lifecycle_annotations_1.CanActivate;
  var instruction_2 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/instruction.js');
  exports.Instruction = instruction_2.Instruction;
  exports.ComponentInstruction = instruction_2.ComponentInstruction;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  exports.OpaqueToken = core_1.OpaqueToken;
  var router_providers_common_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers_common.js');
  exports.ROUTER_PROVIDERS_COMMON = router_providers_common_1.ROUTER_PROVIDERS_COMMON;
  var router_providers_1 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/router_providers.js');
  exports.ROUTER_PROVIDERS = router_providers_1.ROUTER_PROVIDERS;
  exports.ROUTER_BINDINGS = router_providers_1.ROUTER_BINDINGS;
  var router_outlet_2 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_outlet.js');
  var router_link_2 = $__require('npm:@angular/router-deprecated@2.0.0-rc.1/src/directives/router_link.js');
  exports.ROUTER_DIRECTIVES = [router_outlet_2.RouterOutlet, router_link_2.RouterLink];
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1/index.js", ["npm:@angular/router-deprecated@2.0.0-rc.1/router.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("npm:@angular/router-deprecated@2.0.0-rc.1/router.js"));
  return module.exports;
});
System.registerDynamic("npm:@angular/router-deprecated@2.0.0-rc.1.js", ["npm:@angular/router-deprecated@2.0.0-rc.1/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@angular/router-deprecated@2.0.0-rc.1/index.js");
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/http.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/interfaces.js', 'npm:@angular/http@2.0.0-rc.1/src/static_request.js', 'npm:@angular/http@2.0.0-rc.1/src/base_request_options.js', 'npm:@angular/http@2.0.0-rc.1/src/enums.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js');
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var interfaces_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/interfaces.js');
  var static_request_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/static_request.js');
  var base_request_options_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_request_options.js');
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  function httpRequest(backend, request) {
    return backend.createConnection(request).response;
  }
  function mergeOptions(defaultOpts, providedOpts, method, url) {
    var newOptions = defaultOpts;
    if (lang_1.isPresent(providedOpts)) {
      return newOptions.merge(new base_request_options_1.RequestOptions({
        method: providedOpts.method || method,
        url: providedOpts.url || url,
        search: providedOpts.search,
        headers: providedOpts.headers,
        body: providedOpts.body
      }));
    }
    if (lang_1.isPresent(method)) {
      return newOptions.merge(new base_request_options_1.RequestOptions({
        method: method,
        url: url
      }));
    } else {
      return newOptions.merge(new base_request_options_1.RequestOptions({ url: url }));
    }
  }
  var Http = function () {
    function Http(_backend, _defaultOptions) {
      this._backend = _backend;
      this._defaultOptions = _defaultOptions;
    }
    Http.prototype.request = function (url, options) {
      var responseObservable;
      if (lang_1.isString(url)) {
        responseObservable = httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));
      } else if (url instanceof static_request_1.Request) {
        responseObservable = httpRequest(this._backend, url);
      } else {
        throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');
      }
      return responseObservable;
    };
    Http.prototype.get = function (url, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));
    };
    Http.prototype.post = function (url, body, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Post, url)));
    };
    Http.prototype.put = function (url, body, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Put, url)));
    };
    Http.prototype.delete = function (url, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Delete, url)));
    };
    Http.prototype.patch = function (url, body, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Patch, url)));
    };
    Http.prototype.head = function (url, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Head, url)));
    };
    Http.decorators = [{ type: core_1.Injectable }];
    Http.ctorParameters = [{ type: interfaces_1.ConnectionBackend }, { type: base_request_options_1.RequestOptions }];
    return Http;
  }();
  exports.Http = Http;
  var Jsonp = function (_super) {
    __extends(Jsonp, _super);
    function Jsonp(backend, defaultOptions) {
      _super.call(this, backend, defaultOptions);
    }
    Jsonp.prototype.request = function (url, options) {
      var responseObservable;
      if (lang_1.isString(url)) {
        url = new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url));
      }
      if (url instanceof static_request_1.Request) {
        if (url.method !== enums_1.RequestMethod.Get) {
          exceptions_1.makeTypeError('JSONP requests must use GET request method.');
        }
        responseObservable = httpRequest(this._backend, url);
      } else {
        throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');
      }
      return responseObservable;
    };
    Jsonp.decorators = [{ type: core_1.Injectable }];
    Jsonp.ctorParameters = [{ type: interfaces_1.ConnectionBackend }, { type: base_request_options_1.RequestOptions }];
    return Jsonp;
  }(Http);
  exports.Jsonp = Jsonp;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/backends/xhr_backend.js', ['npm:@angular/http@2.0.0-rc.1/src/enums.js', 'npm:@angular/http@2.0.0-rc.1/src/static_response.js', 'npm:@angular/http@2.0.0-rc.1/src/headers.js', 'npm:@angular/http@2.0.0-rc.1/src/base_response_options.js', 'npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/backends/browser_xhr.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:@angular/http@2.0.0-rc.1/src/http_utils.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  var static_response_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/static_response.js');
  var headers_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/headers.js');
  var base_response_options_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_response_options.js');
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var browser_xhr_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/browser_xhr.js');
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var http_utils_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/http_utils.js');
  var XHRConnection = function () {
    function XHRConnection(req, browserXHR, baseResponseOptions) {
      var _this = this;
      this.request = req;
      this.response = new Observable_1.Observable(function (responseObserver) {
        var _xhr = browserXHR.build();
        _xhr.open(enums_1.RequestMethod[req.method].toUpperCase(), req.url);
        var onLoad = function () {
          var body = lang_1.isPresent(_xhr.response) ? _xhr.response : _xhr.responseText;
          var headers = headers_1.Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());
          var url = http_utils_1.getResponseURL(_xhr);
          var status = _xhr.status === 1223 ? 204 : _xhr.status;
          if (status === 0) {
            status = body ? 200 : 0;
          }
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: body,
            status: status,
            headers: headers,
            url: url
          });
          if (lang_1.isPresent(baseResponseOptions)) {
            responseOptions = baseResponseOptions.merge(responseOptions);
          }
          var response = new static_response_1.Response(responseOptions);
          if (http_utils_1.isSuccess(status)) {
            responseObserver.next(response);
            responseObserver.complete();
            return;
          }
          responseObserver.error(response);
        };
        var onError = function (err) {
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: err,
            type: enums_1.ResponseType.Error
          });
          if (lang_1.isPresent(baseResponseOptions)) {
            responseOptions = baseResponseOptions.merge(responseOptions);
          }
          responseObserver.error(new static_response_1.Response(responseOptions));
        };
        if (lang_1.isPresent(req.headers)) {
          req.headers.forEach(function (values, name) {
            return _xhr.setRequestHeader(name, values.join(','));
          });
        }
        _xhr.addEventListener('load', onLoad);
        _xhr.addEventListener('error', onError);
        _xhr.send(_this.request.text());
        return function () {
          _xhr.removeEventListener('load', onLoad);
          _xhr.removeEventListener('error', onError);
          _xhr.abort();
        };
      });
    }
    return XHRConnection;
  }();
  exports.XHRConnection = XHRConnection;
  var XHRBackend = function () {
    function XHRBackend(_browserXHR, _baseResponseOptions) {
      this._browserXHR = _browserXHR;
      this._baseResponseOptions = _baseResponseOptions;
    }
    XHRBackend.prototype.createConnection = function (request) {
      return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);
    };
    XHRBackend.decorators = [{ type: core_1.Injectable }];
    XHRBackend.ctorParameters = [{ type: browser_xhr_1.BrowserXhr }, { type: base_response_options_1.ResponseOptions }];
    return XHRBackend;
  }();
  exports.XHRBackend = XHRBackend;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/backends/jsonp_backend.js', ['npm:@angular/http@2.0.0-rc.1/src/interfaces.js', 'npm:@angular/http@2.0.0-rc.1/src/enums.js', 'npm:@angular/http@2.0.0-rc.1/src/static_response.js', 'npm:@angular/http@2.0.0-rc.1/src/base_response_options.js', 'npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/backends/browser_jsonp.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var interfaces_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/interfaces.js');
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  var static_response_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/static_response.js');
  var base_response_options_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_response_options.js');
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var browser_jsonp_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/browser_jsonp.js');
  var exceptions_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js');
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';
  var JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';
  var JSONPConnection = function () {
    function JSONPConnection() {}
    return JSONPConnection;
  }();
  exports.JSONPConnection = JSONPConnection;
  var JSONPConnection_ = function (_super) {
    __extends(JSONPConnection_, _super);
    function JSONPConnection_(req, _dom, baseResponseOptions) {
      var _this = this;
      _super.call(this);
      this._dom = _dom;
      this.baseResponseOptions = baseResponseOptions;
      this._finished = false;
      if (req.method !== enums_1.RequestMethod.Get) {
        throw exceptions_1.makeTypeError(JSONP_ERR_WRONG_METHOD);
      }
      this.request = req;
      this.response = new Observable_1.Observable(function (responseObserver) {
        _this.readyState = enums_1.ReadyState.Loading;
        var id = _this._id = _dom.nextRequestID();
        _dom.exposeConnection(id, _this);
        var callback = _dom.requestCallback(_this._id);
        var url = req.url;
        if (url.indexOf('=JSONP_CALLBACK&') > -1) {
          url = lang_1.StringWrapper.replace(url, '=JSONP_CALLBACK&', "=" + callback + "&");
        } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {
          url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + ("=" + callback);
        }
        var script = _this._script = _dom.build(url);
        var onLoad = function (event) {
          if (_this.readyState === enums_1.ReadyState.Cancelled) return;
          _this.readyState = enums_1.ReadyState.Done;
          _dom.cleanup(script);
          if (!_this._finished) {
            var responseOptions_1 = new base_response_options_1.ResponseOptions({
              body: JSONP_ERR_NO_CALLBACK,
              type: enums_1.ResponseType.Error,
              url: url
            });
            if (lang_1.isPresent(baseResponseOptions)) {
              responseOptions_1 = baseResponseOptions.merge(responseOptions_1);
            }
            responseObserver.error(new static_response_1.Response(responseOptions_1));
            return;
          }
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: _this._responseData,
            url: url
          });
          if (lang_1.isPresent(_this.baseResponseOptions)) {
            responseOptions = _this.baseResponseOptions.merge(responseOptions);
          }
          responseObserver.next(new static_response_1.Response(responseOptions));
          responseObserver.complete();
        };
        var onError = function (error) {
          if (_this.readyState === enums_1.ReadyState.Cancelled) return;
          _this.readyState = enums_1.ReadyState.Done;
          _dom.cleanup(script);
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: error.message,
            type: enums_1.ResponseType.Error
          });
          if (lang_1.isPresent(baseResponseOptions)) {
            responseOptions = baseResponseOptions.merge(responseOptions);
          }
          responseObserver.error(new static_response_1.Response(responseOptions));
        };
        script.addEventListener('load', onLoad);
        script.addEventListener('error', onError);
        _dom.send(script);
        return function () {
          _this.readyState = enums_1.ReadyState.Cancelled;
          script.removeEventListener('load', onLoad);
          script.removeEventListener('error', onError);
          if (lang_1.isPresent(script)) {
            _this._dom.cleanup(script);
          }
        };
      });
    }
    JSONPConnection_.prototype.finished = function (data) {
      this._finished = true;
      this._dom.removeConnection(this._id);
      if (this.readyState === enums_1.ReadyState.Cancelled) return;
      this._responseData = data;
    };
    return JSONPConnection_;
  }(JSONPConnection);
  exports.JSONPConnection_ = JSONPConnection_;
  var JSONPBackend = function (_super) {
    __extends(JSONPBackend, _super);
    function JSONPBackend() {
      _super.apply(this, arguments);
    }
    return JSONPBackend;
  }(interfaces_1.ConnectionBackend);
  exports.JSONPBackend = JSONPBackend;
  var JSONPBackend_ = function (_super) {
    __extends(JSONPBackend_, _super);
    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {
      _super.call(this);
      this._browserJSONP = _browserJSONP;
      this._baseResponseOptions = _baseResponseOptions;
    }
    JSONPBackend_.prototype.createConnection = function (request) {
      return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);
    };
    JSONPBackend_.decorators = [{ type: core_1.Injectable }];
    JSONPBackend_.ctorParameters = [{ type: browser_jsonp_1.BrowserJsonp }, { type: base_response_options_1.ResponseOptions }];
    return JSONPBackend_;
  }(JSONPBackend);
  exports.JSONPBackend_ = JSONPBackend_;
  return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1/src/backends/browser_xhr.js", ["npm:@angular/core@2.0.0-rc.1.js"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
    var BrowserXhr = function () {
        function BrowserXhr() {}
        BrowserXhr.prototype.build = function () {
            return new XMLHttpRequest();
        };
        BrowserXhr.decorators = [{ type: core_1.Injectable }];
        BrowserXhr.ctorParameters = [];
        return BrowserXhr;
    }();
    exports.BrowserXhr = BrowserXhr;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/backends/browser_jsonp.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var _nextRequestId = 0;
  exports.JSONP_HOME = '__ng_jsonp__';
  var _jsonpConnections = null;
  function _getJsonpConnections() {
    if (_jsonpConnections === null) {
      _jsonpConnections = lang_1.global[exports.JSONP_HOME] = {};
    }
    return _jsonpConnections;
  }
  var BrowserJsonp = function () {
    function BrowserJsonp() {}
    BrowserJsonp.prototype.build = function (url) {
      var node = document.createElement('script');
      node.src = url;
      return node;
    };
    BrowserJsonp.prototype.nextRequestID = function () {
      return "__req" + _nextRequestId++;
    };
    BrowserJsonp.prototype.requestCallback = function (id) {
      return exports.JSONP_HOME + "." + id + ".finished";
    };
    BrowserJsonp.prototype.exposeConnection = function (id, connection) {
      var connections = _getJsonpConnections();
      connections[id] = connection;
    };
    BrowserJsonp.prototype.removeConnection = function (id) {
      var connections = _getJsonpConnections();
      connections[id] = null;
    };
    BrowserJsonp.prototype.send = function (node) {
      document.body.appendChild(node);
    };
    BrowserJsonp.prototype.cleanup = function (node) {
      if (node.parentNode) {
        node.parentNode.removeChild(node);
      }
    };
    BrowserJsonp.decorators = [{ type: core_1.Injectable }];
    return BrowserJsonp;
  }();
  exports.BrowserJsonp = BrowserJsonp;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/base_request_options.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/headers.js', 'npm:@angular/http@2.0.0-rc.1/src/enums.js', 'npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/url_search_params.js', 'npm:@angular/http@2.0.0-rc.1/src/http_utils.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var headers_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/headers.js');
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var url_search_params_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/url_search_params.js');
  var http_utils_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/http_utils.js');
  var RequestOptions = function () {
    function RequestOptions(_a) {
      var _b = _a === void 0 ? {} : _a,
          method = _b.method,
          headers = _b.headers,
          body = _b.body,
          url = _b.url,
          search = _b.search;
      this.method = lang_1.isPresent(method) ? http_utils_1.normalizeMethodName(method) : null;
      this.headers = lang_1.isPresent(headers) ? headers : null;
      this.body = lang_1.isPresent(body) ? body : null;
      this.url = lang_1.isPresent(url) ? url : null;
      this.search = lang_1.isPresent(search) ? lang_1.isString(search) ? new url_search_params_1.URLSearchParams(search) : search : null;
    }
    RequestOptions.prototype.merge = function (options) {
      return new RequestOptions({
        method: lang_1.isPresent(options) && lang_1.isPresent(options.method) ? options.method : this.method,
        headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,
        body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,
        url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,
        search: lang_1.isPresent(options) && lang_1.isPresent(options.search) ? lang_1.isString(options.search) ? new url_search_params_1.URLSearchParams(options.search) : options.search.clone() : this.search
      });
    };
    return RequestOptions;
  }();
  exports.RequestOptions = RequestOptions;
  var BaseRequestOptions = function (_super) {
    __extends(BaseRequestOptions, _super);
    function BaseRequestOptions() {
      _super.call(this, {
        method: enums_1.RequestMethod.Get,
        headers: new headers_1.Headers()
      });
    }
    BaseRequestOptions.decorators = [{ type: core_1.Injectable }];
    BaseRequestOptions.ctorParameters = [];
    return BaseRequestOptions;
  }(RequestOptions);
  exports.BaseRequestOptions = BaseRequestOptions;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/base_response_options.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/headers.js', 'npm:@angular/http@2.0.0-rc.1/src/enums.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var headers_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/headers.js');
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  var ResponseOptions = function () {
    function ResponseOptions(_a) {
      var _b = _a === void 0 ? {} : _a,
          body = _b.body,
          status = _b.status,
          headers = _b.headers,
          statusText = _b.statusText,
          type = _b.type,
          url = _b.url;
      this.body = lang_1.isPresent(body) ? body : null;
      this.status = lang_1.isPresent(status) ? status : null;
      this.headers = lang_1.isPresent(headers) ? headers : null;
      this.statusText = lang_1.isPresent(statusText) ? statusText : null;
      this.type = lang_1.isPresent(type) ? type : null;
      this.url = lang_1.isPresent(url) ? url : null;
    }
    ResponseOptions.prototype.merge = function (options) {
      return new ResponseOptions({
        body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,
        status: lang_1.isPresent(options) && lang_1.isPresent(options.status) ? options.status : this.status,
        headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,
        statusText: lang_1.isPresent(options) && lang_1.isPresent(options.statusText) ? options.statusText : this.statusText,
        type: lang_1.isPresent(options) && lang_1.isPresent(options.type) ? options.type : this.type,
        url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url
      });
    };
    return ResponseOptions;
  }();
  exports.ResponseOptions = ResponseOptions;
  var BaseResponseOptions = function (_super) {
    __extends(BaseResponseOptions, _super);
    function BaseResponseOptions() {
      _super.call(this, {
        status: 200,
        statusText: 'Ok',
        type: enums_1.ResponseType.Default,
        headers: new headers_1.Headers()
      });
    }
    BaseResponseOptions.decorators = [{ type: core_1.Injectable }];
    BaseResponseOptions.ctorParameters = [];
    return BaseResponseOptions;
  }(ResponseOptions);
  exports.BaseResponseOptions = BaseResponseOptions;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/static_request.js', ['npm:@angular/http@2.0.0-rc.1/src/headers.js', 'npm:@angular/http@2.0.0-rc.1/src/http_utils.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var headers_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/headers.js');
  var http_utils_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/http_utils.js');
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var Request = function () {
    function Request(requestOptions) {
      var url = requestOptions.url;
      this.url = requestOptions.url;
      if (lang_1.isPresent(requestOptions.search)) {
        var search = requestOptions.search.toString();
        if (search.length > 0) {
          var prefix = '?';
          if (lang_1.StringWrapper.contains(this.url, '?')) {
            prefix = this.url[this.url.length - 1] == '&' ? '' : '&';
          }
          this.url = url + prefix + search;
        }
      }
      this._body = requestOptions.body;
      this.method = http_utils_1.normalizeMethodName(requestOptions.method);
      this.headers = new headers_1.Headers(requestOptions.headers);
    }
    Request.prototype.text = function () {
      return lang_1.isPresent(this._body) ? this._body.toString() : '';
    };
    return Request;
  }();
  exports.Request = Request;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/http_utils.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/enums.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  var exceptions_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js');
  function normalizeMethodName(method) {
    if (lang_1.isString(method)) {
      var originalMethod = method;
      method = method.replace(/(\w)(\w*)/g, function (g0, g1, g2) {
        return g1.toUpperCase() + g2.toLowerCase();
      });
      method = enums_1.RequestMethod[method];
      if (typeof method !== 'number') throw exceptions_1.makeTypeError("Invalid request method. The method \"" + originalMethod + "\" is not supported.");
    }
    return method;
  }
  exports.normalizeMethodName = normalizeMethodName;
  exports.isSuccess = function (status) {
    return status >= 200 && status < 300;
  };
  function getResponseURL(xhr) {
    if ('responseURL' in xhr) {
      return xhr.responseURL;
    }
    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
      return xhr.getResponseHeader('X-Request-URL');
    }
    return;
  }
  exports.getResponseURL = getResponseURL;
  var lang_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  exports.isJsObject = lang_2.isJsObject;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/static_response.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/http@2.0.0-rc.1/src/http_utils.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js');
  var http_utils_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/http_utils.js');
  var Response = function () {
    function Response(responseOptions) {
      this._body = responseOptions.body;
      this.status = responseOptions.status;
      this.ok = this.status >= 200 && this.status <= 299;
      this.statusText = responseOptions.statusText;
      this.headers = responseOptions.headers;
      this.type = responseOptions.type;
      this.url = responseOptions.url;
    }
    Response.prototype.blob = function () {
      throw new exceptions_1.BaseException('"blob()" method not implemented on Response superclass');
    };
    Response.prototype.json = function () {
      var jsonResponse;
      if (http_utils_1.isJsObject(this._body)) {
        jsonResponse = this._body;
      } else if (lang_1.isString(this._body)) {
        jsonResponse = lang_1.Json.parse(this._body);
      }
      return jsonResponse;
    };
    Response.prototype.text = function () {
      return this._body.toString();
    };
    Response.prototype.arrayBuffer = function () {
      throw new exceptions_1.BaseException('"arrayBuffer()" method not implemented on Response superclass');
    };
    return Response;
  }();
  exports.Response = Response;
  return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1/src/interfaces.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /**
   * Abstract class from which real backends are derived.
   *
   * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given
   * {@link Request}.
   */

  var define,
      global = this || self,
      GLOBAL = global;
  var ConnectionBackend = function () {
    function ConnectionBackend() {}
    return ConnectionBackend;
  }();
  exports.ConnectionBackend = ConnectionBackend;
  /**
   * Abstract class from which real connections are derived.
   */
  var Connection = function () {
    function Connection() {}
    return Connection;
  }();
  exports.Connection = Connection;
  

  return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1/src/facade/base_wrapped_exception.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
    * A base class for the WrappedException that can be used to identify
    * a WrappedException from ExceptionHandler without adding circular
    * dependency.
    */
    var BaseWrappedException = function (_super) {
        __extends(BaseWrappedException, _super);
        function BaseWrappedException(message) {
            _super.call(this, message);
        }
        Object.defineProperty(BaseWrappedException.prototype, "wrapperMessage", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "wrapperStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalException", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "context", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "message", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        return BaseWrappedException;
    }(Error);
    exports.BaseWrappedException = BaseWrappedException;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/facade/exception_handler.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var base_wrapped_exception_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var collection_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/collection.js');
  var _ArrayLogger = function () {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function () {};
    ;
    return _ArrayLogger;
  }();
  var ExceptionHandler = function () {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException) throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function (exception) {
      return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function (exception) {
      try {
        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception.originalException;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  }();
  exports.ExceptionHandler = ExceptionHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/exception_handler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var base_wrapped_exception_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var exception_handler_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exception_handler.js');
  var exception_handler_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exception_handler.js');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = function (_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = new Error(message).stack;
    }
    BaseException.prototype.toString = function () {
      return this.message;
    };
    return BaseException;
  }(Error);
  exports.BaseException = BaseException;
  var WrappedException = function (_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = new Error(_wrapperMessage).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function () {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function () {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function () {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function () {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function () {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function () {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function () {
      return this.message;
    };
    return WrappedException;
  }(base_wrapped_exception_1.BaseWrappedException);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/headers.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/collection.js');
  var Headers = function () {
    function Headers(headers) {
      var _this = this;
      if (headers instanceof Headers) {
        this._headersMap = headers._headersMap;
        return;
      }
      this._headersMap = new collection_1.Map();
      if (lang_1.isBlank(headers)) {
        return;
      }
      collection_1.StringMapWrapper.forEach(headers, function (v, k) {
        _this._headersMap.set(k, collection_1.isListLikeIterable(v) ? v : [v]);
      });
    }
    Headers.fromResponseHeaderString = function (headersString) {
      return headersString.trim().split('\n').map(function (val) {
        return val.split(':');
      }).map(function (_a) {
        var key = _a[0],
            parts = _a.slice(1);
        return [key.trim(), parts.join(':').trim()];
      }).reduce(function (headers, _a) {
        var key = _a[0],
            value = _a[1];
        return !headers.set(key, value) && headers;
      }, new Headers());
    };
    Headers.prototype.append = function (name, value) {
      var mapName = this._headersMap.get(name);
      var list = collection_1.isListLikeIterable(mapName) ? mapName : [];
      list.push(value);
      this._headersMap.set(name, list);
    };
    Headers.prototype.delete = function (name) {
      this._headersMap.delete(name);
    };
    Headers.prototype.forEach = function (fn) {
      this._headersMap.forEach(fn);
    };
    Headers.prototype.get = function (header) {
      return collection_1.ListWrapper.first(this._headersMap.get(header));
    };
    Headers.prototype.has = function (header) {
      return this._headersMap.has(header);
    };
    Headers.prototype.keys = function () {
      return collection_1.MapWrapper.keys(this._headersMap);
    };
    Headers.prototype.set = function (header, value) {
      var list = [];
      if (collection_1.isListLikeIterable(value)) {
        var pushValue = value.join(',');
        list.push(pushValue);
      } else {
        list.push(value);
      }
      this._headersMap.set(header, list);
    };
    Headers.prototype.values = function () {
      return collection_1.MapWrapper.values(this._headersMap);
    };
    Headers.prototype.toJSON = function () {
      var serializableHeaders = {};
      this._headersMap.forEach(function (values, name) {
        var list = [];
        collection_1.iterateListLike(values, function (val) {
          return list = collection_1.ListWrapper.concat(list, val.split(','));
        });
        serializableHeaders[name] = list;
      });
      return serializableHeaders;
    };
    Headers.prototype.getAll = function (header) {
      var headers = this._headersMap.get(header);
      return collection_1.isListLikeIterable(headers) ? headers : [];
    };
    Headers.prototype.entries = function () {
      throw new exceptions_1.BaseException('"entries" method is not implemented on Headers class');
    };
    return Headers;
  }();
  exports.Headers = Headers;
  return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1/src/enums.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * Supported http methods.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    (function (RequestMethod) {
        RequestMethod[RequestMethod["Get"] = 0] = "Get";
        RequestMethod[RequestMethod["Post"] = 1] = "Post";
        RequestMethod[RequestMethod["Put"] = 2] = "Put";
        RequestMethod[RequestMethod["Delete"] = 3] = "Delete";
        RequestMethod[RequestMethod["Options"] = 4] = "Options";
        RequestMethod[RequestMethod["Head"] = 5] = "Head";
        RequestMethod[RequestMethod["Patch"] = 6] = "Patch";
    })(exports.RequestMethod || (exports.RequestMethod = {}));
    var RequestMethod = exports.RequestMethod;
    /**
     * All possible states in which a connection can be, based on
     * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an
     * additional "CANCELLED" state.
     */
    (function (ReadyState) {
        ReadyState[ReadyState["Unsent"] = 0] = "Unsent";
        ReadyState[ReadyState["Open"] = 1] = "Open";
        ReadyState[ReadyState["HeadersReceived"] = 2] = "HeadersReceived";
        ReadyState[ReadyState["Loading"] = 3] = "Loading";
        ReadyState[ReadyState["Done"] = 4] = "Done";
        ReadyState[ReadyState["Cancelled"] = 5] = "Cancelled";
    })(exports.ReadyState || (exports.ReadyState = {}));
    var ReadyState = exports.ReadyState;
    /**
     * Acceptable response types to be associated with a {@link Response}, based on
     * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.
     */
    (function (ResponseType) {
        ResponseType[ResponseType["Basic"] = 0] = "Basic";
        ResponseType[ResponseType["Cors"] = 1] = "Cors";
        ResponseType[ResponseType["Default"] = 2] = "Default";
        ResponseType[ResponseType["Error"] = 3] = "Error";
        ResponseType[ResponseType["Opaque"] = 4] = "Opaque";
    })(exports.ResponseType || (exports.ResponseType = {}));
    var ResponseType = exports.ResponseType;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1/src/facade/collection.js", ["npm:@angular/http@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/http@2.0.0-rc.1/src/facade/lang.js");
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = function () {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  }();
  var createMapFromMap = function () {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function (v, k) {
        map.set(k, v);
      });
      return map;
    };
  }();
  var _clearValues = function () {
    if (new exports.Map().keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!(k = keyIterator.next()).done) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function (v, k) {
          m.set(k, null);
        });
      };
    }
  }();
  var _arrayFromMap = function () {
    try {
      if (new exports.Map().values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function (v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  }();
  var MapWrapper = function () {
    function MapWrapper() {}
    MapWrapper.clone = function (m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function (stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function (m) {
      var r = {};
      m.forEach(function (v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function (pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function (m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function (m) {
      return m;
    };
    MapWrapper.keys = function (m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function (m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  }();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = function () {
    function StringMapWrapper() {}
    StringMapWrapper.create = function () {
      return {};
    };
    StringMapWrapper.contains = function (map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function (map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function (map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function (map) {
      return Object.keys(map);
    };
    StringMapWrapper.values = function (map) {
      return Object.keys(map).reduce(function (r, a) {
        r.push(map[a]);
        return r;
      }, []);
    };
    StringMapWrapper.isEmpty = function (map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function (map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function (map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function (m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function (m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  }();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = function () {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function (size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function (size) {
      return new Array(size);
    };
    ListWrapper.clone = function (array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function (array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function (array) {
      if (!array) return null;
      return array[0];
    };
    ListWrapper.last = function (array) {
      if (!array || array.length == 0) return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function (array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function (list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function (array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function (a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function (list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function (list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function (list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function (list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function (list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function (list) {
      return list.length == 0;
    };
    ListWrapper.fill = function (list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function (a, b) {
      if (a.length != b.length) return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    };
    ListWrapper.slice = function (l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function (l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function (l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function (l) {
      return l.toString();
    };
    ListWrapper.toJSON = function (l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function (list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    ListWrapper.flatten = function (list) {
      var target = [];
      _flattenArray(list, target);
      return target;
    };
    ListWrapper.addAll = function (list, source) {
      for (var i = 0; i < source.length; i++) {
        list.push(source[i]);
      }
    };
    return ListWrapper;
  }();
  exports.ListWrapper = ListWrapper;
  function _flattenArray(source, target) {
    if (lang_1.isPresent(source)) {
      for (var i = 0; i < source.length; i++) {
        var item = source[i];
        if (lang_1.isArray(item)) {
          _flattenArray(item, target);
        } else {
          target.push(item);
        }
      }
    }
    return target;
  }
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj)) return false;
    return lang_1.isArray(obj) || !(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj;
  }
  exports.isListLikeIterable = isListLikeIterable;
  function areIterablesEqual(a, b, comparator) {
    var iterator1 = a[lang_1.getSymbolIterator()]();
    var iterator2 = b[lang_1.getSymbolIterator()]();
    while (true) {
      var item1 = iterator1.next();
      var item2 = iterator2.next();
      if (item1.done && item2.done) return true;
      if (item1.done || item2.done) return false;
      if (!comparator(item1.value, item2.value)) return false;
    }
  }
  exports.areIterablesEqual = areIterablesEqual;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!(item = iterator.next()).done) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = function () {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  }();
  var SetWrapper = function () {
    function SetWrapper() {}
    SetWrapper.createFromList = function (lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function (s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function (m, k) {
      m.delete(k);
    };
    return SetWrapper;
  }();
  exports.SetWrapper = SetWrapper;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/src/url_search_params.js', ['npm:@angular/http@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/http@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/facade/collection.js');
  function paramParser(rawParams) {
    if (rawParams === void 0) {
      rawParams = '';
    }
    var map = new collection_1.Map();
    if (rawParams.length > 0) {
      var params = rawParams.split('&');
      params.forEach(function (param) {
        var split = param.split('=');
        var key = split[0];
        var val = split[1];
        var list = lang_1.isPresent(map.get(key)) ? map.get(key) : [];
        list.push(val);
        map.set(key, list);
      });
    }
    return map;
  }
  var URLSearchParams = function () {
    function URLSearchParams(rawParams) {
      if (rawParams === void 0) {
        rawParams = '';
      }
      this.rawParams = rawParams;
      this.paramsMap = paramParser(rawParams);
    }
    URLSearchParams.prototype.clone = function () {
      var clone = new URLSearchParams();
      clone.appendAll(this);
      return clone;
    };
    URLSearchParams.prototype.has = function (param) {
      return this.paramsMap.has(param);
    };
    URLSearchParams.prototype.get = function (param) {
      var storedParam = this.paramsMap.get(param);
      if (collection_1.isListLikeIterable(storedParam)) {
        return collection_1.ListWrapper.first(storedParam);
      } else {
        return null;
      }
    };
    URLSearchParams.prototype.getAll = function (param) {
      var mapParam = this.paramsMap.get(param);
      return lang_1.isPresent(mapParam) ? mapParam : [];
    };
    URLSearchParams.prototype.set = function (param, val) {
      var mapParam = this.paramsMap.get(param);
      var list = lang_1.isPresent(mapParam) ? mapParam : [];
      collection_1.ListWrapper.clear(list);
      list.push(val);
      this.paramsMap.set(param, list);
    };
    URLSearchParams.prototype.setAll = function (searchParams) {
      var _this = this;
      searchParams.paramsMap.forEach(function (value, param) {
        var mapParam = _this.paramsMap.get(param);
        var list = lang_1.isPresent(mapParam) ? mapParam : [];
        collection_1.ListWrapper.clear(list);
        list.push(value[0]);
        _this.paramsMap.set(param, list);
      });
    };
    URLSearchParams.prototype.append = function (param, val) {
      var mapParam = this.paramsMap.get(param);
      var list = lang_1.isPresent(mapParam) ? mapParam : [];
      list.push(val);
      this.paramsMap.set(param, list);
    };
    URLSearchParams.prototype.appendAll = function (searchParams) {
      var _this = this;
      searchParams.paramsMap.forEach(function (value, param) {
        var mapParam = _this.paramsMap.get(param);
        var list = lang_1.isPresent(mapParam) ? mapParam : [];
        for (var i = 0; i < value.length; ++i) {
          list.push(value[i]);
        }
        _this.paramsMap.set(param, list);
      });
    };
    URLSearchParams.prototype.replaceAll = function (searchParams) {
      var _this = this;
      searchParams.paramsMap.forEach(function (value, param) {
        var mapParam = _this.paramsMap.get(param);
        var list = lang_1.isPresent(mapParam) ? mapParam : [];
        collection_1.ListWrapper.clear(list);
        for (var i = 0; i < value.length; ++i) {
          list.push(value[i]);
        }
        _this.paramsMap.set(param, list);
      });
    };
    URLSearchParams.prototype.toString = function () {
      var paramsList = [];
      this.paramsMap.forEach(function (values, k) {
        values.forEach(function (v) {
          return paramsList.push(k + '=' + v);
        });
      });
      return paramsList.join('&');
    };
    URLSearchParams.prototype.delete = function (param) {
      this.paramsMap.delete(param);
    };
    return URLSearchParams;
  }();
  exports.URLSearchParams = URLSearchParams;
  return module.exports;
});
System.registerDynamic('npm:@angular/http@2.0.0-rc.1/http.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/http@2.0.0-rc.1/src/http.js', 'npm:@angular/http@2.0.0-rc.1/src/backends/xhr_backend.js', 'npm:@angular/http@2.0.0-rc.1/src/backends/jsonp_backend.js', 'npm:@angular/http@2.0.0-rc.1/src/backends/browser_xhr.js', 'npm:@angular/http@2.0.0-rc.1/src/backends/browser_jsonp.js', 'npm:@angular/http@2.0.0-rc.1/src/base_request_options.js', 'npm:@angular/http@2.0.0-rc.1/src/base_response_options.js', 'npm:@angular/http@2.0.0-rc.1/src/static_request.js', 'npm:@angular/http@2.0.0-rc.1/src/static_response.js', 'npm:@angular/http@2.0.0-rc.1/src/interfaces.js', 'npm:@angular/http@2.0.0-rc.1/src/headers.js', 'npm:@angular/http@2.0.0-rc.1/src/enums.js', 'npm:@angular/http@2.0.0-rc.1/src/url_search_params.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var http_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/http.js');
  var xhr_backend_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/xhr_backend.js');
  var jsonp_backend_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/jsonp_backend.js');
  var browser_xhr_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/browser_xhr.js');
  var browser_jsonp_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/browser_jsonp.js');
  var base_request_options_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_request_options.js');
  var base_response_options_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_response_options.js');
  var static_request_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/static_request.js');
  exports.Request = static_request_1.Request;
  var static_response_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/static_response.js');
  exports.Response = static_response_1.Response;
  var interfaces_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/interfaces.js');
  exports.Connection = interfaces_1.Connection;
  exports.ConnectionBackend = interfaces_1.ConnectionBackend;
  var browser_xhr_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/browser_xhr.js');
  exports.BrowserXhr = browser_xhr_2.BrowserXhr;
  var base_request_options_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_request_options.js');
  exports.BaseRequestOptions = base_request_options_2.BaseRequestOptions;
  exports.RequestOptions = base_request_options_2.RequestOptions;
  var base_response_options_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/base_response_options.js');
  exports.BaseResponseOptions = base_response_options_2.BaseResponseOptions;
  exports.ResponseOptions = base_response_options_2.ResponseOptions;
  var xhr_backend_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/xhr_backend.js');
  exports.XHRBackend = xhr_backend_2.XHRBackend;
  exports.XHRConnection = xhr_backend_2.XHRConnection;
  var jsonp_backend_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/backends/jsonp_backend.js');
  exports.JSONPBackend = jsonp_backend_2.JSONPBackend;
  exports.JSONPConnection = jsonp_backend_2.JSONPConnection;
  var http_2 = $__require('npm:@angular/http@2.0.0-rc.1/src/http.js');
  exports.Http = http_2.Http;
  exports.Jsonp = http_2.Jsonp;
  var headers_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/headers.js');
  exports.Headers = headers_1.Headers;
  var enums_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/enums.js');
  exports.ResponseType = enums_1.ResponseType;
  exports.ReadyState = enums_1.ReadyState;
  exports.RequestMethod = enums_1.RequestMethod;
  var url_search_params_1 = $__require('npm:@angular/http@2.0.0-rc.1/src/url_search_params.js');
  exports.URLSearchParams = url_search_params_1.URLSearchParams;
  exports.HTTP_PROVIDERS = [core_1.provide(http_1.Http, {
    useFactory: function (xhrBackend, requestOptions) {
      return new http_1.Http(xhrBackend, requestOptions);
    },
    deps: [xhr_backend_1.XHRBackend, base_request_options_1.RequestOptions]
  }), browser_xhr_1.BrowserXhr, core_1.provide(base_request_options_1.RequestOptions, { useClass: base_request_options_1.BaseRequestOptions }), core_1.provide(base_response_options_1.ResponseOptions, { useClass: base_response_options_1.BaseResponseOptions }), xhr_backend_1.XHRBackend];
  exports.HTTP_BINDINGS = exports.HTTP_PROVIDERS;
  exports.JSONP_PROVIDERS = [core_1.provide(http_1.Jsonp, {
    useFactory: function (jsonpBackend, requestOptions) {
      return new http_1.Jsonp(jsonpBackend, requestOptions);
    },
    deps: [jsonp_backend_1.JSONPBackend, base_request_options_1.RequestOptions]
  }), browser_jsonp_1.BrowserJsonp, core_1.provide(base_request_options_1.RequestOptions, { useClass: base_request_options_1.BaseRequestOptions }), core_1.provide(base_response_options_1.ResponseOptions, { useClass: base_response_options_1.BaseResponseOptions }), core_1.provide(jsonp_backend_1.JSONPBackend, { useClass: jsonp_backend_1.JSONPBackend_ })];
  exports.JSON_BINDINGS = exports.JSONP_PROVIDERS;
  return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1/index.js", ["npm:@angular/http@2.0.0-rc.1/http.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("npm:@angular/http@2.0.0-rc.1/http.js"));
  return module.exports;
});
System.registerDynamic("npm:@angular/http@2.0.0-rc.1.js", ["npm:@angular/http@2.0.0-rc.1/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@angular/http@2.0.0-rc.1/index.js");
  return module.exports;
});
System.register("src/services/slidesHelper.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:rxjs@5.0.0-beta.6/Observable.js", "npm:rxjs@5.0.0-beta.6/operator/zip.js", "npm:rxjs@5.0.0-beta.6/add/observable/range.js", "npm:rxjs@5.0.0-beta.6/add/observable/from.js", "npm:rxjs@5.0.0-beta.6/add/operator/mergeMap.js", "npm:rxjs@5.0.0-beta.6/add/operator/toArray.js", "npm:rxjs@5.0.0-beta.6/add/operator/concat.js", "npm:@angular/router-deprecated@2.0.0-rc.1.js", "npm:@angular/http@2.0.0-rc.1.js"], function (exports_1, context_1) {
    "use strict";

    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, Observable_1, zip_1, router_deprecated_1, http_1, SlidesHelper;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (Observable_1_1) {
            Observable_1 = Observable_1_1;
        }, function (zip_1_1) {
            zip_1 = zip_1_1;
        }, function (_1) {}, function (_2) {}, function (_3) {}, function (_4) {}, function (_5) {}, function (router_deprecated_1_1) {
            router_deprecated_1 = router_deprecated_1_1;
        }, function (http_1_1) {
            http_1 = http_1_1;
        }],
        execute: function () {
            // This service is used in the application for all navigation
            // purpose (router service should not be used outside of this service)
            // More specifically, the service does the following:
            // -> configure the routes based on the data/slides.json file (have a look a configureSlide method)
            // -> Get the route definitions if needed (observe the slidesObservable stream to do so)
            // -> Observe that a slide has been accessed successfully (observe the slideChangedObservable stream to do so)
            // -> Navigate to a given slide (use the goto method to do so)
            // -> Navigate to the preivous or next slide (use the previousSlide and nextSlide methods to do so)
            SlidesHelper = function () {
                function SlidesHelper(http, router) {
                    var _this = this;
                    this.http = http;
                    this.router = router;
                    this.routesConfig = new Array();
                    // Subscribe to this in order to be notified when the routes are configured and eventually
                    // to retrieve the routes definition
                    this.slidesObservable = new core_1.EventEmitter();
                    this.configureSlides = function () {
                        //routeDefsObs is a stream containing the array of route definitions
                        // ie: Observable< Array<RouteDefinition> >
                        var routeDefsObs = _this.http.get('data/slides.json').flatMap(function (response) {
                            var data = response.json();
                            var slidesDefs = data.slides;
                            return zip_1.zipStatic(
                            // Create a stream from integer: (0, 1, ..., slidesDefs.length )
                            Observable_1.Observable.range(0, slidesDefs.length),
                            // Create a stream from the array of slides ( {slide1 data}, {slide2 data}, ... )
                            Observable_1.Observable.from(slidesDefs),
                            // Call this call back by associating data from the first and second streams to generate our new observable:
                            // ( callback(0, {slide1 data}), callback(1, {slide1 data}), ...)
                            function (index, slideDef) {
                                var conventions = _this.getConventionInfos(index, slideDef);
                                var res = new router_deprecated_1.AsyncRoute({
                                    path: conventions.path,
                                    loader: function () {
                                        return new Promise(function (resolve, reject) {
                                            System.import(data.mainPath + slideDef.path).then(function (imported) {
                                                resolve(imported[conventions.moduleName]);
                                            });
                                        });
                                    },
                                    name: conventions.name,
                                    useAsDefault: index === 0
                                });
                                res.slidePath = slideDef.path;
                                return res;
                            });
                        }).toArray();
                        // The route definitions array is passed to the slidesObservable stream
                        // So the slidesObservable stream will just contains the array of route
                        // definitions and notify every observer which subscribed to id
                        routeDefsObs.subscribe(_this.slidesObservable);
                    };
                    this.getModuleNameFromSlidePath = function (slidePath) {
                        var lastIndex = slidePath.lastIndexOf('/');
                        return slidePath.substring(lastIndex + 1, lastIndex + 2).toUpperCase() + slidePath.substring(lastIndex + 2);
                    };
                    // Get RouteDefinitions values based on slides.json data with help of some conventions
                    this.getConventionInfos = function (i, slideDef) {
                        return {
                            moduleName: slideDef ? _this.getModuleNameFromSlidePath(slideDef.path) : undefined,
                            name: 'Slide' + (i + 1),
                            path: '/slide' + (i + 1)
                        };
                    };
                    // Use the router service to go to a specific slide based on its index
                    this.goto = function (routeIdx) {
                        var componentName = _this.routesConfig[routeIdx].name;
                        _this.router.navigate(['./' + componentName, {}]);
                    };
                    // Go to the previous slide
                    this.previousSlide = function () {
                        var isMin = _this.currentSlideIndex === 0;
                        !isMin && _this.goto(_this.currentSlideIndex - 1);
                    };
                    // Go to the next slide
                    this.nextSlide = function () {
                        var isMax = _this.currentSlideIndex === _this.routesConfig.length - 2;
                        !isMax && _this.goto(_this.currentSlideIndex + 1);
                    };
                    this.slideChangedObservable = new core_1.EventEmitter();
                    // Listen for route changes in oder 
                    // -> set the current index (slide1 means index = 0, etc )
                    // -> to emit an event on the slideChangedObservable stream
                    router.subscribe(function (routePath) {
                        // console.log('new route: ' + routePath);
                        var regex = new RegExp('slide[\\d]+');
                        if (!regex.test(routePath)) {
                            return;
                        }
                        _this.currentSlideIndex = parseInt(routePath.split(new RegExp('slide'))[1]) - 1;
                        _this.slideChangedObservable.next(_this.currentSlideIndex);
                    });
                    // Call the configureSlides method in order to aliment the slidesObservable stream
                    this.configureSlides();
                    // Subscribe the slidesObservable stream in order to configure the router
                    // with the route definitions
                    this.slidesObservable.subscribe(function (routesConfig) {
                        router.config(routesConfig);
                        _this.routesConfig = routesConfig;
                    });
                }
                return SlidesHelper;
            }();
            SlidesHelper = __decorate([core_1.Component({
                providers: [http_1.HTTP_PROVIDERS]
            }), __metadata("design:paramtypes", [http_1.Http, router_deprecated_1.Router])], SlidesHelper);
            exports_1("SlidesHelper", SlidesHelper);
        }
    };
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/map.js', ['npm:rxjs@5.0.0-beta.6/Subscriber.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscriber.js');
  function map(project, thisArg) {
    if (typeof project !== 'function') {
      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }
    return this.lift(new MapOperator(project, thisArg));
  }
  exports.map = map;
  var MapOperator = function () {
    function MapOperator(project, thisArg) {
      this.project = project;
      this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
      return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
  }();
  var MapSubscriber = function (_super) {
    __extends(MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
      _super.call(this, destination);
      this.project = project;
      this.count = 0;
      this.thisArg = thisArg || this;
    }
    MapSubscriber.prototype._next = function (value) {
      var result;
      try {
        result = this.project.call(this.thisArg, value, this.count++);
      } catch (err) {
        this.destination.error(err);
        return;
      }
      this.destination.next(result);
    };
    return MapSubscriber;
  }(Subscriber_1.Subscriber);
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/operator/map.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/operator/map.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var map_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/map.js');
  Observable_1.Observable.prototype.map = map_1.map;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/operator/filter.js", ["npm:rxjs@5.0.0-beta.6/Subscriber.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscriber_1 = $__require("npm:rxjs@5.0.0-beta.6/Subscriber.js");
  function filter(predicate, thisArg) {
    return this.lift(new FilterOperator(predicate, thisArg));
  }
  exports.filter = filter;
  var FilterOperator = function () {
    function FilterOperator(predicate, thisArg) {
      this.predicate = predicate;
      this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
      return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
  }();
  var FilterSubscriber = function (_super) {
    __extends(FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
      _super.call(this, destination);
      this.predicate = predicate;
      this.thisArg = thisArg;
      this.count = 0;
      this.predicate = predicate;
    }
    FilterSubscriber.prototype._next = function (value) {
      var result;
      try {
        result = this.predicate.call(this.thisArg, value, this.count++);
      } catch (err) {
        this.destination.error(err);
        return;
      }
      if (result) {
        this.destination.next(value);
      }
    };
    return FilterSubscriber;
  }(Subscriber_1.Subscriber);
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/add/operator/filter.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/operator/filter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var filter_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/filter.js');
  Observable_1.Observable.prototype.filter = filter_1.filter;
  return module.exports;
});
System.register("src/services/keyupListener.js", ["npm:rxjs@5.0.0-beta.6/Observable.js", "npm:rxjs@5.0.0-beta.6/add/operator/map.js", "npm:rxjs@5.0.0-beta.6/add/operator/filter.js"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var Observable_1, KeyupListener;
    return {
        setters: [function (Observable_1_1) {
            Observable_1 = Observable_1_1;
        }, function (_1) {}, function (_2) {}],
        execute: function () {
            // Create three observable streams to listen respectively
            //  stream1: ( keypress, keypress, keypress)
            //  stream2: stream1.filter(left keypress): (left keypress) 
            //  stream3: stream1.filter(right keypress): (left keypress)
            // This service will be used by: slideMoveLeft and slideMoveRight components
            KeyupListener = function () {
                function KeyupListener() {
                    //Stream which observe all keydown events
                    this.keydownObservable = Observable_1.Observable.fromEvent(document.getElementsByTagName('body')[0], 'keydown').map(function (event) {
                        return event.keyCode;
                    });
                    //Filters left arrow keydown events
                    this.leftObservable = this.keydownObservable.filter(function (keyCode) {
                        return keyCode == 37;
                    });
                    // Filters right arrow keydown events
                    this.rightObservable = this.keydownObservable.filter(function (keyCode) {
                        return keyCode == 39;
                    });
                }
                return KeyupListener;
            }();
            exports_1("KeyupListener", KeyupListener);
        }
    };
});
System.register("src/services/slideMove.js", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var SlideMove;
    return {
        setters: [],
        execute: function () {
            // IS NOT A SERVICE
            // Abstract class for SlideMoveLeft and SlideMoveRight components
            // See their comments for details
            SlideMove = function () {
                function SlideMove(slidesHelper, keyupListener) {
                    var _this = this;
                    this.label = 'default';
                    // Subscribe to a stream and call the goToSlide method each time
                    // an event is received in this stream
                    this.keyupSubscribe = function () {
                        var that = _this;
                        _this.getObservable().subscribe(function (val) {
                            that.goToSlide();
                        });
                    };
                    this.slidesHelper = slidesHelper;
                    this.keyupListener = keyupListener;
                    this.keyupSubscribe();
                }
                return SlideMove;
            }();
            exports_1("SlideMove", SlideMove);
        }
    };
});
System.register("src/components/slideMove/slideMoveRight.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:rxjs@5.0.0-beta.6/add/observable/fromEvent.js", "src/services/slidesHelper.js", "src/services/keyupListener.js", "src/services/slideMove.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slidesHelper_1, keyupListener_1, slideMove_1, SlideMoveRight;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (_1) {}, function (slidesHelper_1_1) {
            slidesHelper_1 = slidesHelper_1_1;
        }, function (keyupListener_1_1) {
            keyupListener_1 = keyupListener_1_1;
        }, function (slideMove_1_1) {
            slideMove_1 = slideMove_1_1;
        }],
        execute: function () {
            // Display a button which can be clicked to navigate to the next slide (see template)
            // Also observe the right arrow keypress to navigate to the next slide
            SlideMoveRight = function (_super) {
                __extends(SlideMoveRight, _super);
                function SlideMoveRight(slidesHelper, keyupListener) {
                    _super.call(this, slidesHelper, keyupListener);
                    this.label = 'right';
                }
                // Return the stream which has to be observed and which corresponds
                // to the right keypress
                SlideMoveRight.prototype.getObservable = function () {
                    return this.keyupListener.rightObservable;
                };
                //Navigate to next slide
                SlideMoveRight.prototype.goToSlide = function () {
                    this.slidesHelper.nextSlide();
                };
                return SlideMoveRight;
            }(slideMove_1.SlideMove);
            SlideMoveRight = __decorate([core_1.Component({
                selector: 'slide-move-right',
                templateUrl: 'src/components/slideMove/slideMove.html',
                directives: []
            }), __metadata("design:paramtypes", [slidesHelper_1.SlidesHelper, keyupListener_1.KeyupListener])], SlideMoveRight);
            exports_1("SlideMoveRight", SlideMoveRight);
        }
    };
});
System.register("src/components/menu/menu.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:@angular/common@2.0.0-rc.1.js", "src/services/slidesDefs.js", "src/services/slidesHelper.js", "src/components/slideLink/slideLink.js", "src/components/slideMove/slideMoveLeft.js", "src/components/slideMove/slideMoveRight.js"], function (exports_1, context_1) {
    "use strict";

    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, common_1, slidesDefs_1, slidesHelper_1, slideLink_1, slideMoveLeft_1, slideMoveRight_1, Menu;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (common_1_1) {
            common_1 = common_1_1;
        }, function (slidesDefs_1_1) {
            slidesDefs_1 = slidesDefs_1_1;
        }, function (slidesHelper_1_1) {
            slidesHelper_1 = slidesHelper_1_1;
        }, function (slideLink_1_1) {
            slideLink_1 = slideLink_1_1;
        }, function (slideMoveLeft_1_1) {
            slideMoveLeft_1 = slideMoveLeft_1_1;
        }, function (slideMoveRight_1_1) {
            slideMoveRight_1 = slideMoveRight_1_1;
        }],
        execute: function () {
            // The menu allows both to  display a progress bar depending on the current slide
            // and allows to navigate to a slide by clicking on the progress bar
            Menu = function () {
                function Menu(slidesHelper) {
                    var _this = this;
                    // The current slide index (so it's easy to set previous slide links
                    // in red and next slide links in red in the progress bar)
                    this.slidesIndex = 0;
                    //Navigate to the given slide based on its index, provided by the link
                    // which has been clicked
                    this.goto = function (routeIndex) {
                        _this.slidesHelper.goto(routeIndex);
                        return false;
                    };
                    // Use the progress-done class on links untill current index, and progress-todo for
                    // links after current index
                    this.getProgressClass = function (nextIndex) {
                        return nextIndex <= _this.slidesIndex ? "progress-done" : "progress-todo";
                    };
                    this.slidesHelper = slidesHelper;
                    this.links = new Array();
                    // Listen for route definitions and create links based on route definitions
                    this.slidesHelper.slidesObservable.subscribe(function (routesDefs) {
                        routesDefs.slice(0, routesDefs.length - 1).forEach(function (routeDef, index) {
                            _this.links.push(slidesDefs_1.SlideLinkModel.fromRouteAndIndex(routeDef, index));
                        });
                    });
                    // Listen for route changes and then update the index (so the green part / red part is updated)
                    this.slidesHelper.slideChangedObservable.subscribe(function (idx) {
                        _this.slidesIndex = idx;
                    });
                }
                return Menu;
            }();
            Menu = __decorate([core_1.Component({
                selector: 'menu',
                styleUrls: ['src/components/menu/menu.css'],
                templateUrl: 'src/components/menu/menu.html',
                directives: [common_1.NgFor, slideLink_1.SlideLink, slideMoveLeft_1.SlideMoveLeft, slideMoveRight_1.SlideMoveRight]
            }), __metadata("design:paramtypes", [slidesHelper_1.SlidesHelper])], Menu);
            exports_1("Menu", Menu);
        }
    };
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/offline_compiler.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  var _COMPONENT_FACTORY_IDENTIFIER = new compile_metadata_1.CompileIdentifierMetadata({
    name: 'ComponentFactory',
    runtime: core_1.ComponentFactory,
    moduleUrl: util_1.assetUrl('core', 'linker/component_factory')
  });
  var SourceModule = function () {
    function SourceModule(moduleUrl, source) {
      this.moduleUrl = moduleUrl;
      this.source = source;
    }
    return SourceModule;
  }();
  exports.SourceModule = SourceModule;
  var StyleSheetSourceWithImports = function () {
    function StyleSheetSourceWithImports(source, importedUrls) {
      this.source = source;
      this.importedUrls = importedUrls;
    }
    return StyleSheetSourceWithImports;
  }();
  exports.StyleSheetSourceWithImports = StyleSheetSourceWithImports;
  var NormalizedComponentWithViewDirectives = function () {
    function NormalizedComponentWithViewDirectives(component, directives, pipes) {
      this.component = component;
      this.directives = directives;
      this.pipes = pipes;
    }
    return NormalizedComponentWithViewDirectives;
  }();
  exports.NormalizedComponentWithViewDirectives = NormalizedComponentWithViewDirectives;
  var OfflineCompiler = function () {
    function OfflineCompiler(_directiveNormalizer, _templateParser, _styleCompiler, _viewCompiler, _outputEmitter, _xhr) {
      this._directiveNormalizer = _directiveNormalizer;
      this._templateParser = _templateParser;
      this._styleCompiler = _styleCompiler;
      this._viewCompiler = _viewCompiler;
      this._outputEmitter = _outputEmitter;
      this._xhr = _xhr;
    }
    OfflineCompiler.prototype.normalizeDirectiveMetadata = function (directive) {
      return this._directiveNormalizer.normalizeDirective(directive);
    };
    OfflineCompiler.prototype.compileTemplates = function (components) {
      var _this = this;
      if (components.length === 0) {
        throw new exceptions_1.BaseException('No components given');
      }
      var statements = [];
      var exportedVars = [];
      var moduleUrl = _templateModuleUrl(components[0].component);
      components.forEach(function (componentWithDirs) {
        var compMeta = componentWithDirs.component;
        _assertComponent(compMeta);
        var compViewFactoryVar = _this._compileComponent(compMeta, componentWithDirs.directives, componentWithDirs.pipes, statements);
        exportedVars.push(compViewFactoryVar);
        var hostMeta = compile_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);
        var hostViewFactoryVar = _this._compileComponent(hostMeta, [compMeta], [], statements);
        var compFactoryVar = compMeta.type.name + "NgFactory";
        statements.push(o.variable(compFactoryVar).set(o.importExpr(_COMPONENT_FACTORY_IDENTIFIER, [o.importType(compMeta.type)]).instantiate([o.literal(compMeta.selector), o.variable(hostViewFactoryVar), o.importExpr(compMeta.type)], o.importType(_COMPONENT_FACTORY_IDENTIFIER, [o.importType(compMeta.type)], [o.TypeModifier.Const]))).toDeclStmt(null, [o.StmtModifier.Final]));
        exportedVars.push(compFactoryVar);
      });
      return this._codegenSourceModule(moduleUrl, statements, exportedVars);
    };
    OfflineCompiler.prototype.loadAndCompileStylesheet = function (stylesheetUrl, shim, suffix) {
      var _this = this;
      return this._xhr.get(stylesheetUrl).then(function (cssText) {
        var compileResult = _this._styleCompiler.compileStylesheet(stylesheetUrl, cssText, shim);
        var importedUrls = [];
        compileResult.dependencies.forEach(function (dep) {
          importedUrls.push(dep.moduleUrl);
          dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, suffix);
        });
        return new StyleSheetSourceWithImports(_this._codgenStyles(stylesheetUrl, shim, suffix, compileResult), importedUrls);
      });
    };
    OfflineCompiler.prototype._compileComponent = function (compMeta, directives, pipes, targetStatements) {
      var styleResult = this._styleCompiler.compileComponent(compMeta);
      var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, compMeta.type.name);
      var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, o.variable(styleResult.stylesVar), pipes);
      collection_1.ListWrapper.addAll(targetStatements, _resolveStyleStatements(compMeta.type.moduleUrl, styleResult));
      collection_1.ListWrapper.addAll(targetStatements, _resolveViewStatements(viewResult));
      return viewResult.viewFactoryVar;
    };
    OfflineCompiler.prototype._codgenStyles = function (inputUrl, shim, suffix, stylesCompileResult) {
      return this._codegenSourceModule(_stylesModuleUrl(inputUrl, shim, suffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);
    };
    OfflineCompiler.prototype._codegenSourceModule = function (moduleUrl, statements, exportedVars) {
      return new SourceModule(moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));
    };
    return OfflineCompiler;
  }();
  exports.OfflineCompiler = OfflineCompiler;
  function _resolveViewStatements(compileResult) {
    compileResult.dependencies.forEach(function (dep) {
      dep.factoryPlaceholder.moduleUrl = _templateModuleUrl(dep.comp);
    });
    return compileResult.statements;
  }
  function _resolveStyleStatements(containingModuleUrl, compileResult) {
    var containingSuffix = _splitSuffix(containingModuleUrl)[1];
    compileResult.dependencies.forEach(function (dep) {
      dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, containingSuffix);
    });
    return compileResult.statements;
  }
  function _templateModuleUrl(comp) {
    var urlWithSuffix = _splitSuffix(comp.type.moduleUrl);
    return urlWithSuffix[0] + ".ngfactory" + urlWithSuffix[1];
  }
  function _stylesModuleUrl(stylesheetUrl, shim, suffix) {
    return shim ? stylesheetUrl + ".shim" + suffix : "" + stylesheetUrl + suffix;
  }
  function _assertComponent(meta) {
    if (!meta.isComponent) {
      throw new exceptions_1.BaseException("Could not compile '" + meta.type.name + "' because it is not a component.");
    }
  }
  function _splitSuffix(path) {
    var lastDot = path.lastIndexOf('.');
    if (lastDot !== -1) {
      return [path.substring(0, lastDot), path.substring(lastDot)];
    } else {
      return [path, ''];
    }
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/provider_parser.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var template_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var parse_util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js');
  var ProviderError = function (_super) {
    __extends(ProviderError, _super);
    function ProviderError(message, span) {
      _super.call(this, span, message);
    }
    return ProviderError;
  }(parse_util_1.ParseError);
  exports.ProviderError = ProviderError;
  var ProviderViewContext = function () {
    function ProviderViewContext(component, sourceSpan) {
      var _this = this;
      this.component = component;
      this.sourceSpan = sourceSpan;
      this.errors = [];
      this.viewQueries = _getViewQueries(component);
      this.viewProviders = new compile_metadata_1.CompileTokenMap();
      _normalizeProviders(component.viewProviders, sourceSpan, this.errors).forEach(function (provider) {
        if (lang_1.isBlank(_this.viewProviders.get(provider.token))) {
          _this.viewProviders.add(provider.token, true);
        }
      });
    }
    return ProviderViewContext;
  }();
  exports.ProviderViewContext = ProviderViewContext;
  var ProviderElementContext = function () {
    function ProviderElementContext(_viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, _sourceSpan) {
      var _this = this;
      this._viewContext = _viewContext;
      this._parent = _parent;
      this._isViewRoot = _isViewRoot;
      this._directiveAsts = _directiveAsts;
      this._sourceSpan = _sourceSpan;
      this._transformedProviders = new compile_metadata_1.CompileTokenMap();
      this._seenProviders = new compile_metadata_1.CompileTokenMap();
      this._hasViewContainer = false;
      this._attrs = {};
      attrs.forEach(function (attrAst) {
        return _this._attrs[attrAst.name] = attrAst.value;
      });
      var directivesMeta = _directiveAsts.map(function (directiveAst) {
        return directiveAst.directive;
      });
      this._allProviders = _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, _viewContext.errors);
      this._contentQueries = _getContentQueries(directivesMeta);
      var queriedTokens = new compile_metadata_1.CompileTokenMap();
      this._allProviders.values().forEach(function (provider) {
        _this._addQueryReadsTo(provider.token, queriedTokens);
      });
      refs.forEach(function (refAst) {
        _this._addQueryReadsTo(new compile_metadata_1.CompileTokenMetadata({ value: refAst.name }), queriedTokens);
      });
      if (lang_1.isPresent(queriedTokens.get(identifiers_1.identifierToken(identifiers_1.Identifiers.ViewContainerRef)))) {
        this._hasViewContainer = true;
      }
      this._allProviders.values().forEach(function (provider) {
        var eager = provider.eager || lang_1.isPresent(queriedTokens.get(provider.token));
        if (eager) {
          _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);
        }
      });
    }
    ProviderElementContext.prototype.afterElement = function () {
      var _this = this;
      this._allProviders.values().forEach(function (provider) {
        _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);
      });
    };
    Object.defineProperty(ProviderElementContext.prototype, "transformProviders", {
      get: function () {
        return this._transformedProviders.values();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ProviderElementContext.prototype, "transformedDirectiveAsts", {
      get: function () {
        var sortedProviderTypes = this._transformedProviders.values().map(function (provider) {
          return provider.token.identifier;
        });
        var sortedDirectives = collection_1.ListWrapper.clone(this._directiveAsts);
        collection_1.ListWrapper.sort(sortedDirectives, function (dir1, dir2) {
          return sortedProviderTypes.indexOf(dir1.directive.type) - sortedProviderTypes.indexOf(dir2.directive.type);
        });
        return sortedDirectives;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ProviderElementContext.prototype, "transformedHasViewContainer", {
      get: function () {
        return this._hasViewContainer;
      },
      enumerable: true,
      configurable: true
    });
    ProviderElementContext.prototype._addQueryReadsTo = function (token, queryReadTokens) {
      this._getQueriesFor(token).forEach(function (query) {
        var queryReadToken = lang_1.isPresent(query.read) ? query.read : token;
        if (lang_1.isBlank(queryReadTokens.get(queryReadToken))) {
          queryReadTokens.add(queryReadToken, true);
        }
      });
    };
    ProviderElementContext.prototype._getQueriesFor = function (token) {
      var result = [];
      var currentEl = this;
      var distance = 0;
      var queries;
      while (currentEl !== null) {
        queries = currentEl._contentQueries.get(token);
        if (lang_1.isPresent(queries)) {
          collection_1.ListWrapper.addAll(result, queries.filter(function (query) {
            return query.descendants || distance <= 1;
          }));
        }
        if (currentEl._directiveAsts.length > 0) {
          distance++;
        }
        currentEl = currentEl._parent;
      }
      queries = this._viewContext.viewQueries.get(token);
      if (lang_1.isPresent(queries)) {
        collection_1.ListWrapper.addAll(result, queries);
      }
      return result;
    };
    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {
      var _this = this;
      var resolvedProvider = this._allProviders.get(token);
      if (lang_1.isBlank(resolvedProvider) || (requestingProviderType === template_ast_1.ProviderAstType.Directive || requestingProviderType === template_ast_1.ProviderAstType.PublicService) && resolvedProvider.providerType === template_ast_1.ProviderAstType.PrivateService || (requestingProviderType === template_ast_1.ProviderAstType.PrivateService || requestingProviderType === template_ast_1.ProviderAstType.PublicService) && resolvedProvider.providerType === template_ast_1.ProviderAstType.Builtin) {
        return null;
      }
      var transformedProviderAst = this._transformedProviders.get(token);
      if (lang_1.isPresent(transformedProviderAst)) {
        return transformedProviderAst;
      }
      if (lang_1.isPresent(this._seenProviders.get(token))) {
        this._viewContext.errors.push(new ProviderError("Cannot instantiate cyclic dependency! " + token.name, this._sourceSpan));
        return null;
      }
      this._seenProviders.add(token, true);
      var transformedProviders = resolvedProvider.providers.map(function (provider) {
        var transformedUseValue = provider.useValue;
        var transformedUseExisting = provider.useExisting;
        var transformedDeps;
        if (lang_1.isPresent(provider.useExisting)) {
          var existingDiDep = _this._getDependency(resolvedProvider.providerType, new compile_metadata_1.CompileDiDependencyMetadata({ token: provider.useExisting }), eager);
          if (lang_1.isPresent(existingDiDep.token)) {
            transformedUseExisting = existingDiDep.token;
          } else {
            transformedUseExisting = null;
            transformedUseValue = existingDiDep.value;
          }
        } else if (lang_1.isPresent(provider.useFactory)) {
          var deps = lang_1.isPresent(provider.deps) ? provider.deps : provider.useFactory.diDeps;
          transformedDeps = deps.map(function (dep) {
            return _this._getDependency(resolvedProvider.providerType, dep, eager);
          });
        } else if (lang_1.isPresent(provider.useClass)) {
          var deps = lang_1.isPresent(provider.deps) ? provider.deps : provider.useClass.diDeps;
          transformedDeps = deps.map(function (dep) {
            return _this._getDependency(resolvedProvider.providerType, dep, eager);
          });
        }
        return _transformProvider(provider, {
          useExisting: transformedUseExisting,
          useValue: transformedUseValue,
          deps: transformedDeps
        });
      });
      transformedProviderAst = _transformProviderAst(resolvedProvider, {
        eager: eager,
        providers: transformedProviders
      });
      this._transformedProviders.add(token, transformedProviderAst);
      return transformedProviderAst;
    };
    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {
      if (eager === void 0) {
        eager = null;
      }
      if (dep.isAttribute) {
        var attrValue = this._attrs[dep.token.value];
        return new compile_metadata_1.CompileDiDependencyMetadata({
          isValue: true,
          value: lang_1.normalizeBlank(attrValue)
        });
      }
      if (lang_1.isPresent(dep.query) || lang_1.isPresent(dep.viewQuery)) {
        return dep;
      }
      if (lang_1.isPresent(dep.token)) {
        if (requestingProviderType === template_ast_1.ProviderAstType.Directive || requestingProviderType === template_ast_1.ProviderAstType.Component) {
          if (dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.Renderer)) || dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.ElementRef)) || dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.ChangeDetectorRef)) || dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.TemplateRef))) {
            return dep;
          }
          if (dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.ViewContainerRef))) {
            this._hasViewContainer = true;
          }
        }
        if (dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.Injector))) {
          return dep;
        }
        if (lang_1.isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {
          return dep;
        }
      }
      return null;
    };
    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {
      if (eager === void 0) {
        eager = null;
      }
      var currElement = this;
      var currEager = eager;
      var result = null;
      if (!dep.isSkipSelf) {
        result = this._getLocalDependency(requestingProviderType, dep, eager);
      }
      if (dep.isSelf) {
        if (lang_1.isBlank(result) && dep.isOptional) {
          result = new compile_metadata_1.CompileDiDependencyMetadata({
            isValue: true,
            value: null
          });
        }
      } else {
        while (lang_1.isBlank(result) && lang_1.isPresent(currElement._parent)) {
          var prevElement = currElement;
          currElement = currElement._parent;
          if (prevElement._isViewRoot) {
            currEager = false;
          }
          result = currElement._getLocalDependency(template_ast_1.ProviderAstType.PublicService, dep, currEager);
        }
        if (lang_1.isBlank(result)) {
          if (!dep.isHost || this._viewContext.component.type.isHost || identifiers_1.identifierToken(this._viewContext.component.type).equalsTo(dep.token) || lang_1.isPresent(this._viewContext.viewProviders.get(dep.token))) {
            result = dep;
          } else {
            result = dep.isOptional ? result = new compile_metadata_1.CompileDiDependencyMetadata({
              isValue: true,
              value: null
            }) : null;
          }
        }
      }
      if (lang_1.isBlank(result)) {
        this._viewContext.errors.push(new ProviderError("No provider for " + dep.token.name, this._sourceSpan));
      }
      return result;
    };
    return ProviderElementContext;
  }();
  exports.ProviderElementContext = ProviderElementContext;
  function _transformProvider(provider, _a) {
    var useExisting = _a.useExisting,
        useValue = _a.useValue,
        deps = _a.deps;
    return new compile_metadata_1.CompileProviderMetadata({
      token: provider.token,
      useClass: provider.useClass,
      useExisting: useExisting,
      useFactory: provider.useFactory,
      useValue: useValue,
      deps: deps,
      multi: provider.multi
    });
  }
  function _transformProviderAst(provider, _a) {
    var eager = _a.eager,
        providers = _a.providers;
    return new template_ast_1.ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.sourceSpan);
  }
  function _normalizeProviders(providers, sourceSpan, targetErrors, targetProviders) {
    if (targetProviders === void 0) {
      targetProviders = null;
    }
    if (lang_1.isBlank(targetProviders)) {
      targetProviders = [];
    }
    if (lang_1.isPresent(providers)) {
      providers.forEach(function (provider) {
        if (lang_1.isArray(provider)) {
          _normalizeProviders(provider, sourceSpan, targetErrors, targetProviders);
        } else {
          var normalizeProvider;
          if (provider instanceof compile_metadata_1.CompileProviderMetadata) {
            normalizeProvider = provider;
          } else if (provider instanceof compile_metadata_1.CompileTypeMetadata) {
            normalizeProvider = new compile_metadata_1.CompileProviderMetadata({
              token: new compile_metadata_1.CompileTokenMetadata({ identifier: provider }),
              useClass: provider
            });
          } else {
            targetErrors.push(new ProviderError("Unknown provider type " + provider, sourceSpan));
          }
          if (lang_1.isPresent(normalizeProvider)) {
            targetProviders.push(normalizeProvider);
          }
        }
      });
    }
    return targetProviders;
  }
  function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {
    var providersByToken = new compile_metadata_1.CompileTokenMap();
    directives.forEach(function (directive) {
      var dirProvider = new compile_metadata_1.CompileProviderMetadata({
        token: new compile_metadata_1.CompileTokenMetadata({ identifier: directive.type }),
        useClass: directive.type
      });
      _resolveProviders([dirProvider], directive.isComponent ? template_ast_1.ProviderAstType.Component : template_ast_1.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);
    });
    var directivesWithComponentFirst = directives.filter(function (dir) {
      return dir.isComponent;
    }).concat(directives.filter(function (dir) {
      return !dir.isComponent;
    }));
    directivesWithComponentFirst.forEach(function (directive) {
      _resolveProviders(_normalizeProviders(directive.providers, sourceSpan, targetErrors), template_ast_1.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);
      _resolveProviders(_normalizeProviders(directive.viewProviders, sourceSpan, targetErrors), template_ast_1.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);
    });
    return providersByToken;
  }
  function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {
    providers.forEach(function (provider) {
      var resolvedProvider = targetProvidersByToken.get(provider.token);
      if (lang_1.isPresent(resolvedProvider) && resolvedProvider.multiProvider !== provider.multi) {
        targetErrors.push(new ProviderError("Mixing multi and non multi provider is not possible for token " + resolvedProvider.token.name, sourceSpan));
      }
      if (lang_1.isBlank(resolvedProvider)) {
        resolvedProvider = new template_ast_1.ProviderAst(provider.token, provider.multi, eager, [provider], providerType, sourceSpan);
        targetProvidersByToken.add(provider.token, resolvedProvider);
      } else {
        if (!provider.multi) {
          collection_1.ListWrapper.clear(resolvedProvider.providers);
        }
        resolvedProvider.providers.push(provider);
      }
    });
  }
  function _getViewQueries(component) {
    var viewQueries = new compile_metadata_1.CompileTokenMap();
    if (lang_1.isPresent(component.viewQueries)) {
      component.viewQueries.forEach(function (query) {
        return _addQueryToTokenMap(viewQueries, query);
      });
    }
    component.type.diDeps.forEach(function (dep) {
      if (lang_1.isPresent(dep.viewQuery)) {
        _addQueryToTokenMap(viewQueries, dep.viewQuery);
      }
    });
    return viewQueries;
  }
  function _getContentQueries(directives) {
    var contentQueries = new compile_metadata_1.CompileTokenMap();
    directives.forEach(function (directive) {
      if (lang_1.isPresent(directive.queries)) {
        directive.queries.forEach(function (query) {
          return _addQueryToTokenMap(contentQueries, query);
        });
      }
      directive.type.diDeps.forEach(function (dep) {
        if (lang_1.isPresent(dep.query)) {
          _addQueryToTokenMap(contentQueries, dep.query);
        }
      });
    });
    return contentQueries;
  }
  function _addQueryToTokenMap(map, query) {
    query.selectors.forEach(function (token) {
      var entry = map.get(token);
      if (lang_1.isBlank(entry)) {
        entry = [];
        map.add(token, entry);
      }
      entry.push(query);
    });
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/template_parser.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js', 'npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/selector.js', 'npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_preparser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/provider_parser.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
    var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
    var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
    var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
    var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
    var ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/ast.js');
    var parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/parser.js');
    var html_parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js');
    var html_tags_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js');
    var parse_util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js');
    var template_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js');
    var selector_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/selector.js');
    var element_schema_registry_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js');
    var template_preparser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_preparser.js');
    var style_url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js');
    var html_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js');
    var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
    var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
    var provider_parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/provider_parser.js');
    var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(var-)|(let-)|(ref-|#)|(on-)|(bindon-))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/g;
    var TEMPLATE_ELEMENT = 'template';
    var TEMPLATE_ATTR = 'template';
    var TEMPLATE_ATTR_PREFIX = '*';
    var CLASS_ATTR = 'class';
    var PROPERTY_PARTS_SEPARATOR = '.';
    var ATTRIBUTE_PREFIX = 'attr';
    var CLASS_PREFIX = 'class';
    var STYLE_PREFIX = 'style';
    var TEXT_CSS_SELECTOR = selector_1.CssSelector.parse('*')[0];
    exports.TEMPLATE_TRANSFORMS = new core_1.OpaqueToken('TemplateTransforms');
    var TemplateParseError = function (_super) {
      __extends(TemplateParseError, _super);
      function TemplateParseError(message, span, level) {
        _super.call(this, span, message, level);
      }
      return TemplateParseError;
    }(parse_util_1.ParseError);
    exports.TemplateParseError = TemplateParseError;
    var TemplateParseResult = function () {
      function TemplateParseResult(templateAst, errors) {
        this.templateAst = templateAst;
        this.errors = errors;
      }
      return TemplateParseResult;
    }();
    exports.TemplateParseResult = TemplateParseResult;
    var TemplateParser = function () {
      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, _console, transforms) {
        this._exprParser = _exprParser;
        this._schemaRegistry = _schemaRegistry;
        this._htmlParser = _htmlParser;
        this._console = _console;
        this.transforms = transforms;
      }
      TemplateParser.prototype.parse = function (component, template, directives, pipes, templateUrl) {
        var result = this.tryParse(component, template, directives, pipes, templateUrl);
        var warnings = result.errors.filter(function (error) {
          return error.level === parse_util_1.ParseErrorLevel.WARNING;
        });
        var errors = result.errors.filter(function (error) {
          return error.level === parse_util_1.ParseErrorLevel.FATAL;
        });
        if (warnings.length > 0) {
          this._console.warn("Template parse warnings:\n" + warnings.join('\n'));
        }
        if (errors.length > 0) {
          var errorString = errors.join('\n');
          throw new exceptions_1.BaseException("Template parse errors:\n" + errorString);
        }
        return result.templateAst;
      };
      TemplateParser.prototype.tryParse = function (component, template, directives, pipes, templateUrl) {
        var htmlAstWithErrors = this._htmlParser.parse(template, templateUrl);
        var errors = htmlAstWithErrors.errors;
        var result;
        if (htmlAstWithErrors.rootNodes.length > 0) {
          var uniqDirectives = removeDuplicates(directives);
          var uniqPipes = removeDuplicates(pipes);
          var providerViewContext = new provider_parser_1.ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);
          var parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, uniqPipes, this._exprParser, this._schemaRegistry);
          result = html_ast_1.htmlVisitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);
          errors = errors.concat(parseVisitor.errors).concat(providerViewContext.errors);
        } else {
          result = [];
        }
        if (errors.length > 0) {
          return new TemplateParseResult(result, errors);
        }
        if (lang_1.isPresent(this.transforms)) {
          this.transforms.forEach(function (transform) {
            result = template_ast_1.templateVisitAll(transform, result);
          });
        }
        return new TemplateParseResult(result, errors);
      };
      TemplateParser.decorators = [{ type: core_1.Injectable }];
      TemplateParser.ctorParameters = [{ type: parser_1.Parser }, { type: element_schema_registry_1.ElementSchemaRegistry }, { type: html_parser_1.HtmlParser }, { type: core_private_1.Console }, {
        type: undefined,
        decorators: [{ type: core_1.Optional }, {
          type: core_1.Inject,
          args: [exports.TEMPLATE_TRANSFORMS]
        }]
      }];
      return TemplateParser;
    }();
    exports.TemplateParser = TemplateParser;
    var TemplateParseVisitor = function () {
      function TemplateParseVisitor(providerViewContext, directives, pipes, _exprParser, _schemaRegistry) {
        var _this = this;
        this.providerViewContext = providerViewContext;
        this._exprParser = _exprParser;
        this._schemaRegistry = _schemaRegistry;
        this.errors = [];
        this.directivesIndex = new Map();
        this.ngContentCount = 0;
        this.selectorMatcher = new selector_1.SelectorMatcher();
        collection_1.ListWrapper.forEachWithIndex(directives, function (directive, index) {
          var selector = selector_1.CssSelector.parse(directive.selector);
          _this.selectorMatcher.addSelectables(selector, directive);
          _this.directivesIndex.set(directive, index);
        });
        this.pipesByName = new Map();
        pipes.forEach(function (pipe) {
          return _this.pipesByName.set(pipe.name, pipe);
        });
      }
      TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {
        if (level === void 0) {
          level = parse_util_1.ParseErrorLevel.FATAL;
        }
        this.errors.push(new TemplateParseError(message, sourceSpan, level));
      };
      TemplateParseVisitor.prototype._parseInterpolation = function (value, sourceSpan) {
        var sourceInfo = sourceSpan.start.toString();
        try {
          var ast = this._exprParser.parseInterpolation(value, sourceInfo);
          this._checkPipes(ast, sourceSpan);
          if (lang_1.isPresent(ast) && ast.ast.expressions.length > core_private_1.MAX_INTERPOLATION_VALUES) {
            throw new exceptions_1.BaseException("Only support at most " + core_private_1.MAX_INTERPOLATION_VALUES + " interpolation values!");
          }
          return ast;
        } catch (e) {
          this._reportError("" + e, sourceSpan);
          return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._parseAction = function (value, sourceSpan) {
        var sourceInfo = sourceSpan.start.toString();
        try {
          var ast = this._exprParser.parseAction(value, sourceInfo);
          this._checkPipes(ast, sourceSpan);
          return ast;
        } catch (e) {
          this._reportError("" + e, sourceSpan);
          return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._parseBinding = function (value, sourceSpan) {
        var sourceInfo = sourceSpan.start.toString();
        try {
          var ast = this._exprParser.parseBinding(value, sourceInfo);
          this._checkPipes(ast, sourceSpan);
          return ast;
        } catch (e) {
          this._reportError("" + e, sourceSpan);
          return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._parseTemplateBindings = function (value, sourceSpan) {
        var _this = this;
        var sourceInfo = sourceSpan.start.toString();
        try {
          var bindingsResult = this._exprParser.parseTemplateBindings(value, sourceInfo);
          bindingsResult.templateBindings.forEach(function (binding) {
            if (lang_1.isPresent(binding.expression)) {
              _this._checkPipes(binding.expression, sourceSpan);
            }
          });
          bindingsResult.warnings.forEach(function (warning) {
            _this._reportError(warning, sourceSpan, parse_util_1.ParseErrorLevel.WARNING);
          });
          return bindingsResult.templateBindings;
        } catch (e) {
          this._reportError("" + e, sourceSpan);
          return [];
        }
      };
      TemplateParseVisitor.prototype._checkPipes = function (ast, sourceSpan) {
        var _this = this;
        if (lang_1.isPresent(ast)) {
          var collector = new PipeCollector();
          ast.visit(collector);
          collector.pipes.forEach(function (pipeName) {
            if (!_this.pipesByName.has(pipeName)) {
              _this._reportError("The pipe '" + pipeName + "' could not be found", sourceSpan);
            }
          });
        }
      };
      TemplateParseVisitor.prototype.visitExpansion = function (ast, context) {
        return null;
      };
      TemplateParseVisitor.prototype.visitExpansionCase = function (ast, context) {
        return null;
      };
      TemplateParseVisitor.prototype.visitText = function (ast, parent) {
        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);
        var expr = this._parseInterpolation(ast.value, ast.sourceSpan);
        if (lang_1.isPresent(expr)) {
          return new template_ast_1.BoundTextAst(expr, ngContentIndex, ast.sourceSpan);
        } else {
          return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceSpan);
        }
      };
      TemplateParseVisitor.prototype.visitAttr = function (ast, contex) {
        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceSpan);
      };
      TemplateParseVisitor.prototype.visitComment = function (ast, context) {
        return null;
      };
      TemplateParseVisitor.prototype.visitElement = function (element, parent) {
        var _this = this;
        var nodeName = element.name;
        var preparsedElement = template_preparser_1.preparseElement(element);
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT || preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE) {
          return null;
        }
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET && style_url_resolver_1.isStyleUrlResolvable(preparsedElement.hrefAttr)) {
          return null;
        }
        var matchableAttrs = [];
        var elementOrDirectiveProps = [];
        var elementOrDirectiveRefs = [];
        var elementVars = [];
        var events = [];
        var templateElementOrDirectiveProps = [];
        var templateMatchableAttrs = [];
        var templateElementVars = [];
        var hasInlineTemplates = false;
        var attrs = [];
        var lcElName = html_tags_1.splitNsName(nodeName.toLowerCase())[1];
        var isTemplateElement = lcElName == TEMPLATE_ELEMENT;
        element.attrs.forEach(function (attr) {
          var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);
          var hasTemplateBinding = _this._parseInlineTemplateBinding(attr, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);
          if (!hasBinding && !hasTemplateBinding) {
            attrs.push(_this.visitAttr(attr, null));
            matchableAttrs.push([attr.name, attr.value]);
          }
          if (hasTemplateBinding) {
            hasInlineTemplates = true;
          }
        });
        var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);
        var directiveMetas = this._parseDirectives(this.selectorMatcher, elementCssSelector);
        var references = [];
        var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references);
        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);
        var isViewRoot = parent.isTemplateElement || hasInlineTemplates;
        var providerContext = new provider_parser_1.ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, element.sourceSpan);
        var children = html_ast_1.htmlVisitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));
        providerContext.afterElement();
        var projectionSelector = lang_1.isPresent(preparsedElement.projectAs) ? selector_1.CssSelector.parse(preparsedElement.projectAs)[0] : elementCssSelector;
        var ngContentIndex = parent.findNgContentIndex(projectionSelector);
        var parsedElement;
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.NG_CONTENT) {
          if (lang_1.isPresent(element.children) && element.children.length > 0) {
            this._reportError("<ng-content> element cannot have content. <ng-content> must be immediately followed by </ng-content>", element.sourceSpan);
          }
          parsedElement = new template_ast_1.NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);
        } else if (isTemplateElement) {
          this._assertAllEventsPublishedByDirectives(directiveAsts, events);
          this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);
          parsedElement = new template_ast_1.EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);
        } else {
          this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);
          var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);
          parsedElement = new template_ast_1.ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan);
        }
        if (hasInlineTemplates) {
          var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);
          var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector);
          var templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, []);
          var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectiveAsts);
          this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);
          var templateProviderContext = new provider_parser_1.ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], element.sourceSpan);
          templateProviderContext.afterElement();
          parsedElement = new template_ast_1.EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex, element.sourceSpan);
        }
        return parsedElement;
      };
      TemplateParseVisitor.prototype._parseInlineTemplateBinding = function (attr, targetMatchableAttrs, targetProps, targetVars) {
        var templateBindingsSource = null;
        if (attr.name == TEMPLATE_ATTR) {
          templateBindingsSource = attr.value;
        } else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {
          var key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length);
          templateBindingsSource = attr.value.length == 0 ? key : key + ' ' + attr.value;
        }
        if (lang_1.isPresent(templateBindingsSource)) {
          var bindings = this._parseTemplateBindings(templateBindingsSource, attr.sourceSpan);
          for (var i = 0; i < bindings.length; i++) {
            var binding = bindings[i];
            if (binding.keyIsVar) {
              targetVars.push(new template_ast_1.VariableAst(binding.key, binding.name, attr.sourceSpan));
            } else if (lang_1.isPresent(binding.expression)) {
              this._parsePropertyAst(binding.key, binding.expression, attr.sourceSpan, targetMatchableAttrs, targetProps);
            } else {
              targetMatchableAttrs.push([binding.key, '']);
              this._parseLiteralAttr(binding.key, null, attr.sourceSpan, targetProps);
            }
          }
          return true;
        }
        return false;
      };
      TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {
        var attrName = this._normalizeAttributeName(attr.name);
        var attrValue = attr.value;
        var bindParts = lang_1.RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);
        var hasBinding = false;
        if (lang_1.isPresent(bindParts)) {
          hasBinding = true;
          if (lang_1.isPresent(bindParts[1])) {
            this._parseProperty(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);
          } else if (lang_1.isPresent(bindParts[2])) {
            var identifier = bindParts[7];
            if (isTemplateElement) {
              this._reportError("\"var-\" on <template> elements is deprecated. Use \"let-\" instead!", attr.sourceSpan, parse_util_1.ParseErrorLevel.WARNING);
              this._parseVariable(identifier, attrValue, attr.sourceSpan, targetVars);
            } else {
              this._reportError("\"var-\" on non <template> elements is deprecated. Use \"ref-\" instead!", attr.sourceSpan, parse_util_1.ParseErrorLevel.WARNING);
              this._parseReference(identifier, attrValue, attr.sourceSpan, targetRefs);
            }
          } else if (lang_1.isPresent(bindParts[3])) {
            if (isTemplateElement) {
              var identifier = bindParts[7];
              this._parseVariable(identifier, attrValue, attr.sourceSpan, targetVars);
            } else {
              this._reportError("\"let-\" is only supported on template elements.", attr.sourceSpan);
            }
          } else if (lang_1.isPresent(bindParts[4])) {
            var identifier = bindParts[7];
            this._parseReference(identifier, attrValue, attr.sourceSpan, targetRefs);
          } else if (lang_1.isPresent(bindParts[5])) {
            this._parseEvent(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);
          } else if (lang_1.isPresent(bindParts[6])) {
            this._parseProperty(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);
            this._parseAssignmentEvent(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);
          } else if (lang_1.isPresent(bindParts[8])) {
            this._parseProperty(bindParts[8], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);
            this._parseAssignmentEvent(bindParts[8], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);
          } else if (lang_1.isPresent(bindParts[9])) {
            this._parseProperty(bindParts[9], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);
          } else if (lang_1.isPresent(bindParts[10])) {
            this._parseEvent(bindParts[10], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);
          }
        } else {
          hasBinding = this._parsePropertyInterpolation(attrName, attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);
        }
        if (!hasBinding) {
          this._parseLiteralAttr(attrName, attrValue, attr.sourceSpan, targetProps);
        }
        return hasBinding;
      };
      TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {
        return attrName.toLowerCase().startsWith('data-') ? attrName.substring(5) : attrName;
      };
      TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {
        if (identifier.indexOf('-') > -1) {
          this._reportError("\"-\" is not allowed in variable names", sourceSpan);
        }
        targetVars.push(new template_ast_1.VariableAst(identifier, value, sourceSpan));
      };
      TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {
        if (identifier.indexOf('-') > -1) {
          this._reportError("\"-\" is not allowed in reference names", sourceSpan);
        }
        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));
      };
      TemplateParseVisitor.prototype._parseProperty = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {
        this._parsePropertyAst(name, this._parseBinding(expression, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);
      };
      TemplateParseVisitor.prototype._parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {
        var expr = this._parseInterpolation(value, sourceSpan);
        if (lang_1.isPresent(expr)) {
          this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);
          return true;
        }
        return false;
      };
      TemplateParseVisitor.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {
        targetMatchableAttrs.push([name, ast.source]);
        targetProps.push(new BoundElementOrDirectiveProperty(name, ast, false, sourceSpan));
      };
      TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {
        this._parseEvent(name + "Change", expression + "=$event", sourceSpan, targetMatchableAttrs, targetEvents);
      };
      TemplateParseVisitor.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {
        var parts = util_1.splitAtColon(name, [null, name]);
        var target = parts[0];
        var eventName = parts[1];
        var ast = this._parseAction(expression, sourceSpan);
        targetMatchableAttrs.push([name, ast.source]);
        targetEvents.push(new template_ast_1.BoundEventAst(eventName, target, ast, sourceSpan));
      };
      TemplateParseVisitor.prototype._parseLiteralAttr = function (name, value, sourceSpan, targetProps) {
        targetProps.push(new BoundElementOrDirectiveProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), true, sourceSpan));
      };
      TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {
        var _this = this;
        var directives = collection_1.ListWrapper.createFixedSize(this.directivesIndex.size);
        selectorMatcher.match(elementCssSelector, function (selector, directive) {
          directives[_this.directivesIndex.get(directive)] = directive;
        });
        return directives.filter(function (dir) {
          return lang_1.isPresent(dir);
        });
      };
      TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, sourceSpan, targetReferences) {
        var _this = this;
        var matchedReferences = new Set();
        var component = null;
        var directiveAsts = directives.map(function (directive) {
          if (directive.isComponent) {
            component = directive;
          }
          var hostProperties = [];
          var hostEvents = [];
          var directiveProperties = [];
          _this._createDirectiveHostPropertyAsts(elementName, directive.hostProperties, sourceSpan, hostProperties);
          _this._createDirectiveHostEventAsts(directive.hostListeners, sourceSpan, hostEvents);
          _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);
          elementOrDirectiveRefs.forEach(function (elOrDirRef) {
            if (elOrDirRef.value.length === 0 && directive.isComponent || directive.exportAs == elOrDirRef.value) {
              targetReferences.push(new template_ast_1.ReferenceAst(elOrDirRef.name, identifiers_1.identifierToken(directive.type), elOrDirRef.sourceSpan));
              matchedReferences.add(elOrDirRef.name);
            }
          });
          return new template_ast_1.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, sourceSpan);
        });
        elementOrDirectiveRefs.forEach(function (elOrDirRef) {
          if (elOrDirRef.value.length > 0) {
            if (!collection_1.SetWrapper.has(matchedReferences, elOrDirRef.name)) {
              _this._reportError("There is no directive with \"exportAs\" set to \"" + elOrDirRef.value + "\"", elOrDirRef.sourceSpan);
            }
            ;
          } else if (lang_1.isBlank(component)) {
            var refToken = null;
            if (isTemplateElement) {
              refToken = identifiers_1.identifierToken(identifiers_1.Identifiers.TemplateRef);
            }
            targetReferences.push(new template_ast_1.ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));
          }
        });
        return directiveAsts;
      };
      TemplateParseVisitor.prototype._createDirectiveHostPropertyAsts = function (elementName, hostProps, sourceSpan, targetPropertyAsts) {
        var _this = this;
        if (lang_1.isPresent(hostProps)) {
          collection_1.StringMapWrapper.forEach(hostProps, function (expression, propName) {
            var exprAst = _this._parseBinding(expression, sourceSpan);
            targetPropertyAsts.push(_this._createElementPropertyAst(elementName, propName, exprAst, sourceSpan));
          });
        }
      };
      TemplateParseVisitor.prototype._createDirectiveHostEventAsts = function (hostListeners, sourceSpan, targetEventAsts) {
        var _this = this;
        if (lang_1.isPresent(hostListeners)) {
          collection_1.StringMapWrapper.forEach(hostListeners, function (expression, propName) {
            _this._parseEvent(propName, expression, sourceSpan, [], targetEventAsts);
          });
        }
      };
      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {
        if (lang_1.isPresent(directiveProperties)) {
          var boundPropsByName = new Map();
          boundProps.forEach(function (boundProp) {
            var prevValue = boundPropsByName.get(boundProp.name);
            if (lang_1.isBlank(prevValue) || prevValue.isLiteral) {
              boundPropsByName.set(boundProp.name, boundProp);
            }
          });
          collection_1.StringMapWrapper.forEach(directiveProperties, function (elProp, dirProp) {
            var boundProp = boundPropsByName.get(elProp);
            if (lang_1.isPresent(boundProp)) {
              targetBoundDirectiveProps.push(new template_ast_1.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));
            }
          });
        }
      };
      TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {
        var _this = this;
        var boundElementProps = [];
        var boundDirectivePropsIndex = new Map();
        directives.forEach(function (directive) {
          directive.inputs.forEach(function (prop) {
            boundDirectivePropsIndex.set(prop.templateName, prop);
          });
        });
        props.forEach(function (prop) {
          if (!prop.isLiteral && lang_1.isBlank(boundDirectivePropsIndex.get(prop.name))) {
            boundElementProps.push(_this._createElementPropertyAst(elementName, prop.name, prop.expression, prop.sourceSpan));
          }
        });
        return boundElementProps;
      };
      TemplateParseVisitor.prototype._createElementPropertyAst = function (elementName, name, ast, sourceSpan) {
        var unit = null;
        var bindingType;
        var boundPropertyName;
        var parts = name.split(PROPERTY_PARTS_SEPARATOR);
        var securityContext;
        if (parts.length === 1) {
          boundPropertyName = this._schemaRegistry.getMappedPropName(parts[0]);
          securityContext = this._schemaRegistry.securityContext(elementName, boundPropertyName);
          bindingType = template_ast_1.PropertyBindingType.Property;
          if (!this._schemaRegistry.hasProperty(elementName, boundPropertyName)) {
            this._reportError("Can't bind to '" + boundPropertyName + "' since it isn't a known native property", sourceSpan);
          }
        } else {
          if (parts[0] == ATTRIBUTE_PREFIX) {
            boundPropertyName = parts[1];
            if (boundPropertyName.toLowerCase().startsWith('on')) {
              this._reportError("Binding to event attribute '" + boundPropertyName + "' is disallowed " + ("for security reasons, please use (" + boundPropertyName.slice(2) + ")=..."), sourceSpan);
            }
            securityContext = this._schemaRegistry.securityContext(elementName, this._schemaRegistry.getMappedPropName(boundPropertyName));
            var nsSeparatorIdx = boundPropertyName.indexOf(':');
            if (nsSeparatorIdx > -1) {
              var ns = boundPropertyName.substring(0, nsSeparatorIdx);
              var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);
              boundPropertyName = html_tags_1.mergeNsAndName(ns, name_1);
            }
            bindingType = template_ast_1.PropertyBindingType.Attribute;
          } else if (parts[0] == CLASS_PREFIX) {
            boundPropertyName = parts[1];
            bindingType = template_ast_1.PropertyBindingType.Class;
            securityContext = core_private_1.SecurityContext.NONE;
          } else if (parts[0] == STYLE_PREFIX) {
            unit = parts.length > 2 ? parts[2] : null;
            boundPropertyName = parts[1];
            bindingType = template_ast_1.PropertyBindingType.Style;
            securityContext = core_private_1.SecurityContext.STYLE;
          } else {
            this._reportError("Invalid property name '" + name + "'", sourceSpan);
            bindingType = null;
            securityContext = null;
          }
        }
        return new template_ast_1.BoundElementPropertyAst(boundPropertyName, bindingType, securityContext, ast, unit, sourceSpan);
      };
      TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {
        var componentTypeNames = [];
        directives.forEach(function (directive) {
          var typeName = directive.directive.type.name;
          if (directive.directive.isComponent) {
            componentTypeNames.push(typeName);
          }
        });
        return componentTypeNames;
      };
      TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {
        var componentTypeNames = this._findComponentDirectiveNames(directives);
        if (componentTypeNames.length > 1) {
          this._reportError("More than one component: " + componentTypeNames.join(','), sourceSpan);
        }
      };
      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {
        var _this = this;
        var componentTypeNames = this._findComponentDirectiveNames(directives);
        if (componentTypeNames.length > 0) {
          this._reportError("Components on an embedded template: " + componentTypeNames.join(','), sourceSpan);
        }
        elementProps.forEach(function (prop) {
          _this._reportError("Property binding " + prop.name + " not used by any directive on an embedded template", sourceSpan);
        });
      };
      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {
        var _this = this;
        var allDirectiveEvents = new Set();
        directives.forEach(function (directive) {
          collection_1.StringMapWrapper.forEach(directive.directive.outputs, function (eventName, _) {
            allDirectiveEvents.add(eventName);
          });
        });
        events.forEach(function (event) {
          if (lang_1.isPresent(event.target) || !collection_1.SetWrapper.has(allDirectiveEvents, event.name)) {
            _this._reportError("Event binding " + event.fullName + " not emitted by any directive on an embedded template", event.sourceSpan);
          }
        });
      };
      return TemplateParseVisitor;
    }();
    var NonBindableVisitor = function () {
      function NonBindableVisitor() {}
      NonBindableVisitor.prototype.visitElement = function (ast, parent) {
        var preparsedElement = template_preparser_1.preparseElement(ast);
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT || preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE || preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET) {
          return null;
        }
        var attrNameAndValues = ast.attrs.map(function (attrAst) {
          return [attrAst.name, attrAst.value];
        });
        var selector = createElementCssSelector(ast.name, attrNameAndValues);
        var ngContentIndex = parent.findNgContentIndex(selector);
        var children = html_ast_1.htmlVisitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);
        return new template_ast_1.ElementAst(ast.name, html_ast_1.htmlVisitAll(this, ast.attrs), [], [], [], [], [], false, children, ngContentIndex, ast.sourceSpan);
      };
      NonBindableVisitor.prototype.visitComment = function (ast, context) {
        return null;
      };
      NonBindableVisitor.prototype.visitAttr = function (ast, context) {
        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceSpan);
      };
      NonBindableVisitor.prototype.visitText = function (ast, parent) {
        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);
        return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceSpan);
      };
      NonBindableVisitor.prototype.visitExpansion = function (ast, context) {
        return ast;
      };
      NonBindableVisitor.prototype.visitExpansionCase = function (ast, context) {
        return ast;
      };
      return NonBindableVisitor;
    }();
    var BoundElementOrDirectiveProperty = function () {
      function BoundElementOrDirectiveProperty(name, expression, isLiteral, sourceSpan) {
        this.name = name;
        this.expression = expression;
        this.isLiteral = isLiteral;
        this.sourceSpan = sourceSpan;
      }
      return BoundElementOrDirectiveProperty;
    }();
    var ElementOrDirectiveRef = function () {
      function ElementOrDirectiveRef(name, value, sourceSpan) {
        this.name = name;
        this.value = value;
        this.sourceSpan = sourceSpan;
      }
      return ElementOrDirectiveRef;
    }();
    function splitClasses(classAttrValue) {
      return lang_1.StringWrapper.split(classAttrValue.trim(), /\s+/g);
    }
    exports.splitClasses = splitClasses;
    var ElementContext = function () {
      function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {
        this.isTemplateElement = isTemplateElement;
        this._ngContentIndexMatcher = _ngContentIndexMatcher;
        this._wildcardNgContentIndex = _wildcardNgContentIndex;
        this.providerContext = providerContext;
      }
      ElementContext.create = function (isTemplateElement, directives, providerContext) {
        var matcher = new selector_1.SelectorMatcher();
        var wildcardNgContentIndex = null;
        var component = directives.find(function (directive) {
          return directive.directive.isComponent;
        });
        if (lang_1.isPresent(component)) {
          var ngContentSelectors = component.directive.template.ngContentSelectors;
          for (var i = 0; i < ngContentSelectors.length; i++) {
            var selector = ngContentSelectors[i];
            if (lang_1.StringWrapper.equals(selector, '*')) {
              wildcardNgContentIndex = i;
            } else {
              matcher.addSelectables(selector_1.CssSelector.parse(ngContentSelectors[i]), i);
            }
          }
        }
        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);
      };
      ElementContext.prototype.findNgContentIndex = function (selector) {
        var ngContentIndices = [];
        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) {
          ngContentIndices.push(ngContentIndex);
        });
        collection_1.ListWrapper.sort(ngContentIndices);
        if (lang_1.isPresent(this._wildcardNgContentIndex)) {
          ngContentIndices.push(this._wildcardNgContentIndex);
        }
        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;
      };
      return ElementContext;
    }();
    function createElementCssSelector(elementName, matchableAttrs) {
      var cssSelector = new selector_1.CssSelector();
      var elNameNoNs = html_tags_1.splitNsName(elementName)[1];
      cssSelector.setElement(elNameNoNs);
      for (var i = 0; i < matchableAttrs.length; i++) {
        var attrName = matchableAttrs[i][0];
        var attrNameNoNs = html_tags_1.splitNsName(attrName)[1];
        var attrValue = matchableAttrs[i][1];
        cssSelector.addAttribute(attrNameNoNs, attrValue);
        if (attrName.toLowerCase() == CLASS_ATTR) {
          var classes = splitClasses(attrValue);
          classes.forEach(function (className) {
            return cssSelector.addClassName(className);
          });
        }
      }
      return cssSelector;
    }
    var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new selector_1.SelectorMatcher(), null, null);
    var NON_BINDABLE_VISITOR = new NonBindableVisitor();
    var PipeCollector = function (_super) {
      __extends(PipeCollector, _super);
      function PipeCollector() {
        _super.apply(this, arguments);
        this.pipes = new Set();
      }
      PipeCollector.prototype.visitPipe = function (ast, context) {
        this.pipes.add(ast.name);
        ast.exp.visit(this);
        this.visitAll(ast.args, context);
        return null;
      };
      return PipeCollector;
    }(ast_1.RecursiveAstVisitor);
    exports.PipeCollector = PipeCollector;
    function removeDuplicates(items) {
      var res = [];
      items.forEach(function (item) {
        var hasMatch = res.filter(function (r) {
          return r.type.name == item.type.name && r.type.moduleUrl == item.type.moduleUrl && r.type.runtime == item.type.runtime;
        }).length > 0;
        if (!hasMatch) {
          res.push(item);
        }
      });
      return res;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_js_emitter.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var abstract_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js');
  var AbstractJsEmitterVisitor = function (_super) {
    __extends(AbstractJsEmitterVisitor, _super);
    function AbstractJsEmitterVisitor() {
      _super.call(this, false);
    }
    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {
      var _this = this;
      ctx.pushClass(stmt);
      this._visitClassConstructor(stmt, ctx);
      if (lang_1.isPresent(stmt.parent)) {
        ctx.print(stmt.name + ".prototype = Object.create(");
        stmt.parent.visitExpression(this, ctx);
        ctx.println(".prototype);");
      }
      stmt.getters.forEach(function (getter) {
        return _this._visitClassGetter(stmt, getter, ctx);
      });
      stmt.methods.forEach(function (method) {
        return _this._visitClassMethod(stmt, method, ctx);
      });
      ctx.popClass();
      return null;
    };
    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {
      ctx.print("function " + stmt.name + "(");
      if (lang_1.isPresent(stmt.constructorMethod)) {
        this._visitParams(stmt.constructorMethod.params, ctx);
      }
      ctx.println(") {");
      ctx.incIndent();
      if (lang_1.isPresent(stmt.constructorMethod)) {
        if (stmt.constructorMethod.body.length > 0) {
          ctx.println("var self = this;");
          this.visitAllStatements(stmt.constructorMethod.body, ctx);
        }
      }
      ctx.decIndent();
      ctx.println("}");
    };
    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {
      ctx.println("Object.defineProperty(" + stmt.name + ".prototype, '" + getter.name + "', { get: function() {");
      ctx.incIndent();
      if (getter.body.length > 0) {
        ctx.println("var self = this;");
        this.visitAllStatements(getter.body, ctx);
      }
      ctx.decIndent();
      ctx.println("}});");
    };
    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {
      ctx.print(stmt.name + ".prototype." + method.name + " = function(");
      this._visitParams(method.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      if (method.body.length > 0) {
        ctx.println("var self = this;");
        this.visitAllStatements(method.body, ctx);
      }
      ctx.decIndent();
      ctx.println("};");
    };
    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {
      if (ast.builtin === o.BuiltinVar.This) {
        ctx.print('self');
      } else if (ast.builtin === o.BuiltinVar.Super) {
        throw new exceptions_1.BaseException("'super' needs to be handled at a parent ast node, not at the variable level!");
      } else {
        _super.prototype.visitReadVarExpr.call(this, ast, ctx);
      }
      return null;
    };
    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {
      ctx.print("var " + stmt.name + " = ");
      stmt.value.visitExpression(this, ctx);
      ctx.println(";");
      return null;
    };
    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {
      ast.value.visitExpression(this, ctx);
      return null;
    };
    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {
      var fnExpr = expr.fn;
      if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {
        ctx.currentClass.parent.visitExpression(this, ctx);
        ctx.print(".call(this");
        if (expr.args.length > 0) {
          ctx.print(", ");
          this.visitAllExpressions(expr.args, ctx, ',');
        }
        ctx.print(")");
      } else {
        _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);
      }
      return null;
    };
    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {
      ctx.print("function(");
      this._visitParams(ast.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      this.visitAllStatements(ast.statements, ctx);
      ctx.decIndent();
      ctx.print("}");
      return null;
    };
    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {
      ctx.print("function " + stmt.name + "(");
      this._visitParams(stmt.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      this.visitAllStatements(stmt.statements, ctx);
      ctx.decIndent();
      ctx.println("}");
      return null;
    };
    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {
      ctx.println("try {");
      ctx.incIndent();
      this.visitAllStatements(stmt.bodyStmts, ctx);
      ctx.decIndent();
      ctx.println("} catch (" + abstract_emitter_1.CATCH_ERROR_VAR.name + ") {");
      ctx.incIndent();
      var catchStmts = [abstract_emitter_1.CATCH_STACK_VAR.set(abstract_emitter_1.CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [o.StmtModifier.Final])].concat(stmt.catchStmts);
      this.visitAllStatements(catchStmts, ctx);
      ctx.decIndent();
      ctx.println("}");
      return null;
    };
    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {
      this.visitAllObjects(function (param) {
        return ctx.print(param.name);
      }, params, ctx, ',');
    };
    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {
      var name;
      switch (method) {
        case o.BuiltinMethod.ConcatArray:
          name = 'concat';
          break;
        case o.BuiltinMethod.SubscribeObservable:
          name = 'subscribe';
          break;
        case o.BuiltinMethod.bind:
          name = 'bind';
          break;
        default:
          throw new exceptions_1.BaseException("Unknown builtin method: " + method);
      }
      return name;
    };
    return AbstractJsEmitterVisitor;
  }(abstract_emitter_1.AbstractEmitterVisitor);
  exports.AbstractJsEmitterVisitor = AbstractJsEmitterVisitor;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/output_jit.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_js_emitter.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var abstract_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js');
  var abstract_js_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_js_emitter.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  function jitStatements(sourceUrl, statements, resultVar) {
    var converter = new JitEmitterVisitor();
    var ctx = abstract_emitter_1.EmitterVisitorContext.createRoot([resultVar]);
    converter.visitAllStatements(statements, ctx);
    return lang_1.evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());
  }
  exports.jitStatements = jitStatements;
  var JitEmitterVisitor = function (_super) {
    __extends(JitEmitterVisitor, _super);
    function JitEmitterVisitor() {
      _super.apply(this, arguments);
      this._evalArgNames = [];
      this._evalArgValues = [];
    }
    JitEmitterVisitor.prototype.getArgs = function () {
      var result = {};
      for (var i = 0; i < this._evalArgNames.length; i++) {
        result[this._evalArgNames[i]] = this._evalArgValues[i];
      }
      return result;
    };
    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {
      var value = ast.value.runtime;
      var id = this._evalArgValues.indexOf(value);
      if (id === -1) {
        id = this._evalArgValues.length;
        this._evalArgValues.push(value);
        var name = lang_1.isPresent(ast.value.name) ? util_1.sanitizeIdentifier(ast.value.name) : 'val';
        this._evalArgNames.push(util_1.sanitizeIdentifier("jit_" + name + id));
      }
      ctx.print(this._evalArgNames[id]);
      return null;
    };
    return JitEmitterVisitor;
  }(abstract_js_emitter_1.AbstractJsEmitterVisitor);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/dart_emitter.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var abstract_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js');
  var _debugModuleUrl = 'asset://debug/lib';
  function debugOutputAstAsDart(ast) {
    var converter = new _DartEmitterVisitor(_debugModuleUrl);
    var ctx = abstract_emitter_1.EmitterVisitorContext.createRoot([]);
    var asts;
    if (lang_1.isArray(ast)) {
      asts = ast;
    } else {
      asts = [ast];
    }
    asts.forEach(function (ast) {
      if (ast instanceof o.Statement) {
        ast.visitStatement(converter, ctx);
      } else if (ast instanceof o.Expression) {
        ast.visitExpression(converter, ctx);
      } else if (ast instanceof o.Type) {
        ast.visitType(converter, ctx);
      } else {
        throw new exceptions_1.BaseException("Don't know how to print debug info for " + ast);
      }
    });
    return ctx.toSource();
  }
  exports.debugOutputAstAsDart = debugOutputAstAsDart;
  var DartEmitter = function () {
    function DartEmitter(_importGenerator) {
      this._importGenerator = _importGenerator;
    }
    DartEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {
      var _this = this;
      var srcParts = [];
      var converter = new _DartEmitterVisitor(moduleUrl);
      var ctx = abstract_emitter_1.EmitterVisitorContext.createRoot(exportedVars);
      converter.visitAllStatements(stmts, ctx);
      converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {
        srcParts.push("import '" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + "' as " + prefix + ";");
      });
      srcParts.push(ctx.toSource());
      return srcParts.join('\n');
    };
    return DartEmitter;
  }();
  exports.DartEmitter = DartEmitter;
  var _DartEmitterVisitor = function (_super) {
    __extends(_DartEmitterVisitor, _super);
    function _DartEmitterVisitor(_moduleUrl) {
      _super.call(this, true);
      this._moduleUrl = _moduleUrl;
      this.importsWithPrefixes = new Map();
    }
    _DartEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {
      this._visitIdentifier(ast.value, ast.typeParams, ctx);
      return null;
    };
    _DartEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {
      if (stmt.hasModifier(o.StmtModifier.Final)) {
        if (isConstType(stmt.type)) {
          ctx.print("const ");
        } else {
          ctx.print("final ");
        }
      } else if (lang_1.isBlank(stmt.type)) {
        ctx.print("var ");
      }
      if (lang_1.isPresent(stmt.type)) {
        stmt.type.visitType(this, ctx);
        ctx.print(" ");
      }
      ctx.print(stmt.name + " = ");
      stmt.value.visitExpression(this, ctx);
      ctx.println(";");
      return null;
    };
    _DartEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {
      ctx.print("(");
      ast.value.visitExpression(this, ctx);
      ctx.print(" as ");
      ast.type.visitType(this, ctx);
      ctx.print(")");
      return null;
    };
    _DartEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {
      var _this = this;
      ctx.pushClass(stmt);
      ctx.print("class " + stmt.name);
      if (lang_1.isPresent(stmt.parent)) {
        ctx.print(" extends ");
        stmt.parent.visitExpression(this, ctx);
      }
      ctx.println(" {");
      ctx.incIndent();
      stmt.fields.forEach(function (field) {
        return _this._visitClassField(field, ctx);
      });
      if (lang_1.isPresent(stmt.constructorMethod)) {
        this._visitClassConstructor(stmt, ctx);
      }
      stmt.getters.forEach(function (getter) {
        return _this._visitClassGetter(getter, ctx);
      });
      stmt.methods.forEach(function (method) {
        return _this._visitClassMethod(method, ctx);
      });
      ctx.decIndent();
      ctx.println("}");
      ctx.popClass();
      return null;
    };
    _DartEmitterVisitor.prototype._visitClassField = function (field, ctx) {
      if (field.hasModifier(o.StmtModifier.Final)) {
        ctx.print("final ");
      } else if (lang_1.isBlank(field.type)) {
        ctx.print("var ");
      }
      if (lang_1.isPresent(field.type)) {
        field.type.visitType(this, ctx);
        ctx.print(" ");
      }
      ctx.println(field.name + ";");
    };
    _DartEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {
      if (lang_1.isPresent(getter.type)) {
        getter.type.visitType(this, ctx);
        ctx.print(" ");
      }
      ctx.println("get " + getter.name + " {");
      ctx.incIndent();
      this.visitAllStatements(getter.body, ctx);
      ctx.decIndent();
      ctx.println("}");
    };
    _DartEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {
      ctx.print(stmt.name + "(");
      this._visitParams(stmt.constructorMethod.params, ctx);
      ctx.print(")");
      var ctorStmts = stmt.constructorMethod.body;
      var superCtorExpr = ctorStmts.length > 0 ? getSuperConstructorCallExpr(ctorStmts[0]) : null;
      if (lang_1.isPresent(superCtorExpr)) {
        ctx.print(": ");
        superCtorExpr.visitExpression(this, ctx);
        ctorStmts = ctorStmts.slice(1);
      }
      ctx.println(" {");
      ctx.incIndent();
      this.visitAllStatements(ctorStmts, ctx);
      ctx.decIndent();
      ctx.println("}");
    };
    _DartEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {
      if (lang_1.isPresent(method.type)) {
        method.type.visitType(this, ctx);
      } else {
        ctx.print("void");
      }
      ctx.print(" " + method.name + "(");
      this._visitParams(method.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      this.visitAllStatements(method.body, ctx);
      ctx.decIndent();
      ctx.println("}");
    };
    _DartEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {
      ctx.print("(");
      this._visitParams(ast.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      this.visitAllStatements(ast.statements, ctx);
      ctx.decIndent();
      ctx.print("}");
      return null;
    };
    _DartEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {
      if (lang_1.isPresent(stmt.type)) {
        stmt.type.visitType(this, ctx);
      } else {
        ctx.print("void");
      }
      ctx.print(" " + stmt.name + "(");
      this._visitParams(stmt.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      this.visitAllStatements(stmt.statements, ctx);
      ctx.decIndent();
      ctx.println("}");
      return null;
    };
    _DartEmitterVisitor.prototype.getBuiltinMethodName = function (method) {
      var name;
      switch (method) {
        case o.BuiltinMethod.ConcatArray:
          name = '.addAll';
          break;
        case o.BuiltinMethod.SubscribeObservable:
          name = 'listen';
          break;
        case o.BuiltinMethod.bind:
          name = null;
          break;
        default:
          throw new exceptions_1.BaseException("Unknown builtin method: " + method);
      }
      return name;
    };
    _DartEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {
      ctx.println("try {");
      ctx.incIndent();
      this.visitAllStatements(stmt.bodyStmts, ctx);
      ctx.decIndent();
      ctx.println("} catch (" + abstract_emitter_1.CATCH_ERROR_VAR.name + ", " + abstract_emitter_1.CATCH_STACK_VAR.name + ") {");
      ctx.incIndent();
      this.visitAllStatements(stmt.catchStmts, ctx);
      ctx.decIndent();
      ctx.println("}");
      return null;
    };
    _DartEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {
      switch (ast.operator) {
        case o.BinaryOperator.Identical:
          ctx.print("identical(");
          ast.lhs.visitExpression(this, ctx);
          ctx.print(", ");
          ast.rhs.visitExpression(this, ctx);
          ctx.print(")");
          break;
        case o.BinaryOperator.NotIdentical:
          ctx.print("!identical(");
          ast.lhs.visitExpression(this, ctx);
          ctx.print(", ");
          ast.rhs.visitExpression(this, ctx);
          ctx.print(")");
          break;
        default:
          _super.prototype.visitBinaryOperatorExpr.call(this, ast, ctx);
      }
      return null;
    };
    _DartEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {
      if (isConstType(ast.type)) {
        ctx.print("const ");
      }
      return _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);
    };
    _DartEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {
      if (isConstType(ast.type)) {
        ctx.print("const ");
      }
      if (lang_1.isPresent(ast.valueType)) {
        ctx.print("<String, ");
        ast.valueType.visitType(this, ctx);
        ctx.print(">");
      }
      return _super.prototype.visitLiteralMapExpr.call(this, ast, ctx);
    };
    _DartEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {
      ctx.print(isConstType(ast.type) ? "const" : "new");
      ctx.print(' ');
      ast.classExpr.visitExpression(this, ctx);
      ctx.print("(");
      this.visitAllExpressions(ast.args, ctx, ",");
      ctx.print(")");
      return null;
    };
    _DartEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {
      var typeStr;
      switch (type.name) {
        case o.BuiltinTypeName.Bool:
          typeStr = 'bool';
          break;
        case o.BuiltinTypeName.Dynamic:
          typeStr = 'dynamic';
          break;
        case o.BuiltinTypeName.Function:
          typeStr = 'Function';
          break;
        case o.BuiltinTypeName.Number:
          typeStr = 'num';
          break;
        case o.BuiltinTypeName.Int:
          typeStr = 'int';
          break;
        case o.BuiltinTypeName.String:
          typeStr = 'String';
          break;
        default:
          throw new exceptions_1.BaseException("Unsupported builtin type " + type.name);
      }
      ctx.print(typeStr);
      return null;
    };
    _DartEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {
      this._visitIdentifier(ast.value, ast.typeParams, ctx);
      return null;
    };
    _DartEmitterVisitor.prototype.visitArrayType = function (type, ctx) {
      ctx.print("List<");
      if (lang_1.isPresent(type.of)) {
        type.of.visitType(this, ctx);
      } else {
        ctx.print("dynamic");
      }
      ctx.print(">");
      return null;
    };
    _DartEmitterVisitor.prototype.visitMapType = function (type, ctx) {
      ctx.print("Map<String, ");
      if (lang_1.isPresent(type.valueType)) {
        type.valueType.visitType(this, ctx);
      } else {
        ctx.print("dynamic");
      }
      ctx.print(">");
      return null;
    };
    _DartEmitterVisitor.prototype._visitParams = function (params, ctx) {
      var _this = this;
      this.visitAllObjects(function (param) {
        if (lang_1.isPresent(param.type)) {
          param.type.visitType(_this, ctx);
          ctx.print(' ');
        }
        ctx.print(param.name);
      }, params, ctx, ',');
    };
    _DartEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {
      var _this = this;
      if (lang_1.isBlank(value.name)) {
        throw new exceptions_1.BaseException("Internal error: unknown identifier " + value);
      }
      if (lang_1.isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {
        var prefix = this.importsWithPrefixes.get(value.moduleUrl);
        if (lang_1.isBlank(prefix)) {
          prefix = "import" + this.importsWithPrefixes.size;
          this.importsWithPrefixes.set(value.moduleUrl, prefix);
        }
        ctx.print(prefix + ".");
      }
      ctx.print(value.name);
      if (lang_1.isPresent(typeParams) && typeParams.length > 0) {
        ctx.print("<");
        this.visitAllObjects(function (type) {
          return type.visitType(_this, ctx);
        }, typeParams, ctx, ',');
        ctx.print(">");
      }
    };
    return _DartEmitterVisitor;
  }(abstract_emitter_1.AbstractEmitterVisitor);
  function getSuperConstructorCallExpr(stmt) {
    if (stmt instanceof o.ExpressionStatement) {
      var expr = stmt.expr;
      if (expr instanceof o.InvokeFunctionExpr) {
        var fn = expr.fn;
        if (fn instanceof o.ReadVarExpr) {
          if (fn.builtin === o.BuiltinVar.Super) {
            return expr;
          }
        }
      }
    }
    return null;
  }
  function isConstType(type) {
    return lang_1.isPresent(type) && type.hasModifier(o.TypeModifier.Const);
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\|\n|\r|\$/g;
  exports.CATCH_ERROR_VAR = o.variable('error');
  exports.CATCH_STACK_VAR = o.variable('stack');
  var OutputEmitter = function () {
    function OutputEmitter() {}
    return OutputEmitter;
  }();
  exports.OutputEmitter = OutputEmitter;
  var _EmittedLine = function () {
    function _EmittedLine(indent) {
      this.indent = indent;
      this.parts = [];
    }
    return _EmittedLine;
  }();
  var EmitterVisitorContext = function () {
    function EmitterVisitorContext(_exportedVars, _indent) {
      this._exportedVars = _exportedVars;
      this._indent = _indent;
      this._classes = [];
      this._lines = [new _EmittedLine(_indent)];
    }
    EmitterVisitorContext.createRoot = function (exportedVars) {
      return new EmitterVisitorContext(exportedVars, 0);
    };
    Object.defineProperty(EmitterVisitorContext.prototype, "_currentLine", {
      get: function () {
        return this._lines[this._lines.length - 1];
      },
      enumerable: true,
      configurable: true
    });
    EmitterVisitorContext.prototype.isExportedVar = function (varName) {
      return this._exportedVars.indexOf(varName) !== -1;
    };
    EmitterVisitorContext.prototype.println = function (lastPart) {
      if (lastPart === void 0) {
        lastPart = '';
      }
      this.print(lastPart, true);
    };
    EmitterVisitorContext.prototype.lineIsEmpty = function () {
      return this._currentLine.parts.length === 0;
    };
    EmitterVisitorContext.prototype.print = function (part, newLine) {
      if (newLine === void 0) {
        newLine = false;
      }
      if (part.length > 0) {
        this._currentLine.parts.push(part);
      }
      if (newLine) {
        this._lines.push(new _EmittedLine(this._indent));
      }
    };
    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {
      if (this.lineIsEmpty()) {
        this._lines.pop();
      }
    };
    EmitterVisitorContext.prototype.incIndent = function () {
      this._indent++;
      this._currentLine.indent = this._indent;
    };
    EmitterVisitorContext.prototype.decIndent = function () {
      this._indent--;
      this._currentLine.indent = this._indent;
    };
    EmitterVisitorContext.prototype.pushClass = function (clazz) {
      this._classes.push(clazz);
    };
    EmitterVisitorContext.prototype.popClass = function () {
      return this._classes.pop();
    };
    Object.defineProperty(EmitterVisitorContext.prototype, "currentClass", {
      get: function () {
        return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;
      },
      enumerable: true,
      configurable: true
    });
    EmitterVisitorContext.prototype.toSource = function () {
      var lines = this._lines;
      if (lines[lines.length - 1].parts.length === 0) {
        lines = lines.slice(0, lines.length - 1);
      }
      return lines.map(function (line) {
        if (line.parts.length > 0) {
          return _createIndent(line.indent) + line.parts.join('');
        } else {
          return '';
        }
      }).join('\n');
    };
    return EmitterVisitorContext;
  }();
  exports.EmitterVisitorContext = EmitterVisitorContext;
  var AbstractEmitterVisitor = function () {
    function AbstractEmitterVisitor(_escapeDollarInStrings) {
      this._escapeDollarInStrings = _escapeDollarInStrings;
    }
    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {
      stmt.expr.visitExpression(this, ctx);
      ctx.println(';');
      return null;
    };
    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {
      ctx.print("return ");
      stmt.value.visitExpression(this, ctx);
      ctx.println(';');
      return null;
    };
    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {
      ctx.print("if (");
      stmt.condition.visitExpression(this, ctx);
      ctx.print(") {");
      var hasElseCase = lang_1.isPresent(stmt.falseCase) && stmt.falseCase.length > 0;
      if (stmt.trueCase.length <= 1 && !hasElseCase) {
        ctx.print(" ");
        this.visitAllStatements(stmt.trueCase, ctx);
        ctx.removeEmptyLastLine();
        ctx.print(" ");
      } else {
        ctx.println();
        ctx.incIndent();
        this.visitAllStatements(stmt.trueCase, ctx);
        ctx.decIndent();
        if (hasElseCase) {
          ctx.println("} else {");
          ctx.incIndent();
          this.visitAllStatements(stmt.falseCase, ctx);
          ctx.decIndent();
        }
      }
      ctx.println("}");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {
      ctx.print("throw ");
      stmt.error.visitExpression(this, ctx);
      ctx.println(";");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {
      var lines = stmt.comment.split('\n');
      lines.forEach(function (line) {
        ctx.println("// " + line);
      });
      return null;
    };
    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {
      var lineWasEmpty = ctx.lineIsEmpty();
      if (!lineWasEmpty) {
        ctx.print('(');
      }
      ctx.print(expr.name + " = ");
      expr.value.visitExpression(this, ctx);
      if (!lineWasEmpty) {
        ctx.print(')');
      }
      return null;
    };
    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {
      var lineWasEmpty = ctx.lineIsEmpty();
      if (!lineWasEmpty) {
        ctx.print('(');
      }
      expr.receiver.visitExpression(this, ctx);
      ctx.print("[");
      expr.index.visitExpression(this, ctx);
      ctx.print("] = ");
      expr.value.visitExpression(this, ctx);
      if (!lineWasEmpty) {
        ctx.print(')');
      }
      return null;
    };
    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {
      var lineWasEmpty = ctx.lineIsEmpty();
      if (!lineWasEmpty) {
        ctx.print('(');
      }
      expr.receiver.visitExpression(this, ctx);
      ctx.print("." + expr.name + " = ");
      expr.value.visitExpression(this, ctx);
      if (!lineWasEmpty) {
        ctx.print(')');
      }
      return null;
    };
    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {
      expr.receiver.visitExpression(this, ctx);
      var name = expr.name;
      if (lang_1.isPresent(expr.builtin)) {
        name = this.getBuiltinMethodName(expr.builtin);
        if (lang_1.isBlank(name)) {
          return null;
        }
      }
      ctx.print("." + name + "(");
      this.visitAllExpressions(expr.args, ctx, ",");
      ctx.print(")");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {
      expr.fn.visitExpression(this, ctx);
      ctx.print("(");
      this.visitAllExpressions(expr.args, ctx, ',');
      ctx.print(")");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {
      var varName = ast.name;
      if (lang_1.isPresent(ast.builtin)) {
        switch (ast.builtin) {
          case o.BuiltinVar.Super:
            varName = 'super';
            break;
          case o.BuiltinVar.This:
            varName = 'this';
            break;
          case o.BuiltinVar.CatchError:
            varName = exports.CATCH_ERROR_VAR.name;
            break;
          case o.BuiltinVar.CatchStack:
            varName = exports.CATCH_STACK_VAR.name;
            break;
          default:
            throw new exceptions_1.BaseException("Unknown builtin variable " + ast.builtin);
        }
      }
      ctx.print(varName);
      return null;
    };
    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {
      ctx.print("new ");
      ast.classExpr.visitExpression(this, ctx);
      ctx.print("(");
      this.visitAllExpressions(ast.args, ctx, ',');
      ctx.print(")");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {
      var value = ast.value;
      if (lang_1.isString(value)) {
        ctx.print(escapeSingleQuoteString(value, this._escapeDollarInStrings));
      } else if (lang_1.isBlank(value)) {
        ctx.print('null');
      } else {
        ctx.print("" + value);
      }
      return null;
    };
    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {
      ctx.print("(");
      ast.condition.visitExpression(this, ctx);
      ctx.print('? ');
      ast.trueCase.visitExpression(this, ctx);
      ctx.print(': ');
      ast.falseCase.visitExpression(this, ctx);
      ctx.print(")");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {
      ctx.print('!');
      ast.condition.visitExpression(this, ctx);
      return null;
    };
    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {
      var opStr;
      switch (ast.operator) {
        case o.BinaryOperator.Equals:
          opStr = '==';
          break;
        case o.BinaryOperator.Identical:
          opStr = '===';
          break;
        case o.BinaryOperator.NotEquals:
          opStr = '!=';
          break;
        case o.BinaryOperator.NotIdentical:
          opStr = '!==';
          break;
        case o.BinaryOperator.And:
          opStr = '&&';
          break;
        case o.BinaryOperator.Or:
          opStr = '||';
          break;
        case o.BinaryOperator.Plus:
          opStr = '+';
          break;
        case o.BinaryOperator.Minus:
          opStr = '-';
          break;
        case o.BinaryOperator.Divide:
          opStr = '/';
          break;
        case o.BinaryOperator.Multiply:
          opStr = '*';
          break;
        case o.BinaryOperator.Modulo:
          opStr = '%';
          break;
        case o.BinaryOperator.Lower:
          opStr = '<';
          break;
        case o.BinaryOperator.LowerEquals:
          opStr = '<=';
          break;
        case o.BinaryOperator.Bigger:
          opStr = '>';
          break;
        case o.BinaryOperator.BiggerEquals:
          opStr = '>=';
          break;
        default:
          throw new exceptions_1.BaseException("Unknown operator " + ast.operator);
      }
      ctx.print("(");
      ast.lhs.visitExpression(this, ctx);
      ctx.print(" " + opStr + " ");
      ast.rhs.visitExpression(this, ctx);
      ctx.print(")");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {
      ast.receiver.visitExpression(this, ctx);
      ctx.print(".");
      ctx.print(ast.name);
      return null;
    };
    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {
      ast.receiver.visitExpression(this, ctx);
      ctx.print("[");
      ast.index.visitExpression(this, ctx);
      ctx.print("]");
      return null;
    };
    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {
      var useNewLine = ast.entries.length > 1;
      ctx.print("[", useNewLine);
      ctx.incIndent();
      this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);
      ctx.decIndent();
      ctx.print("]", useNewLine);
      return null;
    };
    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {
      var _this = this;
      var useNewLine = ast.entries.length > 1;
      ctx.print("{", useNewLine);
      ctx.incIndent();
      this.visitAllObjects(function (entry) {
        ctx.print(escapeSingleQuoteString(entry[0], _this._escapeDollarInStrings) + ": ");
        entry[1].visitExpression(_this, ctx);
      }, ast.entries, ctx, ',', useNewLine);
      ctx.decIndent();
      ctx.print("}", useNewLine);
      return null;
    };
    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {
      var _this = this;
      if (newLine === void 0) {
        newLine = false;
      }
      this.visitAllObjects(function (expr) {
        return expr.visitExpression(_this, ctx);
      }, expressions, ctx, separator, newLine);
    };
    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {
      if (newLine === void 0) {
        newLine = false;
      }
      for (var i = 0; i < expressions.length; i++) {
        if (i > 0) {
          ctx.print(separator, newLine);
        }
        handler(expressions[i]);
      }
      if (newLine) {
        ctx.println();
      }
    };
    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {
      var _this = this;
      statements.forEach(function (stmt) {
        return stmt.visitStatement(_this, ctx);
      });
    };
    return AbstractEmitterVisitor;
  }();
  exports.AbstractEmitterVisitor = AbstractEmitterVisitor;
  function escapeSingleQuoteString(input, escapeDollar) {
    if (lang_1.isBlank(input)) {
      return null;
    }
    var body = lang_1.StringWrapper.replaceAllMapped(input, _SINGLE_QUOTE_ESCAPE_STRING_RE, function (match) {
      if (match[0] == '$') {
        return escapeDollar ? '\\$' : '$';
      } else if (match[0] == '\n') {
        return '\\n';
      } else if (match[0] == '\r') {
        return '\\r';
      } else {
        return "\\" + match[0];
      }
    });
    return "'" + body + "'";
  }
  exports.escapeSingleQuoteString = escapeSingleQuoteString;
  function _createIndent(count) {
    var res = '';
    for (var i = 0; i < count; i++) {
      res += '  ';
    }
    return res;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/ts_emitter.js', ['npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var abstract_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/abstract_emitter.js');
  var _debugModuleUrl = 'asset://debug/lib';
  function debugOutputAstAsTypeScript(ast) {
    var converter = new _TsEmitterVisitor(_debugModuleUrl);
    var ctx = abstract_emitter_1.EmitterVisitorContext.createRoot([]);
    var asts;
    if (lang_1.isArray(ast)) {
      asts = ast;
    } else {
      asts = [ast];
    }
    asts.forEach(function (ast) {
      if (ast instanceof o.Statement) {
        ast.visitStatement(converter, ctx);
      } else if (ast instanceof o.Expression) {
        ast.visitExpression(converter, ctx);
      } else if (ast instanceof o.Type) {
        ast.visitType(converter, ctx);
      } else {
        throw new exceptions_1.BaseException("Don't know how to print debug info for " + ast);
      }
    });
    return ctx.toSource();
  }
  exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;
  var TypeScriptEmitter = function () {
    function TypeScriptEmitter(_importGenerator) {
      this._importGenerator = _importGenerator;
    }
    TypeScriptEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {
      var _this = this;
      var converter = new _TsEmitterVisitor(moduleUrl);
      var ctx = abstract_emitter_1.EmitterVisitorContext.createRoot(exportedVars);
      converter.visitAllStatements(stmts, ctx);
      var srcParts = [];
      converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {
        srcParts.push("imp" + ("ort * as " + prefix + " from '" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + "';"));
      });
      srcParts.push(ctx.toSource());
      return srcParts.join('\n');
    };
    return TypeScriptEmitter;
  }();
  exports.TypeScriptEmitter = TypeScriptEmitter;
  var _TsEmitterVisitor = function (_super) {
    __extends(_TsEmitterVisitor, _super);
    function _TsEmitterVisitor(_moduleUrl) {
      _super.call(this, false);
      this._moduleUrl = _moduleUrl;
      this.importsWithPrefixes = new Map();
    }
    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {
      this._visitIdentifier(ast.value, ast.typeParams, ctx);
      return null;
    };
    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {
      if (ctx.isExportedVar(stmt.name)) {
        ctx.print("export ");
      }
      if (stmt.hasModifier(o.StmtModifier.Final)) {
        ctx.print("const");
      } else {
        ctx.print("var");
      }
      ctx.print(" " + stmt.name);
      if (lang_1.isPresent(stmt.type)) {
        ctx.print(":");
        stmt.type.visitType(this, ctx);
      }
      ctx.print(" = ");
      stmt.value.visitExpression(this, ctx);
      ctx.println(";");
      return null;
    };
    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {
      ctx.print("(<");
      ast.type.visitType(this, ctx);
      ctx.print(">");
      ast.value.visitExpression(this, ctx);
      ctx.print(")");
      return null;
    };
    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {
      var _this = this;
      ctx.pushClass(stmt);
      if (ctx.isExportedVar(stmt.name)) {
        ctx.print("export ");
      }
      ctx.print("class " + stmt.name);
      if (lang_1.isPresent(stmt.parent)) {
        ctx.print(" extends ");
        stmt.parent.visitExpression(this, ctx);
      }
      ctx.println(" {");
      ctx.incIndent();
      stmt.fields.forEach(function (field) {
        return _this._visitClassField(field, ctx);
      });
      if (lang_1.isPresent(stmt.constructorMethod)) {
        this._visitClassConstructor(stmt, ctx);
      }
      stmt.getters.forEach(function (getter) {
        return _this._visitClassGetter(getter, ctx);
      });
      stmt.methods.forEach(function (method) {
        return _this._visitClassMethod(method, ctx);
      });
      ctx.decIndent();
      ctx.println("}");
      ctx.popClass();
      return null;
    };
    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {
      if (field.hasModifier(o.StmtModifier.Private)) {
        ctx.print("private ");
      }
      ctx.print(field.name);
      if (lang_1.isPresent(field.type)) {
        ctx.print(":");
        field.type.visitType(this, ctx);
      } else {
        ctx.print(": any");
      }
      ctx.println(";");
    };
    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {
      if (getter.hasModifier(o.StmtModifier.Private)) {
        ctx.print("private ");
      }
      ctx.print("get " + getter.name + "()");
      if (lang_1.isPresent(getter.type)) {
        ctx.print(":");
        getter.type.visitType(this, ctx);
      }
      ctx.println(" {");
      ctx.incIndent();
      this.visitAllStatements(getter.body, ctx);
      ctx.decIndent();
      ctx.println("}");
    };
    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {
      ctx.print("constructor(");
      this._visitParams(stmt.constructorMethod.params, ctx);
      ctx.println(") {");
      ctx.incIndent();
      this.visitAllStatements(stmt.constructorMethod.body, ctx);
      ctx.decIndent();
      ctx.println("}");
    };
    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {
      if (method.hasModifier(o.StmtModifier.Private)) {
        ctx.print("private ");
      }
      ctx.print(method.name + "(");
      this._visitParams(method.params, ctx);
      ctx.print("):");
      if (lang_1.isPresent(method.type)) {
        method.type.visitType(this, ctx);
      } else {
        ctx.print("void");
      }
      ctx.println(" {");
      ctx.incIndent();
      this.visitAllStatements(method.body, ctx);
      ctx.decIndent();
      ctx.println("}");
    };
    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {
      ctx.print("(");
      this._visitParams(ast.params, ctx);
      ctx.print("):");
      if (lang_1.isPresent(ast.type)) {
        ast.type.visitType(this, ctx);
      } else {
        ctx.print("void");
      }
      ctx.println(" => {");
      ctx.incIndent();
      this.visitAllStatements(ast.statements, ctx);
      ctx.decIndent();
      ctx.print("}");
      return null;
    };
    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {
      if (ctx.isExportedVar(stmt.name)) {
        ctx.print("export ");
      }
      ctx.print("function " + stmt.name + "(");
      this._visitParams(stmt.params, ctx);
      ctx.print("):");
      if (lang_1.isPresent(stmt.type)) {
        stmt.type.visitType(this, ctx);
      } else {
        ctx.print("void");
      }
      ctx.println(" {");
      ctx.incIndent();
      this.visitAllStatements(stmt.statements, ctx);
      ctx.decIndent();
      ctx.println("}");
      return null;
    };
    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {
      ctx.println("try {");
      ctx.incIndent();
      this.visitAllStatements(stmt.bodyStmts, ctx);
      ctx.decIndent();
      ctx.println("} catch (" + abstract_emitter_1.CATCH_ERROR_VAR.name + ") {");
      ctx.incIndent();
      var catchStmts = [abstract_emitter_1.CATCH_STACK_VAR.set(abstract_emitter_1.CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [o.StmtModifier.Final])].concat(stmt.catchStmts);
      this.visitAllStatements(catchStmts, ctx);
      ctx.decIndent();
      ctx.println("}");
      return null;
    };
    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {
      var typeStr;
      switch (type.name) {
        case o.BuiltinTypeName.Bool:
          typeStr = 'boolean';
          break;
        case o.BuiltinTypeName.Dynamic:
          typeStr = 'any';
          break;
        case o.BuiltinTypeName.Function:
          typeStr = 'Function';
          break;
        case o.BuiltinTypeName.Number:
          typeStr = 'number';
          break;
        case o.BuiltinTypeName.Int:
          typeStr = 'number';
          break;
        case o.BuiltinTypeName.String:
          typeStr = 'string';
          break;
        default:
          throw new exceptions_1.BaseException("Unsupported builtin type " + type.name);
      }
      ctx.print(typeStr);
      return null;
    };
    _TsEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {
      this._visitIdentifier(ast.value, ast.typeParams, ctx);
      return null;
    };
    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {
      if (lang_1.isPresent(type.of)) {
        type.of.visitType(this, ctx);
      } else {
        ctx.print("any");
      }
      ctx.print("[]");
      return null;
    };
    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {
      ctx.print("{[key: string]:");
      if (lang_1.isPresent(type.valueType)) {
        type.valueType.visitType(this, ctx);
      } else {
        ctx.print("any");
      }
      ctx.print("}");
      return null;
    };
    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {
      var name;
      switch (method) {
        case o.BuiltinMethod.ConcatArray:
          name = 'concat';
          break;
        case o.BuiltinMethod.SubscribeObservable:
          name = 'subscribe';
          break;
        case o.BuiltinMethod.bind:
          name = 'bind';
          break;
        default:
          throw new exceptions_1.BaseException("Unknown builtin method: " + method);
      }
      return name;
    };
    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {
      var _this = this;
      this.visitAllObjects(function (param) {
        ctx.print(param.name);
        if (lang_1.isPresent(param.type)) {
          ctx.print(":");
          param.type.visitType(_this, ctx);
        }
      }, params, ctx, ',');
    };
    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {
      var _this = this;
      if (lang_1.isBlank(value.name)) {
        throw new exceptions_1.BaseException("Internal error: unknown identifier " + value);
      }
      if (lang_1.isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {
        var prefix = this.importsWithPrefixes.get(value.moduleUrl);
        if (lang_1.isBlank(prefix)) {
          prefix = "import" + this.importsWithPrefixes.size;
          this.importsWithPrefixes.set(value.moduleUrl, prefix);
        }
        ctx.print(prefix + ".");
      }
      ctx.print(value.name);
      if (lang_1.isPresent(typeParams) && typeParams.length > 0) {
        ctx.print("<");
        this.visitAllObjects(function (type) {
          return type.visitType(_this, ctx);
        }, typeParams, ctx, ',');
        ctx.print(">");
      }
    };
    return _TsEmitterVisitor;
  }(abstract_emitter_1.AbstractEmitterVisitor);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/output_interpreter.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/dart_emitter.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/ts_emitter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var async_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var dart_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/dart_emitter.js');
  var ts_emitter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/ts_emitter.js');
  function interpretStatements(statements, resultVar, instanceFactory) {
    var stmtsWithReturn = statements.concat([new o.ReturnStatement(o.variable(resultVar))]);
    var ctx = new _ExecutionContext(null, null, null, null, new Map(), new Map(), new Map(), new Map(), instanceFactory);
    var visitor = new StatementInterpreter();
    var result = visitor.visitAllStatements(stmtsWithReturn, ctx);
    return lang_1.isPresent(result) ? result.value : null;
  }
  exports.interpretStatements = interpretStatements;
  var DynamicInstance = function () {
    function DynamicInstance() {}
    Object.defineProperty(DynamicInstance.prototype, "props", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DynamicInstance.prototype, "getters", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DynamicInstance.prototype, "methods", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DynamicInstance.prototype, "clazz", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return DynamicInstance;
  }();
  exports.DynamicInstance = DynamicInstance;
  function isDynamicInstance(instance) {
    if (lang_1.IS_DART) {
      return instance instanceof DynamicInstance;
    } else {
      return lang_1.isPresent(instance) && lang_1.isPresent(instance.props) && lang_1.isPresent(instance.getters) && lang_1.isPresent(instance.methods);
    }
  }
  function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {
    var childCtx = ctx.createChildWihtLocalVars();
    for (var i = 0; i < varNames.length; i++) {
      childCtx.vars.set(varNames[i], varValues[i]);
    }
    var result = visitor.visitAllStatements(statements, childCtx);
    return lang_1.isPresent(result) ? result.value : null;
  }
  var _ExecutionContext = function () {
    function _ExecutionContext(parent, superClass, superInstance, className, vars, props, getters, methods, instanceFactory) {
      this.parent = parent;
      this.superClass = superClass;
      this.superInstance = superInstance;
      this.className = className;
      this.vars = vars;
      this.props = props;
      this.getters = getters;
      this.methods = methods;
      this.instanceFactory = instanceFactory;
    }
    _ExecutionContext.prototype.createChildWihtLocalVars = function () {
      return new _ExecutionContext(this, this.superClass, this.superInstance, this.className, new Map(), this.props, this.getters, this.methods, this.instanceFactory);
    };
    return _ExecutionContext;
  }();
  var ReturnValue = function () {
    function ReturnValue(value) {
      this.value = value;
    }
    return ReturnValue;
  }();
  var _DynamicClass = function () {
    function _DynamicClass(_classStmt, _ctx, _visitor) {
      this._classStmt = _classStmt;
      this._ctx = _ctx;
      this._visitor = _visitor;
    }
    _DynamicClass.prototype.instantiate = function (args) {
      var _this = this;
      var props = new Map();
      var getters = new Map();
      var methods = new Map();
      var superClass = this._classStmt.parent.visitExpression(this._visitor, this._ctx);
      var instanceCtx = new _ExecutionContext(this._ctx, superClass, null, this._classStmt.name, this._ctx.vars, props, getters, methods, this._ctx.instanceFactory);
      this._classStmt.fields.forEach(function (field) {
        props.set(field.name, null);
      });
      this._classStmt.getters.forEach(function (getter) {
        getters.set(getter.name, function () {
          return _executeFunctionStatements([], [], getter.body, instanceCtx, _this._visitor);
        });
      });
      this._classStmt.methods.forEach(function (method) {
        var paramNames = method.params.map(function (param) {
          return param.name;
        });
        methods.set(method.name, _declareFn(paramNames, method.body, instanceCtx, _this._visitor));
      });
      var ctorParamNames = this._classStmt.constructorMethod.params.map(function (param) {
        return param.name;
      });
      _executeFunctionStatements(ctorParamNames, args, this._classStmt.constructorMethod.body, instanceCtx, this._visitor);
      return instanceCtx.superInstance;
    };
    _DynamicClass.prototype.debugAst = function () {
      return this._visitor.debugAst(this._classStmt);
    };
    return _DynamicClass;
  }();
  var StatementInterpreter = function () {
    function StatementInterpreter() {}
    StatementInterpreter.prototype.debugAst = function (ast) {
      return lang_1.IS_DART ? dart_emitter_1.debugOutputAstAsDart(ast) : ts_emitter_1.debugOutputAstAsTypeScript(ast);
    };
    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {
      ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));
      return null;
    };
    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {
      var value = expr.value.visitExpression(this, ctx);
      var currCtx = ctx;
      while (currCtx != null) {
        if (currCtx.vars.has(expr.name)) {
          currCtx.vars.set(expr.name, value);
          return value;
        }
        currCtx = currCtx.parent;
      }
      throw new exceptions_1.BaseException("Not declared variable " + expr.name);
    };
    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {
      var varName = ast.name;
      if (lang_1.isPresent(ast.builtin)) {
        switch (ast.builtin) {
          case o.BuiltinVar.Super:
          case o.BuiltinVar.This:
            return ctx.superInstance;
          case o.BuiltinVar.CatchError:
            varName = CATCH_ERROR_VAR;
            break;
          case o.BuiltinVar.CatchStack:
            varName = CATCH_STACK_VAR;
            break;
          default:
            throw new exceptions_1.BaseException("Unknown builtin variable " + ast.builtin);
        }
      }
      var currCtx = ctx;
      while (currCtx != null) {
        if (currCtx.vars.has(varName)) {
          return currCtx.vars.get(varName);
        }
        currCtx = currCtx.parent;
      }
      throw new exceptions_1.BaseException("Not declared variable " + varName);
    };
    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {
      var receiver = expr.receiver.visitExpression(this, ctx);
      var index = expr.index.visitExpression(this, ctx);
      var value = expr.value.visitExpression(this, ctx);
      receiver[index] = value;
      return value;
    };
    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {
      var receiver = expr.receiver.visitExpression(this, ctx);
      var value = expr.value.visitExpression(this, ctx);
      if (isDynamicInstance(receiver)) {
        var di = receiver;
        if (di.props.has(expr.name)) {
          di.props.set(expr.name, value);
        } else {
          core_1.reflector.setter(expr.name)(receiver, value);
        }
      } else {
        core_1.reflector.setter(expr.name)(receiver, value);
      }
      return value;
    };
    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {
      var receiver = expr.receiver.visitExpression(this, ctx);
      var args = this.visitAllExpressions(expr.args, ctx);
      var result;
      if (lang_1.isPresent(expr.builtin)) {
        switch (expr.builtin) {
          case o.BuiltinMethod.ConcatArray:
            result = collection_1.ListWrapper.concat(receiver, args[0]);
            break;
          case o.BuiltinMethod.SubscribeObservable:
            result = async_1.ObservableWrapper.subscribe(receiver, args[0]);
            break;
          case o.BuiltinMethod.bind:
            if (lang_1.IS_DART) {
              result = receiver;
            } else {
              result = receiver.bind(args[0]);
            }
            break;
          default:
            throw new exceptions_1.BaseException("Unknown builtin method " + expr.builtin);
        }
      } else if (isDynamicInstance(receiver)) {
        var di = receiver;
        if (di.methods.has(expr.name)) {
          result = lang_1.FunctionWrapper.apply(di.methods.get(expr.name), args);
        } else {
          result = core_1.reflector.method(expr.name)(receiver, args);
        }
      } else {
        result = core_1.reflector.method(expr.name)(receiver, args);
      }
      return result;
    };
    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {
      var args = this.visitAllExpressions(stmt.args, ctx);
      var fnExpr = stmt.fn;
      if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {
        ctx.superInstance = ctx.instanceFactory.createInstance(ctx.superClass, ctx.className, args, ctx.props, ctx.getters, ctx.methods);
        ctx.parent.superInstance = ctx.superInstance;
        return null;
      } else {
        var fn = stmt.fn.visitExpression(this, ctx);
        return lang_1.FunctionWrapper.apply(fn, args);
      }
    };
    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {
      return new ReturnValue(stmt.value.visitExpression(this, ctx));
    };
    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {
      var clazz = new _DynamicClass(stmt, ctx, this);
      ctx.vars.set(stmt.name, clazz);
      return null;
    };
    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {
      return stmt.expr.visitExpression(this, ctx);
    };
    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {
      var condition = stmt.condition.visitExpression(this, ctx);
      if (condition) {
        return this.visitAllStatements(stmt.trueCase, ctx);
      } else if (lang_1.isPresent(stmt.falseCase)) {
        return this.visitAllStatements(stmt.falseCase, ctx);
      }
      return null;
    };
    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {
      try {
        return this.visitAllStatements(stmt.bodyStmts, ctx);
      } catch (e) {
        var childCtx = ctx.createChildWihtLocalVars();
        childCtx.vars.set(CATCH_ERROR_VAR, e);
        childCtx.vars.set(CATCH_STACK_VAR, e.stack);
        return this.visitAllStatements(stmt.catchStmts, childCtx);
      }
    };
    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {
      throw stmt.error.visitExpression(this, ctx);
    };
    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) {
      return null;
    };
    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {
      var args = this.visitAllExpressions(ast.args, ctx);
      var clazz = ast.classExpr.visitExpression(this, ctx);
      if (clazz instanceof _DynamicClass) {
        return clazz.instantiate(args);
      } else {
        return lang_1.FunctionWrapper.apply(core_1.reflector.factory(clazz), args);
      }
    };
    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) {
      return ast.value;
    };
    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {
      return ast.value.runtime;
    };
    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {
      if (ast.condition.visitExpression(this, ctx)) {
        return ast.trueCase.visitExpression(this, ctx);
      } else if (lang_1.isPresent(ast.falseCase)) {
        return ast.falseCase.visitExpression(this, ctx);
      }
      return null;
    };
    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {
      return !ast.condition.visitExpression(this, ctx);
    };
    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {
      return ast.value.visitExpression(this, ctx);
    };
    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {
      var paramNames = ast.params.map(function (param) {
        return param.name;
      });
      return _declareFn(paramNames, ast.statements, ctx, this);
    };
    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {
      var paramNames = stmt.params.map(function (param) {
        return param.name;
      });
      ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));
      return null;
    };
    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {
      var _this = this;
      var lhs = function () {
        return ast.lhs.visitExpression(_this, ctx);
      };
      var rhs = function () {
        return ast.rhs.visitExpression(_this, ctx);
      };
      switch (ast.operator) {
        case o.BinaryOperator.Equals:
          return lhs() == rhs();
        case o.BinaryOperator.Identical:
          return lhs() === rhs();
        case o.BinaryOperator.NotEquals:
          return lhs() != rhs();
        case o.BinaryOperator.NotIdentical:
          return lhs() !== rhs();
        case o.BinaryOperator.And:
          return lhs() && rhs();
        case o.BinaryOperator.Or:
          return lhs() || rhs();
        case o.BinaryOperator.Plus:
          return lhs() + rhs();
        case o.BinaryOperator.Minus:
          return lhs() - rhs();
        case o.BinaryOperator.Divide:
          return lhs() / rhs();
        case o.BinaryOperator.Multiply:
          return lhs() * rhs();
        case o.BinaryOperator.Modulo:
          return lhs() % rhs();
        case o.BinaryOperator.Lower:
          return lhs() < rhs();
        case o.BinaryOperator.LowerEquals:
          return lhs() <= rhs();
        case o.BinaryOperator.Bigger:
          return lhs() > rhs();
        case o.BinaryOperator.BiggerEquals:
          return lhs() >= rhs();
        default:
          throw new exceptions_1.BaseException("Unknown operator " + ast.operator);
      }
    };
    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {
      var result;
      var receiver = ast.receiver.visitExpression(this, ctx);
      if (isDynamicInstance(receiver)) {
        var di = receiver;
        if (di.props.has(ast.name)) {
          result = di.props.get(ast.name);
        } else if (di.getters.has(ast.name)) {
          result = di.getters.get(ast.name)();
        } else if (di.methods.has(ast.name)) {
          result = di.methods.get(ast.name);
        } else {
          result = core_1.reflector.getter(ast.name)(receiver);
        }
      } else {
        result = core_1.reflector.getter(ast.name)(receiver);
      }
      return result;
    };
    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {
      var receiver = ast.receiver.visitExpression(this, ctx);
      var prop = ast.index.visitExpression(this, ctx);
      return receiver[prop];
    };
    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {
      return this.visitAllExpressions(ast.entries, ctx);
    };
    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {
      var _this = this;
      var result = {};
      ast.entries.forEach(function (entry) {
        return result[entry[0]] = entry[1].visitExpression(_this, ctx);
      });
      return result;
    };
    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {
      var _this = this;
      return expressions.map(function (expr) {
        return expr.visitExpression(_this, ctx);
      });
    };
    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {
      for (var i = 0; i < statements.length; i++) {
        var stmt = statements[i];
        var val = stmt.visitStatement(this, ctx);
        if (val instanceof ReturnValue) {
          return val;
        }
      }
      return null;
    };
    return StatementInterpreter;
  }();
  function _declareFn(varNames, statements, ctx, visitor) {
    switch (varNames.length) {
      case 0:
        return function () {
          return _executeFunctionStatements(varNames, [], statements, ctx, visitor);
        };
      case 1:
        return function (d0) {
          return _executeFunctionStatements(varNames, [d0], statements, ctx, visitor);
        };
      case 2:
        return function (d0, d1) {
          return _executeFunctionStatements(varNames, [d0, d1], statements, ctx, visitor);
        };
      case 3:
        return function (d0, d1, d2) {
          return _executeFunctionStatements(varNames, [d0, d1, d2], statements, ctx, visitor);
        };
      case 4:
        return function (d0, d1, d2, d3) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3], statements, ctx, visitor);
        };
      case 5:
        return function (d0, d1, d2, d3, d4) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4], statements, ctx, visitor);
        };
      case 6:
        return function (d0, d1, d2, d3, d4, d5) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4, d5], statements, ctx, visitor);
        };
      case 7:
        return function (d0, d1, d2, d3, d4, d5, d6) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4, d5, d6], statements, ctx, visitor);
        };
      case 8:
        return function (d0, d1, d2, d3, d4, d5, d6, d7) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4, d5, d6, d7], statements, ctx, visitor);
        };
      case 9:
        return function (d0, d1, d2, d3, d4, d5, d6, d7, d8) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4, d5, d6, d7, d8], statements, ctx, visitor);
        };
      case 10:
        return function (d0, d1, d2, d3, d4, d5, d6, d7, d8, d9) {
          return _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9], statements, ctx, visitor);
        };
      default:
        throw new exceptions_1.BaseException('Declaring functions with more than 10 arguments is not supported right now');
    }
  }
  var CATCH_ERROR_VAR = 'error';
  var CATCH_STACK_VAR = 'stack';
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/interpretive_view.js', ['npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var InterpretiveAppViewInstanceFactory = function () {
    function InterpretiveAppViewInstanceFactory() {}
    InterpretiveAppViewInstanceFactory.prototype.createInstance = function (superClass, clazz, args, props, getters, methods) {
      if (superClass === core_private_1.AppView) {
        args = args.concat([null]);
        return new _InterpretiveAppView(args, props, getters, methods);
      } else if (superClass === core_private_1.DebugAppView) {
        return new _InterpretiveAppView(args, props, getters, methods);
      }
      throw new exceptions_1.BaseException("Can't instantiate class " + superClass + " in interpretative mode");
    };
    return InterpretiveAppViewInstanceFactory;
  }();
  exports.InterpretiveAppViewInstanceFactory = InterpretiveAppViewInstanceFactory;
  var _InterpretiveAppView = function (_super) {
    __extends(_InterpretiveAppView, _super);
    function _InterpretiveAppView(args, props, getters, methods) {
      _super.call(this, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);
      this.props = props;
      this.getters = getters;
      this.methods = methods;
    }
    _InterpretiveAppView.prototype.createInternal = function (rootSelector) {
      var m = this.methods.get('createInternal');
      if (lang_1.isPresent(m)) {
        return m(rootSelector);
      } else {
        return _super.prototype.createInternal.call(this, rootSelector);
      }
    };
    _InterpretiveAppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {
      var m = this.methods.get('injectorGetInternal');
      if (lang_1.isPresent(m)) {
        return m(token, nodeIndex, notFoundResult);
      } else {
        return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);
      }
    };
    _InterpretiveAppView.prototype.destroyInternal = function () {
      var m = this.methods.get('destroyInternal');
      if (lang_1.isPresent(m)) {
        return m();
      } else {
        return _super.prototype.destroyInternal.call(this);
      }
    };
    _InterpretiveAppView.prototype.dirtyParentQueriesInternal = function () {
      var m = this.methods.get('dirtyParentQueriesInternal');
      if (lang_1.isPresent(m)) {
        return m();
      } else {
        return _super.prototype.dirtyParentQueriesInternal.call(this);
      }
    };
    _InterpretiveAppView.prototype.detectChangesInternal = function (throwOnChange) {
      var m = this.methods.get('detectChangesInternal');
      if (lang_1.isPresent(m)) {
        return m(throwOnChange);
      } else {
        return _super.prototype.detectChangesInternal.call(this, throwOnChange);
      }
    };
    return _InterpretiveAppView;
  }(core_private_1.DebugAppView);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/runtime_compiler.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/style_compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/directive_normalizer.js', 'npm:@angular/compiler@2.0.0-rc.1/src/metadata_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/config.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_jit.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_interpreter.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/interpretive_view.js', 'npm:@angular/compiler@2.0.0-rc.1/src/xhr.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var async_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var style_compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/style_compiler.js');
  var view_compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_compiler.js');
  var template_parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_parser.js');
  var directive_normalizer_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/directive_normalizer.js');
  var metadata_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/metadata_resolver.js');
  var config_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/config.js');
  var ir = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var output_jit_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_jit.js');
  var output_interpreter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_interpreter.js');
  var interpretive_view_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/interpretive_view.js');
  var xhr_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/xhr.js');
  var RuntimeCompiler = function () {
    function RuntimeCompiler(_metadataResolver, _templateNormalizer, _templateParser, _styleCompiler, _viewCompiler, _xhr, _genConfig) {
      this._metadataResolver = _metadataResolver;
      this._templateNormalizer = _templateNormalizer;
      this._templateParser = _templateParser;
      this._styleCompiler = _styleCompiler;
      this._viewCompiler = _viewCompiler;
      this._xhr = _xhr;
      this._genConfig = _genConfig;
      this._styleCache = new Map();
      this._hostCacheKeys = new Map();
      this._compiledTemplateCache = new Map();
      this._compiledTemplateDone = new Map();
    }
    RuntimeCompiler.prototype.resolveComponent = function (componentType) {
      var compMeta = this._metadataResolver.getDirectiveMetadata(componentType);
      var hostCacheKey = this._hostCacheKeys.get(componentType);
      if (lang_1.isBlank(hostCacheKey)) {
        hostCacheKey = new Object();
        this._hostCacheKeys.set(componentType, hostCacheKey);
        assertComponent(compMeta);
        var hostMeta = compile_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);
        this._loadAndCompileComponent(hostCacheKey, hostMeta, [compMeta], [], []);
      }
      return this._compiledTemplateDone.get(hostCacheKey).then(function (compiledTemplate) {
        return new core_1.ComponentFactory(compMeta.selector, compiledTemplate.viewFactory, componentType);
      });
    };
    RuntimeCompiler.prototype.clearCache = function () {
      this._styleCache.clear();
      this._compiledTemplateCache.clear();
      this._compiledTemplateDone.clear();
      this._hostCacheKeys.clear();
    };
    RuntimeCompiler.prototype._loadAndCompileComponent = function (cacheKey, compMeta, viewDirectives, pipes, compilingComponentsPath) {
      var _this = this;
      var compiledTemplate = this._compiledTemplateCache.get(cacheKey);
      var done = this._compiledTemplateDone.get(cacheKey);
      if (lang_1.isBlank(compiledTemplate)) {
        compiledTemplate = new CompiledTemplate();
        this._compiledTemplateCache.set(cacheKey, compiledTemplate);
        done = async_1.PromiseWrapper.all([this._compileComponentStyles(compMeta)].concat(viewDirectives.map(function (dirMeta) {
          return _this._templateNormalizer.normalizeDirective(dirMeta);
        }))).then(function (stylesAndNormalizedViewDirMetas) {
          var normalizedViewDirMetas = stylesAndNormalizedViewDirMetas.slice(1);
          var styles = stylesAndNormalizedViewDirMetas[0];
          var parsedTemplate = _this._templateParser.parse(compMeta, compMeta.template.template, normalizedViewDirMetas, pipes, compMeta.type.name);
          var childPromises = [];
          compiledTemplate.init(_this._compileComponent(compMeta, parsedTemplate, styles, pipes, compilingComponentsPath, childPromises));
          return async_1.PromiseWrapper.all(childPromises).then(function (_) {
            return compiledTemplate;
          });
        });
        this._compiledTemplateDone.set(cacheKey, done);
      }
      return compiledTemplate;
    };
    RuntimeCompiler.prototype._compileComponent = function (compMeta, parsedTemplate, styles, pipes, compilingComponentsPath, childPromises) {
      var _this = this;
      var compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, new ir.ExternalExpr(new compile_metadata_1.CompileIdentifierMetadata({ runtime: styles })), pipes);
      compileResult.dependencies.forEach(function (dep) {
        var childCompilingComponentsPath = collection_1.ListWrapper.clone(compilingComponentsPath);
        var childCacheKey = dep.comp.type.runtime;
        var childViewDirectives = _this._metadataResolver.getViewDirectivesMetadata(dep.comp.type.runtime);
        var childViewPipes = _this._metadataResolver.getViewPipesMetadata(dep.comp.type.runtime);
        var childIsRecursive = collection_1.ListWrapper.contains(childCompilingComponentsPath, childCacheKey);
        childCompilingComponentsPath.push(childCacheKey);
        var childComp = _this._loadAndCompileComponent(dep.comp.type.runtime, dep.comp, childViewDirectives, childViewPipes, childCompilingComponentsPath);
        dep.factoryPlaceholder.runtime = childComp.proxyViewFactory;
        dep.factoryPlaceholder.name = "viewFactory_" + dep.comp.type.name;
        if (!childIsRecursive) {
          childPromises.push(_this._compiledTemplateDone.get(childCacheKey));
        }
      });
      var factory;
      if (lang_1.IS_DART || !this._genConfig.useJit) {
        factory = output_interpreter_1.interpretStatements(compileResult.statements, compileResult.viewFactoryVar, new interpretive_view_1.InterpretiveAppViewInstanceFactory());
      } else {
        factory = output_jit_1.jitStatements(compMeta.type.name + ".template.js", compileResult.statements, compileResult.viewFactoryVar);
      }
      return factory;
    };
    RuntimeCompiler.prototype._compileComponentStyles = function (compMeta) {
      var compileResult = this._styleCompiler.compileComponent(compMeta);
      return this._resolveStylesCompileResult(compMeta.type.name, compileResult);
    };
    RuntimeCompiler.prototype._resolveStylesCompileResult = function (sourceUrl, result) {
      var _this = this;
      var promises = result.dependencies.map(function (dep) {
        return _this._loadStylesheetDep(dep);
      });
      return async_1.PromiseWrapper.all(promises).then(function (cssTexts) {
        var nestedCompileResultPromises = [];
        for (var i = 0; i < result.dependencies.length; i++) {
          var dep = result.dependencies[i];
          var cssText = cssTexts[i];
          var nestedCompileResult = _this._styleCompiler.compileStylesheet(dep.moduleUrl, cssText, dep.isShimmed);
          nestedCompileResultPromises.push(_this._resolveStylesCompileResult(dep.moduleUrl, nestedCompileResult));
        }
        return async_1.PromiseWrapper.all(nestedCompileResultPromises);
      }).then(function (nestedStylesArr) {
        for (var i = 0; i < result.dependencies.length; i++) {
          var dep = result.dependencies[i];
          dep.valuePlaceholder.runtime = nestedStylesArr[i];
          dep.valuePlaceholder.name = "importedStyles" + i;
        }
        if (lang_1.IS_DART || !_this._genConfig.useJit) {
          return output_interpreter_1.interpretStatements(result.statements, result.stylesVar, new interpretive_view_1.InterpretiveAppViewInstanceFactory());
        } else {
          return output_jit_1.jitStatements(sourceUrl + ".css.js", result.statements, result.stylesVar);
        }
      });
    };
    RuntimeCompiler.prototype._loadStylesheetDep = function (dep) {
      var cacheKey = "" + dep.moduleUrl + (dep.isShimmed ? '.shim' : '');
      var cssTextPromise = this._styleCache.get(cacheKey);
      if (lang_1.isBlank(cssTextPromise)) {
        cssTextPromise = this._xhr.get(dep.moduleUrl);
        this._styleCache.set(cacheKey, cssTextPromise);
      }
      return cssTextPromise;
    };
    RuntimeCompiler.decorators = [{ type: core_1.Injectable }];
    RuntimeCompiler.ctorParameters = [{ type: metadata_resolver_1.CompileMetadataResolver }, { type: directive_normalizer_1.DirectiveNormalizer }, { type: template_parser_1.TemplateParser }, { type: style_compiler_1.StyleCompiler }, { type: view_compiler_1.ViewCompiler }, { type: xhr_1.XHR }, { type: config_1.CompilerConfig }];
    return RuntimeCompiler;
  }();
  exports.RuntimeCompiler = RuntimeCompiler;
  var CompiledTemplate = function () {
    function CompiledTemplate() {
      var _this = this;
      this.viewFactory = null;
      this.proxyViewFactory = function (viewUtils, childInjector, contextEl) {
        return _this.viewFactory(viewUtils, childInjector, contextEl);
      };
    }
    CompiledTemplate.prototype.init = function (viewFactory) {
      this.viewFactory = viewFactory;
    };
    return CompiledTemplate;
  }();
  function assertComponent(meta) {
    if (!meta.isComponent) {
      throw new exceptions_1.BaseException("Could not compile '" + meta.type.name + "' because it is not a component.");
    }
  }
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/facade/promise.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var PromiseCompleter = function () {
        function PromiseCompleter() {
            var _this = this;
            this.promise = new Promise(function (res, rej) {
                _this.resolve = res;
                _this.reject = rej;
            });
        }
        return PromiseCompleter;
    }();
    exports.PromiseCompleter = PromiseCompleter;
    var PromiseWrapper = function () {
        function PromiseWrapper() {}
        PromiseWrapper.resolve = function (obj) {
            return Promise.resolve(obj);
        };
        PromiseWrapper.reject = function (obj, _) {
            return Promise.reject(obj);
        };
        // Note: We can't rename this method into `catch`, as this is not a valid
        // method name in Dart.
        PromiseWrapper.catchError = function (promise, onError) {
            return promise.catch(onError);
        };
        PromiseWrapper.all = function (promises) {
            if (promises.length == 0) return Promise.resolve([]);
            return Promise.all(promises);
        };
        PromiseWrapper.then = function (promise, success, rejection) {
            return promise.then(success, rejection);
        };
        PromiseWrapper.wrap = function (computation) {
            return new Promise(function (res, rej) {
                try {
                    res(computation());
                } catch (e) {
                    rej(e);
                }
            });
        };
        PromiseWrapper.scheduleMicrotask = function (computation) {
            PromiseWrapper.then(PromiseWrapper.resolve(null), computation, function (_) {});
        };
        PromiseWrapper.isPromise = function (obj) {
            return obj instanceof Promise;
        };
        PromiseWrapper.completer = function () {
            return new PromiseCompleter();
        };
        return PromiseWrapper;
    }();
    exports.PromiseWrapper = PromiseWrapper;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/promise.js', 'npm:rxjs@5.0.0-beta.6/Subject.js', 'npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js', 'npm:rxjs@5.0.0-beta.6/operator/toPromise.js', 'npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var promise_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/promise.js');
  exports.PromiseWrapper = promise_1.PromiseWrapper;
  exports.PromiseCompleter = promise_1.PromiseCompleter;
  var Subject_1 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  var PromiseObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js');
  var toPromise_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/toPromise.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  exports.Observable = Observable_1.Observable;
  var Subject_2 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  exports.Subject = Subject_2.Subject;
  var TimerWrapper = function () {
    function TimerWrapper() {}
    TimerWrapper.setTimeout = function (fn, millis) {
      return lang_1.global.setTimeout(fn, millis);
    };
    TimerWrapper.clearTimeout = function (id) {
      lang_1.global.clearTimeout(id);
    };
    TimerWrapper.setInterval = function (fn, millis) {
      return lang_1.global.setInterval(fn, millis);
    };
    TimerWrapper.clearInterval = function (id) {
      lang_1.global.clearInterval(id);
    };
    return TimerWrapper;
  }();
  exports.TimerWrapper = TimerWrapper;
  var ObservableWrapper = function () {
    function ObservableWrapper() {}
    ObservableWrapper.subscribe = function (emitter, onNext, onError, onComplete) {
      if (onComplete === void 0) {
        onComplete = function () {};
      }
      onError = typeof onError === "function" && onError || lang_1.noop;
      onComplete = typeof onComplete === "function" && onComplete || lang_1.noop;
      return emitter.subscribe({
        next: onNext,
        error: onError,
        complete: onComplete
      });
    };
    ObservableWrapper.isObservable = function (obs) {
      return !!obs.subscribe;
    };
    ObservableWrapper.hasSubscribers = function (obs) {
      return obs.observers.length > 0;
    };
    ObservableWrapper.dispose = function (subscription) {
      subscription.unsubscribe();
    };
    ObservableWrapper.callNext = function (emitter, value) {
      emitter.next(value);
    };
    ObservableWrapper.callEmit = function (emitter, value) {
      emitter.emit(value);
    };
    ObservableWrapper.callError = function (emitter, error) {
      emitter.error(error);
    };
    ObservableWrapper.callComplete = function (emitter) {
      emitter.complete();
    };
    ObservableWrapper.fromPromise = function (promise) {
      return PromiseObservable_1.PromiseObservable.create(promise);
    };
    ObservableWrapper.toPromise = function (obj) {
      return toPromise_1.toPromise.call(obj);
    };
    return ObservableWrapper;
  }();
  exports.ObservableWrapper = ObservableWrapper;
  var EventEmitter = function (_super) {
    __extends(EventEmitter, _super);
    function EventEmitter(isAsync) {
      if (isAsync === void 0) {
        isAsync = true;
      }
      _super.call(this);
      this._isAsync = isAsync;
    }
    EventEmitter.prototype.emit = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.next = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {
      var schedulerFn;
      var errorFn = function (err) {
        return null;
      };
      var completeFn = function () {
        return null;
      };
      if (generatorOrNext && typeof generatorOrNext === 'object') {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext.next(value);
          });
        } : function (value) {
          generatorOrNext.next(value);
        };
        if (generatorOrNext.error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return generatorOrNext.error(err);
            });
          } : function (err) {
            generatorOrNext.error(err);
          };
        }
        if (generatorOrNext.complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return generatorOrNext.complete();
            });
          } : function () {
            generatorOrNext.complete();
          };
        }
      } else {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext(value);
          });
        } : function (value) {
          generatorOrNext(value);
        };
        if (error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return error(err);
            });
          } : function (err) {
            error(err);
          };
        }
        if (complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return complete();
            });
          } : function () {
            complete();
          };
        }
      }
      return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);
    };
    return EventEmitter;
  }(Subject_1.Subject);
  exports.EventEmitter = EventEmitter;
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/xhr.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    // TODO: vsavkin rename it into TemplateLoader
    /**
     * An interface for retrieving documents by URL that the compiler uses
     * to load templates.
     */

    var define,
        global = this || self,
        GLOBAL = global;
    var XHR = function () {
        function XHR() {}
        XHR.prototype.get = function (url) {
            return null;
        };
        return XHR;
    }();
    exports.XHR = XHR;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js", ["npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js");
  var HtmlTextAst = function () {
    function HtmlTextAst(value, sourceSpan) {
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    HtmlTextAst.prototype.visit = function (visitor, context) {
      return visitor.visitText(this, context);
    };
    return HtmlTextAst;
  }();
  exports.HtmlTextAst = HtmlTextAst;
  var HtmlExpansionAst = function () {
    function HtmlExpansionAst(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {
      this.switchValue = switchValue;
      this.type = type;
      this.cases = cases;
      this.sourceSpan = sourceSpan;
      this.switchValueSourceSpan = switchValueSourceSpan;
    }
    HtmlExpansionAst.prototype.visit = function (visitor, context) {
      return visitor.visitExpansion(this, context);
    };
    return HtmlExpansionAst;
  }();
  exports.HtmlExpansionAst = HtmlExpansionAst;
  var HtmlExpansionCaseAst = function () {
    function HtmlExpansionCaseAst(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {
      this.value = value;
      this.expression = expression;
      this.sourceSpan = sourceSpan;
      this.valueSourceSpan = valueSourceSpan;
      this.expSourceSpan = expSourceSpan;
    }
    HtmlExpansionCaseAst.prototype.visit = function (visitor, context) {
      return visitor.visitExpansionCase(this, context);
    };
    return HtmlExpansionCaseAst;
  }();
  exports.HtmlExpansionCaseAst = HtmlExpansionCaseAst;
  var HtmlAttrAst = function () {
    function HtmlAttrAst(name, value, sourceSpan) {
      this.name = name;
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    HtmlAttrAst.prototype.visit = function (visitor, context) {
      return visitor.visitAttr(this, context);
    };
    return HtmlAttrAst;
  }();
  exports.HtmlAttrAst = HtmlAttrAst;
  var HtmlElementAst = function () {
    function HtmlElementAst(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {
      this.name = name;
      this.attrs = attrs;
      this.children = children;
      this.sourceSpan = sourceSpan;
      this.startSourceSpan = startSourceSpan;
      this.endSourceSpan = endSourceSpan;
    }
    HtmlElementAst.prototype.visit = function (visitor, context) {
      return visitor.visitElement(this, context);
    };
    return HtmlElementAst;
  }();
  exports.HtmlElementAst = HtmlElementAst;
  var HtmlCommentAst = function () {
    function HtmlCommentAst(value, sourceSpan) {
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    HtmlCommentAst.prototype.visit = function (visitor, context) {
      return visitor.visitComment(this, context);
    };
    return HtmlCommentAst;
  }();
  exports.HtmlCommentAst = HtmlCommentAst;
  function htmlVisitAll(visitor, asts, context) {
    if (context === void 0) {
      context = null;
    }
    var result = [];
    asts.forEach(function (ast) {
      var astResult = ast.visit(visitor, context);
      if (lang_1.isPresent(astResult)) {
        result.push(astResult);
      }
    });
    return result;
  }
  exports.htmlVisitAll = htmlVisitAll;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/html_lexer.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
    var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
    var parse_util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js');
    var html_tags_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js');
    (function (HtmlTokenType) {
      HtmlTokenType[HtmlTokenType["TAG_OPEN_START"] = 0] = "TAG_OPEN_START";
      HtmlTokenType[HtmlTokenType["TAG_OPEN_END"] = 1] = "TAG_OPEN_END";
      HtmlTokenType[HtmlTokenType["TAG_OPEN_END_VOID"] = 2] = "TAG_OPEN_END_VOID";
      HtmlTokenType[HtmlTokenType["TAG_CLOSE"] = 3] = "TAG_CLOSE";
      HtmlTokenType[HtmlTokenType["TEXT"] = 4] = "TEXT";
      HtmlTokenType[HtmlTokenType["ESCAPABLE_RAW_TEXT"] = 5] = "ESCAPABLE_RAW_TEXT";
      HtmlTokenType[HtmlTokenType["RAW_TEXT"] = 6] = "RAW_TEXT";
      HtmlTokenType[HtmlTokenType["COMMENT_START"] = 7] = "COMMENT_START";
      HtmlTokenType[HtmlTokenType["COMMENT_END"] = 8] = "COMMENT_END";
      HtmlTokenType[HtmlTokenType["CDATA_START"] = 9] = "CDATA_START";
      HtmlTokenType[HtmlTokenType["CDATA_END"] = 10] = "CDATA_END";
      HtmlTokenType[HtmlTokenType["ATTR_NAME"] = 11] = "ATTR_NAME";
      HtmlTokenType[HtmlTokenType["ATTR_VALUE"] = 12] = "ATTR_VALUE";
      HtmlTokenType[HtmlTokenType["DOC_TYPE"] = 13] = "DOC_TYPE";
      HtmlTokenType[HtmlTokenType["EXPANSION_FORM_START"] = 14] = "EXPANSION_FORM_START";
      HtmlTokenType[HtmlTokenType["EXPANSION_CASE_VALUE"] = 15] = "EXPANSION_CASE_VALUE";
      HtmlTokenType[HtmlTokenType["EXPANSION_CASE_EXP_START"] = 16] = "EXPANSION_CASE_EXP_START";
      HtmlTokenType[HtmlTokenType["EXPANSION_CASE_EXP_END"] = 17] = "EXPANSION_CASE_EXP_END";
      HtmlTokenType[HtmlTokenType["EXPANSION_FORM_END"] = 18] = "EXPANSION_FORM_END";
      HtmlTokenType[HtmlTokenType["EOF"] = 19] = "EOF";
    })(exports.HtmlTokenType || (exports.HtmlTokenType = {}));
    var HtmlTokenType = exports.HtmlTokenType;
    var HtmlToken = function () {
      function HtmlToken(type, parts, sourceSpan) {
        this.type = type;
        this.parts = parts;
        this.sourceSpan = sourceSpan;
      }
      return HtmlToken;
    }();
    exports.HtmlToken = HtmlToken;
    var HtmlTokenError = function (_super) {
      __extends(HtmlTokenError, _super);
      function HtmlTokenError(errorMsg, tokenType, span) {
        _super.call(this, span, errorMsg);
        this.tokenType = tokenType;
      }
      return HtmlTokenError;
    }(parse_util_1.ParseError);
    exports.HtmlTokenError = HtmlTokenError;
    var HtmlTokenizeResult = function () {
      function HtmlTokenizeResult(tokens, errors) {
        this.tokens = tokens;
        this.errors = errors;
      }
      return HtmlTokenizeResult;
    }();
    exports.HtmlTokenizeResult = HtmlTokenizeResult;
    function tokenizeHtml(sourceContent, sourceUrl, tokenizeExpansionForms) {
      if (tokenizeExpansionForms === void 0) {
        tokenizeExpansionForms = false;
      }
      return new _HtmlTokenizer(new parse_util_1.ParseSourceFile(sourceContent, sourceUrl), tokenizeExpansionForms).tokenize();
    }
    exports.tokenizeHtml = tokenizeHtml;
    var $EOF = 0;
    var $TAB = 9;
    var $LF = 10;
    var $FF = 12;
    var $CR = 13;
    var $SPACE = 32;
    var $BANG = 33;
    var $DQ = 34;
    var $HASH = 35;
    var $$ = 36;
    var $AMPERSAND = 38;
    var $SQ = 39;
    var $MINUS = 45;
    var $SLASH = 47;
    var $0 = 48;
    var $SEMICOLON = 59;
    var $9 = 57;
    var $COLON = 58;
    var $LT = 60;
    var $EQ = 61;
    var $GT = 62;
    var $QUESTION = 63;
    var $LBRACKET = 91;
    var $RBRACKET = 93;
    var $LBRACE = 123;
    var $RBRACE = 125;
    var $COMMA = 44;
    var $A = 65;
    var $F = 70;
    var $X = 88;
    var $Z = 90;
    var $a = 97;
    var $f = 102;
    var $z = 122;
    var $x = 120;
    var $NBSP = 160;
    var CR_OR_CRLF_REGEXP = /\r\n?/g;
    function unexpectedCharacterErrorMsg(charCode) {
      var char = charCode === $EOF ? 'EOF' : lang_1.StringWrapper.fromCharCode(charCode);
      return "Unexpected character \"" + char + "\"";
    }
    function unknownEntityErrorMsg(entitySrc) {
      return "Unknown entity \"" + entitySrc + "\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax";
    }
    var ControlFlowError = function () {
      function ControlFlowError(error) {
        this.error = error;
      }
      return ControlFlowError;
    }();
    var _HtmlTokenizer = function () {
      function _HtmlTokenizer(file, tokenizeExpansionForms) {
        this.file = file;
        this.tokenizeExpansionForms = tokenizeExpansionForms;
        this.peek = -1;
        this.nextPeek = -1;
        this.index = -1;
        this.line = 0;
        this.column = -1;
        this.expansionCaseStack = [];
        this.tokens = [];
        this.errors = [];
        this.input = file.content;
        this.length = file.content.length;
        this._advance();
      }
      _HtmlTokenizer.prototype._processCarriageReturns = function (content) {
        return lang_1.StringWrapper.replaceAll(content, CR_OR_CRLF_REGEXP, '\n');
      };
      _HtmlTokenizer.prototype.tokenize = function () {
        while (this.peek !== $EOF) {
          var start = this._getLocation();
          try {
            if (this._attemptCharCode($LT)) {
              if (this._attemptCharCode($BANG)) {
                if (this._attemptCharCode($LBRACKET)) {
                  this._consumeCdata(start);
                } else if (this._attemptCharCode($MINUS)) {
                  this._consumeComment(start);
                } else {
                  this._consumeDocType(start);
                }
              } else if (this._attemptCharCode($SLASH)) {
                this._consumeTagClose(start);
              } else {
                this._consumeTagOpen(start);
              }
            } else if (isSpecialFormStart(this.peek, this.nextPeek) && this.tokenizeExpansionForms) {
              this._consumeExpansionFormStart();
            } else if (this.peek === $EQ && this.tokenizeExpansionForms) {
              this._consumeExpansionCaseStart();
            } else if (this.peek === $RBRACE && this.isInExpansionCase() && this.tokenizeExpansionForms) {
              this._consumeExpansionCaseEnd();
            } else if (this.peek === $RBRACE && this.isInExpansionForm() && this.tokenizeExpansionForms) {
              this._consumeExpansionFormEnd();
            } else {
              this._consumeText();
            }
          } catch (e) {
            if (e instanceof ControlFlowError) {
              this.errors.push(e.error);
            } else {
              throw e;
            }
          }
        }
        this._beginToken(HtmlTokenType.EOF);
        this._endToken([]);
        return new HtmlTokenizeResult(mergeTextTokens(this.tokens), this.errors);
      };
      _HtmlTokenizer.prototype._getLocation = function () {
        return new parse_util_1.ParseLocation(this.file, this.index, this.line, this.column);
      };
      _HtmlTokenizer.prototype._getSpan = function (start, end) {
        if (lang_1.isBlank(start)) {
          start = this._getLocation();
        }
        if (lang_1.isBlank(end)) {
          end = this._getLocation();
        }
        return new parse_util_1.ParseSourceSpan(start, end);
      };
      _HtmlTokenizer.prototype._beginToken = function (type, start) {
        if (start === void 0) {
          start = null;
        }
        if (lang_1.isBlank(start)) {
          start = this._getLocation();
        }
        this.currentTokenStart = start;
        this.currentTokenType = type;
      };
      _HtmlTokenizer.prototype._endToken = function (parts, end) {
        if (end === void 0) {
          end = null;
        }
        if (lang_1.isBlank(end)) {
          end = this._getLocation();
        }
        var token = new HtmlToken(this.currentTokenType, parts, new parse_util_1.ParseSourceSpan(this.currentTokenStart, end));
        this.tokens.push(token);
        this.currentTokenStart = null;
        this.currentTokenType = null;
        return token;
      };
      _HtmlTokenizer.prototype._createError = function (msg, span) {
        var error = new HtmlTokenError(msg, this.currentTokenType, span);
        this.currentTokenStart = null;
        this.currentTokenType = null;
        return new ControlFlowError(error);
      };
      _HtmlTokenizer.prototype._advance = function () {
        if (this.index >= this.length) {
          throw this._createError(unexpectedCharacterErrorMsg($EOF), this._getSpan());
        }
        if (this.peek === $LF) {
          this.line++;
          this.column = 0;
        } else if (this.peek !== $LF && this.peek !== $CR) {
          this.column++;
        }
        this.index++;
        this.peek = this.index >= this.length ? $EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index);
        this.nextPeek = this.index + 1 >= this.length ? $EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index + 1);
      };
      _HtmlTokenizer.prototype._attemptCharCode = function (charCode) {
        if (this.peek === charCode) {
          this._advance();
          return true;
        }
        return false;
      };
      _HtmlTokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {
        if (compareCharCodeCaseInsensitive(this.peek, charCode)) {
          this._advance();
          return true;
        }
        return false;
      };
      _HtmlTokenizer.prototype._requireCharCode = function (charCode) {
        var location = this._getLocation();
        if (!this._attemptCharCode(charCode)) {
          throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getSpan(location, location));
        }
      };
      _HtmlTokenizer.prototype._attemptStr = function (chars) {
        for (var i = 0; i < chars.length; i++) {
          if (!this._attemptCharCode(lang_1.StringWrapper.charCodeAt(chars, i))) {
            return false;
          }
        }
        return true;
      };
      _HtmlTokenizer.prototype._attemptStrCaseInsensitive = function (chars) {
        for (var i = 0; i < chars.length; i++) {
          if (!this._attemptCharCodeCaseInsensitive(lang_1.StringWrapper.charCodeAt(chars, i))) {
            return false;
          }
        }
        return true;
      };
      _HtmlTokenizer.prototype._requireStr = function (chars) {
        var location = this._getLocation();
        if (!this._attemptStr(chars)) {
          throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getSpan(location));
        }
      };
      _HtmlTokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {
        while (!predicate(this.peek)) {
          this._advance();
        }
      };
      _HtmlTokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {
        var start = this._getLocation();
        this._attemptCharCodeUntilFn(predicate);
        if (this.index - start.offset < len) {
          throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getSpan(start, start));
        }
      };
      _HtmlTokenizer.prototype._attemptUntilChar = function (char) {
        while (this.peek !== char) {
          this._advance();
        }
      };
      _HtmlTokenizer.prototype._readChar = function (decodeEntities) {
        if (decodeEntities && this.peek === $AMPERSAND) {
          return this._decodeEntity();
        } else {
          var index = this.index;
          this._advance();
          return this.input[index];
        }
      };
      _HtmlTokenizer.prototype._decodeEntity = function () {
        var start = this._getLocation();
        this._advance();
        if (this._attemptCharCode($HASH)) {
          var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);
          var numberStart = this._getLocation().offset;
          this._attemptCharCodeUntilFn(isDigitEntityEnd);
          if (this.peek != $SEMICOLON) {
            throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getSpan());
          }
          this._advance();
          var strNum = this.input.substring(numberStart, this.index - 1);
          try {
            var charCode = lang_1.NumberWrapper.parseInt(strNum, isHex ? 16 : 10);
            return lang_1.StringWrapper.fromCharCode(charCode);
          } catch (e) {
            var entity = this.input.substring(start.offset + 1, this.index - 1);
            throw this._createError(unknownEntityErrorMsg(entity), this._getSpan(start));
          }
        } else {
          var startPosition = this._savePosition();
          this._attemptCharCodeUntilFn(isNamedEntityEnd);
          if (this.peek != $SEMICOLON) {
            this._restorePosition(startPosition);
            return '&';
          }
          this._advance();
          var name_1 = this.input.substring(start.offset + 1, this.index - 1);
          var char = html_tags_1.NAMED_ENTITIES[name_1];
          if (lang_1.isBlank(char)) {
            throw this._createError(unknownEntityErrorMsg(name_1), this._getSpan(start));
          }
          return char;
        }
      };
      _HtmlTokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {
        var tagCloseStart;
        var textStart = this._getLocation();
        this._beginToken(decodeEntities ? HtmlTokenType.ESCAPABLE_RAW_TEXT : HtmlTokenType.RAW_TEXT, textStart);
        var parts = [];
        while (true) {
          tagCloseStart = this._getLocation();
          if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {
            break;
          }
          if (this.index > tagCloseStart.offset) {
            parts.push(this.input.substring(tagCloseStart.offset, this.index));
          }
          while (this.peek !== firstCharOfEnd) {
            parts.push(this._readChar(decodeEntities));
          }
        }
        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);
      };
      _HtmlTokenizer.prototype._consumeComment = function (start) {
        var _this = this;
        this._beginToken(HtmlTokenType.COMMENT_START, start);
        this._requireCharCode($MINUS);
        this._endToken([]);
        var textToken = this._consumeRawText(false, $MINUS, function () {
          return _this._attemptStr('->');
        });
        this._beginToken(HtmlTokenType.COMMENT_END, textToken.sourceSpan.end);
        this._endToken([]);
      };
      _HtmlTokenizer.prototype._consumeCdata = function (start) {
        var _this = this;
        this._beginToken(HtmlTokenType.CDATA_START, start);
        this._requireStr('CDATA[');
        this._endToken([]);
        var textToken = this._consumeRawText(false, $RBRACKET, function () {
          return _this._attemptStr(']>');
        });
        this._beginToken(HtmlTokenType.CDATA_END, textToken.sourceSpan.end);
        this._endToken([]);
      };
      _HtmlTokenizer.prototype._consumeDocType = function (start) {
        this._beginToken(HtmlTokenType.DOC_TYPE, start);
        this._attemptUntilChar($GT);
        this._advance();
        this._endToken([this.input.substring(start.offset + 2, this.index - 1)]);
      };
      _HtmlTokenizer.prototype._consumePrefixAndName = function () {
        var nameOrPrefixStart = this.index;
        var prefix = null;
        while (this.peek !== $COLON && !isPrefixEnd(this.peek)) {
          this._advance();
        }
        var nameStart;
        if (this.peek === $COLON) {
          this._advance();
          prefix = this.input.substring(nameOrPrefixStart, this.index - 1);
          nameStart = this.index;
        } else {
          nameStart = nameOrPrefixStart;
        }
        this._requireCharCodeUntilFn(isNameEnd, this.index === nameStart ? 1 : 0);
        var name = this.input.substring(nameStart, this.index);
        return [prefix, name];
      };
      _HtmlTokenizer.prototype._consumeTagOpen = function (start) {
        var savedPos = this._savePosition();
        var lowercaseTagName;
        try {
          if (!isAsciiLetter(this.peek)) {
            throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getSpan());
          }
          var nameStart = this.index;
          this._consumeTagOpenStart(start);
          lowercaseTagName = this.input.substring(nameStart, this.index).toLowerCase();
          this._attemptCharCodeUntilFn(isNotWhitespace);
          while (this.peek !== $SLASH && this.peek !== $GT) {
            this._consumeAttributeName();
            this._attemptCharCodeUntilFn(isNotWhitespace);
            if (this._attemptCharCode($EQ)) {
              this._attemptCharCodeUntilFn(isNotWhitespace);
              this._consumeAttributeValue();
            }
            this._attemptCharCodeUntilFn(isNotWhitespace);
          }
          this._consumeTagOpenEnd();
        } catch (e) {
          if (e instanceof ControlFlowError) {
            this._restorePosition(savedPos);
            this._beginToken(HtmlTokenType.TEXT, start);
            this._endToken(['<']);
            return;
          }
          throw e;
        }
        var contentTokenType = html_tags_1.getHtmlTagDefinition(lowercaseTagName).contentType;
        if (contentTokenType === html_tags_1.HtmlTagContentType.RAW_TEXT) {
          this._consumeRawTextWithTagClose(lowercaseTagName, false);
        } else if (contentTokenType === html_tags_1.HtmlTagContentType.ESCAPABLE_RAW_TEXT) {
          this._consumeRawTextWithTagClose(lowercaseTagName, true);
        }
      };
      _HtmlTokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {
        var _this = this;
        var textToken = this._consumeRawText(decodeEntities, $LT, function () {
          if (!_this._attemptCharCode($SLASH)) return false;
          _this._attemptCharCodeUntilFn(isNotWhitespace);
          if (!_this._attemptStrCaseInsensitive(lowercaseTagName)) return false;
          _this._attemptCharCodeUntilFn(isNotWhitespace);
          if (!_this._attemptCharCode($GT)) return false;
          return true;
        });
        this._beginToken(HtmlTokenType.TAG_CLOSE, textToken.sourceSpan.end);
        this._endToken([null, lowercaseTagName]);
      };
      _HtmlTokenizer.prototype._consumeTagOpenStart = function (start) {
        this._beginToken(HtmlTokenType.TAG_OPEN_START, start);
        var parts = this._consumePrefixAndName();
        this._endToken(parts);
      };
      _HtmlTokenizer.prototype._consumeAttributeName = function () {
        this._beginToken(HtmlTokenType.ATTR_NAME);
        var prefixAndName = this._consumePrefixAndName();
        this._endToken(prefixAndName);
      };
      _HtmlTokenizer.prototype._consumeAttributeValue = function () {
        this._beginToken(HtmlTokenType.ATTR_VALUE);
        var value;
        if (this.peek === $SQ || this.peek === $DQ) {
          var quoteChar = this.peek;
          this._advance();
          var parts = [];
          while (this.peek !== quoteChar) {
            parts.push(this._readChar(true));
          }
          value = parts.join('');
          this._advance();
        } else {
          var valueStart = this.index;
          this._requireCharCodeUntilFn(isNameEnd, 1);
          value = this.input.substring(valueStart, this.index);
        }
        this._endToken([this._processCarriageReturns(value)]);
      };
      _HtmlTokenizer.prototype._consumeTagOpenEnd = function () {
        var tokenType = this._attemptCharCode($SLASH) ? HtmlTokenType.TAG_OPEN_END_VOID : HtmlTokenType.TAG_OPEN_END;
        this._beginToken(tokenType);
        this._requireCharCode($GT);
        this._endToken([]);
      };
      _HtmlTokenizer.prototype._consumeTagClose = function (start) {
        this._beginToken(HtmlTokenType.TAG_CLOSE, start);
        this._attemptCharCodeUntilFn(isNotWhitespace);
        var prefixAndName;
        prefixAndName = this._consumePrefixAndName();
        this._attemptCharCodeUntilFn(isNotWhitespace);
        this._requireCharCode($GT);
        this._endToken(prefixAndName);
      };
      _HtmlTokenizer.prototype._consumeExpansionFormStart = function () {
        this._beginToken(HtmlTokenType.EXPANSION_FORM_START, this._getLocation());
        this._requireCharCode($LBRACE);
        this._endToken([]);
        this._beginToken(HtmlTokenType.RAW_TEXT, this._getLocation());
        var condition = this._readUntil($COMMA);
        this._endToken([condition], this._getLocation());
        this._requireCharCode($COMMA);
        this._attemptCharCodeUntilFn(isNotWhitespace);
        this._beginToken(HtmlTokenType.RAW_TEXT, this._getLocation());
        var type = this._readUntil($COMMA);
        this._endToken([type], this._getLocation());
        this._requireCharCode($COMMA);
        this._attemptCharCodeUntilFn(isNotWhitespace);
        this.expansionCaseStack.push(HtmlTokenType.EXPANSION_FORM_START);
      };
      _HtmlTokenizer.prototype._consumeExpansionCaseStart = function () {
        this._requireCharCode($EQ);
        this._beginToken(HtmlTokenType.EXPANSION_CASE_VALUE, this._getLocation());
        var value = this._readUntil($LBRACE).trim();
        this._endToken([value], this._getLocation());
        this._attemptCharCodeUntilFn(isNotWhitespace);
        this._beginToken(HtmlTokenType.EXPANSION_CASE_EXP_START, this._getLocation());
        this._requireCharCode($LBRACE);
        this._endToken([], this._getLocation());
        this._attemptCharCodeUntilFn(isNotWhitespace);
        this.expansionCaseStack.push(HtmlTokenType.EXPANSION_CASE_EXP_START);
      };
      _HtmlTokenizer.prototype._consumeExpansionCaseEnd = function () {
        this._beginToken(HtmlTokenType.EXPANSION_CASE_EXP_END, this._getLocation());
        this._requireCharCode($RBRACE);
        this._endToken([], this._getLocation());
        this._attemptCharCodeUntilFn(isNotWhitespace);
        this.expansionCaseStack.pop();
      };
      _HtmlTokenizer.prototype._consumeExpansionFormEnd = function () {
        this._beginToken(HtmlTokenType.EXPANSION_FORM_END, this._getLocation());
        this._requireCharCode($RBRACE);
        this._endToken([]);
        this.expansionCaseStack.pop();
      };
      _HtmlTokenizer.prototype._consumeText = function () {
        var start = this._getLocation();
        this._beginToken(HtmlTokenType.TEXT, start);
        var parts = [];
        var interpolation = false;
        if (this.peek === $LBRACE && this.nextPeek === $LBRACE) {
          parts.push(this._readChar(true));
          parts.push(this._readChar(true));
          interpolation = true;
        } else {
          parts.push(this._readChar(true));
        }
        while (!this.isTextEnd(interpolation)) {
          if (this.peek === $LBRACE && this.nextPeek === $LBRACE) {
            parts.push(this._readChar(true));
            parts.push(this._readChar(true));
            interpolation = true;
          } else if (this.peek === $RBRACE && this.nextPeek === $RBRACE && interpolation) {
            parts.push(this._readChar(true));
            parts.push(this._readChar(true));
            interpolation = false;
          } else {
            parts.push(this._readChar(true));
          }
        }
        this._endToken([this._processCarriageReturns(parts.join(''))]);
      };
      _HtmlTokenizer.prototype.isTextEnd = function (interpolation) {
        if (this.peek === $LT || this.peek === $EOF) return true;
        if (this.tokenizeExpansionForms) {
          if (isSpecialFormStart(this.peek, this.nextPeek)) return true;
          if (this.peek === $RBRACE && !interpolation && (this.isInExpansionCase() || this.isInExpansionForm())) return true;
        }
        return false;
      };
      _HtmlTokenizer.prototype._savePosition = function () {
        return [this.peek, this.index, this.column, this.line, this.tokens.length];
      };
      _HtmlTokenizer.prototype._readUntil = function (char) {
        var start = this.index;
        this._attemptUntilChar(char);
        return this.input.substring(start, this.index);
      };
      _HtmlTokenizer.prototype._restorePosition = function (position) {
        this.peek = position[0];
        this.index = position[1];
        this.column = position[2];
        this.line = position[3];
        var nbTokens = position[4];
        if (nbTokens < this.tokens.length) {
          this.tokens = collection_1.ListWrapper.slice(this.tokens, 0, nbTokens);
        }
      };
      _HtmlTokenizer.prototype.isInExpansionCase = function () {
        return this.expansionCaseStack.length > 0 && this.expansionCaseStack[this.expansionCaseStack.length - 1] === HtmlTokenType.EXPANSION_CASE_EXP_START;
      };
      _HtmlTokenizer.prototype.isInExpansionForm = function () {
        return this.expansionCaseStack.length > 0 && this.expansionCaseStack[this.expansionCaseStack.length - 1] === HtmlTokenType.EXPANSION_FORM_START;
      };
      return _HtmlTokenizer;
    }();
    function isNotWhitespace(code) {
      return !isWhitespace(code) || code === $EOF;
    }
    function isWhitespace(code) {
      return code >= $TAB && code <= $SPACE || code === $NBSP;
    }
    function isNameEnd(code) {
      return isWhitespace(code) || code === $GT || code === $SLASH || code === $SQ || code === $DQ || code === $EQ;
    }
    function isPrefixEnd(code) {
      return (code < $a || $z < code) && (code < $A || $Z < code) && (code < $0 || code > $9);
    }
    function isDigitEntityEnd(code) {
      return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);
    }
    function isNamedEntityEnd(code) {
      return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);
    }
    function isSpecialFormStart(peek, nextPeek) {
      return peek === $LBRACE && nextPeek != $LBRACE;
    }
    function isAsciiLetter(code) {
      return code >= $a && code <= $z || code >= $A && code <= $Z;
    }
    function isAsciiHexDigit(code) {
      return code >= $a && code <= $f || code >= $A && code <= $F || code >= $0 && code <= $9;
    }
    function compareCharCodeCaseInsensitive(code1, code2) {
      return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);
    }
    function toUpperCaseCharCode(code) {
      return code >= $a && code <= $z ? code - $a + $A : code;
    }
    function mergeTextTokens(srcTokens) {
      var dstTokens = [];
      var lastDstToken;
      for (var i = 0; i < srcTokens.length; i++) {
        var token = srcTokens[i];
        if (lang_1.isPresent(lastDstToken) && lastDstToken.type == HtmlTokenType.TEXT && token.type == HtmlTokenType.TEXT) {
          lastDstToken.parts[0] += token.parts[0];
          lastDstToken.sourceSpan.end = token.sourceSpan.end;
        } else {
          lastDstToken = token;
          dstTokens.push(lastDstToken);
        }
      }
      return dstTokens;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var ParseLocation = function () {
        function ParseLocation(file, offset, line, col) {
            this.file = file;
            this.offset = offset;
            this.line = line;
            this.col = col;
        }
        ParseLocation.prototype.toString = function () {
            return this.file.url + "@" + this.line + ":" + this.col;
        };
        return ParseLocation;
    }();
    exports.ParseLocation = ParseLocation;
    var ParseSourceFile = function () {
        function ParseSourceFile(content, url) {
            this.content = content;
            this.url = url;
        }
        return ParseSourceFile;
    }();
    exports.ParseSourceFile = ParseSourceFile;
    var ParseSourceSpan = function () {
        function ParseSourceSpan(start, end) {
            this.start = start;
            this.end = end;
        }
        ParseSourceSpan.prototype.toString = function () {
            return this.start.file.content.substring(this.start.offset, this.end.offset);
        };
        return ParseSourceSpan;
    }();
    exports.ParseSourceSpan = ParseSourceSpan;
    (function (ParseErrorLevel) {
        ParseErrorLevel[ParseErrorLevel["WARNING"] = 0] = "WARNING";
        ParseErrorLevel[ParseErrorLevel["FATAL"] = 1] = "FATAL";
    })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));
    var ParseErrorLevel = exports.ParseErrorLevel;
    var ParseError = function () {
        function ParseError(span, msg, level) {
            if (level === void 0) {
                level = ParseErrorLevel.FATAL;
            }
            this.span = span;
            this.msg = msg;
            this.level = level;
        }
        ParseError.prototype.toString = function () {
            var source = this.span.start.file.content;
            var ctxStart = this.span.start.offset;
            if (ctxStart > source.length - 1) {
                ctxStart = source.length - 1;
            }
            var ctxEnd = ctxStart;
            var ctxLen = 0;
            var ctxLines = 0;
            while (ctxLen < 100 && ctxStart > 0) {
                ctxStart--;
                ctxLen++;
                if (source[ctxStart] == "\n") {
                    if (++ctxLines == 3) {
                        break;
                    }
                }
            }
            ctxLen = 0;
            ctxLines = 0;
            while (ctxLen < 100 && ctxEnd < source.length - 1) {
                ctxEnd++;
                ctxLen++;
                if (source[ctxEnd] == "\n") {
                    if (++ctxLines == 3) {
                        break;
                    }
                }
            }
            var context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' + source.substring(this.span.start.offset, ctxEnd + 1);
            return this.msg + " (\"" + context + "\"): " + this.span.start;
        };
        return ParseError;
    }();
    exports.ParseError = ParseError;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_lexer.js', 'npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var html_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js');
  var html_lexer_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_lexer.js');
  var parse_util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/parse_util.js');
  var html_tags_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js');
  var HtmlTreeError = function (_super) {
    __extends(HtmlTreeError, _super);
    function HtmlTreeError(elementName, span, msg) {
      _super.call(this, span, msg);
      this.elementName = elementName;
    }
    HtmlTreeError.create = function (elementName, span, msg) {
      return new HtmlTreeError(elementName, span, msg);
    };
    return HtmlTreeError;
  }(parse_util_1.ParseError);
  exports.HtmlTreeError = HtmlTreeError;
  var HtmlParseTreeResult = function () {
    function HtmlParseTreeResult(rootNodes, errors) {
      this.rootNodes = rootNodes;
      this.errors = errors;
    }
    return HtmlParseTreeResult;
  }();
  exports.HtmlParseTreeResult = HtmlParseTreeResult;
  var HtmlParser = function () {
    function HtmlParser() {}
    HtmlParser.prototype.parse = function (sourceContent, sourceUrl, parseExpansionForms) {
      if (parseExpansionForms === void 0) {
        parseExpansionForms = false;
      }
      var tokensAndErrors = html_lexer_1.tokenizeHtml(sourceContent, sourceUrl, parseExpansionForms);
      var treeAndErrors = new TreeBuilder(tokensAndErrors.tokens).build();
      return new HtmlParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));
    };
    HtmlParser.decorators = [{ type: core_1.Injectable }];
    return HtmlParser;
  }();
  exports.HtmlParser = HtmlParser;
  var TreeBuilder = function () {
    function TreeBuilder(tokens) {
      this.tokens = tokens;
      this.index = -1;
      this.rootNodes = [];
      this.errors = [];
      this.elementStack = [];
      this._advance();
    }
    TreeBuilder.prototype.build = function () {
      while (this.peek.type !== html_lexer_1.HtmlTokenType.EOF) {
        if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_START) {
          this._consumeStartTag(this._advance());
        } else if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_CLOSE) {
          this._consumeEndTag(this._advance());
        } else if (this.peek.type === html_lexer_1.HtmlTokenType.CDATA_START) {
          this._closeVoidElement();
          this._consumeCdata(this._advance());
        } else if (this.peek.type === html_lexer_1.HtmlTokenType.COMMENT_START) {
          this._closeVoidElement();
          this._consumeComment(this._advance());
        } else if (this.peek.type === html_lexer_1.HtmlTokenType.TEXT || this.peek.type === html_lexer_1.HtmlTokenType.RAW_TEXT || this.peek.type === html_lexer_1.HtmlTokenType.ESCAPABLE_RAW_TEXT) {
          this._closeVoidElement();
          this._consumeText(this._advance());
        } else if (this.peek.type === html_lexer_1.HtmlTokenType.EXPANSION_FORM_START) {
          this._consumeExpansion(this._advance());
        } else {
          this._advance();
        }
      }
      return new HtmlParseTreeResult(this.rootNodes, this.errors);
    };
    TreeBuilder.prototype._advance = function () {
      var prev = this.peek;
      if (this.index < this.tokens.length - 1) {
        this.index++;
      }
      this.peek = this.tokens[this.index];
      return prev;
    };
    TreeBuilder.prototype._advanceIf = function (type) {
      if (this.peek.type === type) {
        return this._advance();
      }
      return null;
    };
    TreeBuilder.prototype._consumeCdata = function (startToken) {
      this._consumeText(this._advance());
      this._advanceIf(html_lexer_1.HtmlTokenType.CDATA_END);
    };
    TreeBuilder.prototype._consumeComment = function (token) {
      var text = this._advanceIf(html_lexer_1.HtmlTokenType.RAW_TEXT);
      this._advanceIf(html_lexer_1.HtmlTokenType.COMMENT_END);
      var value = lang_1.isPresent(text) ? text.parts[0].trim() : null;
      this._addToParent(new html_ast_1.HtmlCommentAst(value, token.sourceSpan));
    };
    TreeBuilder.prototype._consumeExpansion = function (token) {
      var switchValue = this._advance();
      var type = this._advance();
      var cases = [];
      while (this.peek.type === html_lexer_1.HtmlTokenType.EXPANSION_CASE_VALUE) {
        var expCase = this._parseExpansionCase();
        if (lang_1.isBlank(expCase)) return;
        cases.push(expCase);
      }
      if (this.peek.type !== html_lexer_1.HtmlTokenType.EXPANSION_FORM_END) {
        this.errors.push(HtmlTreeError.create(null, this.peek.sourceSpan, "Invalid expansion form. Missing '}'."));
        return;
      }
      this._advance();
      var mainSourceSpan = new parse_util_1.ParseSourceSpan(token.sourceSpan.start, this.peek.sourceSpan.end);
      this._addToParent(new html_ast_1.HtmlExpansionAst(switchValue.parts[0], type.parts[0], cases, mainSourceSpan, switchValue.sourceSpan));
    };
    TreeBuilder.prototype._parseExpansionCase = function () {
      var value = this._advance();
      if (this.peek.type !== html_lexer_1.HtmlTokenType.EXPANSION_CASE_EXP_START) {
        this.errors.push(HtmlTreeError.create(null, this.peek.sourceSpan, "Invalid expansion form. Missing '{'.,"));
        return null;
      }
      var start = this._advance();
      var exp = this._collectExpansionExpTokens(start);
      if (lang_1.isBlank(exp)) return null;
      var end = this._advance();
      exp.push(new html_lexer_1.HtmlToken(html_lexer_1.HtmlTokenType.EOF, [], end.sourceSpan));
      var parsedExp = new TreeBuilder(exp).build();
      if (parsedExp.errors.length > 0) {
        this.errors = this.errors.concat(parsedExp.errors);
        return null;
      }
      var sourceSpan = new parse_util_1.ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);
      var expSourceSpan = new parse_util_1.ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);
      return new html_ast_1.HtmlExpansionCaseAst(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);
    };
    TreeBuilder.prototype._collectExpansionExpTokens = function (start) {
      var exp = [];
      var expansionFormStack = [html_lexer_1.HtmlTokenType.EXPANSION_CASE_EXP_START];
      while (true) {
        if (this.peek.type === html_lexer_1.HtmlTokenType.EXPANSION_FORM_START || this.peek.type === html_lexer_1.HtmlTokenType.EXPANSION_CASE_EXP_START) {
          expansionFormStack.push(this.peek.type);
        }
        if (this.peek.type === html_lexer_1.HtmlTokenType.EXPANSION_CASE_EXP_END) {
          if (lastOnStack(expansionFormStack, html_lexer_1.HtmlTokenType.EXPANSION_CASE_EXP_START)) {
            expansionFormStack.pop();
            if (expansionFormStack.length == 0) return exp;
          } else {
            this.errors.push(HtmlTreeError.create(null, start.sourceSpan, "Invalid expansion form. Missing '}'."));
            return null;
          }
        }
        if (this.peek.type === html_lexer_1.HtmlTokenType.EXPANSION_FORM_END) {
          if (lastOnStack(expansionFormStack, html_lexer_1.HtmlTokenType.EXPANSION_FORM_START)) {
            expansionFormStack.pop();
          } else {
            this.errors.push(HtmlTreeError.create(null, start.sourceSpan, "Invalid expansion form. Missing '}'."));
            return null;
          }
        }
        if (this.peek.type === html_lexer_1.HtmlTokenType.EOF) {
          this.errors.push(HtmlTreeError.create(null, start.sourceSpan, "Invalid expansion form. Missing '}'."));
          return null;
        }
        exp.push(this._advance());
      }
    };
    TreeBuilder.prototype._consumeText = function (token) {
      var text = token.parts[0];
      if (text.length > 0 && text[0] == '\n') {
        var parent_1 = this._getParentElement();
        if (lang_1.isPresent(parent_1) && parent_1.children.length == 0 && html_tags_1.getHtmlTagDefinition(parent_1.name).ignoreFirstLf) {
          text = text.substring(1);
        }
      }
      if (text.length > 0) {
        this._addToParent(new html_ast_1.HtmlTextAst(text, token.sourceSpan));
      }
    };
    TreeBuilder.prototype._closeVoidElement = function () {
      if (this.elementStack.length > 0) {
        var el = collection_1.ListWrapper.last(this.elementStack);
        if (html_tags_1.getHtmlTagDefinition(el.name).isVoid) {
          this.elementStack.pop();
        }
      }
    };
    TreeBuilder.prototype._consumeStartTag = function (startTagToken) {
      var prefix = startTagToken.parts[0];
      var name = startTagToken.parts[1];
      var attrs = [];
      while (this.peek.type === html_lexer_1.HtmlTokenType.ATTR_NAME) {
        attrs.push(this._consumeAttr(this._advance()));
      }
      var fullName = getElementFullName(prefix, name, this._getParentElement());
      var selfClosing = false;
      if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_END_VOID) {
        this._advance();
        selfClosing = true;
        if (html_tags_1.getNsPrefix(fullName) == null && !html_tags_1.getHtmlTagDefinition(fullName).isVoid) {
          this.errors.push(HtmlTreeError.create(fullName, startTagToken.sourceSpan, "Only void and foreign elements can be self closed \"" + startTagToken.parts[1] + "\""));
        }
      } else if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_END) {
        this._advance();
        selfClosing = false;
      }
      var end = this.peek.sourceSpan.start;
      var span = new parse_util_1.ParseSourceSpan(startTagToken.sourceSpan.start, end);
      var el = new html_ast_1.HtmlElementAst(fullName, attrs, [], span, span, null);
      this._pushElement(el);
      if (selfClosing) {
        this._popElement(fullName);
        el.endSourceSpan = span;
      }
    };
    TreeBuilder.prototype._pushElement = function (el) {
      if (this.elementStack.length > 0) {
        var parentEl = collection_1.ListWrapper.last(this.elementStack);
        if (html_tags_1.getHtmlTagDefinition(parentEl.name).isClosedByChild(el.name)) {
          this.elementStack.pop();
        }
      }
      var tagDef = html_tags_1.getHtmlTagDefinition(el.name);
      var parentEl = this._getParentElement();
      if (tagDef.requireExtraParent(lang_1.isPresent(parentEl) ? parentEl.name : null)) {
        var newParent = new html_ast_1.HtmlElementAst(tagDef.parentToAdd, [], [el], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);
        this._addToParent(newParent);
        this.elementStack.push(newParent);
        this.elementStack.push(el);
      } else {
        this._addToParent(el);
        this.elementStack.push(el);
      }
    };
    TreeBuilder.prototype._consumeEndTag = function (endTagToken) {
      var fullName = getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());
      this._getParentElement().endSourceSpan = endTagToken.sourceSpan;
      if (html_tags_1.getHtmlTagDefinition(fullName).isVoid) {
        this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan, "Void elements do not have end tags \"" + endTagToken.parts[1] + "\""));
      } else if (!this._popElement(fullName)) {
        this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan, "Unexpected closing tag \"" + endTagToken.parts[1] + "\""));
      }
    };
    TreeBuilder.prototype._popElement = function (fullName) {
      for (var stackIndex = this.elementStack.length - 1; stackIndex >= 0; stackIndex--) {
        var el = this.elementStack[stackIndex];
        if (el.name == fullName) {
          collection_1.ListWrapper.splice(this.elementStack, stackIndex, this.elementStack.length - stackIndex);
          return true;
        }
        if (!html_tags_1.getHtmlTagDefinition(el.name).closedByParent) {
          return false;
        }
      }
      return false;
    };
    TreeBuilder.prototype._consumeAttr = function (attrName) {
      var fullName = html_tags_1.mergeNsAndName(attrName.parts[0], attrName.parts[1]);
      var end = attrName.sourceSpan.end;
      var value = '';
      if (this.peek.type === html_lexer_1.HtmlTokenType.ATTR_VALUE) {
        var valueToken = this._advance();
        value = valueToken.parts[0];
        end = valueToken.sourceSpan.end;
      }
      return new html_ast_1.HtmlAttrAst(fullName, value, new parse_util_1.ParseSourceSpan(attrName.sourceSpan.start, end));
    };
    TreeBuilder.prototype._getParentElement = function () {
      return this.elementStack.length > 0 ? collection_1.ListWrapper.last(this.elementStack) : null;
    };
    TreeBuilder.prototype._addToParent = function (node) {
      var parent = this._getParentElement();
      if (lang_1.isPresent(parent)) {
        parent.children.push(node);
      } else {
        this.rootNodes.push(node);
      }
    };
    return TreeBuilder;
  }();
  function getElementFullName(prefix, localName, parentElement) {
    if (lang_1.isBlank(prefix)) {
      prefix = html_tags_1.getHtmlTagDefinition(localName).implicitNamespacePrefix;
      if (lang_1.isBlank(prefix) && lang_1.isPresent(parentElement)) {
        prefix = html_tags_1.getNsPrefix(parentElement.name);
      }
    }
    return html_tags_1.mergeNsAndName(prefix, localName);
  }
  function lastOnStack(stack, element) {
    return stack.length > 0 && stack[stack.length - 1] === element;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  exports.NAMED_ENTITIES = {
    'Aacute': '\u00C1',
    'aacute': '\u00E1',
    'Acirc': '\u00C2',
    'acirc': '\u00E2',
    'acute': '\u00B4',
    'AElig': '\u00C6',
    'aelig': '\u00E6',
    'Agrave': '\u00C0',
    'agrave': '\u00E0',
    'alefsym': '\u2135',
    'Alpha': '\u0391',
    'alpha': '\u03B1',
    'amp': '&',
    'and': '\u2227',
    'ang': '\u2220',
    'apos': '\u0027',
    'Aring': '\u00C5',
    'aring': '\u00E5',
    'asymp': '\u2248',
    'Atilde': '\u00C3',
    'atilde': '\u00E3',
    'Auml': '\u00C4',
    'auml': '\u00E4',
    'bdquo': '\u201E',
    'Beta': '\u0392',
    'beta': '\u03B2',
    'brvbar': '\u00A6',
    'bull': '\u2022',
    'cap': '\u2229',
    'Ccedil': '\u00C7',
    'ccedil': '\u00E7',
    'cedil': '\u00B8',
    'cent': '\u00A2',
    'Chi': '\u03A7',
    'chi': '\u03C7',
    'circ': '\u02C6',
    'clubs': '\u2663',
    'cong': '\u2245',
    'copy': '\u00A9',
    'crarr': '\u21B5',
    'cup': '\u222A',
    'curren': '\u00A4',
    'dagger': '\u2020',
    'Dagger': '\u2021',
    'darr': '\u2193',
    'dArr': '\u21D3',
    'deg': '\u00B0',
    'Delta': '\u0394',
    'delta': '\u03B4',
    'diams': '\u2666',
    'divide': '\u00F7',
    'Eacute': '\u00C9',
    'eacute': '\u00E9',
    'Ecirc': '\u00CA',
    'ecirc': '\u00EA',
    'Egrave': '\u00C8',
    'egrave': '\u00E8',
    'empty': '\u2205',
    'emsp': '\u2003',
    'ensp': '\u2002',
    'Epsilon': '\u0395',
    'epsilon': '\u03B5',
    'equiv': '\u2261',
    'Eta': '\u0397',
    'eta': '\u03B7',
    'ETH': '\u00D0',
    'eth': '\u00F0',
    'Euml': '\u00CB',
    'euml': '\u00EB',
    'euro': '\u20AC',
    'exist': '\u2203',
    'fnof': '\u0192',
    'forall': '\u2200',
    'frac12': '\u00BD',
    'frac14': '\u00BC',
    'frac34': '\u00BE',
    'frasl': '\u2044',
    'Gamma': '\u0393',
    'gamma': '\u03B3',
    'ge': '\u2265',
    'gt': '>',
    'harr': '\u2194',
    'hArr': '\u21D4',
    'hearts': '\u2665',
    'hellip': '\u2026',
    'Iacute': '\u00CD',
    'iacute': '\u00ED',
    'Icirc': '\u00CE',
    'icirc': '\u00EE',
    'iexcl': '\u00A1',
    'Igrave': '\u00CC',
    'igrave': '\u00EC',
    'image': '\u2111',
    'infin': '\u221E',
    'int': '\u222B',
    'Iota': '\u0399',
    'iota': '\u03B9',
    'iquest': '\u00BF',
    'isin': '\u2208',
    'Iuml': '\u00CF',
    'iuml': '\u00EF',
    'Kappa': '\u039A',
    'kappa': '\u03BA',
    'Lambda': '\u039B',
    'lambda': '\u03BB',
    'lang': '\u27E8',
    'laquo': '\u00AB',
    'larr': '\u2190',
    'lArr': '\u21D0',
    'lceil': '\u2308',
    'ldquo': '\u201C',
    'le': '\u2264',
    'lfloor': '\u230A',
    'lowast': '\u2217',
    'loz': '\u25CA',
    'lrm': '\u200E',
    'lsaquo': '\u2039',
    'lsquo': '\u2018',
    'lt': '<',
    'macr': '\u00AF',
    'mdash': '\u2014',
    'micro': '\u00B5',
    'middot': '\u00B7',
    'minus': '\u2212',
    'Mu': '\u039C',
    'mu': '\u03BC',
    'nabla': '\u2207',
    'nbsp': '\u00A0',
    'ndash': '\u2013',
    'ne': '\u2260',
    'ni': '\u220B',
    'not': '\u00AC',
    'notin': '\u2209',
    'nsub': '\u2284',
    'Ntilde': '\u00D1',
    'ntilde': '\u00F1',
    'Nu': '\u039D',
    'nu': '\u03BD',
    'Oacute': '\u00D3',
    'oacute': '\u00F3',
    'Ocirc': '\u00D4',
    'ocirc': '\u00F4',
    'OElig': '\u0152',
    'oelig': '\u0153',
    'Ograve': '\u00D2',
    'ograve': '\u00F2',
    'oline': '\u203E',
    'Omega': '\u03A9',
    'omega': '\u03C9',
    'Omicron': '\u039F',
    'omicron': '\u03BF',
    'oplus': '\u2295',
    'or': '\u2228',
    'ordf': '\u00AA',
    'ordm': '\u00BA',
    'Oslash': '\u00D8',
    'oslash': '\u00F8',
    'Otilde': '\u00D5',
    'otilde': '\u00F5',
    'otimes': '\u2297',
    'Ouml': '\u00D6',
    'ouml': '\u00F6',
    'para': '\u00B6',
    'permil': '\u2030',
    'perp': '\u22A5',
    'Phi': '\u03A6',
    'phi': '\u03C6',
    'Pi': '\u03A0',
    'pi': '\u03C0',
    'piv': '\u03D6',
    'plusmn': '\u00B1',
    'pound': '\u00A3',
    'prime': '\u2032',
    'Prime': '\u2033',
    'prod': '\u220F',
    'prop': '\u221D',
    'Psi': '\u03A8',
    'psi': '\u03C8',
    'quot': '\u0022',
    'radic': '\u221A',
    'rang': '\u27E9',
    'raquo': '\u00BB',
    'rarr': '\u2192',
    'rArr': '\u21D2',
    'rceil': '\u2309',
    'rdquo': '\u201D',
    'real': '\u211C',
    'reg': '\u00AE',
    'rfloor': '\u230B',
    'Rho': '\u03A1',
    'rho': '\u03C1',
    'rlm': '\u200F',
    'rsaquo': '\u203A',
    'rsquo': '\u2019',
    'sbquo': '\u201A',
    'Scaron': '\u0160',
    'scaron': '\u0161',
    'sdot': '\u22C5',
    'sect': '\u00A7',
    'shy': '\u00AD',
    'Sigma': '\u03A3',
    'sigma': '\u03C3',
    'sigmaf': '\u03C2',
    'sim': '\u223C',
    'spades': '\u2660',
    'sub': '\u2282',
    'sube': '\u2286',
    'sum': '\u2211',
    'sup': '\u2283',
    'sup1': '\u00B9',
    'sup2': '\u00B2',
    'sup3': '\u00B3',
    'supe': '\u2287',
    'szlig': '\u00DF',
    'Tau': '\u03A4',
    'tau': '\u03C4',
    'there4': '\u2234',
    'Theta': '\u0398',
    'theta': '\u03B8',
    'thetasym': '\u03D1',
    'thinsp': '\u2009',
    'THORN': '\u00DE',
    'thorn': '\u00FE',
    'tilde': '\u02DC',
    'times': '\u00D7',
    'trade': '\u2122',
    'Uacute': '\u00DA',
    'uacute': '\u00FA',
    'uarr': '\u2191',
    'uArr': '\u21D1',
    'Ucirc': '\u00DB',
    'ucirc': '\u00FB',
    'Ugrave': '\u00D9',
    'ugrave': '\u00F9',
    'uml': '\u00A8',
    'upsih': '\u03D2',
    'Upsilon': '\u03A5',
    'upsilon': '\u03C5',
    'Uuml': '\u00DC',
    'uuml': '\u00FC',
    'weierp': '\u2118',
    'Xi': '\u039E',
    'xi': '\u03BE',
    'Yacute': '\u00DD',
    'yacute': '\u00FD',
    'yen': '\u00A5',
    'yuml': '\u00FF',
    'Yuml': '\u0178',
    'Zeta': '\u0396',
    'zeta': '\u03B6',
    'zwj': '\u200D',
    'zwnj': '\u200C'
  };
  (function (HtmlTagContentType) {
    HtmlTagContentType[HtmlTagContentType["RAW_TEXT"] = 0] = "RAW_TEXT";
    HtmlTagContentType[HtmlTagContentType["ESCAPABLE_RAW_TEXT"] = 1] = "ESCAPABLE_RAW_TEXT";
    HtmlTagContentType[HtmlTagContentType["PARSABLE_DATA"] = 2] = "PARSABLE_DATA";
  })(exports.HtmlTagContentType || (exports.HtmlTagContentType = {}));
  var HtmlTagContentType = exports.HtmlTagContentType;
  var HtmlTagDefinition = function () {
    function HtmlTagDefinition(_a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a,
          closedByChildren = _b.closedByChildren,
          requiredParents = _b.requiredParents,
          implicitNamespacePrefix = _b.implicitNamespacePrefix,
          contentType = _b.contentType,
          closedByParent = _b.closedByParent,
          isVoid = _b.isVoid,
          ignoreFirstLf = _b.ignoreFirstLf;
      this.closedByChildren = {};
      this.closedByParent = false;
      if (lang_1.isPresent(closedByChildren) && closedByChildren.length > 0) {
        closedByChildren.forEach(function (tagName) {
          return _this.closedByChildren[tagName] = true;
        });
      }
      this.isVoid = lang_1.normalizeBool(isVoid);
      this.closedByParent = lang_1.normalizeBool(closedByParent) || this.isVoid;
      if (lang_1.isPresent(requiredParents) && requiredParents.length > 0) {
        this.requiredParents = {};
        this.parentToAdd = requiredParents[0];
        requiredParents.forEach(function (tagName) {
          return _this.requiredParents[tagName] = true;
        });
      }
      this.implicitNamespacePrefix = implicitNamespacePrefix;
      this.contentType = lang_1.isPresent(contentType) ? contentType : HtmlTagContentType.PARSABLE_DATA;
      this.ignoreFirstLf = lang_1.normalizeBool(ignoreFirstLf);
    }
    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {
      if (lang_1.isBlank(this.requiredParents)) {
        return false;
      }
      if (lang_1.isBlank(currentParent)) {
        return true;
      }
      var lcParent = currentParent.toLowerCase();
      return this.requiredParents[lcParent] != true && lcParent != 'template';
    };
    HtmlTagDefinition.prototype.isClosedByChild = function (name) {
      return this.isVoid || lang_1.normalizeBool(this.closedByChildren[name.toLowerCase()]);
    };
    return HtmlTagDefinition;
  }();
  exports.HtmlTagDefinition = HtmlTagDefinition;
  var TAG_DEFINITIONS = {
    'base': new HtmlTagDefinition({ isVoid: true }),
    'meta': new HtmlTagDefinition({ isVoid: true }),
    'area': new HtmlTagDefinition({ isVoid: true }),
    'embed': new HtmlTagDefinition({ isVoid: true }),
    'link': new HtmlTagDefinition({ isVoid: true }),
    'img': new HtmlTagDefinition({ isVoid: true }),
    'input': new HtmlTagDefinition({ isVoid: true }),
    'param': new HtmlTagDefinition({ isVoid: true }),
    'hr': new HtmlTagDefinition({ isVoid: true }),
    'br': new HtmlTagDefinition({ isVoid: true }),
    'source': new HtmlTagDefinition({ isVoid: true }),
    'track': new HtmlTagDefinition({ isVoid: true }),
    'wbr': new HtmlTagDefinition({ isVoid: true }),
    'p': new HtmlTagDefinition({
      closedByChildren: ['address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'],
      closedByParent: true
    }),
    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),
    'tbody': new HtmlTagDefinition({
      closedByChildren: ['tbody', 'tfoot'],
      closedByParent: true
    }),
    'tfoot': new HtmlTagDefinition({
      closedByChildren: ['tbody'],
      closedByParent: true
    }),
    'tr': new HtmlTagDefinition({
      closedByChildren: ['tr'],
      requiredParents: ['tbody', 'tfoot', 'thead'],
      closedByParent: true
    }),
    'td': new HtmlTagDefinition({
      closedByChildren: ['td', 'th'],
      closedByParent: true
    }),
    'th': new HtmlTagDefinition({
      closedByChildren: ['td', 'th'],
      closedByParent: true
    }),
    'col': new HtmlTagDefinition({
      requiredParents: ['colgroup'],
      isVoid: true
    }),
    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),
    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),
    'li': new HtmlTagDefinition({
      closedByChildren: ['li'],
      closedByParent: true
    }),
    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),
    'dd': new HtmlTagDefinition({
      closedByChildren: ['dt', 'dd'],
      closedByParent: true
    }),
    'rb': new HtmlTagDefinition({
      closedByChildren: ['rb', 'rt', 'rtc', 'rp'],
      closedByParent: true
    }),
    'rt': new HtmlTagDefinition({
      closedByChildren: ['rb', 'rt', 'rtc', 'rp'],
      closedByParent: true
    }),
    'rtc': new HtmlTagDefinition({
      closedByChildren: ['rb', 'rtc', 'rp'],
      closedByParent: true
    }),
    'rp': new HtmlTagDefinition({
      closedByChildren: ['rb', 'rt', 'rtc', 'rp'],
      closedByParent: true
    }),
    'optgroup': new HtmlTagDefinition({
      closedByChildren: ['optgroup'],
      closedByParent: true
    }),
    'option': new HtmlTagDefinition({
      closedByChildren: ['option', 'optgroup'],
      closedByParent: true
    }),
    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),
    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),
    'style': new HtmlTagDefinition({ contentType: HtmlTagContentType.RAW_TEXT }),
    'script': new HtmlTagDefinition({ contentType: HtmlTagContentType.RAW_TEXT }),
    'title': new HtmlTagDefinition({ contentType: HtmlTagContentType.ESCAPABLE_RAW_TEXT }),
    'textarea': new HtmlTagDefinition({
      contentType: HtmlTagContentType.ESCAPABLE_RAW_TEXT,
      ignoreFirstLf: true
    })
  };
  var DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();
  function getHtmlTagDefinition(tagName) {
    var result = TAG_DEFINITIONS[tagName.toLowerCase()];
    return lang_1.isPresent(result) ? result : DEFAULT_TAG_DEFINITION;
  }
  exports.getHtmlTagDefinition = getHtmlTagDefinition;
  var NS_PREFIX_RE = /^@([^:]+):(.+)/g;
  function splitNsName(elementName) {
    if (elementName[0] != '@') {
      return [null, elementName];
    }
    var match = lang_1.RegExpWrapper.firstMatch(NS_PREFIX_RE, elementName);
    return [match[1], match[2]];
  }
  exports.splitNsName = splitNsName;
  function getNsPrefix(elementName) {
    return splitNsName(elementName)[0];
  }
  exports.getNsPrefix = getNsPrefix;
  function mergeNsAndName(prefix, localName) {
    return lang_1.isPresent(prefix) ? "@" + prefix + ":" + localName : localName;
  }
  exports.mergeNsAndName = mergeNsAndName;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/template_preparser.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var html_tags_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_tags.js');
  var NG_CONTENT_SELECT_ATTR = 'select';
  var NG_CONTENT_ELEMENT = 'ng-content';
  var LINK_ELEMENT = 'link';
  var LINK_STYLE_REL_ATTR = 'rel';
  var LINK_STYLE_HREF_ATTR = 'href';
  var LINK_STYLE_REL_VALUE = 'stylesheet';
  var STYLE_ELEMENT = 'style';
  var SCRIPT_ELEMENT = 'script';
  var NG_NON_BINDABLE_ATTR = 'ngNonBindable';
  var NG_PROJECT_AS = 'ngProjectAs';
  function preparseElement(ast) {
    var selectAttr = null;
    var hrefAttr = null;
    var relAttr = null;
    var nonBindable = false;
    var projectAs = null;
    ast.attrs.forEach(function (attr) {
      var lcAttrName = attr.name.toLowerCase();
      if (lcAttrName == NG_CONTENT_SELECT_ATTR) {
        selectAttr = attr.value;
      } else if (lcAttrName == LINK_STYLE_HREF_ATTR) {
        hrefAttr = attr.value;
      } else if (lcAttrName == LINK_STYLE_REL_ATTR) {
        relAttr = attr.value;
      } else if (attr.name == NG_NON_BINDABLE_ATTR) {
        nonBindable = true;
      } else if (attr.name == NG_PROJECT_AS) {
        if (attr.value.length > 0) {
          projectAs = attr.value;
        }
      }
    });
    selectAttr = normalizeNgContentSelect(selectAttr);
    var nodeName = ast.name.toLowerCase();
    var type = PreparsedElementType.OTHER;
    if (html_tags_1.splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {
      type = PreparsedElementType.NG_CONTENT;
    } else if (nodeName == STYLE_ELEMENT) {
      type = PreparsedElementType.STYLE;
    } else if (nodeName == SCRIPT_ELEMENT) {
      type = PreparsedElementType.SCRIPT;
    } else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {
      type = PreparsedElementType.STYLESHEET;
    }
    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);
  }
  exports.preparseElement = preparseElement;
  (function (PreparsedElementType) {
    PreparsedElementType[PreparsedElementType["NG_CONTENT"] = 0] = "NG_CONTENT";
    PreparsedElementType[PreparsedElementType["STYLE"] = 1] = "STYLE";
    PreparsedElementType[PreparsedElementType["STYLESHEET"] = 2] = "STYLESHEET";
    PreparsedElementType[PreparsedElementType["SCRIPT"] = 3] = "SCRIPT";
    PreparsedElementType[PreparsedElementType["OTHER"] = 4] = "OTHER";
  })(exports.PreparsedElementType || (exports.PreparsedElementType = {}));
  var PreparsedElementType = exports.PreparsedElementType;
  var PreparsedElement = function () {
    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {
      this.type = type;
      this.selectAttr = selectAttr;
      this.hrefAttr = hrefAttr;
      this.nonBindable = nonBindable;
      this.projectAs = projectAs;
    }
    return PreparsedElement;
  }();
  exports.PreparsedElement = PreparsedElement;
  function normalizeNgContentSelect(selectAttr) {
    if (lang_1.isBlank(selectAttr) || selectAttr.length === 0) {
      return '*';
    }
    return selectAttr;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/directive_normalizer.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/xhr.js', 'npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_preparser.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var async_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/async.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var xhr_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/xhr.js');
  var url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js');
  var style_url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js');
  var html_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_ast.js');
  var html_parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js');
  var template_preparser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_preparser.js');
  var DirectiveNormalizer = function () {
    function DirectiveNormalizer(_xhr, _urlResolver, _htmlParser) {
      this._xhr = _xhr;
      this._urlResolver = _urlResolver;
      this._htmlParser = _htmlParser;
    }
    DirectiveNormalizer.prototype.normalizeDirective = function (directive) {
      if (!directive.isComponent) {
        return async_1.PromiseWrapper.resolve(directive);
      }
      return this.normalizeTemplate(directive.type, directive.template).then(function (normalizedTemplate) {
        return new compile_metadata_1.CompileDirectiveMetadata({
          type: directive.type,
          isComponent: directive.isComponent,
          selector: directive.selector,
          exportAs: directive.exportAs,
          changeDetection: directive.changeDetection,
          inputs: directive.inputs,
          outputs: directive.outputs,
          hostListeners: directive.hostListeners,
          hostProperties: directive.hostProperties,
          hostAttributes: directive.hostAttributes,
          lifecycleHooks: directive.lifecycleHooks,
          providers: directive.providers,
          viewProviders: directive.viewProviders,
          queries: directive.queries,
          viewQueries: directive.viewQueries,
          template: normalizedTemplate
        });
      });
    };
    DirectiveNormalizer.prototype.normalizeTemplate = function (directiveType, template) {
      var _this = this;
      if (lang_1.isPresent(template.template)) {
        return async_1.PromiseWrapper.resolve(this.normalizeLoadedTemplate(directiveType, template, template.template, directiveType.moduleUrl));
      } else if (lang_1.isPresent(template.templateUrl)) {
        var sourceAbsUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);
        return this._xhr.get(sourceAbsUrl).then(function (templateContent) {
          return _this.normalizeLoadedTemplate(directiveType, template, templateContent, sourceAbsUrl);
        });
      } else {
        throw new exceptions_1.BaseException("No template specified for component " + directiveType.name);
      }
    };
    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (directiveType, templateMeta, template, templateAbsUrl) {
      var _this = this;
      var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name);
      if (rootNodesAndErrors.errors.length > 0) {
        var errorString = rootNodesAndErrors.errors.join('\n');
        throw new exceptions_1.BaseException("Template parse errors:\n" + errorString);
      }
      var visitor = new TemplatePreparseVisitor();
      html_ast_1.htmlVisitAll(visitor, rootNodesAndErrors.rootNodes);
      var allStyles = templateMeta.styles.concat(visitor.styles);
      var allStyleAbsUrls = visitor.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable).map(function (url) {
        return _this._urlResolver.resolve(templateAbsUrl, url);
      }).concat(templateMeta.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable).map(function (url) {
        return _this._urlResolver.resolve(directiveType.moduleUrl, url);
      }));
      var allResolvedStyles = allStyles.map(function (style) {
        var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, templateAbsUrl, style);
        styleWithImports.styleUrls.forEach(function (styleUrl) {
          return allStyleAbsUrls.push(styleUrl);
        });
        return styleWithImports.style;
      });
      var encapsulation = templateMeta.encapsulation;
      if (encapsulation === core_1.ViewEncapsulation.Emulated && allResolvedStyles.length === 0 && allStyleAbsUrls.length === 0) {
        encapsulation = core_1.ViewEncapsulation.None;
      }
      return new compile_metadata_1.CompileTemplateMetadata({
        encapsulation: encapsulation,
        template: template,
        templateUrl: templateAbsUrl,
        styles: allResolvedStyles,
        styleUrls: allStyleAbsUrls,
        ngContentSelectors: visitor.ngContentSelectors
      });
    };
    DirectiveNormalizer.decorators = [{ type: core_1.Injectable }];
    DirectiveNormalizer.ctorParameters = [{ type: xhr_1.XHR }, { type: url_resolver_1.UrlResolver }, { type: html_parser_1.HtmlParser }];
    return DirectiveNormalizer;
  }();
  exports.DirectiveNormalizer = DirectiveNormalizer;
  var TemplatePreparseVisitor = function () {
    function TemplatePreparseVisitor() {
      this.ngContentSelectors = [];
      this.styles = [];
      this.styleUrls = [];
      this.ngNonBindableStackCount = 0;
    }
    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {
      var preparsedElement = template_preparser_1.preparseElement(ast);
      switch (preparsedElement.type) {
        case template_preparser_1.PreparsedElementType.NG_CONTENT:
          if (this.ngNonBindableStackCount === 0) {
            this.ngContentSelectors.push(preparsedElement.selectAttr);
          }
          break;
        case template_preparser_1.PreparsedElementType.STYLE:
          var textContent = '';
          ast.children.forEach(function (child) {
            if (child instanceof html_ast_1.HtmlTextAst) {
              textContent += child.value;
            }
          });
          this.styles.push(textContent);
          break;
        case template_preparser_1.PreparsedElementType.STYLESHEET:
          this.styleUrls.push(preparsedElement.hrefAttr);
          break;
        default:
          break;
      }
      if (preparsedElement.nonBindable) {
        this.ngNonBindableStackCount++;
      }
      html_ast_1.htmlVisitAll(this, ast.children);
      if (preparsedElement.nonBindable) {
        this.ngNonBindableStackCount--;
      }
      return null;
    };
    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) {
      return null;
    };
    TemplatePreparseVisitor.prototype.visitAttr = function (ast, context) {
      return null;
    };
    TemplatePreparseVisitor.prototype.visitText = function (ast, context) {
      return null;
    };
    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) {
      return null;
    };
    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {
      return null;
    };
    return TemplatePreparseVisitor;
  }();
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/directive_resolver.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  function _isDirectiveMetadata(type) {
    return type instanceof core_1.DirectiveMetadata;
  }
  var DirectiveResolver = function () {
    function DirectiveResolver(_reflector) {
      if (lang_1.isPresent(_reflector)) {
        this._reflector = _reflector;
      } else {
        this._reflector = core_1.reflector;
      }
    }
    DirectiveResolver.prototype.resolve = function (type) {
      var typeMetadata = this._reflector.annotations(core_1.resolveForwardRef(type));
      if (lang_1.isPresent(typeMetadata)) {
        var metadata = typeMetadata.find(_isDirectiveMetadata);
        if (lang_1.isPresent(metadata)) {
          var propertyMetadata = this._reflector.propMetadata(type);
          return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);
        }
      }
      throw new exceptions_1.BaseException("No Directive annotation found on " + lang_1.stringify(type));
    };
    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {
      var inputs = [];
      var outputs = [];
      var host = {};
      var queries = {};
      collection_1.StringMapWrapper.forEach(propertyMetadata, function (metadata, propName) {
        metadata.forEach(function (a) {
          if (a instanceof core_1.InputMetadata) {
            if (lang_1.isPresent(a.bindingPropertyName)) {
              inputs.push(propName + ": " + a.bindingPropertyName);
            } else {
              inputs.push(propName);
            }
          }
          if (a instanceof core_1.OutputMetadata) {
            if (lang_1.isPresent(a.bindingPropertyName)) {
              outputs.push(propName + ": " + a.bindingPropertyName);
            } else {
              outputs.push(propName);
            }
          }
          if (a instanceof core_1.HostBindingMetadata) {
            if (lang_1.isPresent(a.hostPropertyName)) {
              host["[" + a.hostPropertyName + "]"] = propName;
            } else {
              host["[" + propName + "]"] = propName;
            }
          }
          if (a instanceof core_1.HostListenerMetadata) {
            var args = lang_1.isPresent(a.args) ? a.args.join(', ') : '';
            host["(" + a.eventName + ")"] = propName + "(" + args + ")";
          }
          if (a instanceof core_1.ContentChildrenMetadata) {
            queries[propName] = a;
          }
          if (a instanceof core_1.ViewChildrenMetadata) {
            queries[propName] = a;
          }
          if (a instanceof core_1.ContentChildMetadata) {
            queries[propName] = a;
          }
          if (a instanceof core_1.ViewChildMetadata) {
            queries[propName] = a;
          }
        });
      });
      return this._merge(dm, inputs, outputs, host, queries, directiveType);
    };
    DirectiveResolver.prototype._merge = function (dm, inputs, outputs, host, queries, directiveType) {
      var mergedInputs = lang_1.isPresent(dm.inputs) ? collection_1.ListWrapper.concat(dm.inputs, inputs) : inputs;
      var mergedOutputs;
      if (lang_1.isPresent(dm.outputs)) {
        dm.outputs.forEach(function (propName) {
          if (collection_1.ListWrapper.contains(outputs, propName)) {
            throw new exceptions_1.BaseException("Output event '" + propName + "' defined multiple times in '" + lang_1.stringify(directiveType) + "'");
          }
        });
        mergedOutputs = collection_1.ListWrapper.concat(dm.outputs, outputs);
      } else {
        mergedOutputs = outputs;
      }
      var mergedHost = lang_1.isPresent(dm.host) ? collection_1.StringMapWrapper.merge(dm.host, host) : host;
      var mergedQueries = lang_1.isPresent(dm.queries) ? collection_1.StringMapWrapper.merge(dm.queries, queries) : queries;
      if (dm instanceof core_1.ComponentMetadata) {
        return new core_1.ComponentMetadata({
          selector: dm.selector,
          inputs: mergedInputs,
          outputs: mergedOutputs,
          host: mergedHost,
          exportAs: dm.exportAs,
          moduleId: dm.moduleId,
          queries: mergedQueries,
          changeDetection: dm.changeDetection,
          providers: dm.providers,
          viewProviders: dm.viewProviders
        });
      } else {
        return new core_1.DirectiveMetadata({
          selector: dm.selector,
          inputs: mergedInputs,
          outputs: mergedOutputs,
          host: mergedHost,
          exportAs: dm.exportAs,
          queries: mergedQueries,
          providers: dm.providers
        });
      }
    };
    DirectiveResolver.decorators = [{ type: core_1.Injectable }];
    DirectiveResolver.ctorParameters = [{ type: core_private_1.ReflectorReader }];
    return DirectiveResolver;
  }();
  exports.DirectiveResolver = DirectiveResolver;
  exports.CODEGEN_DIRECTIVE_RESOLVER = new DirectiveResolver(core_1.reflector);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/pipe_resolver.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  function _isPipeMetadata(type) {
    return type instanceof core_1.PipeMetadata;
  }
  var PipeResolver = function () {
    function PipeResolver(_reflector) {
      if (lang_1.isPresent(_reflector)) {
        this._reflector = _reflector;
      } else {
        this._reflector = core_1.reflector;
      }
    }
    PipeResolver.prototype.resolve = function (type) {
      var metas = this._reflector.annotations(core_1.resolveForwardRef(type));
      if (lang_1.isPresent(metas)) {
        var annotation = metas.find(_isPipeMetadata);
        if (lang_1.isPresent(annotation)) {
          return annotation;
        }
      }
      throw new exceptions_1.BaseException("No Pipe decorator found on " + lang_1.stringify(type));
    };
    PipeResolver.decorators = [{ type: core_1.Injectable }];
    PipeResolver.ctorParameters = [{ type: core_private_1.ReflectorReader }];
    return PipeResolver;
  }();
  exports.PipeResolver = PipeResolver;
  exports.CODEGEN_PIPE_RESOLVER = new PipeResolver(core_1.reflector);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_resolver.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var ViewResolver = function () {
    function ViewResolver(_reflector) {
      this._cache = new collection_1.Map();
      if (lang_1.isPresent(_reflector)) {
        this._reflector = _reflector;
      } else {
        this._reflector = core_1.reflector;
      }
    }
    ViewResolver.prototype.resolve = function (component) {
      var view = this._cache.get(component);
      if (lang_1.isBlank(view)) {
        view = this._resolve(component);
        this._cache.set(component, view);
      }
      return view;
    };
    ViewResolver.prototype._resolve = function (component) {
      var compMeta;
      var viewMeta;
      this._reflector.annotations(component).forEach(function (m) {
        if (m instanceof core_1.ViewMetadata) {
          viewMeta = m;
        }
        if (m instanceof core_1.ComponentMetadata) {
          compMeta = m;
        }
      });
      if (lang_1.isPresent(compMeta)) {
        if (lang_1.isBlank(compMeta.template) && lang_1.isBlank(compMeta.templateUrl) && lang_1.isBlank(viewMeta)) {
          throw new exceptions_1.BaseException("Component '" + lang_1.stringify(component) + "' must have either 'template' or 'templateUrl' set.");
        } else if (lang_1.isPresent(compMeta.template) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("template", component);
        } else if (lang_1.isPresent(compMeta.templateUrl) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("templateUrl", component);
        } else if (lang_1.isPresent(compMeta.directives) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("directives", component);
        } else if (lang_1.isPresent(compMeta.pipes) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("pipes", component);
        } else if (lang_1.isPresent(compMeta.encapsulation) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("encapsulation", component);
        } else if (lang_1.isPresent(compMeta.styles) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("styles", component);
        } else if (lang_1.isPresent(compMeta.styleUrls) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("styleUrls", component);
        } else if (lang_1.isPresent(viewMeta)) {
          return viewMeta;
        } else {
          return new core_1.ViewMetadata({
            templateUrl: compMeta.templateUrl,
            template: compMeta.template,
            directives: compMeta.directives,
            pipes: compMeta.pipes,
            encapsulation: compMeta.encapsulation,
            styles: compMeta.styles,
            styleUrls: compMeta.styleUrls
          });
        }
      } else {
        if (lang_1.isBlank(viewMeta)) {
          throw new exceptions_1.BaseException("Could not compile '" + lang_1.stringify(component) + "' because it is not a component.");
        } else {
          return viewMeta;
        }
      }
      return null;
    };
    ViewResolver.prototype._throwMixingViewAndComponent = function (propertyName, component) {
      throw new exceptions_1.BaseException("Component '" + lang_1.stringify(component) + "' cannot have both '" + propertyName + "' and '@View' set at the same time\"");
    };
    ViewResolver.decorators = [{ type: core_1.Injectable }];
    ViewResolver.ctorParameters = [{ type: core_private_1.ReflectorReader }];
    return ViewResolver;
  }();
  exports.ViewResolver = ViewResolver;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/directive_lifecycle_reflector.js', ['npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  function hasLifecycleHook(lcInterface, token) {
    if (!(token instanceof lang_1.Type)) return false;
    var proto = token.prototype;
    switch (lcInterface) {
      case core_private_1.LifecycleHooks.AfterContentInit:
        return !!proto.ngAfterContentInit;
      case core_private_1.LifecycleHooks.AfterContentChecked:
        return !!proto.ngAfterContentChecked;
      case core_private_1.LifecycleHooks.AfterViewInit:
        return !!proto.ngAfterViewInit;
      case core_private_1.LifecycleHooks.AfterViewChecked:
        return !!proto.ngAfterViewChecked;
      case core_private_1.LifecycleHooks.OnChanges:
        return !!proto.ngOnChanges;
      case core_private_1.LifecycleHooks.DoCheck:
        return !!proto.ngDoCheck;
      case core_private_1.LifecycleHooks.OnDestroy:
        return !!proto.ngOnDestroy;
      case core_private_1.LifecycleHooks.OnInit:
        return !!proto.ngOnInit;
      default:
        return false;
    }
  }
  exports.hasLifecycleHook = hasLifecycleHook;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/assertions.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  function assertArrayOfStrings(identifier, value) {
    if (!lang_1.assertionsEnabled() || lang_1.isBlank(value)) {
      return;
    }
    if (!lang_1.isArray(value)) {
      throw new exceptions_1.BaseException("Expected '" + identifier + "' to be an array of strings.");
    }
    for (var i = 0; i < value.length; i += 1) {
      if (!lang_1.isString(value[i])) {
        throw new exceptions_1.BaseException("Expected '" + identifier + "' to be an array of strings.");
      }
    }
  }
  exports.assertArrayOfStrings = assertArrayOfStrings;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/metadata_resolver.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/directive_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/pipe_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/directive_lifecycle_reflector.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/assertions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var cpl = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var directive_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/directive_resolver.js');
  var pipe_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/pipe_resolver.js');
  var view_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_resolver.js');
  var directive_lifecycle_reflector_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/directive_lifecycle_reflector.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  var assertions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/assertions.js');
  var url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js');
  var core_private_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var CompileMetadataResolver = function () {
    function CompileMetadataResolver(_directiveResolver, _pipeResolver, _viewResolver, _platformDirectives, _platformPipes, _reflector) {
      this._directiveResolver = _directiveResolver;
      this._pipeResolver = _pipeResolver;
      this._viewResolver = _viewResolver;
      this._platformDirectives = _platformDirectives;
      this._platformPipes = _platformPipes;
      this._directiveCache = new Map();
      this._pipeCache = new Map();
      this._anonymousTypes = new Map();
      this._anonymousTypeIndex = 0;
      if (lang_1.isPresent(_reflector)) {
        this._reflector = _reflector;
      } else {
        this._reflector = core_1.reflector;
      }
    }
    CompileMetadataResolver.prototype.sanitizeTokenName = function (token) {
      var identifier = lang_1.stringify(token);
      if (identifier.indexOf('(') >= 0) {
        var found = this._anonymousTypes.get(token);
        if (lang_1.isBlank(found)) {
          this._anonymousTypes.set(token, this._anonymousTypeIndex++);
          found = this._anonymousTypes.get(token);
        }
        identifier = "anonymous_token_" + found + "_";
      }
      return util_1.sanitizeIdentifier(identifier);
    };
    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {
      var meta = this._directiveCache.get(directiveType);
      if (lang_1.isBlank(meta)) {
        var dirMeta = this._directiveResolver.resolve(directiveType);
        var templateMeta = null;
        var changeDetectionStrategy = null;
        var viewProviders = [];
        var moduleUrl = staticTypeModuleUrl(directiveType);
        if (dirMeta instanceof core_1.ComponentMetadata) {
          assertions_1.assertArrayOfStrings('styles', dirMeta.styles);
          var cmpMeta = dirMeta;
          var viewMeta = this._viewResolver.resolve(directiveType);
          assertions_1.assertArrayOfStrings('styles', viewMeta.styles);
          templateMeta = new cpl.CompileTemplateMetadata({
            encapsulation: viewMeta.encapsulation,
            template: viewMeta.template,
            templateUrl: viewMeta.templateUrl,
            styles: viewMeta.styles,
            styleUrls: viewMeta.styleUrls
          });
          changeDetectionStrategy = cmpMeta.changeDetection;
          if (lang_1.isPresent(dirMeta.viewProviders)) {
            viewProviders = this.getProvidersMetadata(dirMeta.viewProviders);
          }
          moduleUrl = componentModuleUrl(this._reflector, directiveType, cmpMeta);
        }
        var providers = [];
        if (lang_1.isPresent(dirMeta.providers)) {
          providers = this.getProvidersMetadata(dirMeta.providers);
        }
        var queries = [];
        var viewQueries = [];
        if (lang_1.isPresent(dirMeta.queries)) {
          queries = this.getQueriesMetadata(dirMeta.queries, false);
          viewQueries = this.getQueriesMetadata(dirMeta.queries, true);
        }
        meta = cpl.CompileDirectiveMetadata.create({
          selector: dirMeta.selector,
          exportAs: dirMeta.exportAs,
          isComponent: lang_1.isPresent(templateMeta),
          type: this.getTypeMetadata(directiveType, moduleUrl),
          template: templateMeta,
          changeDetection: changeDetectionStrategy,
          inputs: dirMeta.inputs,
          outputs: dirMeta.outputs,
          host: dirMeta.host,
          lifecycleHooks: core_private_1.LIFECYCLE_HOOKS_VALUES.filter(function (hook) {
            return directive_lifecycle_reflector_1.hasLifecycleHook(hook, directiveType);
          }),
          providers: providers,
          viewProviders: viewProviders,
          queries: queries,
          viewQueries: viewQueries
        });
        this._directiveCache.set(directiveType, meta);
      }
      return meta;
    };
    CompileMetadataResolver.prototype.maybeGetDirectiveMetadata = function (someType) {
      try {
        return this.getDirectiveMetadata(someType);
      } catch (e) {
        if (e.message.indexOf('No Directive annotation') !== -1) {
          return null;
        }
        throw e;
      }
    };
    CompileMetadataResolver.prototype.getTypeMetadata = function (type, moduleUrl) {
      return new cpl.CompileTypeMetadata({
        name: this.sanitizeTokenName(type),
        moduleUrl: moduleUrl,
        runtime: type,
        diDeps: this.getDependenciesMetadata(type, null)
      });
    };
    CompileMetadataResolver.prototype.getFactoryMetadata = function (factory, moduleUrl) {
      return new cpl.CompileFactoryMetadata({
        name: this.sanitizeTokenName(factory),
        moduleUrl: moduleUrl,
        runtime: factory,
        diDeps: this.getDependenciesMetadata(factory, null)
      });
    };
    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {
      var meta = this._pipeCache.get(pipeType);
      if (lang_1.isBlank(meta)) {
        var pipeMeta = this._pipeResolver.resolve(pipeType);
        meta = new cpl.CompilePipeMetadata({
          type: this.getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),
          name: pipeMeta.name,
          pure: pipeMeta.pure,
          lifecycleHooks: core_private_1.LIFECYCLE_HOOKS_VALUES.filter(function (hook) {
            return directive_lifecycle_reflector_1.hasLifecycleHook(hook, pipeType);
          })
        });
        this._pipeCache.set(pipeType, meta);
      }
      return meta;
    };
    CompileMetadataResolver.prototype.getViewDirectivesMetadata = function (component) {
      var _this = this;
      var view = this._viewResolver.resolve(component);
      var directives = flattenDirectives(view, this._platformDirectives);
      for (var i = 0; i < directives.length; i++) {
        if (!isValidType(directives[i])) {
          throw new exceptions_1.BaseException("Unexpected directive value '" + lang_1.stringify(directives[i]) + "' on the View of component '" + lang_1.stringify(component) + "'");
        }
      }
      return directives.map(function (type) {
        return _this.getDirectiveMetadata(type);
      });
    };
    CompileMetadataResolver.prototype.getViewPipesMetadata = function (component) {
      var _this = this;
      var view = this._viewResolver.resolve(component);
      var pipes = flattenPipes(view, this._platformPipes);
      for (var i = 0; i < pipes.length; i++) {
        if (!isValidType(pipes[i])) {
          throw new exceptions_1.BaseException("Unexpected piped value '" + lang_1.stringify(pipes[i]) + "' on the View of component '" + lang_1.stringify(component) + "'");
        }
      }
      return pipes.map(function (type) {
        return _this.getPipeMetadata(type);
      });
    };
    CompileMetadataResolver.prototype.getDependenciesMetadata = function (typeOrFunc, dependencies) {
      var _this = this;
      var params = lang_1.isPresent(dependencies) ? dependencies : this._reflector.parameters(typeOrFunc);
      if (lang_1.isBlank(params)) {
        params = [];
      }
      return params.map(function (param) {
        if (lang_1.isBlank(param)) {
          return null;
        }
        var isAttribute = false;
        var isHost = false;
        var isSelf = false;
        var isSkipSelf = false;
        var isOptional = false;
        var query = null;
        var viewQuery = null;
        var token = null;
        if (lang_1.isArray(param)) {
          param.forEach(function (paramEntry) {
            if (paramEntry instanceof core_1.HostMetadata) {
              isHost = true;
            } else if (paramEntry instanceof core_1.SelfMetadata) {
              isSelf = true;
            } else if (paramEntry instanceof core_1.SkipSelfMetadata) {
              isSkipSelf = true;
            } else if (paramEntry instanceof core_1.OptionalMetadata) {
              isOptional = true;
            } else if (paramEntry instanceof core_1.AttributeMetadata) {
              isAttribute = true;
              token = paramEntry.attributeName;
            } else if (paramEntry instanceof core_1.QueryMetadata) {
              if (paramEntry.isViewQuery) {
                viewQuery = paramEntry;
              } else {
                query = paramEntry;
              }
            } else if (paramEntry instanceof core_1.InjectMetadata) {
              token = paramEntry.token;
            } else if (isValidType(paramEntry) && lang_1.isBlank(token)) {
              token = paramEntry;
            }
          });
        } else {
          token = param;
        }
        if (lang_1.isBlank(token)) {
          return null;
        }
        return new cpl.CompileDiDependencyMetadata({
          isAttribute: isAttribute,
          isHost: isHost,
          isSelf: isSelf,
          isSkipSelf: isSkipSelf,
          isOptional: isOptional,
          query: lang_1.isPresent(query) ? _this.getQueryMetadata(query, null) : null,
          viewQuery: lang_1.isPresent(viewQuery) ? _this.getQueryMetadata(viewQuery, null) : null,
          token: _this.getTokenMetadata(token)
        });
      });
    };
    CompileMetadataResolver.prototype.getTokenMetadata = function (token) {
      token = core_1.resolveForwardRef(token);
      var compileToken;
      if (lang_1.isString(token)) {
        compileToken = new cpl.CompileTokenMetadata({ value: token });
      } else {
        compileToken = new cpl.CompileTokenMetadata({ identifier: new cpl.CompileIdentifierMetadata({
            runtime: token,
            name: this.sanitizeTokenName(token),
            moduleUrl: staticTypeModuleUrl(token)
          }) });
      }
      return compileToken;
    };
    CompileMetadataResolver.prototype.getProvidersMetadata = function (providers) {
      var _this = this;
      return providers.map(function (provider) {
        provider = core_1.resolveForwardRef(provider);
        if (lang_1.isArray(provider)) {
          return _this.getProvidersMetadata(provider);
        } else if (provider instanceof core_1.Provider) {
          return _this.getProviderMetadata(provider);
        } else if (core_private_2.isProviderLiteral(provider)) {
          return _this.getProviderMetadata(core_private_2.createProvider(provider));
        } else {
          return _this.getTypeMetadata(provider, staticTypeModuleUrl(provider));
        }
      });
    };
    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {
      var compileDeps;
      if (lang_1.isPresent(provider.useClass)) {
        compileDeps = this.getDependenciesMetadata(provider.useClass, provider.dependencies);
      } else if (lang_1.isPresent(provider.useFactory)) {
        compileDeps = this.getDependenciesMetadata(provider.useFactory, provider.dependencies);
      }
      return new cpl.CompileProviderMetadata({
        token: this.getTokenMetadata(provider.token),
        useClass: lang_1.isPresent(provider.useClass) ? this.getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass)) : null,
        useValue: convertToCompileValue(provider.useValue),
        useFactory: lang_1.isPresent(provider.useFactory) ? this.getFactoryMetadata(provider.useFactory, staticTypeModuleUrl(provider.useFactory)) : null,
        useExisting: lang_1.isPresent(provider.useExisting) ? this.getTokenMetadata(provider.useExisting) : null,
        deps: compileDeps,
        multi: provider.multi
      });
    };
    CompileMetadataResolver.prototype.getQueriesMetadata = function (queries, isViewQuery) {
      var _this = this;
      var compileQueries = [];
      collection_1.StringMapWrapper.forEach(queries, function (query, propertyName) {
        if (query.isViewQuery === isViewQuery) {
          compileQueries.push(_this.getQueryMetadata(query, propertyName));
        }
      });
      return compileQueries;
    };
    CompileMetadataResolver.prototype.getQueryMetadata = function (q, propertyName) {
      var _this = this;
      var selectors;
      if (q.isVarBindingQuery) {
        selectors = q.varBindings.map(function (varName) {
          return _this.getTokenMetadata(varName);
        });
      } else {
        selectors = [this.getTokenMetadata(q.selector)];
      }
      return new cpl.CompileQueryMetadata({
        selectors: selectors,
        first: q.first,
        descendants: q.descendants,
        propertyName: propertyName,
        read: lang_1.isPresent(q.read) ? this.getTokenMetadata(q.read) : null
      });
    };
    CompileMetadataResolver.decorators = [{ type: core_1.Injectable }];
    CompileMetadataResolver.ctorParameters = [{ type: directive_resolver_1.DirectiveResolver }, { type: pipe_resolver_1.PipeResolver }, { type: view_resolver_1.ViewResolver }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, {
        type: core_1.Inject,
        args: [core_1.PLATFORM_DIRECTIVES]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, {
        type: core_1.Inject,
        args: [core_1.PLATFORM_PIPES]
      }]
    }, { type: core_private_1.ReflectorReader }];
    return CompileMetadataResolver;
  }();
  exports.CompileMetadataResolver = CompileMetadataResolver;
  function flattenDirectives(view, platformDirectives) {
    var directives = [];
    if (lang_1.isPresent(platformDirectives)) {
      flattenArray(platformDirectives, directives);
    }
    if (lang_1.isPresent(view.directives)) {
      flattenArray(view.directives, directives);
    }
    return directives;
  }
  function flattenPipes(view, platformPipes) {
    var pipes = [];
    if (lang_1.isPresent(platformPipes)) {
      flattenArray(platformPipes, pipes);
    }
    if (lang_1.isPresent(view.pipes)) {
      flattenArray(view.pipes, pipes);
    }
    return pipes;
  }
  function flattenArray(tree, out) {
    for (var i = 0; i < tree.length; i++) {
      var item = core_1.resolveForwardRef(tree[i]);
      if (lang_1.isArray(item)) {
        flattenArray(item, out);
      } else {
        out.push(item);
      }
    }
  }
  function isStaticType(value) {
    return lang_1.isStringMap(value) && lang_1.isPresent(value['name']) && lang_1.isPresent(value['filePath']);
  }
  function isValidType(value) {
    return isStaticType(value) || value instanceof lang_1.Type;
  }
  function staticTypeModuleUrl(value) {
    return isStaticType(value) ? value['filePath'] : null;
  }
  function componentModuleUrl(reflector, type, cmpMetadata) {
    if (isStaticType(type)) {
      return staticTypeModuleUrl(type);
    }
    if (lang_1.isPresent(cmpMetadata.moduleId)) {
      var moduleId = cmpMetadata.moduleId;
      var scheme = url_resolver_1.getUrlScheme(moduleId);
      return lang_1.isPresent(scheme) && scheme.length > 0 ? moduleId : "package:" + moduleId + util_1.MODULE_SUFFIX;
    }
    return reflector.importUri(type);
  }
  function convertToCompileValue(value) {
    return util_1.visitValue(value, new _CompileValueConverter(), null);
  }
  var _CompileValueConverter = function (_super) {
    __extends(_CompileValueConverter, _super);
    function _CompileValueConverter() {
      _super.apply(this, arguments);
    }
    _CompileValueConverter.prototype.visitOther = function (value, context) {
      if (isStaticType(value)) {
        return new cpl.CompileIdentifierMetadata({
          name: value['name'],
          moduleUrl: staticTypeModuleUrl(value)
        });
      } else {
        return new cpl.CompileIdentifierMetadata({ runtime: value });
      }
    };
    return _CompileValueConverter;
  }(util_1.ValueTransformer);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/shadow_css.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
    var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
    var ShadowCss = function () {
      function ShadowCss() {
        this.strictStyling = true;
      }
      ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {
        if (hostSelector === void 0) {
          hostSelector = '';
        }
        cssText = stripComments(cssText);
        cssText = this._insertDirectives(cssText);
        return this._scopeCssText(cssText, selector, hostSelector);
      };
      ShadowCss.prototype._insertDirectives = function (cssText) {
        cssText = this._insertPolyfillDirectivesInCssText(cssText);
        return this._insertPolyfillRulesInCssText(cssText);
      };
      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {
        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentNextSelectorRe, function (m) {
          return m[1] + '{';
        });
      };
      ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {
        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentRuleRe, function (m) {
          var rule = m[0];
          rule = lang_1.StringWrapper.replace(rule, m[1], '');
          rule = lang_1.StringWrapper.replace(rule, m[2], '');
          return m[3] + rule;
        });
      };
      ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {
        var unscoped = this._extractUnscopedRulesFromCssText(cssText);
        cssText = this._insertPolyfillHostInCssText(cssText);
        cssText = this._convertColonHost(cssText);
        cssText = this._convertColonHostContext(cssText);
        cssText = this._convertShadowDOMSelectors(cssText);
        if (lang_1.isPresent(scopeSelector)) {
          cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);
        }
        cssText = cssText + '\n' + unscoped;
        return cssText.trim();
      };
      ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {
        var r = '',
            m;
        var matcher = lang_1.RegExpWrapper.matcher(_cssContentUnscopedRuleRe, cssText);
        while (lang_1.isPresent(m = lang_1.RegExpMatcherWrapper.next(matcher))) {
          var rule = m[0];
          rule = lang_1.StringWrapper.replace(rule, m[2], '');
          rule = lang_1.StringWrapper.replace(rule, m[1], m[3]);
          r += rule + '\n\n';
        }
        return r;
      };
      ShadowCss.prototype._convertColonHost = function (cssText) {
        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);
      };
      ShadowCss.prototype._convertColonHostContext = function (cssText) {
        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);
      };
      ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {
        return lang_1.StringWrapper.replaceAllMapped(cssText, regExp, function (m) {
          if (lang_1.isPresent(m[2])) {
            var parts = m[2].split(','),
                r = [];
            for (var i = 0; i < parts.length; i++) {
              var p = parts[i];
              if (lang_1.isBlank(p)) break;
              p = p.trim();
              r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));
            }
            return r.join(',');
          } else {
            return _polyfillHostNoCombinator + m[3];
          }
        });
      };
      ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {
        if (lang_1.StringWrapper.contains(part, _polyfillHost)) {
          return this._colonHostPartReplacer(host, part, suffix);
        } else {
          return host + part + suffix + ', ' + part + ' ' + host + suffix;
        }
      };
      ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {
        return host + lang_1.StringWrapper.replace(part, _polyfillHost, '') + suffix;
      };
      ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {
        for (var i = 0; i < _shadowDOMSelectorsRe.length; i++) {
          cssText = lang_1.StringWrapper.replaceAll(cssText, _shadowDOMSelectorsRe[i], ' ');
        }
        return cssText;
      };
      ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {
        var _this = this;
        return processRules(cssText, function (rule) {
          var selector = rule.selector;
          var content = rule.content;
          if (rule.selector[0] != '@' || rule.selector.startsWith('@page')) {
            selector = _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);
          } else if (rule.selector.startsWith('@media')) {
            content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);
          }
          return new CssRule(selector, content);
        });
      };
      ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {
        var r = [],
            parts = selector.split(',');
        for (var i = 0; i < parts.length; i++) {
          var p = parts[i].trim();
          var deepParts = lang_1.StringWrapper.split(p, _shadowDeepSelectors);
          var shallowPart = deepParts[0];
          if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {
            deepParts[0] = strict && !lang_1.StringWrapper.contains(shallowPart, _polyfillHostNoCombinator) ? this._applyStrictSelectorScope(shallowPart, scopeSelector) : this._applySelectorScope(shallowPart, scopeSelector, hostSelector);
          }
          r.push(deepParts.join(' '));
        }
        return r.join(', ');
      };
      ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {
        var re = this._makeScopeMatcher(scopeSelector);
        return !lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(re, selector));
      };
      ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {
        var lre = /\[/g;
        var rre = /\]/g;
        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, lre, '\\[');
        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, rre, '\\]');
        return lang_1.RegExpWrapper.create('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');
      };
      ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {
        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);
      };
      ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {
        if (lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(_polyfillHostRe, selector))) {
          var replaceBy = this.strictStyling ? "[" + hostSelector + "]" : scopeSelector;
          selector = lang_1.StringWrapper.replace(selector, _polyfillHostNoCombinator, replaceBy);
          return lang_1.StringWrapper.replaceAll(selector, _polyfillHostRe, replaceBy + ' ');
        } else {
          return scopeSelector + ' ' + selector;
        }
      };
      ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector) {
        var isRe = /\[is=([^\]]*)\]/g;
        scopeSelector = lang_1.StringWrapper.replaceAllMapped(scopeSelector, isRe, function (m) {
          return m[1];
        });
        var splits = [' ', '>', '+', '~'],
            scoped = selector,
            attrName = '[' + scopeSelector + ']';
        for (var i = 0; i < splits.length; i++) {
          var sep = splits[i];
          var parts = scoped.split(sep);
          scoped = parts.map(function (p) {
            var t = lang_1.StringWrapper.replaceAll(p.trim(), _polyfillHostRe, '');
            if (t.length > 0 && !collection_1.ListWrapper.contains(splits, t) && !lang_1.StringWrapper.contains(t, attrName)) {
              var re = /([^:]*)(:*)(.*)/g;
              var m = lang_1.RegExpWrapper.firstMatch(re, t);
              if (lang_1.isPresent(m)) {
                p = m[1] + attrName + m[2] + m[3];
              }
            }
            return p;
          }).join(sep);
        }
        return scoped;
      };
      ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {
        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostContextRe, _polyfillHostContext);
        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostRe, _polyfillHost);
        return selector;
      };
      return ShadowCss;
    }();
    exports.ShadowCss = ShadowCss;
    var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\s]*?['"](.*?)['"][;\s]*}([^{]*?){/gim;
    var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\s]*['"](.*?)['"])[;\s]*[^}]*}/gim;
    var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\s]*['"](.*?)['"])[;\s]*[^}]*}/gim;
    var _polyfillHost = '-shadowcsshost';
    var _polyfillHostContext = '-shadowcsscontext';
    var _parenSuffix = ')(?:\\((' + '(?:\\([^)(]*\\)|[^)(]*)+?' + ')\\))?([^,{]*)';
    var _cssColonHostRe = lang_1.RegExpWrapper.create('(' + _polyfillHost + _parenSuffix, 'im');
    var _cssColonHostContextRe = lang_1.RegExpWrapper.create('(' + _polyfillHostContext + _parenSuffix, 'im');
    var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';
    var _shadowDOMSelectorsRe = [/::shadow/g, /::content/g, /\/shadow-deep\//g, /\/shadow\//g];
    var _shadowDeepSelectors = /(?:>>>)|(?:\/deep\/)/g;
    var _selectorReSuffix = '([>\\s~+\[.,{:][\\s\\S]*)?$';
    var _polyfillHostRe = lang_1.RegExpWrapper.create(_polyfillHost, 'im');
    var _colonHostRe = /:host/gim;
    var _colonHostContextRe = /:host-context/gim;
    var _commentRe = /\/\*[\s\S]*?\*\//g;
    function stripComments(input) {
      return lang_1.StringWrapper.replaceAllMapped(input, _commentRe, function (_) {
        return '';
      });
    }
    var _ruleRe = /(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;
    var _curlyRe = /([{}])/g;
    var OPEN_CURLY = '{';
    var CLOSE_CURLY = '}';
    var BLOCK_PLACEHOLDER = '%BLOCK%';
    var CssRule = function () {
      function CssRule(selector, content) {
        this.selector = selector;
        this.content = content;
      }
      return CssRule;
    }();
    exports.CssRule = CssRule;
    function processRules(input, ruleCallback) {
      var inputWithEscapedBlocks = escapeBlocks(input);
      var nextBlockIndex = 0;
      return lang_1.StringWrapper.replaceAllMapped(inputWithEscapedBlocks.escapedString, _ruleRe, function (m) {
        var selector = m[2];
        var content = '';
        var suffix = m[4];
        var contentPrefix = '';
        if (lang_1.isPresent(m[4]) && m[4].startsWith('{' + BLOCK_PLACEHOLDER)) {
          content = inputWithEscapedBlocks.blocks[nextBlockIndex++];
          suffix = m[4].substring(BLOCK_PLACEHOLDER.length + 1);
          contentPrefix = '{';
        }
        var rule = ruleCallback(new CssRule(selector, content));
        return "" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;
      });
    }
    exports.processRules = processRules;
    var StringWithEscapedBlocks = function () {
      function StringWithEscapedBlocks(escapedString, blocks) {
        this.escapedString = escapedString;
        this.blocks = blocks;
      }
      return StringWithEscapedBlocks;
    }();
    function escapeBlocks(input) {
      var inputParts = lang_1.StringWrapper.split(input, _curlyRe);
      var resultParts = [];
      var escapedBlocks = [];
      var bracketCount = 0;
      var currentBlockParts = [];
      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {
        var part = inputParts[partIndex];
        if (part == CLOSE_CURLY) {
          bracketCount--;
        }
        if (bracketCount > 0) {
          currentBlockParts.push(part);
        } else {
          if (currentBlockParts.length > 0) {
            escapedBlocks.push(currentBlockParts.join(''));
            resultParts.push(BLOCK_PLACEHOLDER);
            currentBlockParts = [];
          }
          resultParts.push(part);
        }
        if (part == OPEN_CURLY) {
          bracketCount++;
        }
      }
      if (currentBlockParts.length > 0) {
        escapedBlocks.push(currentBlockParts.join(''));
        resultParts.push(BLOCK_PLACEHOLDER);
      }
      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var StyleWithImports = function () {
    function StyleWithImports(style, styleUrls) {
      this.style = style;
      this.styleUrls = styleUrls;
    }
    return StyleWithImports;
  }();
  exports.StyleWithImports = StyleWithImports;
  function isStyleUrlResolvable(url) {
    if (lang_1.isBlank(url) || url.length === 0 || url[0] == '/') return false;
    var schemeMatch = lang_1.RegExpWrapper.firstMatch(_urlWithSchemaRe, url);
    return lang_1.isBlank(schemeMatch) || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';
  }
  exports.isStyleUrlResolvable = isStyleUrlResolvable;
  function extractStyleUrls(resolver, baseUrl, cssText) {
    var foundUrls = [];
    var modifiedCssText = lang_1.StringWrapper.replaceAllMapped(cssText, _cssImportRe, function (m) {
      var url = lang_1.isPresent(m[1]) ? m[1] : m[2];
      if (!isStyleUrlResolvable(url)) {
        return m[0];
      }
      foundUrls.push(resolver.resolve(baseUrl, url));
      return '';
    });
    return new StyleWithImports(modifiedCssText, foundUrls);
  }
  exports.extractStyleUrls = extractStyleUrls;
  var _cssImportRe = /@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g;
  var _urlWithSchemaRe = /^([a-zA-Z\-\+\.]+):/g;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/style_compiler.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/shadow_css.js', 'npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var shadow_css_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/shadow_css.js');
  var url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js');
  var style_url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/style_url_resolver.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var COMPONENT_VARIABLE = '%COMP%';
  var HOST_ATTR = "_nghost-" + COMPONENT_VARIABLE;
  var CONTENT_ATTR = "_ngcontent-" + COMPONENT_VARIABLE;
  var StylesCompileDependency = function () {
    function StylesCompileDependency(moduleUrl, isShimmed, valuePlaceholder) {
      this.moduleUrl = moduleUrl;
      this.isShimmed = isShimmed;
      this.valuePlaceholder = valuePlaceholder;
    }
    return StylesCompileDependency;
  }();
  exports.StylesCompileDependency = StylesCompileDependency;
  var StylesCompileResult = function () {
    function StylesCompileResult(statements, stylesVar, dependencies) {
      this.statements = statements;
      this.stylesVar = stylesVar;
      this.dependencies = dependencies;
    }
    return StylesCompileResult;
  }();
  exports.StylesCompileResult = StylesCompileResult;
  var StyleCompiler = function () {
    function StyleCompiler(_urlResolver) {
      this._urlResolver = _urlResolver;
      this._shadowCss = new shadow_css_1.ShadowCss();
    }
    StyleCompiler.prototype.compileComponent = function (comp) {
      var shim = comp.template.encapsulation === core_1.ViewEncapsulation.Emulated;
      return this._compileStyles(getStylesVarName(comp), comp.template.styles, comp.template.styleUrls, shim);
    };
    StyleCompiler.prototype.compileStylesheet = function (stylesheetUrl, cssText, isShimmed) {
      var styleWithImports = style_url_resolver_1.extractStyleUrls(this._urlResolver, stylesheetUrl, cssText);
      return this._compileStyles(getStylesVarName(null), [styleWithImports.style], styleWithImports.styleUrls, isShimmed);
    };
    StyleCompiler.prototype._compileStyles = function (stylesVar, plainStyles, absUrls, shim) {
      var _this = this;
      var styleExpressions = plainStyles.map(function (plainStyle) {
        return o.literal(_this._shimIfNeeded(plainStyle, shim));
      });
      var dependencies = [];
      for (var i = 0; i < absUrls.length; i++) {
        var identifier = new compile_metadata_1.CompileIdentifierMetadata({ name: getStylesVarName(null) });
        dependencies.push(new StylesCompileDependency(absUrls[i], shim, identifier));
        styleExpressions.push(new o.ExternalExpr(identifier));
      }
      var stmt = o.variable(stylesVar).set(o.literalArr(styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const]))).toDeclStmt(null, [o.StmtModifier.Final]);
      return new StylesCompileResult([stmt], stylesVar, dependencies);
    };
    StyleCompiler.prototype._shimIfNeeded = function (style, shim) {
      return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;
    };
    StyleCompiler.decorators = [{ type: core_1.Injectable }];
    StyleCompiler.ctorParameters = [{ type: url_resolver_1.UrlResolver }];
    return StyleCompiler;
  }();
  exports.StyleCompiler = StyleCompiler;
  function getStylesVarName(component) {
    var result = "styles";
    if (lang_1.isPresent(component)) {
      result += "_" + component.type.name;
    }
    return result;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_pipe.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js');
  var _PurePipeProxy = function () {
    function _PurePipeProxy(view, instance, argCount) {
      this.view = view;
      this.instance = instance;
      this.argCount = argCount;
    }
    return _PurePipeProxy;
  }();
  var CompilePipe = function () {
    function CompilePipe(view, meta) {
      this.view = view;
      this.meta = meta;
      this._purePipeProxies = [];
      this.instance = o.THIS_EXPR.prop("_pipe_" + meta.name + "_" + view.pipeCount++);
    }
    CompilePipe.call = function (view, name, args) {
      var compView = view.componentView;
      var meta = _findPipeMeta(compView, name);
      var pipe;
      if (meta.pure) {
        pipe = compView.purePipes.get(name);
        if (lang_1.isBlank(pipe)) {
          pipe = new CompilePipe(compView, meta);
          compView.purePipes.set(name, pipe);
          compView.pipes.push(pipe);
        }
      } else {
        pipe = new CompilePipe(view, meta);
        view.pipes.push(pipe);
      }
      return pipe._call(view, args);
    };
    Object.defineProperty(CompilePipe.prototype, "pure", {
      get: function () {
        return this.meta.pure;
      },
      enumerable: true,
      configurable: true
    });
    CompilePipe.prototype.create = function () {
      var _this = this;
      var deps = this.meta.type.diDeps.map(function (diDep) {
        if (diDep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.ChangeDetectorRef))) {
          return util_1.getPropertyInView(o.THIS_EXPR.prop('ref'), _this.view, _this.view.componentView);
        }
        return util_1.injectFromViewParentInjector(diDep.token, false);
      });
      this.view.fields.push(new o.ClassField(this.instance.name, o.importType(this.meta.type)));
      this.view.createMethod.resetDebugInfo(null, null);
      this.view.createMethod.addStmt(o.THIS_EXPR.prop(this.instance.name).set(o.importExpr(this.meta.type).instantiate(deps)).toStmt());
      this._purePipeProxies.forEach(function (purePipeProxy) {
        var pipeInstanceSeenFromPureProxy = util_1.getPropertyInView(_this.instance, purePipeProxy.view, _this.view);
        util_1.createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform').callMethod(o.BuiltinMethod.bind, [pipeInstanceSeenFromPureProxy]), purePipeProxy.argCount, purePipeProxy.instance, purePipeProxy.view);
      });
    };
    CompilePipe.prototype._call = function (callingView, args) {
      if (this.meta.pure) {
        var purePipeProxy = new _PurePipeProxy(callingView, o.THIS_EXPR.prop(this.instance.name + "_" + this._purePipeProxies.length), args.length);
        this._purePipeProxies.push(purePipeProxy);
        return o.importExpr(identifiers_1.Identifiers.castByValue).callFn([purePipeProxy.instance, util_1.getPropertyInView(this.instance.prop('transform'), callingView, this.view)]).callFn(args);
      } else {
        return util_1.getPropertyInView(this.instance, callingView, this.view).callMethod('transform', args);
      }
    };
    return CompilePipe;
  }();
  exports.CompilePipe = CompilePipe;
  function _findPipeMeta(view, name) {
    var pipeMeta = null;
    for (var i = view.pipeMetas.length - 1; i >= 0; i--) {
      var localPipeMeta = view.pipeMetas[i];
      if (localPipeMeta.name == name) {
        pipeMeta = localPipeMeta;
        break;
      }
    }
    if (lang_1.isBlank(pipeMeta)) {
      throw new exceptions_1.BaseException("Illegal state: Could not find pipe " + name + " although the parser should have detected this error!");
    }
    return pipeMeta;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_view.js', ['npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_query.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_pipe.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var constants_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js');
  var compile_query_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_query.js');
  var compile_method_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js');
  var compile_pipe_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_pipe.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var CompileView = function () {
    function CompileView(component, genConfig, pipeMetas, styles, viewIndex, declarationElement, templateVariableBindings) {
      var _this = this;
      this.component = component;
      this.genConfig = genConfig;
      this.pipeMetas = pipeMetas;
      this.styles = styles;
      this.viewIndex = viewIndex;
      this.declarationElement = declarationElement;
      this.templateVariableBindings = templateVariableBindings;
      this.nodes = [];
      this.rootNodesOrAppElements = [];
      this.bindings = [];
      this.classStatements = [];
      this.eventHandlerMethods = [];
      this.fields = [];
      this.getters = [];
      this.disposables = [];
      this.subscriptions = [];
      this.purePipes = new Map();
      this.pipes = [];
      this.locals = new Map();
      this.literalArrayCount = 0;
      this.literalMapCount = 0;
      this.pipeCount = 0;
      this.createMethod = new compile_method_1.CompileMethod(this);
      this.injectorGetMethod = new compile_method_1.CompileMethod(this);
      this.updateContentQueriesMethod = new compile_method_1.CompileMethod(this);
      this.dirtyParentQueriesMethod = new compile_method_1.CompileMethod(this);
      this.updateViewQueriesMethod = new compile_method_1.CompileMethod(this);
      this.detectChangesInInputsMethod = new compile_method_1.CompileMethod(this);
      this.detectChangesRenderPropertiesMethod = new compile_method_1.CompileMethod(this);
      this.afterContentLifecycleCallbacksMethod = new compile_method_1.CompileMethod(this);
      this.afterViewLifecycleCallbacksMethod = new compile_method_1.CompileMethod(this);
      this.destroyMethod = new compile_method_1.CompileMethod(this);
      this.viewType = getViewType(component, viewIndex);
      this.className = "_View_" + component.type.name + viewIndex;
      this.classType = o.importType(new compile_metadata_1.CompileIdentifierMetadata({ name: this.className }));
      this.viewFactory = o.variable(util_1.getViewFactoryName(component, viewIndex));
      if (this.viewType === core_private_1.ViewType.COMPONENT || this.viewType === core_private_1.ViewType.HOST) {
        this.componentView = this;
      } else {
        this.componentView = this.declarationElement.view.componentView;
      }
      this.componentContext = util_1.getPropertyInView(o.THIS_EXPR.prop('context'), this, this.componentView);
      var viewQueries = new compile_metadata_1.CompileTokenMap();
      if (this.viewType === core_private_1.ViewType.COMPONENT) {
        var directiveInstance = o.THIS_EXPR.prop('context');
        collection_1.ListWrapper.forEachWithIndex(this.component.viewQueries, function (queryMeta, queryIndex) {
          var propName = "_viewQuery_" + queryMeta.selectors[0].name + "_" + queryIndex;
          var queryList = compile_query_1.createQueryList(queryMeta, directiveInstance, propName, _this);
          var query = new compile_query_1.CompileQuery(queryMeta, queryList, directiveInstance, _this);
          compile_query_1.addQueryToTokenMap(viewQueries, query);
        });
        var constructorViewQueryCount = 0;
        this.component.type.diDeps.forEach(function (dep) {
          if (lang_1.isPresent(dep.viewQuery)) {
            var queryList = o.THIS_EXPR.prop('declarationAppElement').prop('componentConstructorViewQueries').key(o.literal(constructorViewQueryCount++));
            var query = new compile_query_1.CompileQuery(dep.viewQuery, queryList, null, _this);
            compile_query_1.addQueryToTokenMap(viewQueries, query);
          }
        });
      }
      this.viewQueries = viewQueries;
      templateVariableBindings.forEach(function (entry) {
        _this.locals.set(entry[1], o.THIS_EXPR.prop('context').prop(entry[0]));
      });
      if (!this.declarationElement.isNull()) {
        this.declarationElement.setEmbeddedView(this);
      }
    }
    CompileView.prototype.callPipe = function (name, input, args) {
      return compile_pipe_1.CompilePipe.call(this, name, [input].concat(args));
    };
    CompileView.prototype.getLocal = function (name) {
      if (name == constants_1.EventHandlerVars.event.name) {
        return constants_1.EventHandlerVars.event;
      }
      var currView = this;
      var result = currView.locals.get(name);
      while (lang_1.isBlank(result) && lang_1.isPresent(currView.declarationElement.view)) {
        currView = currView.declarationElement.view;
        result = currView.locals.get(name);
      }
      if (lang_1.isPresent(result)) {
        return util_1.getPropertyInView(result, this, currView);
      } else {
        return null;
      }
    };
    CompileView.prototype.createLiteralArray = function (values) {
      if (values.length === 0) {
        return o.importExpr(identifiers_1.Identifiers.EMPTY_ARRAY);
      }
      var proxyExpr = o.THIS_EXPR.prop("_arr_" + this.literalArrayCount++);
      var proxyParams = [];
      var proxyReturnEntries = [];
      for (var i = 0; i < values.length; i++) {
        var paramName = "p" + i;
        proxyParams.push(new o.FnParam(paramName));
        proxyReturnEntries.push(o.variable(paramName));
      }
      util_1.createPureProxy(o.fn(proxyParams, [new o.ReturnStatement(o.literalArr(proxyReturnEntries))]), values.length, proxyExpr, this);
      return proxyExpr.callFn(values);
    };
    CompileView.prototype.createLiteralMap = function (entries) {
      if (entries.length === 0) {
        return o.importExpr(identifiers_1.Identifiers.EMPTY_MAP);
      }
      var proxyExpr = o.THIS_EXPR.prop("_map_" + this.literalMapCount++);
      var proxyParams = [];
      var proxyReturnEntries = [];
      var values = [];
      for (var i = 0; i < entries.length; i++) {
        var paramName = "p" + i;
        proxyParams.push(new o.FnParam(paramName));
        proxyReturnEntries.push([entries[i][0], o.variable(paramName)]);
        values.push(entries[i][1]);
      }
      util_1.createPureProxy(o.fn(proxyParams, [new o.ReturnStatement(o.literalMap(proxyReturnEntries))]), entries.length, proxyExpr, this);
      return proxyExpr.callFn(values);
    };
    CompileView.prototype.afterNodes = function () {
      var _this = this;
      this.pipes.forEach(function (pipe) {
        return pipe.create();
      });
      this.viewQueries.values().forEach(function (queries) {
        return queries.forEach(function (query) {
          return query.afterChildren(_this.updateViewQueriesMethod);
        });
      });
    };
    return CompileView;
  }();
  exports.CompileView = CompileView;
  function getViewType(component, embeddedTemplateIndex) {
    if (embeddedTemplateIndex > 0) {
      return core_private_1.ViewType.EMBEDDED;
    } else if (component.type.isHost) {
      return core_private_1.ViewType.HOST;
    } else {
      return core_private_1.ViewType.COMPONENT;
    }
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_query.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js');
  var ViewQueryValues = function () {
    function ViewQueryValues(view, values) {
      this.view = view;
      this.values = values;
    }
    return ViewQueryValues;
  }();
  var CompileQuery = function () {
    function CompileQuery(meta, queryList, ownerDirectiveExpression, view) {
      this.meta = meta;
      this.queryList = queryList;
      this.ownerDirectiveExpression = ownerDirectiveExpression;
      this.view = view;
      this._values = new ViewQueryValues(view, []);
    }
    CompileQuery.prototype.addValue = function (value, view) {
      var currentView = view;
      var elPath = [];
      while (lang_1.isPresent(currentView) && currentView !== this.view) {
        var parentEl = currentView.declarationElement;
        elPath.unshift(parentEl);
        currentView = parentEl.view;
      }
      var queryListForDirtyExpr = util_1.getPropertyInView(this.queryList, view, this.view);
      var viewValues = this._values;
      elPath.forEach(function (el) {
        var last = viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;
        if (last instanceof ViewQueryValues && last.view === el.embeddedView) {
          viewValues = last;
        } else {
          var newViewValues = new ViewQueryValues(el.embeddedView, []);
          viewValues.values.push(newViewValues);
          viewValues = newViewValues;
        }
      });
      viewValues.values.push(value);
      if (elPath.length > 0) {
        view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty', []).toStmt());
      }
    };
    CompileQuery.prototype.afterChildren = function (targetMethod) {
      var values = createQueryValues(this._values);
      var updateStmts = [this.queryList.callMethod('reset', [o.literalArr(values)]).toStmt()];
      if (lang_1.isPresent(this.ownerDirectiveExpression)) {
        var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;
        updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());
      }
      if (!this.meta.first) {
        updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());
      }
      targetMethod.addStmt(new o.IfStmt(this.queryList.prop('dirty'), updateStmts));
    };
    return CompileQuery;
  }();
  exports.CompileQuery = CompileQuery;
  function createQueryValues(viewValues) {
    return collection_1.ListWrapper.flatten(viewValues.values.map(function (entry) {
      if (entry instanceof ViewQueryValues) {
        return mapNestedViews(entry.view.declarationElement.appElement, entry.view, createQueryValues(entry));
      } else {
        return entry;
      }
    }));
  }
  function mapNestedViews(declarationAppElement, view, expressions) {
    var adjustedExpressions = expressions.map(function (expr) {
      return o.replaceVarInExpression(o.THIS_EXPR.name, o.variable('nestedView'), expr);
    });
    return declarationAppElement.callMethod('mapNestedViews', [o.variable(view.className), o.fn([new o.FnParam('nestedView', view.classType)], [new o.ReturnStatement(o.literalArr(adjustedExpressions))])]);
  }
  function createQueryList(query, directiveInstance, propertyName, compileView) {
    compileView.fields.push(new o.ClassField(propertyName, o.importType(identifiers_1.Identifiers.QueryList)));
    var expr = o.THIS_EXPR.prop(propertyName);
    compileView.createMethod.addStmt(o.THIS_EXPR.prop(propertyName).set(o.importExpr(identifiers_1.Identifiers.QueryList).instantiate([])).toStmt());
    return expr;
  }
  exports.createQueryList = createQueryList;
  function addQueryToTokenMap(map, query) {
    query.meta.selectors.forEach(function (selector) {
      var entry = map.get(selector);
      if (lang_1.isBlank(entry)) {
        entry = [];
        map.add(selector, entry);
      }
      entry.push(query);
    });
  }
  exports.addQueryToTokenMap = addQueryToTokenMap;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_element.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_query.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var constants_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js');
  var template_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js');
  var compile_query_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_query.js');
  var compile_method_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js');
  var util_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  var CompileNode = function () {
    function CompileNode(parent, view, nodeIndex, renderNode, sourceAst) {
      this.parent = parent;
      this.view = view;
      this.nodeIndex = nodeIndex;
      this.renderNode = renderNode;
      this.sourceAst = sourceAst;
    }
    CompileNode.prototype.isNull = function () {
      return lang_1.isBlank(this.renderNode);
    };
    CompileNode.prototype.isRootElement = function () {
      return this.view != this.parent.view;
    };
    return CompileNode;
  }();
  exports.CompileNode = CompileNode;
  var CompileElement = function (_super) {
    __extends(CompileElement, _super);
    function CompileElement(parent, view, nodeIndex, renderNode, sourceAst, component, _directives, _resolvedProvidersArray, hasViewContainer, hasEmbeddedView, references) {
      var _this = this;
      _super.call(this, parent, view, nodeIndex, renderNode, sourceAst);
      this.component = component;
      this._directives = _directives;
      this._resolvedProvidersArray = _resolvedProvidersArray;
      this.hasViewContainer = hasViewContainer;
      this.hasEmbeddedView = hasEmbeddedView;
      this._compViewExpr = null;
      this._instances = new compile_metadata_1.CompileTokenMap();
      this._queryCount = 0;
      this._queries = new compile_metadata_1.CompileTokenMap();
      this._componentConstructorViewQueryLists = [];
      this.contentNodesByNgContentIndex = null;
      this.referenceTokens = {};
      references.forEach(function (ref) {
        return _this.referenceTokens[ref.name] = ref.value;
      });
      this.elementRef = o.importExpr(identifiers_1.Identifiers.ElementRef).instantiate([this.renderNode]);
      this._instances.add(identifiers_1.identifierToken(identifiers_1.Identifiers.ElementRef), this.elementRef);
      this.injector = o.THIS_EXPR.callMethod('injector', [o.literal(this.nodeIndex)]);
      this._instances.add(identifiers_1.identifierToken(identifiers_1.Identifiers.Injector), this.injector);
      this._instances.add(identifiers_1.identifierToken(identifiers_1.Identifiers.Renderer), o.THIS_EXPR.prop('renderer'));
      if (this.hasViewContainer || this.hasEmbeddedView || lang_1.isPresent(this.component)) {
        this._createAppElement();
      }
    }
    CompileElement.createNull = function () {
      return new CompileElement(null, null, null, null, null, null, [], [], false, false, []);
    };
    CompileElement.prototype._createAppElement = function () {
      var fieldName = "_appEl_" + this.nodeIndex;
      var parentNodeIndex = this.isRootElement() ? null : this.parent.nodeIndex;
      this.view.fields.push(new o.ClassField(fieldName, o.importType(identifiers_1.Identifiers.AppElement), [o.StmtModifier.Private]));
      var statement = o.THIS_EXPR.prop(fieldName).set(o.importExpr(identifiers_1.Identifiers.AppElement).instantiate([o.literal(this.nodeIndex), o.literal(parentNodeIndex), o.THIS_EXPR, this.renderNode])).toStmt();
      this.view.createMethod.addStmt(statement);
      this.appElement = o.THIS_EXPR.prop(fieldName);
      this._instances.add(identifiers_1.identifierToken(identifiers_1.Identifiers.AppElement), this.appElement);
    };
    CompileElement.prototype.setComponentView = function (compViewExpr) {
      this._compViewExpr = compViewExpr;
      this.contentNodesByNgContentIndex = collection_1.ListWrapper.createFixedSize(this.component.template.ngContentSelectors.length);
      for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {
        this.contentNodesByNgContentIndex[i] = [];
      }
    };
    CompileElement.prototype.setEmbeddedView = function (embeddedView) {
      this.embeddedView = embeddedView;
      if (lang_1.isPresent(embeddedView)) {
        var createTemplateRefExpr = o.importExpr(identifiers_1.Identifiers.TemplateRef_).instantiate([this.appElement, this.embeddedView.viewFactory]);
        var provider = new compile_metadata_1.CompileProviderMetadata({
          token: identifiers_1.identifierToken(identifiers_1.Identifiers.TemplateRef),
          useValue: createTemplateRefExpr
        });
        this._resolvedProvidersArray.unshift(new template_ast_1.ProviderAst(provider.token, false, true, [provider], template_ast_1.ProviderAstType.Builtin, this.sourceAst.sourceSpan));
      }
    };
    CompileElement.prototype.beforeChildren = function () {
      var _this = this;
      if (this.hasViewContainer) {
        this._instances.add(identifiers_1.identifierToken(identifiers_1.Identifiers.ViewContainerRef), this.appElement.prop('vcRef'));
      }
      this._resolvedProviders = new compile_metadata_1.CompileTokenMap();
      this._resolvedProvidersArray.forEach(function (provider) {
        return _this._resolvedProviders.add(provider.token, provider);
      });
      this._resolvedProviders.values().forEach(function (resolvedProvider) {
        var providerValueExpressions = resolvedProvider.providers.map(function (provider) {
          if (lang_1.isPresent(provider.useExisting)) {
            return _this._getDependency(resolvedProvider.providerType, new compile_metadata_1.CompileDiDependencyMetadata({ token: provider.useExisting }));
          } else if (lang_1.isPresent(provider.useFactory)) {
            var deps = lang_1.isPresent(provider.deps) ? provider.deps : provider.useFactory.diDeps;
            var depsExpr = deps.map(function (dep) {
              return _this._getDependency(resolvedProvider.providerType, dep);
            });
            return o.importExpr(provider.useFactory).callFn(depsExpr);
          } else if (lang_1.isPresent(provider.useClass)) {
            var deps = lang_1.isPresent(provider.deps) ? provider.deps : provider.useClass.diDeps;
            var depsExpr = deps.map(function (dep) {
              return _this._getDependency(resolvedProvider.providerType, dep);
            });
            return o.importExpr(provider.useClass).instantiate(depsExpr, o.importType(provider.useClass));
          } else {
            return _convertValueToOutputAst(provider.useValue);
          }
        });
        var propName = "_" + resolvedProvider.token.name + "_" + _this.nodeIndex + "_" + _this._instances.size;
        var instance = createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager, _this);
        _this._instances.add(resolvedProvider.token, instance);
      });
      this.directiveInstances = this._directives.map(function (directive) {
        return _this._instances.get(identifiers_1.identifierToken(directive.type));
      });
      for (var i = 0; i < this.directiveInstances.length; i++) {
        var directiveInstance = this.directiveInstances[i];
        var directive = this._directives[i];
        directive.queries.forEach(function (queryMeta) {
          _this._addQuery(queryMeta, directiveInstance);
        });
      }
      var queriesWithReads = [];
      this._resolvedProviders.values().forEach(function (resolvedProvider) {
        var queriesForProvider = _this._getQueriesFor(resolvedProvider.token);
        collection_1.ListWrapper.addAll(queriesWithReads, queriesForProvider.map(function (query) {
          return new _QueryWithRead(query, resolvedProvider.token);
        }));
      });
      collection_1.StringMapWrapper.forEach(this.referenceTokens, function (_, varName) {
        var token = _this.referenceTokens[varName];
        var varValue;
        if (lang_1.isPresent(token)) {
          varValue = _this._instances.get(token);
        } else {
          varValue = _this.renderNode;
        }
        _this.view.locals.set(varName, varValue);
        var varToken = new compile_metadata_1.CompileTokenMetadata({ value: varName });
        collection_1.ListWrapper.addAll(queriesWithReads, _this._getQueriesFor(varToken).map(function (query) {
          return new _QueryWithRead(query, varToken);
        }));
      });
      queriesWithReads.forEach(function (queryWithRead) {
        var value;
        if (lang_1.isPresent(queryWithRead.read.identifier)) {
          value = _this._instances.get(queryWithRead.read);
        } else {
          var token = _this.referenceTokens[queryWithRead.read.value];
          if (lang_1.isPresent(token)) {
            value = _this._instances.get(token);
          } else {
            value = _this.elementRef;
          }
        }
        if (lang_1.isPresent(value)) {
          queryWithRead.query.addValue(value, _this.view);
        }
      });
      if (lang_1.isPresent(this.component)) {
        var componentConstructorViewQueryList = lang_1.isPresent(this.component) ? o.literalArr(this._componentConstructorViewQueryLists) : o.NULL_EXPR;
        var compExpr = lang_1.isPresent(this.getComponent()) ? this.getComponent() : o.NULL_EXPR;
        this.view.createMethod.addStmt(this.appElement.callMethod('initComponent', [compExpr, componentConstructorViewQueryList, this._compViewExpr]).toStmt());
      }
    };
    CompileElement.prototype.afterChildren = function (childNodeCount) {
      var _this = this;
      this._resolvedProviders.values().forEach(function (resolvedProvider) {
        var providerExpr = _this._instances.get(resolvedProvider.token);
        var providerChildNodeCount = resolvedProvider.providerType === template_ast_1.ProviderAstType.PrivateService ? 0 : childNodeCount;
        _this.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this.nodeIndex, providerChildNodeCount, resolvedProvider, providerExpr));
      });
      this._queries.values().forEach(function (queries) {
        return queries.forEach(function (query) {
          return query.afterChildren(_this.view.updateContentQueriesMethod);
        });
      });
    };
    CompileElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {
      this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);
    };
    CompileElement.prototype.getComponent = function () {
      return lang_1.isPresent(this.component) ? this._instances.get(identifiers_1.identifierToken(this.component.type)) : null;
    };
    CompileElement.prototype.getProviderTokens = function () {
      return this._resolvedProviders.values().map(function (resolvedProvider) {
        return util_1.createDiTokenExpression(resolvedProvider.token);
      });
    };
    CompileElement.prototype._getQueriesFor = function (token) {
      var result = [];
      var currentEl = this;
      var distance = 0;
      var queries;
      while (!currentEl.isNull()) {
        queries = currentEl._queries.get(token);
        if (lang_1.isPresent(queries)) {
          collection_1.ListWrapper.addAll(result, queries.filter(function (query) {
            return query.meta.descendants || distance <= 1;
          }));
        }
        if (currentEl._directives.length > 0) {
          distance++;
        }
        currentEl = currentEl.parent;
      }
      queries = this.view.componentView.viewQueries.get(token);
      if (lang_1.isPresent(queries)) {
        collection_1.ListWrapper.addAll(result, queries);
      }
      return result;
    };
    CompileElement.prototype._addQuery = function (queryMeta, directiveInstance) {
      var propName = "_query_" + queryMeta.selectors[0].name + "_" + this.nodeIndex + "_" + this._queryCount++;
      var queryList = compile_query_1.createQueryList(queryMeta, directiveInstance, propName, this.view);
      var query = new compile_query_1.CompileQuery(queryMeta, queryList, directiveInstance, this.view);
      compile_query_1.addQueryToTokenMap(this._queries, query);
      return query;
    };
    CompileElement.prototype._getLocalDependency = function (requestingProviderType, dep) {
      var result = null;
      if (lang_1.isBlank(result) && lang_1.isPresent(dep.query)) {
        result = this._addQuery(dep.query, null).queryList;
      }
      if (lang_1.isBlank(result) && lang_1.isPresent(dep.viewQuery)) {
        result = compile_query_1.createQueryList(dep.viewQuery, null, "_viewQuery_" + dep.viewQuery.selectors[0].name + "_" + this.nodeIndex + "_" + this._componentConstructorViewQueryLists.length, this.view);
        this._componentConstructorViewQueryLists.push(result);
      }
      if (lang_1.isPresent(dep.token)) {
        if (lang_1.isBlank(result)) {
          if (dep.token.equalsTo(identifiers_1.identifierToken(identifiers_1.Identifiers.ChangeDetectorRef))) {
            if (requestingProviderType === template_ast_1.ProviderAstType.Component) {
              return this._compViewExpr.prop('ref');
            } else {
              return util_1.getPropertyInView(o.THIS_EXPR.prop('ref'), this.view, this.view.componentView);
            }
          }
        }
        if (lang_1.isBlank(result)) {
          result = this._instances.get(dep.token);
        }
      }
      return result;
    };
    CompileElement.prototype._getDependency = function (requestingProviderType, dep) {
      var currElement = this;
      var result = null;
      if (dep.isValue) {
        result = o.literal(dep.value);
      }
      if (lang_1.isBlank(result) && !dep.isSkipSelf) {
        result = this._getLocalDependency(requestingProviderType, dep);
      }
      while (lang_1.isBlank(result) && !currElement.parent.isNull()) {
        currElement = currElement.parent;
        result = currElement._getLocalDependency(template_ast_1.ProviderAstType.PublicService, new compile_metadata_1.CompileDiDependencyMetadata({ token: dep.token }));
      }
      if (lang_1.isBlank(result)) {
        result = util_1.injectFromViewParentInjector(dep.token, dep.isOptional);
      }
      if (lang_1.isBlank(result)) {
        result = o.NULL_EXPR;
      }
      return util_1.getPropertyInView(result, this.view, currElement.view);
    };
    return CompileElement;
  }(CompileNode);
  exports.CompileElement = CompileElement;
  function createInjectInternalCondition(nodeIndex, childNodeCount, provider, providerExpr) {
    var indexCondition;
    if (childNodeCount > 0) {
      indexCondition = o.literal(nodeIndex).lowerEquals(constants_1.InjectMethodVars.requestNodeIndex).and(constants_1.InjectMethodVars.requestNodeIndex.lowerEquals(o.literal(nodeIndex + childNodeCount)));
    } else {
      indexCondition = o.literal(nodeIndex).identical(constants_1.InjectMethodVars.requestNodeIndex);
    }
    return new o.IfStmt(constants_1.InjectMethodVars.token.identical(util_1.createDiTokenExpression(provider.token)).and(indexCondition), [new o.ReturnStatement(providerExpr)]);
  }
  function createProviderProperty(propName, provider, providerValueExpressions, isMulti, isEager, compileElement) {
    var view = compileElement.view;
    var resolvedProviderValueExpr;
    var type;
    if (isMulti) {
      resolvedProviderValueExpr = o.literalArr(providerValueExpressions);
      type = new o.ArrayType(o.DYNAMIC_TYPE);
    } else {
      resolvedProviderValueExpr = providerValueExpressions[0];
      type = providerValueExpressions[0].type;
    }
    if (lang_1.isBlank(type)) {
      type = o.DYNAMIC_TYPE;
    }
    if (isEager) {
      view.fields.push(new o.ClassField(propName, type));
      view.createMethod.addStmt(o.THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());
    } else {
      var internalField = "_" + propName;
      view.fields.push(new o.ClassField(internalField, type));
      var getter = new compile_method_1.CompileMethod(view);
      getter.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);
      getter.addStmt(new o.IfStmt(o.THIS_EXPR.prop(internalField).isBlank(), [o.THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));
      getter.addStmt(new o.ReturnStatement(o.THIS_EXPR.prop(internalField)));
      view.getters.push(new o.ClassGetter(propName, getter.finish(), type));
    }
    return o.THIS_EXPR.prop(propName);
  }
  var _QueryWithRead = function () {
    function _QueryWithRead(query, match) {
      this.query = query;
      this.read = lang_1.isPresent(query.meta.read) ? query.meta.read : match;
    }
    return _QueryWithRead;
  }();
  function _convertValueToOutputAst(value) {
    return util_2.visitValue(value, new _ValueOutputAstTransformer(), null);
  }
  var _ValueOutputAstTransformer = function (_super) {
    __extends(_ValueOutputAstTransformer, _super);
    function _ValueOutputAstTransformer() {
      _super.apply(this, arguments);
    }
    _ValueOutputAstTransformer.prototype.visitArray = function (arr, context) {
      var _this = this;
      return o.literalArr(arr.map(function (value) {
        return util_2.visitValue(value, _this, context);
      }));
    };
    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, context) {
      var _this = this;
      var entries = [];
      collection_1.StringMapWrapper.forEach(map, function (value, key) {
        entries.push([key, util_2.visitValue(value, _this, context)]);
      });
      return o.literalMap(entries);
    };
    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, context) {
      return o.literal(value);
    };
    _ValueOutputAstTransformer.prototype.visitOther = function (value, context) {
      if (value instanceof compile_metadata_1.CompileIdentifierMetadata) {
        return o.importExpr(value);
      } else if (value instanceof o.Expression) {
        return value;
      } else {
        throw new core_1.BaseException("Illegal state: Don't now how to compile value " + value);
      }
    };
    return _ValueOutputAstTransformer;
  }(util_2.ValueTransformer);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  function getPropertyInView(property, callingView, definedView) {
    if (callingView === definedView) {
      return property;
    } else {
      var viewProp = o.THIS_EXPR;
      var currView = callingView;
      while (currView !== definedView && lang_1.isPresent(currView.declarationElement.view)) {
        currView = currView.declarationElement.view;
        viewProp = viewProp.prop('parent');
      }
      if (currView !== definedView) {
        throw new exceptions_1.BaseException("Internal error: Could not calculate a property in a parent view: " + property);
      }
      if (property instanceof o.ReadPropExpr) {
        var readPropExpr_1 = property;
        if (definedView.fields.some(function (field) {
          return field.name == readPropExpr_1.name;
        }) || definedView.getters.some(function (field) {
          return field.name == readPropExpr_1.name;
        })) {
          viewProp = viewProp.cast(definedView.classType);
        }
      }
      return o.replaceVarInExpression(o.THIS_EXPR.name, viewProp, property);
    }
  }
  exports.getPropertyInView = getPropertyInView;
  function injectFromViewParentInjector(token, optional) {
    var args = [createDiTokenExpression(token)];
    if (optional) {
      args.push(o.NULL_EXPR);
    }
    return o.THIS_EXPR.prop('parentInjector').callMethod('get', args);
  }
  exports.injectFromViewParentInjector = injectFromViewParentInjector;
  function getViewFactoryName(component, embeddedTemplateIndex) {
    return "viewFactory_" + component.type.name + embeddedTemplateIndex;
  }
  exports.getViewFactoryName = getViewFactoryName;
  function createDiTokenExpression(token) {
    if (lang_1.isPresent(token.value)) {
      return o.literal(token.value);
    } else if (token.identifierIsInstance) {
      return o.importExpr(token.identifier).instantiate([], o.importType(token.identifier, [], [o.TypeModifier.Const]));
    } else {
      return o.importExpr(token.identifier);
    }
  }
  exports.createDiTokenExpression = createDiTokenExpression;
  function createFlatArray(expressions) {
    var lastNonArrayExpressions = [];
    var result = o.literalArr([]);
    for (var i = 0; i < expressions.length; i++) {
      var expr = expressions[i];
      if (expr.type instanceof o.ArrayType) {
        if (lastNonArrayExpressions.length > 0) {
          result = result.callMethod(o.BuiltinMethod.ConcatArray, [o.literalArr(lastNonArrayExpressions)]);
          lastNonArrayExpressions = [];
        }
        result = result.callMethod(o.BuiltinMethod.ConcatArray, [expr]);
      } else {
        lastNonArrayExpressions.push(expr);
      }
    }
    if (lastNonArrayExpressions.length > 0) {
      result = result.callMethod(o.BuiltinMethod.ConcatArray, [o.literalArr(lastNonArrayExpressions)]);
    }
    return result;
  }
  exports.createFlatArray = createFlatArray;
  function createPureProxy(fn, argCount, pureProxyProp, view) {
    view.fields.push(new o.ClassField(pureProxyProp.name, null));
    var pureProxyId = argCount < identifiers_1.Identifiers.pureProxies.length ? identifiers_1.Identifiers.pureProxies[argCount] : null;
    if (lang_1.isBlank(pureProxyId)) {
      throw new exceptions_1.BaseException("Unsupported number of argument for pure functions: " + argCount);
    }
    view.createMethod.addStmt(o.THIS_EXPR.prop(pureProxyProp.name).set(o.importExpr(pureProxyId).callFn([fn])).toStmt());
  }
  exports.createPureProxy = createPureProxy;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_builder.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_view.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_element.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var constants_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js');
  var compile_view_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_view.js');
  var compile_element_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_element.js');
  var template_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/util.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var IMPLICIT_TEMPLATE_VAR = '\$implicit';
  var CLASS_ATTR = 'class';
  var STYLE_ATTR = 'style';
  var parentRenderNodeVar = o.variable('parentRenderNode');
  var rootSelectorVar = o.variable('rootSelector');
  var ViewCompileDependency = function () {
    function ViewCompileDependency(comp, factoryPlaceholder) {
      this.comp = comp;
      this.factoryPlaceholder = factoryPlaceholder;
    }
    return ViewCompileDependency;
  }();
  exports.ViewCompileDependency = ViewCompileDependency;
  function buildView(view, template, targetDependencies) {
    var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);
    template_ast_1.templateVisitAll(builderVisitor, template, view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent);
    return builderVisitor.nestedViewCount;
  }
  exports.buildView = buildView;
  function finishView(view, targetStatements) {
    view.afterNodes();
    createViewTopLevelStmts(view, targetStatements);
    view.nodes.forEach(function (node) {
      if (node instanceof compile_element_1.CompileElement && node.hasEmbeddedView) {
        finishView(node.embeddedView, targetStatements);
      }
    });
  }
  exports.finishView = finishView;
  var ViewBuilderVisitor = function () {
    function ViewBuilderVisitor(view, targetDependencies) {
      this.view = view;
      this.targetDependencies = targetDependencies;
      this.nestedViewCount = 0;
    }
    ViewBuilderVisitor.prototype._isRootNode = function (parent) {
      return parent.view !== this.view;
    };
    ViewBuilderVisitor.prototype._addRootNodeAndProject = function (node, ngContentIndex, parent) {
      var vcAppEl = node instanceof compile_element_1.CompileElement && node.hasViewContainer ? node.appElement : null;
      if (this._isRootNode(parent)) {
        if (this.view.viewType !== core_private_1.ViewType.COMPONENT) {
          this.view.rootNodesOrAppElements.push(lang_1.isPresent(vcAppEl) ? vcAppEl : node.renderNode);
        }
      } else if (lang_1.isPresent(parent.component) && lang_1.isPresent(ngContentIndex)) {
        parent.addContentNode(ngContentIndex, lang_1.isPresent(vcAppEl) ? vcAppEl : node.renderNode);
      }
    };
    ViewBuilderVisitor.prototype._getParentRenderNode = function (parent) {
      if (this._isRootNode(parent)) {
        if (this.view.viewType === core_private_1.ViewType.COMPONENT) {
          return parentRenderNodeVar;
        } else {
          return o.NULL_EXPR;
        }
      } else {
        return lang_1.isPresent(parent.component) && parent.component.template.encapsulation !== core_1.ViewEncapsulation.Native ? o.NULL_EXPR : parent.renderNode;
      }
    };
    ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {
      return this._visitText(ast, '', ast.ngContentIndex, parent);
    };
    ViewBuilderVisitor.prototype.visitText = function (ast, parent) {
      return this._visitText(ast, ast.value, ast.ngContentIndex, parent);
    };
    ViewBuilderVisitor.prototype._visitText = function (ast, value, ngContentIndex, parent) {
      var fieldName = "_text_" + this.view.nodes.length;
      this.view.fields.push(new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderText)));
      var renderNode = o.THIS_EXPR.prop(fieldName);
      var compileNode = new compile_element_1.CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);
      var createRenderNode = o.THIS_EXPR.prop(fieldName).set(constants_1.ViewProperties.renderer.callMethod('createText', [this._getParentRenderNode(parent), o.literal(value), this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)])).toStmt();
      this.view.nodes.push(compileNode);
      this.view.createMethod.addStmt(createRenderNode);
      this._addRootNodeAndProject(compileNode, ngContentIndex, parent);
      return renderNode;
    };
    ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {
      this.view.createMethod.resetDebugInfo(null, ast);
      var parentRenderNode = this._getParentRenderNode(parent);
      var nodesExpression = constants_1.ViewProperties.projectableNodes.key(o.literal(ast.index), new o.ArrayType(o.importType(this.view.genConfig.renderTypes.renderNode)));
      if (parentRenderNode !== o.NULL_EXPR) {
        this.view.createMethod.addStmt(constants_1.ViewProperties.renderer.callMethod('projectNodes', [parentRenderNode, o.importExpr(identifiers_1.Identifiers.flattenNestedViewRenderNodes).callFn([nodesExpression])]).toStmt());
      } else if (this._isRootNode(parent)) {
        if (this.view.viewType !== core_private_1.ViewType.COMPONENT) {
          this.view.rootNodesOrAppElements.push(nodesExpression);
        }
      } else {
        if (lang_1.isPresent(parent.component) && lang_1.isPresent(ast.ngContentIndex)) {
          parent.addContentNode(ast.ngContentIndex, nodesExpression);
        }
      }
      return null;
    };
    ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {
      var nodeIndex = this.view.nodes.length;
      var createRenderNodeExpr;
      var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);
      if (nodeIndex === 0 && this.view.viewType === core_private_1.ViewType.HOST) {
        createRenderNodeExpr = o.THIS_EXPR.callMethod('selectOrCreateHostElement', [o.literal(ast.name), rootSelectorVar, debugContextExpr]);
      } else {
        createRenderNodeExpr = constants_1.ViewProperties.renderer.callMethod('createElement', [this._getParentRenderNode(parent), o.literal(ast.name), debugContextExpr]);
      }
      var fieldName = "_el_" + nodeIndex;
      this.view.fields.push(new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderElement)));
      this.view.createMethod.addStmt(o.THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());
      var renderNode = o.THIS_EXPR.prop(fieldName);
      var directives = ast.directives.map(function (directiveAst) {
        return directiveAst.directive;
      });
      var component = directives.find(function (directive) {
        return directive.isComponent;
      });
      var htmlAttrs = _readHtmlAttrs(ast.attrs);
      var attrNameAndValues = _mergeHtmlAndDirectiveAttrs(htmlAttrs, directives);
      for (var i = 0; i < attrNameAndValues.length; i++) {
        var attrName = attrNameAndValues[i][0];
        var attrValue = attrNameAndValues[i][1];
        this.view.createMethod.addStmt(constants_1.ViewProperties.renderer.callMethod('setElementAttribute', [renderNode, o.literal(attrName), o.literal(attrValue)]).toStmt());
      }
      var compileElement = new compile_element_1.CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers, ast.hasViewContainer, false, ast.references);
      this.view.nodes.push(compileElement);
      var compViewExpr = null;
      if (lang_1.isPresent(component)) {
        var nestedComponentIdentifier = new compile_metadata_1.CompileIdentifierMetadata({ name: util_1.getViewFactoryName(component, 0) });
        this.targetDependencies.push(new ViewCompileDependency(component, nestedComponentIdentifier));
        compViewExpr = o.variable("compView_" + nodeIndex);
        compileElement.setComponentView(compViewExpr);
        this.view.createMethod.addStmt(compViewExpr.set(o.importExpr(nestedComponentIdentifier).callFn([constants_1.ViewProperties.viewUtils, compileElement.injector, compileElement.appElement])).toDeclStmt());
      }
      compileElement.beforeChildren();
      this._addRootNodeAndProject(compileElement, ast.ngContentIndex, parent);
      template_ast_1.templateVisitAll(this, ast.children, compileElement);
      compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);
      if (lang_1.isPresent(compViewExpr)) {
        var codeGenContentNodes;
        if (this.view.component.type.isHost) {
          codeGenContentNodes = constants_1.ViewProperties.projectableNodes;
        } else {
          codeGenContentNodes = o.literalArr(compileElement.contentNodesByNgContentIndex.map(function (nodes) {
            return util_1.createFlatArray(nodes);
          }));
        }
        this.view.createMethod.addStmt(compViewExpr.callMethod('create', [compileElement.getComponent(), codeGenContentNodes, o.NULL_EXPR]).toStmt());
      }
      return null;
    };
    ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {
      var nodeIndex = this.view.nodes.length;
      var fieldName = "_anchor_" + nodeIndex;
      this.view.fields.push(new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderComment)));
      this.view.createMethod.addStmt(o.THIS_EXPR.prop(fieldName).set(constants_1.ViewProperties.renderer.callMethod('createTemplateAnchor', [this._getParentRenderNode(parent), this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)])).toStmt());
      var renderNode = o.THIS_EXPR.prop(fieldName);
      var templateVariableBindings = ast.variables.map(function (varAst) {
        return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name];
      });
      var directives = ast.directives.map(function (directiveAst) {
        return directiveAst.directive;
      });
      var compileElement = new compile_element_1.CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers, ast.hasViewContainer, true, ast.references);
      this.view.nodes.push(compileElement);
      this.nestedViewCount++;
      var embeddedView = new compile_view_1.CompileView(this.view.component, this.view.genConfig, this.view.pipeMetas, o.NULL_EXPR, this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);
      this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);
      compileElement.beforeChildren();
      this._addRootNodeAndProject(compileElement, ast.ngContentIndex, parent);
      compileElement.afterChildren(0);
      return null;
    };
    ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) {
      return null;
    };
    ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) {
      return null;
    };
    ViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {
      return null;
    };
    ViewBuilderVisitor.prototype.visitReference = function (ast, ctx) {
      return null;
    };
    ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) {
      return null;
    };
    ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) {
      return null;
    };
    ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) {
      return null;
    };
    return ViewBuilderVisitor;
  }();
  function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs, directives) {
    var result = {};
    collection_1.StringMapWrapper.forEach(declaredHtmlAttrs, function (value, key) {
      result[key] = value;
    });
    directives.forEach(function (directiveMeta) {
      collection_1.StringMapWrapper.forEach(directiveMeta.hostAttributes, function (value, name) {
        var prevValue = result[name];
        result[name] = lang_1.isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;
      });
    });
    return mapToKeyValueArray(result);
  }
  function _readHtmlAttrs(attrs) {
    var htmlAttrs = {};
    attrs.forEach(function (ast) {
      htmlAttrs[ast.name] = ast.value;
    });
    return htmlAttrs;
  }
  function mergeAttributeValue(attrName, attrValue1, attrValue2) {
    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {
      return attrValue1 + " " + attrValue2;
    } else {
      return attrValue2;
    }
  }
  function mapToKeyValueArray(data) {
    var entryArray = [];
    collection_1.StringMapWrapper.forEach(data, function (value, name) {
      entryArray.push([name, value]);
    });
    collection_1.ListWrapper.sort(entryArray, function (entry1, entry2) {
      return lang_1.StringWrapper.compare(entry1[0], entry2[0]);
    });
    var keyValueArray = [];
    entryArray.forEach(function (entry) {
      keyValueArray.push([entry[0], entry[1]]);
    });
    return keyValueArray;
  }
  function createViewTopLevelStmts(view, targetStatements) {
    var nodeDebugInfosVar = o.NULL_EXPR;
    if (view.genConfig.genDebugInfo) {
      nodeDebugInfosVar = o.variable("nodeDebugInfos_" + view.component.type.name + view.viewIndex);
      targetStatements.push(nodeDebugInfosVar.set(o.literalArr(view.nodes.map(createStaticNodeDebugInfo), new o.ArrayType(new o.ExternalType(identifiers_1.Identifiers.StaticNodeDebugInfo), [o.TypeModifier.Const]))).toDeclStmt(null, [o.StmtModifier.Final]));
    }
    var renderCompTypeVar = o.variable("renderType_" + view.component.type.name);
    if (view.viewIndex === 0) {
      targetStatements.push(renderCompTypeVar.set(o.NULL_EXPR).toDeclStmt(o.importType(identifiers_1.Identifiers.RenderComponentType)));
    }
    var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);
    targetStatements.push(viewClass);
    targetStatements.push(createViewFactory(view, viewClass, renderCompTypeVar));
  }
  function createStaticNodeDebugInfo(node) {
    var compileElement = node instanceof compile_element_1.CompileElement ? node : null;
    var providerTokens = [];
    var componentToken = o.NULL_EXPR;
    var varTokenEntries = [];
    if (lang_1.isPresent(compileElement)) {
      providerTokens = compileElement.getProviderTokens();
      if (lang_1.isPresent(compileElement.component)) {
        componentToken = util_1.createDiTokenExpression(identifiers_1.identifierToken(compileElement.component.type));
      }
      collection_1.StringMapWrapper.forEach(compileElement.referenceTokens, function (token, varName) {
        varTokenEntries.push([varName, lang_1.isPresent(token) ? util_1.createDiTokenExpression(token) : o.NULL_EXPR]);
      });
    }
    return o.importExpr(identifiers_1.Identifiers.StaticNodeDebugInfo).instantiate([o.literalArr(providerTokens, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])), componentToken, o.literalMap(varTokenEntries, new o.MapType(o.DYNAMIC_TYPE, [o.TypeModifier.Const]))], o.importType(identifiers_1.Identifiers.StaticNodeDebugInfo, null, [o.TypeModifier.Const]));
  }
  function createViewClass(view, renderCompTypeVar, nodeDebugInfosVar) {
    var viewConstructorArgs = [new o.FnParam(constants_1.ViewConstructorVars.viewUtils.name, o.importType(identifiers_1.Identifiers.ViewUtils)), new o.FnParam(constants_1.ViewConstructorVars.parentInjector.name, o.importType(identifiers_1.Identifiers.Injector)), new o.FnParam(constants_1.ViewConstructorVars.declarationEl.name, o.importType(identifiers_1.Identifiers.AppElement))];
    var superConstructorArgs = [o.variable(view.className), renderCompTypeVar, constants_1.ViewTypeEnum.fromValue(view.viewType), constants_1.ViewConstructorVars.viewUtils, constants_1.ViewConstructorVars.parentInjector, constants_1.ViewConstructorVars.declarationEl, constants_1.ChangeDetectionStrategyEnum.fromValue(getChangeDetectionMode(view))];
    if (view.genConfig.genDebugInfo) {
      superConstructorArgs.push(nodeDebugInfosVar);
    }
    var viewConstructor = new o.ClassMethod(null, viewConstructorArgs, [o.SUPER_EXPR.callFn(superConstructorArgs).toStmt()]);
    var viewMethods = [new o.ClassMethod('createInternal', [new o.FnParam(rootSelectorVar.name, o.STRING_TYPE)], generateCreateMethod(view), o.importType(identifiers_1.Identifiers.AppElement)), new o.ClassMethod('injectorGetInternal', [new o.FnParam(constants_1.InjectMethodVars.token.name, o.DYNAMIC_TYPE), new o.FnParam(constants_1.InjectMethodVars.requestNodeIndex.name, o.NUMBER_TYPE), new o.FnParam(constants_1.InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)], addReturnValuefNotEmpty(view.injectorGetMethod.finish(), constants_1.InjectMethodVars.notFoundResult), o.DYNAMIC_TYPE), new o.ClassMethod('detectChangesInternal', [new o.FnParam(constants_1.DetectChangesVars.throwOnChange.name, o.BOOL_TYPE)], generateDetectChangesMethod(view)), new o.ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()), new o.ClassMethod('destroyInternal', [], view.destroyMethod.finish())].concat(view.eventHandlerMethods);
    var superClass = view.genConfig.genDebugInfo ? identifiers_1.Identifiers.DebugAppView : identifiers_1.Identifiers.AppView;
    var viewClass = new o.ClassStmt(view.className, o.importExpr(superClass, [getContextType(view)]), view.fields, view.getters, viewConstructor, viewMethods.filter(function (method) {
      return method.body.length > 0;
    }));
    return viewClass;
  }
  function createViewFactory(view, viewClass, renderCompTypeVar) {
    var viewFactoryArgs = [new o.FnParam(constants_1.ViewConstructorVars.viewUtils.name, o.importType(identifiers_1.Identifiers.ViewUtils)), new o.FnParam(constants_1.ViewConstructorVars.parentInjector.name, o.importType(identifiers_1.Identifiers.Injector)), new o.FnParam(constants_1.ViewConstructorVars.declarationEl.name, o.importType(identifiers_1.Identifiers.AppElement))];
    var initRenderCompTypeStmts = [];
    var templateUrlInfo;
    if (view.component.template.templateUrl == view.component.type.moduleUrl) {
      templateUrlInfo = view.component.type.moduleUrl + " class " + view.component.type.name + " - inline template";
    } else {
      templateUrlInfo = view.component.template.templateUrl;
    }
    if (view.viewIndex === 0) {
      initRenderCompTypeStmts = [new o.IfStmt(renderCompTypeVar.identical(o.NULL_EXPR), [renderCompTypeVar.set(constants_1.ViewConstructorVars.viewUtils.callMethod('createRenderComponentType', [o.literal(templateUrlInfo), o.literal(view.component.template.ngContentSelectors.length), constants_1.ViewEncapsulationEnum.fromValue(view.component.template.encapsulation), view.styles])).toStmt()])];
    }
    return o.fn(viewFactoryArgs, initRenderCompTypeStmts.concat([new o.ReturnStatement(o.variable(viewClass.name).instantiate(viewClass.constructorMethod.params.map(function (param) {
      return o.variable(param.name);
    })))]), o.importType(identifiers_1.Identifiers.AppView, [getContextType(view)])).toDeclStmt(view.viewFactory.name, [o.StmtModifier.Final]);
  }
  function generateCreateMethod(view) {
    var parentRenderNodeExpr = o.NULL_EXPR;
    var parentRenderNodeStmts = [];
    if (view.viewType === core_private_1.ViewType.COMPONENT) {
      parentRenderNodeExpr = constants_1.ViewProperties.renderer.callMethod('createViewRoot', [o.THIS_EXPR.prop('declarationAppElement').prop('nativeElement')]);
      parentRenderNodeStmts = [parentRenderNodeVar.set(parentRenderNodeExpr).toDeclStmt(o.importType(view.genConfig.renderTypes.renderNode), [o.StmtModifier.Final])];
    }
    var resultExpr;
    if (view.viewType === core_private_1.ViewType.HOST) {
      resultExpr = view.nodes[0].appElement;
    } else {
      resultExpr = o.NULL_EXPR;
    }
    return parentRenderNodeStmts.concat(view.createMethod.finish()).concat([o.THIS_EXPR.callMethod('init', [util_1.createFlatArray(view.rootNodesOrAppElements), o.literalArr(view.nodes.map(function (node) {
      return node.renderNode;
    })), o.literalArr(view.disposables), o.literalArr(view.subscriptions)]).toStmt(), new o.ReturnStatement(resultExpr)]);
  }
  function generateDetectChangesMethod(view) {
    var stmts = [];
    if (view.detectChangesInInputsMethod.isEmpty() && view.updateContentQueriesMethod.isEmpty() && view.afterContentLifecycleCallbacksMethod.isEmpty() && view.detectChangesRenderPropertiesMethod.isEmpty() && view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty()) {
      return stmts;
    }
    collection_1.ListWrapper.addAll(stmts, view.detectChangesInInputsMethod.finish());
    stmts.push(o.THIS_EXPR.callMethod('detectContentChildrenChanges', [constants_1.DetectChangesVars.throwOnChange]).toStmt());
    var afterContentStmts = view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());
    if (afterContentStmts.length > 0) {
      stmts.push(new o.IfStmt(o.not(constants_1.DetectChangesVars.throwOnChange), afterContentStmts));
    }
    collection_1.ListWrapper.addAll(stmts, view.detectChangesRenderPropertiesMethod.finish());
    stmts.push(o.THIS_EXPR.callMethod('detectViewChildrenChanges', [constants_1.DetectChangesVars.throwOnChange]).toStmt());
    var afterViewStmts = view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());
    if (afterViewStmts.length > 0) {
      stmts.push(new o.IfStmt(o.not(constants_1.DetectChangesVars.throwOnChange), afterViewStmts));
    }
    var varStmts = [];
    var readVars = o.findReadVarNames(stmts);
    if (collection_1.SetWrapper.has(readVars, constants_1.DetectChangesVars.changed.name)) {
      varStmts.push(constants_1.DetectChangesVars.changed.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE));
    }
    if (collection_1.SetWrapper.has(readVars, constants_1.DetectChangesVars.changes.name)) {
      varStmts.push(constants_1.DetectChangesVars.changes.set(o.NULL_EXPR).toDeclStmt(new o.MapType(o.importType(identifiers_1.Identifiers.SimpleChange))));
    }
    if (collection_1.SetWrapper.has(readVars, constants_1.DetectChangesVars.valUnwrapper.name)) {
      varStmts.push(constants_1.DetectChangesVars.valUnwrapper.set(o.importExpr(identifiers_1.Identifiers.ValueUnwrapper).instantiate([])).toDeclStmt(null, [o.StmtModifier.Final]));
    }
    return varStmts.concat(stmts);
  }
  function addReturnValuefNotEmpty(statements, value) {
    if (statements.length > 0) {
      return statements.concat([new o.ReturnStatement(value)]);
    } else {
      return statements;
    }
  }
  function getContextType(view) {
    if (view.viewType === core_private_1.ViewType.COMPONENT) {
      return o.importType(view.component.type);
    }
    return o.DYNAMIC_TYPE;
  }
  function getChangeDetectionMode(view) {
    var mode;
    if (view.viewType === core_private_1.ViewType.COMPONENT) {
      mode = core_private_1.isDefaultChangeDetectionStrategy(view.component.changeDetection) ? core_1.ChangeDetectionStrategy.CheckAlways : core_1.ChangeDetectionStrategy.CheckOnce;
    } else {
      mode = core_1.ChangeDetectionStrategy.CheckAlways;
    }
    return mode;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/property_binder.js', ['npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/expression_converter.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_binding.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var core_private_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var constants_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js');
  var template_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  var expression_converter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/expression_converter.js');
  var compile_binding_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_binding.js');
  function createBindFieldExpr(exprIndex) {
    return o.THIS_EXPR.prop("_expr_" + exprIndex);
  }
  function createCurrValueExpr(exprIndex) {
    return o.variable("currVal_" + exprIndex);
  }
  function bind(view, currValExpr, fieldExpr, parsedExpression, context, actions, method) {
    var checkExpression = expression_converter_1.convertCdExpressionToIr(view, context, parsedExpression, constants_1.DetectChangesVars.valUnwrapper);
    if (lang_1.isBlank(checkExpression.expression)) {
      return;
    }
    view.fields.push(new o.ClassField(fieldExpr.name, null, [o.StmtModifier.Private]));
    view.createMethod.addStmt(o.THIS_EXPR.prop(fieldExpr.name).set(o.importExpr(identifiers_1.Identifiers.uninitialized)).toStmt());
    if (checkExpression.needsValueUnwrapper) {
      var initValueUnwrapperStmt = constants_1.DetectChangesVars.valUnwrapper.callMethod('reset', []).toStmt();
      method.addStmt(initValueUnwrapperStmt);
    }
    method.addStmt(currValExpr.set(checkExpression.expression).toDeclStmt(null, [o.StmtModifier.Final]));
    var condition = o.importExpr(identifiers_1.Identifiers.checkBinding).callFn([constants_1.DetectChangesVars.throwOnChange, fieldExpr, currValExpr]);
    if (checkExpression.needsValueUnwrapper) {
      condition = constants_1.DetectChangesVars.valUnwrapper.prop('hasWrappedValue').or(condition);
    }
    method.addStmt(new o.IfStmt(condition, actions.concat([o.THIS_EXPR.prop(fieldExpr.name).set(currValExpr).toStmt()])));
  }
  function bindRenderText(boundText, compileNode, view) {
    var bindingIndex = view.bindings.length;
    view.bindings.push(new compile_binding_1.CompileBinding(compileNode, boundText));
    var currValExpr = createCurrValueExpr(bindingIndex);
    var valueField = createBindFieldExpr(bindingIndex);
    view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);
    bind(view, currValExpr, valueField, boundText.value, view.componentContext, [o.THIS_EXPR.prop('renderer').callMethod('setText', [compileNode.renderNode, currValExpr]).toStmt()], view.detectChangesRenderPropertiesMethod);
  }
  exports.bindRenderText = bindRenderText;
  function bindAndWriteToRenderer(boundProps, context, compileElement) {
    var view = compileElement.view;
    var renderNode = compileElement.renderNode;
    boundProps.forEach(function (boundProp) {
      var bindingIndex = view.bindings.length;
      view.bindings.push(new compile_binding_1.CompileBinding(compileElement, boundProp));
      view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);
      var fieldExpr = createBindFieldExpr(bindingIndex);
      var currValExpr = createCurrValueExpr(bindingIndex);
      var renderMethod;
      var renderValue = sanitizedValue(boundProp, currValExpr);
      var updateStmts = [];
      switch (boundProp.type) {
        case template_ast_1.PropertyBindingType.Property:
          renderMethod = 'setElementProperty';
          if (view.genConfig.logBindingUpdate) {
            updateStmts.push(logBindingUpdateStmt(renderNode, boundProp.name, currValExpr));
          }
          break;
        case template_ast_1.PropertyBindingType.Attribute:
          renderMethod = 'setElementAttribute';
          renderValue = renderValue.isBlank().conditional(o.NULL_EXPR, renderValue.callMethod('toString', []));
          break;
        case template_ast_1.PropertyBindingType.Class:
          renderMethod = 'setElementClass';
          break;
        case template_ast_1.PropertyBindingType.Style:
          renderMethod = 'setElementStyle';
          var strValue = renderValue.callMethod('toString', []);
          if (lang_1.isPresent(boundProp.unit)) {
            strValue = strValue.plus(o.literal(boundProp.unit));
          }
          renderValue = renderValue.isBlank().conditional(o.NULL_EXPR, strValue);
          break;
      }
      updateStmts.push(o.THIS_EXPR.prop('renderer').callMethod(renderMethod, [renderNode, o.literal(boundProp.name), renderValue]).toStmt());
      bind(view, currValExpr, fieldExpr, boundProp.value, context, updateStmts, view.detectChangesRenderPropertiesMethod);
    });
  }
  function sanitizedValue(boundProp, renderValue) {
    var enumValue;
    switch (boundProp.securityContext) {
      case core_private_1.SecurityContext.NONE:
        return renderValue;
      case core_private_1.SecurityContext.HTML:
        enumValue = 'HTML';
        break;
      case core_private_1.SecurityContext.STYLE:
        enumValue = 'STYLE';
        break;
      case core_private_1.SecurityContext.SCRIPT:
        enumValue = 'SCRIPT';
        break;
      case core_private_1.SecurityContext.URL:
        enumValue = 'URL';
        break;
      case core_private_1.SecurityContext.RESOURCE_URL:
        enumValue = 'RESOURCE_URL';
        break;
      default:
        throw new Error("internal error, unexpected SecurityContext " + boundProp.securityContext + ".");
    }
    var ctx = constants_1.ViewProperties.viewUtils.prop('sanitizer');
    var args = [o.importExpr(identifiers_1.Identifiers.SecurityContext).prop(enumValue), renderValue];
    return ctx.callMethod('sanitize', args);
  }
  function bindRenderInputs(boundProps, compileElement) {
    bindAndWriteToRenderer(boundProps, compileElement.view.componentContext, compileElement);
  }
  exports.bindRenderInputs = bindRenderInputs;
  function bindDirectiveHostProps(directiveAst, directiveInstance, compileElement) {
    bindAndWriteToRenderer(directiveAst.hostProperties, directiveInstance, compileElement);
  }
  exports.bindDirectiveHostProps = bindDirectiveHostProps;
  function bindDirectiveInputs(directiveAst, directiveInstance, compileElement) {
    if (directiveAst.inputs.length === 0) {
      return;
    }
    var view = compileElement.view;
    var detectChangesInInputsMethod = view.detectChangesInInputsMethod;
    detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);
    var lifecycleHooks = directiveAst.directive.lifecycleHooks;
    var calcChangesMap = lifecycleHooks.indexOf(core_private_2.LifecycleHooks.OnChanges) !== -1;
    var isOnPushComp = directiveAst.directive.isComponent && !core_private_2.isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);
    if (calcChangesMap) {
      detectChangesInInputsMethod.addStmt(constants_1.DetectChangesVars.changes.set(o.NULL_EXPR).toStmt());
    }
    if (isOnPushComp) {
      detectChangesInInputsMethod.addStmt(constants_1.DetectChangesVars.changed.set(o.literal(false)).toStmt());
    }
    directiveAst.inputs.forEach(function (input) {
      var bindingIndex = view.bindings.length;
      view.bindings.push(new compile_binding_1.CompileBinding(compileElement, input));
      detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);
      var fieldExpr = createBindFieldExpr(bindingIndex);
      var currValExpr = createCurrValueExpr(bindingIndex);
      var statements = [directiveInstance.prop(input.directiveName).set(currValExpr).toStmt()];
      if (calcChangesMap) {
        statements.push(new o.IfStmt(constants_1.DetectChangesVars.changes.identical(o.NULL_EXPR), [constants_1.DetectChangesVars.changes.set(o.literalMap([], new o.MapType(o.importType(identifiers_1.Identifiers.SimpleChange)))).toStmt()]));
        statements.push(constants_1.DetectChangesVars.changes.key(o.literal(input.directiveName)).set(o.importExpr(identifiers_1.Identifiers.SimpleChange).instantiate([fieldExpr, currValExpr])).toStmt());
      }
      if (isOnPushComp) {
        statements.push(constants_1.DetectChangesVars.changed.set(o.literal(true)).toStmt());
      }
      if (view.genConfig.logBindingUpdate) {
        statements.push(logBindingUpdateStmt(compileElement.renderNode, input.directiveName, currValExpr));
      }
      bind(view, currValExpr, fieldExpr, input.value, view.componentContext, statements, detectChangesInInputsMethod);
    });
    if (isOnPushComp) {
      detectChangesInInputsMethod.addStmt(new o.IfStmt(constants_1.DetectChangesVars.changed, [compileElement.appElement.prop('componentView').callMethod('markAsCheckOnce', []).toStmt()]));
    }
  }
  exports.bindDirectiveInputs = bindDirectiveInputs;
  function logBindingUpdateStmt(renderNode, propName, value) {
    return o.THIS_EXPR.prop('renderer').callMethod('setBindingDebugInfo', [renderNode, o.literal("ng-reflect-" + util_1.camelCaseToDashCase(propName)), value.isBlank().conditional(o.NULL_EXPR, value.callMethod('toString', []))]).toStmt();
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var _DebugState = function () {
    function _DebugState(nodeIndex, sourceAst) {
      this.nodeIndex = nodeIndex;
      this.sourceAst = sourceAst;
    }
    return _DebugState;
  }();
  var NULL_DEBUG_STATE = new _DebugState(null, null);
  var CompileMethod = function () {
    function CompileMethod(_view) {
      this._view = _view;
      this._newState = NULL_DEBUG_STATE;
      this._currState = NULL_DEBUG_STATE;
      this._bodyStatements = [];
      this._debugEnabled = this._view.genConfig.genDebugInfo;
    }
    CompileMethod.prototype._updateDebugContextIfNeeded = function () {
      if (this._newState.nodeIndex !== this._currState.nodeIndex || this._newState.sourceAst !== this._currState.sourceAst) {
        var expr = this._updateDebugContext(this._newState);
        if (lang_1.isPresent(expr)) {
          this._bodyStatements.push(expr.toStmt());
        }
      }
    };
    CompileMethod.prototype._updateDebugContext = function (newState) {
      this._currState = this._newState = newState;
      if (this._debugEnabled) {
        var sourceLocation = lang_1.isPresent(newState.sourceAst) ? newState.sourceAst.sourceSpan.start : null;
        return o.THIS_EXPR.callMethod('debug', [o.literal(newState.nodeIndex), lang_1.isPresent(sourceLocation) ? o.literal(sourceLocation.line) : o.NULL_EXPR, lang_1.isPresent(sourceLocation) ? o.literal(sourceLocation.col) : o.NULL_EXPR]);
      } else {
        return null;
      }
    };
    CompileMethod.prototype.resetDebugInfoExpr = function (nodeIndex, templateAst) {
      var res = this._updateDebugContext(new _DebugState(nodeIndex, templateAst));
      return lang_1.isPresent(res) ? res : o.NULL_EXPR;
    };
    CompileMethod.prototype.resetDebugInfo = function (nodeIndex, templateAst) {
      this._newState = new _DebugState(nodeIndex, templateAst);
    };
    CompileMethod.prototype.addStmt = function (stmt) {
      this._updateDebugContextIfNeeded();
      this._bodyStatements.push(stmt);
    };
    CompileMethod.prototype.addStmts = function (stmts) {
      this._updateDebugContextIfNeeded();
      collection_1.ListWrapper.addAll(this._bodyStatements, stmts);
    };
    CompileMethod.prototype.finish = function () {
      return this._bodyStatements;
    };
    CompileMethod.prototype.isEmpty = function () {
      return this._bodyStatements.length === 0;
    };
    return CompileMethod;
  }();
  exports.CompileMethod = CompileMethod;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/expression_converter.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var IMPLICIT_RECEIVER = o.variable('#implicit');
  var ExpressionWithWrappedValueInfo = function () {
    function ExpressionWithWrappedValueInfo(expression, needsValueUnwrapper) {
      this.expression = expression;
      this.needsValueUnwrapper = needsValueUnwrapper;
    }
    return ExpressionWithWrappedValueInfo;
  }();
  exports.ExpressionWithWrappedValueInfo = ExpressionWithWrappedValueInfo;
  function convertCdExpressionToIr(nameResolver, implicitReceiver, expression, valueUnwrapper) {
    var visitor = new _AstToIrVisitor(nameResolver, implicitReceiver, valueUnwrapper);
    var irAst = expression.visit(visitor, _Mode.Expression);
    return new ExpressionWithWrappedValueInfo(irAst, visitor.needsValueUnwrapper);
  }
  exports.convertCdExpressionToIr = convertCdExpressionToIr;
  function convertCdStatementToIr(nameResolver, implicitReceiver, stmt) {
    var visitor = new _AstToIrVisitor(nameResolver, implicitReceiver, null);
    var statements = [];
    flattenStatements(stmt.visit(visitor, _Mode.Statement), statements);
    return statements;
  }
  exports.convertCdStatementToIr = convertCdStatementToIr;
  var _Mode;
  (function (_Mode) {
    _Mode[_Mode["Statement"] = 0] = "Statement";
    _Mode[_Mode["Expression"] = 1] = "Expression";
  })(_Mode || (_Mode = {}));
  function ensureStatementMode(mode, ast) {
    if (mode !== _Mode.Statement) {
      throw new exceptions_1.BaseException("Expected a statement, but saw " + ast);
    }
  }
  function ensureExpressionMode(mode, ast) {
    if (mode !== _Mode.Expression) {
      throw new exceptions_1.BaseException("Expected an expression, but saw " + ast);
    }
  }
  function convertToStatementIfNeeded(mode, expr) {
    if (mode === _Mode.Statement) {
      return expr.toStmt();
    } else {
      return expr;
    }
  }
  var _AstToIrVisitor = function () {
    function _AstToIrVisitor(_nameResolver, _implicitReceiver, _valueUnwrapper) {
      this._nameResolver = _nameResolver;
      this._implicitReceiver = _implicitReceiver;
      this._valueUnwrapper = _valueUnwrapper;
      this.needsValueUnwrapper = false;
    }
    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {
      var op;
      switch (ast.operation) {
        case '+':
          op = o.BinaryOperator.Plus;
          break;
        case '-':
          op = o.BinaryOperator.Minus;
          break;
        case '*':
          op = o.BinaryOperator.Multiply;
          break;
        case '/':
          op = o.BinaryOperator.Divide;
          break;
        case '%':
          op = o.BinaryOperator.Modulo;
          break;
        case '&&':
          op = o.BinaryOperator.And;
          break;
        case '||':
          op = o.BinaryOperator.Or;
          break;
        case '==':
          op = o.BinaryOperator.Equals;
          break;
        case '!=':
          op = o.BinaryOperator.NotEquals;
          break;
        case '===':
          op = o.BinaryOperator.Identical;
          break;
        case '!==':
          op = o.BinaryOperator.NotIdentical;
          break;
        case '<':
          op = o.BinaryOperator.Lower;
          break;
        case '>':
          op = o.BinaryOperator.Bigger;
          break;
        case '<=':
          op = o.BinaryOperator.LowerEquals;
          break;
        case '>=':
          op = o.BinaryOperator.BiggerEquals;
          break;
        default:
          throw new exceptions_1.BaseException("Unsupported operation " + ast.operation);
      }
      return convertToStatementIfNeeded(mode, new o.BinaryOperatorExpr(op, ast.left.visit(this, _Mode.Expression), ast.right.visit(this, _Mode.Expression)));
    };
    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {
      ensureStatementMode(mode, ast);
      return this.visitAll(ast.expressions, mode);
    };
    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {
      var value = ast.condition.visit(this, _Mode.Expression);
      return convertToStatementIfNeeded(mode, value.conditional(ast.trueExp.visit(this, _Mode.Expression), ast.falseExp.visit(this, _Mode.Expression)));
    };
    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {
      var input = ast.exp.visit(this, _Mode.Expression);
      var args = this.visitAll(ast.args, _Mode.Expression);
      var value = this._nameResolver.callPipe(ast.name, input, args);
      this.needsValueUnwrapper = true;
      return convertToStatementIfNeeded(mode, this._valueUnwrapper.callMethod('unwrap', [value]));
    };
    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {
      return convertToStatementIfNeeded(mode, ast.target.visit(this, _Mode.Expression).callFn(this.visitAll(ast.args, _Mode.Expression)));
    };
    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {
      ensureExpressionMode(mode, ast);
      return IMPLICIT_RECEIVER;
    };
    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {
      ensureExpressionMode(mode, ast);
      var args = [o.literal(ast.expressions.length)];
      for (var i = 0; i < ast.strings.length - 1; i++) {
        args.push(o.literal(ast.strings[i]));
        args.push(ast.expressions[i].visit(this, _Mode.Expression));
      }
      args.push(o.literal(ast.strings[ast.strings.length - 1]));
      return o.importExpr(identifiers_1.Identifiers.interpolate).callFn(args);
    };
    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {
      return convertToStatementIfNeeded(mode, ast.obj.visit(this, _Mode.Expression).key(ast.key.visit(this, _Mode.Expression)));
    };
    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {
      var obj = ast.obj.visit(this, _Mode.Expression);
      var key = ast.key.visit(this, _Mode.Expression);
      var value = ast.value.visit(this, _Mode.Expression);
      return convertToStatementIfNeeded(mode, obj.key(key).set(value));
    };
    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {
      return convertToStatementIfNeeded(mode, this._nameResolver.createLiteralArray(this.visitAll(ast.expressions, mode)));
    };
    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {
      var parts = [];
      for (var i = 0; i < ast.keys.length; i++) {
        parts.push([ast.keys[i], ast.values[i].visit(this, _Mode.Expression)]);
      }
      return convertToStatementIfNeeded(mode, this._nameResolver.createLiteralMap(parts));
    };
    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {
      return convertToStatementIfNeeded(mode, o.literal(ast.value));
    };
    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {
      var args = this.visitAll(ast.args, _Mode.Expression);
      var result = null;
      var receiver = ast.receiver.visit(this, _Mode.Expression);
      if (receiver === IMPLICIT_RECEIVER) {
        var varExpr = this._nameResolver.getLocal(ast.name);
        if (lang_1.isPresent(varExpr)) {
          result = varExpr.callFn(args);
        } else {
          receiver = this._implicitReceiver;
        }
      }
      if (lang_1.isBlank(result)) {
        result = receiver.callMethod(ast.name, args);
      }
      return convertToStatementIfNeeded(mode, result);
    };
    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {
      return convertToStatementIfNeeded(mode, o.not(ast.expression.visit(this, _Mode.Expression)));
    };
    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {
      var result = null;
      var receiver = ast.receiver.visit(this, _Mode.Expression);
      if (receiver === IMPLICIT_RECEIVER) {
        result = this._nameResolver.getLocal(ast.name);
        if (lang_1.isBlank(result)) {
          receiver = this._implicitReceiver;
        }
      }
      if (lang_1.isBlank(result)) {
        result = receiver.prop(ast.name);
      }
      return convertToStatementIfNeeded(mode, result);
    };
    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {
      var receiver = ast.receiver.visit(this, _Mode.Expression);
      if (receiver === IMPLICIT_RECEIVER) {
        var varExpr = this._nameResolver.getLocal(ast.name);
        if (lang_1.isPresent(varExpr)) {
          throw new exceptions_1.BaseException('Cannot assign to a reference or variable!');
        }
        receiver = this._implicitReceiver;
      }
      return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(ast.value.visit(this, _Mode.Expression)));
    };
    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {
      var receiver = ast.receiver.visit(this, _Mode.Expression);
      return convertToStatementIfNeeded(mode, receiver.isBlank().conditional(o.NULL_EXPR, receiver.prop(ast.name)));
    };
    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {
      var receiver = ast.receiver.visit(this, _Mode.Expression);
      var args = this.visitAll(ast.args, _Mode.Expression);
      return convertToStatementIfNeeded(mode, receiver.isBlank().conditional(o.NULL_EXPR, receiver.callMethod(ast.name, args)));
    };
    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {
      var _this = this;
      return asts.map(function (ast) {
        return ast.visit(_this, mode);
      });
    };
    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {
      throw new exceptions_1.BaseException('Quotes are not supported for evaluation!');
    };
    return _AstToIrVisitor;
  }();
  function flattenStatements(arg, output) {
    if (lang_1.isArray(arg)) {
      arg.forEach(function (entry) {
        return flattenStatements(entry, output);
      });
    } else {
      output.push(arg);
    }
  }
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_binding.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var CompileBinding = function () {
        function CompileBinding(node, sourceAst) {
            this.node = node;
            this.sourceAst = sourceAst;
        }
        return CompileBinding;
    }();
    exports.CompileBinding = CompileBinding;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/event_binder.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/expression_converter.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_binding.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var constants_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var compile_method_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_method.js');
  var expression_converter_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/expression_converter.js');
  var compile_binding_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_binding.js');
  var CompileEventListener = function () {
    function CompileEventListener(compileElement, eventTarget, eventName, listenerIndex) {
      this.compileElement = compileElement;
      this.eventTarget = eventTarget;
      this.eventName = eventName;
      this._hasComponentHostListener = false;
      this._actionResultExprs = [];
      this._method = new compile_method_1.CompileMethod(compileElement.view);
      this._methodName = "_handle_" + santitizeEventName(eventName) + "_" + compileElement.nodeIndex + "_" + listenerIndex;
      this._eventParam = new o.FnParam(constants_1.EventHandlerVars.event.name, o.importType(this.compileElement.view.genConfig.renderTypes.renderEvent));
    }
    CompileEventListener.getOrCreate = function (compileElement, eventTarget, eventName, targetEventListeners) {
      var listener = targetEventListeners.find(function (listener) {
        return listener.eventTarget == eventTarget && listener.eventName == eventName;
      });
      if (lang_1.isBlank(listener)) {
        listener = new CompileEventListener(compileElement, eventTarget, eventName, targetEventListeners.length);
        targetEventListeners.push(listener);
      }
      return listener;
    };
    CompileEventListener.prototype.addAction = function (hostEvent, directive, directiveInstance) {
      if (lang_1.isPresent(directive) && directive.isComponent) {
        this._hasComponentHostListener = true;
      }
      this._method.resetDebugInfo(this.compileElement.nodeIndex, hostEvent);
      var context = lang_1.isPresent(directiveInstance) ? directiveInstance : this.compileElement.view.componentContext;
      var actionStmts = expression_converter_1.convertCdStatementToIr(this.compileElement.view, context, hostEvent.handler);
      var lastIndex = actionStmts.length - 1;
      if (lastIndex >= 0) {
        var lastStatement = actionStmts[lastIndex];
        var returnExpr = convertStmtIntoExpression(lastStatement);
        var preventDefaultVar = o.variable("pd_" + this._actionResultExprs.length);
        this._actionResultExprs.push(preventDefaultVar);
        if (lang_1.isPresent(returnExpr)) {
          actionStmts[lastIndex] = preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false))).toDeclStmt(null, [o.StmtModifier.Final]);
        }
      }
      this._method.addStmts(actionStmts);
    };
    CompileEventListener.prototype.finishMethod = function () {
      var markPathToRootStart = this._hasComponentHostListener ? this.compileElement.appElement.prop('componentView') : o.THIS_EXPR;
      var resultExpr = o.literal(true);
      this._actionResultExprs.forEach(function (expr) {
        resultExpr = resultExpr.and(expr);
      });
      var stmts = [markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt()].concat(this._method.finish()).concat([new o.ReturnStatement(resultExpr)]);
      this.compileElement.view.eventHandlerMethods.push(new o.ClassMethod(this._methodName, [this._eventParam], stmts, o.BOOL_TYPE, [o.StmtModifier.Private]));
    };
    CompileEventListener.prototype.listenToRenderer = function () {
      var listenExpr;
      var eventListener = o.THIS_EXPR.callMethod('eventHandler', [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.bind, [o.THIS_EXPR])]);
      if (lang_1.isPresent(this.eventTarget)) {
        listenExpr = constants_1.ViewProperties.renderer.callMethod('listenGlobal', [o.literal(this.eventTarget), o.literal(this.eventName), eventListener]);
      } else {
        listenExpr = constants_1.ViewProperties.renderer.callMethod('listen', [this.compileElement.renderNode, o.literal(this.eventName), eventListener]);
      }
      var disposable = o.variable("disposable_" + this.compileElement.view.disposables.length);
      this.compileElement.view.disposables.push(disposable);
      this.compileElement.view.createMethod.addStmt(disposable.set(listenExpr).toDeclStmt(o.FUNCTION_TYPE, [o.StmtModifier.Private]));
    };
    CompileEventListener.prototype.listenToDirective = function (directiveInstance, observablePropName) {
      var subscription = o.variable("subscription_" + this.compileElement.view.subscriptions.length);
      this.compileElement.view.subscriptions.push(subscription);
      var eventListener = o.THIS_EXPR.callMethod('eventHandler', [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.bind, [o.THIS_EXPR])]);
      this.compileElement.view.createMethod.addStmt(subscription.set(directiveInstance.prop(observablePropName).callMethod(o.BuiltinMethod.SubscribeObservable, [eventListener])).toDeclStmt(null, [o.StmtModifier.Final]));
    };
    return CompileEventListener;
  }();
  exports.CompileEventListener = CompileEventListener;
  function collectEventListeners(hostEvents, dirs, compileElement) {
    var eventListeners = [];
    hostEvents.forEach(function (hostEvent) {
      compileElement.view.bindings.push(new compile_binding_1.CompileBinding(compileElement, hostEvent));
      var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target, hostEvent.name, eventListeners);
      listener.addAction(hostEvent, null, null);
    });
    collection_1.ListWrapper.forEachWithIndex(dirs, function (directiveAst, i) {
      var directiveInstance = compileElement.directiveInstances[i];
      directiveAst.hostEvents.forEach(function (hostEvent) {
        compileElement.view.bindings.push(new compile_binding_1.CompileBinding(compileElement, hostEvent));
        var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target, hostEvent.name, eventListeners);
        listener.addAction(hostEvent, directiveAst.directive, directiveInstance);
      });
    });
    eventListeners.forEach(function (listener) {
      return listener.finishMethod();
    });
    return eventListeners;
  }
  exports.collectEventListeners = collectEventListeners;
  function bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners) {
    collection_1.StringMapWrapper.forEach(directiveAst.directive.outputs, function (eventName, observablePropName) {
      eventListeners.filter(function (listener) {
        return listener.eventName == eventName;
      }).forEach(function (listener) {
        listener.listenToDirective(directiveInstance, observablePropName);
      });
    });
  }
  exports.bindDirectiveOutputs = bindDirectiveOutputs;
  function bindRenderOutputs(eventListeners) {
    eventListeners.forEach(function (listener) {
      return listener.listenToRenderer();
    });
  }
  exports.bindRenderOutputs = bindRenderOutputs;
  function convertStmtIntoExpression(stmt) {
    if (stmt instanceof o.ExpressionStatement) {
      return stmt.expr;
    } else if (stmt instanceof o.ReturnStatement) {
      return stmt.value;
    }
    return null;
  }
  function santitizeEventName(name) {
    return lang_1.StringWrapper.replaceAll(name, /[^a-zA-Z_]/g, '_');
  }
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js", ["npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require("npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js");
  (function (TypeModifier) {
    TypeModifier[TypeModifier["Const"] = 0] = "Const";
  })(exports.TypeModifier || (exports.TypeModifier = {}));
  var TypeModifier = exports.TypeModifier;
  var Type = function () {
    function Type(modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      this.modifiers = modifiers;
      if (lang_1.isBlank(modifiers)) {
        this.modifiers = [];
      }
    }
    Type.prototype.hasModifier = function (modifier) {
      return this.modifiers.indexOf(modifier) !== -1;
    };
    return Type;
  }();
  exports.Type = Type;
  (function (BuiltinTypeName) {
    BuiltinTypeName[BuiltinTypeName["Dynamic"] = 0] = "Dynamic";
    BuiltinTypeName[BuiltinTypeName["Bool"] = 1] = "Bool";
    BuiltinTypeName[BuiltinTypeName["String"] = 2] = "String";
    BuiltinTypeName[BuiltinTypeName["Int"] = 3] = "Int";
    BuiltinTypeName[BuiltinTypeName["Number"] = 4] = "Number";
    BuiltinTypeName[BuiltinTypeName["Function"] = 5] = "Function";
  })(exports.BuiltinTypeName || (exports.BuiltinTypeName = {}));
  var BuiltinTypeName = exports.BuiltinTypeName;
  var BuiltinType = function (_super) {
    __extends(BuiltinType, _super);
    function BuiltinType(name, modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.name = name;
    }
    BuiltinType.prototype.visitType = function (visitor, context) {
      return visitor.visitBuiltintType(this, context);
    };
    return BuiltinType;
  }(Type);
  exports.BuiltinType = BuiltinType;
  var ExternalType = function (_super) {
    __extends(ExternalType, _super);
    function ExternalType(value, typeParams, modifiers) {
      if (typeParams === void 0) {
        typeParams = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.value = value;
      this.typeParams = typeParams;
    }
    ExternalType.prototype.visitType = function (visitor, context) {
      return visitor.visitExternalType(this, context);
    };
    return ExternalType;
  }(Type);
  exports.ExternalType = ExternalType;
  var ArrayType = function (_super) {
    __extends(ArrayType, _super);
    function ArrayType(of, modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.of = of;
    }
    ArrayType.prototype.visitType = function (visitor, context) {
      return visitor.visitArrayType(this, context);
    };
    return ArrayType;
  }(Type);
  exports.ArrayType = ArrayType;
  var MapType = function (_super) {
    __extends(MapType, _super);
    function MapType(valueType, modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.valueType = valueType;
    }
    MapType.prototype.visitType = function (visitor, context) {
      return visitor.visitMapType(this, context);
    };
    return MapType;
  }(Type);
  exports.MapType = MapType;
  exports.DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);
  exports.BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);
  exports.INT_TYPE = new BuiltinType(BuiltinTypeName.Int);
  exports.NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);
  exports.STRING_TYPE = new BuiltinType(BuiltinTypeName.String);
  exports.FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);
  (function (BinaryOperator) {
    BinaryOperator[BinaryOperator["Equals"] = 0] = "Equals";
    BinaryOperator[BinaryOperator["NotEquals"] = 1] = "NotEquals";
    BinaryOperator[BinaryOperator["Identical"] = 2] = "Identical";
    BinaryOperator[BinaryOperator["NotIdentical"] = 3] = "NotIdentical";
    BinaryOperator[BinaryOperator["Minus"] = 4] = "Minus";
    BinaryOperator[BinaryOperator["Plus"] = 5] = "Plus";
    BinaryOperator[BinaryOperator["Divide"] = 6] = "Divide";
    BinaryOperator[BinaryOperator["Multiply"] = 7] = "Multiply";
    BinaryOperator[BinaryOperator["Modulo"] = 8] = "Modulo";
    BinaryOperator[BinaryOperator["And"] = 9] = "And";
    BinaryOperator[BinaryOperator["Or"] = 10] = "Or";
    BinaryOperator[BinaryOperator["Lower"] = 11] = "Lower";
    BinaryOperator[BinaryOperator["LowerEquals"] = 12] = "LowerEquals";
    BinaryOperator[BinaryOperator["Bigger"] = 13] = "Bigger";
    BinaryOperator[BinaryOperator["BiggerEquals"] = 14] = "BiggerEquals";
  })(exports.BinaryOperator || (exports.BinaryOperator = {}));
  var BinaryOperator = exports.BinaryOperator;
  var Expression = function () {
    function Expression(type) {
      this.type = type;
    }
    Expression.prototype.prop = function (name) {
      return new ReadPropExpr(this, name);
    };
    Expression.prototype.key = function (index, type) {
      if (type === void 0) {
        type = null;
      }
      return new ReadKeyExpr(this, index, type);
    };
    Expression.prototype.callMethod = function (name, params) {
      return new InvokeMethodExpr(this, name, params);
    };
    Expression.prototype.callFn = function (params) {
      return new InvokeFunctionExpr(this, params);
    };
    Expression.prototype.instantiate = function (params, type) {
      if (type === void 0) {
        type = null;
      }
      return new InstantiateExpr(this, params, type);
    };
    Expression.prototype.conditional = function (trueCase, falseCase) {
      if (falseCase === void 0) {
        falseCase = null;
      }
      return new ConditionalExpr(this, trueCase, falseCase);
    };
    Expression.prototype.equals = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);
    };
    Expression.prototype.notEquals = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);
    };
    Expression.prototype.identical = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);
    };
    Expression.prototype.notIdentical = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);
    };
    Expression.prototype.minus = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);
    };
    Expression.prototype.plus = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);
    };
    Expression.prototype.divide = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);
    };
    Expression.prototype.multiply = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);
    };
    Expression.prototype.modulo = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);
    };
    Expression.prototype.and = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);
    };
    Expression.prototype.or = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);
    };
    Expression.prototype.lower = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);
    };
    Expression.prototype.lowerEquals = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);
    };
    Expression.prototype.bigger = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);
    };
    Expression.prototype.biggerEquals = function (rhs) {
      return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);
    };
    Expression.prototype.isBlank = function () {
      return this.equals(exports.NULL_EXPR);
    };
    Expression.prototype.cast = function (type) {
      return new CastExpr(this, type);
    };
    Expression.prototype.toStmt = function () {
      return new ExpressionStatement(this);
    };
    return Expression;
  }();
  exports.Expression = Expression;
  (function (BuiltinVar) {
    BuiltinVar[BuiltinVar["This"] = 0] = "This";
    BuiltinVar[BuiltinVar["Super"] = 1] = "Super";
    BuiltinVar[BuiltinVar["CatchError"] = 2] = "CatchError";
    BuiltinVar[BuiltinVar["CatchStack"] = 3] = "CatchStack";
  })(exports.BuiltinVar || (exports.BuiltinVar = {}));
  var BuiltinVar = exports.BuiltinVar;
  var ReadVarExpr = function (_super) {
    __extends(ReadVarExpr, _super);
    function ReadVarExpr(name, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      if (lang_1.isString(name)) {
        this.name = name;
        this.builtin = null;
      } else {
        this.name = null;
        this.builtin = name;
      }
    }
    ReadVarExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitReadVarExpr(this, context);
    };
    ReadVarExpr.prototype.set = function (value) {
      return new WriteVarExpr(this.name, value);
    };
    return ReadVarExpr;
  }(Expression);
  exports.ReadVarExpr = ReadVarExpr;
  var WriteVarExpr = function (_super) {
    __extends(WriteVarExpr, _super);
    function WriteVarExpr(name, value, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, lang_1.isPresent(type) ? type : value.type);
      this.name = name;
      this.value = value;
    }
    WriteVarExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitWriteVarExpr(this, context);
    };
    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      return new DeclareVarStmt(this.name, this.value, type, modifiers);
    };
    return WriteVarExpr;
  }(Expression);
  exports.WriteVarExpr = WriteVarExpr;
  var WriteKeyExpr = function (_super) {
    __extends(WriteKeyExpr, _super);
    function WriteKeyExpr(receiver, index, value, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, lang_1.isPresent(type) ? type : value.type);
      this.receiver = receiver;
      this.index = index;
      this.value = value;
    }
    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitWriteKeyExpr(this, context);
    };
    return WriteKeyExpr;
  }(Expression);
  exports.WriteKeyExpr = WriteKeyExpr;
  var WritePropExpr = function (_super) {
    __extends(WritePropExpr, _super);
    function WritePropExpr(receiver, name, value, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, lang_1.isPresent(type) ? type : value.type);
      this.receiver = receiver;
      this.name = name;
      this.value = value;
    }
    WritePropExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitWritePropExpr(this, context);
    };
    return WritePropExpr;
  }(Expression);
  exports.WritePropExpr = WritePropExpr;
  (function (BuiltinMethod) {
    BuiltinMethod[BuiltinMethod["ConcatArray"] = 0] = "ConcatArray";
    BuiltinMethod[BuiltinMethod["SubscribeObservable"] = 1] = "SubscribeObservable";
    BuiltinMethod[BuiltinMethod["bind"] = 2] = "bind";
  })(exports.BuiltinMethod || (exports.BuiltinMethod = {}));
  var BuiltinMethod = exports.BuiltinMethod;
  var InvokeMethodExpr = function (_super) {
    __extends(InvokeMethodExpr, _super);
    function InvokeMethodExpr(receiver, method, args, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.receiver = receiver;
      this.args = args;
      if (lang_1.isString(method)) {
        this.name = method;
        this.builtin = null;
      } else {
        this.name = null;
        this.builtin = method;
      }
    }
    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitInvokeMethodExpr(this, context);
    };
    return InvokeMethodExpr;
  }(Expression);
  exports.InvokeMethodExpr = InvokeMethodExpr;
  var InvokeFunctionExpr = function (_super) {
    __extends(InvokeFunctionExpr, _super);
    function InvokeFunctionExpr(fn, args, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.fn = fn;
      this.args = args;
    }
    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitInvokeFunctionExpr(this, context);
    };
    return InvokeFunctionExpr;
  }(Expression);
  exports.InvokeFunctionExpr = InvokeFunctionExpr;
  var InstantiateExpr = function (_super) {
    __extends(InstantiateExpr, _super);
    function InstantiateExpr(classExpr, args, type) {
      _super.call(this, type);
      this.classExpr = classExpr;
      this.args = args;
    }
    InstantiateExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitInstantiateExpr(this, context);
    };
    return InstantiateExpr;
  }(Expression);
  exports.InstantiateExpr = InstantiateExpr;
  var LiteralExpr = function (_super) {
    __extends(LiteralExpr, _super);
    function LiteralExpr(value, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.value = value;
    }
    LiteralExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitLiteralExpr(this, context);
    };
    return LiteralExpr;
  }(Expression);
  exports.LiteralExpr = LiteralExpr;
  var ExternalExpr = function (_super) {
    __extends(ExternalExpr, _super);
    function ExternalExpr(value, type, typeParams) {
      if (type === void 0) {
        type = null;
      }
      if (typeParams === void 0) {
        typeParams = null;
      }
      _super.call(this, type);
      this.value = value;
      this.typeParams = typeParams;
    }
    ExternalExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitExternalExpr(this, context);
    };
    return ExternalExpr;
  }(Expression);
  exports.ExternalExpr = ExternalExpr;
  var ConditionalExpr = function (_super) {
    __extends(ConditionalExpr, _super);
    function ConditionalExpr(condition, trueCase, falseCase, type) {
      if (falseCase === void 0) {
        falseCase = null;
      }
      if (type === void 0) {
        type = null;
      }
      _super.call(this, lang_1.isPresent(type) ? type : trueCase.type);
      this.condition = condition;
      this.falseCase = falseCase;
      this.trueCase = trueCase;
    }
    ConditionalExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitConditionalExpr(this, context);
    };
    return ConditionalExpr;
  }(Expression);
  exports.ConditionalExpr = ConditionalExpr;
  var NotExpr = function (_super) {
    __extends(NotExpr, _super);
    function NotExpr(condition) {
      _super.call(this, exports.BOOL_TYPE);
      this.condition = condition;
    }
    NotExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitNotExpr(this, context);
    };
    return NotExpr;
  }(Expression);
  exports.NotExpr = NotExpr;
  var CastExpr = function (_super) {
    __extends(CastExpr, _super);
    function CastExpr(value, type) {
      _super.call(this, type);
      this.value = value;
    }
    CastExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitCastExpr(this, context);
    };
    return CastExpr;
  }(Expression);
  exports.CastExpr = CastExpr;
  var FnParam = function () {
    function FnParam(name, type) {
      if (type === void 0) {
        type = null;
      }
      this.name = name;
      this.type = type;
    }
    return FnParam;
  }();
  exports.FnParam = FnParam;
  var FunctionExpr = function (_super) {
    __extends(FunctionExpr, _super);
    function FunctionExpr(params, statements, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.params = params;
      this.statements = statements;
    }
    FunctionExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitFunctionExpr(this, context);
    };
    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);
    };
    return FunctionExpr;
  }(Expression);
  exports.FunctionExpr = FunctionExpr;
  var BinaryOperatorExpr = function (_super) {
    __extends(BinaryOperatorExpr, _super);
    function BinaryOperatorExpr(operator, lhs, rhs, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, lang_1.isPresent(type) ? type : lhs.type);
      this.operator = operator;
      this.rhs = rhs;
      this.lhs = lhs;
    }
    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitBinaryOperatorExpr(this, context);
    };
    return BinaryOperatorExpr;
  }(Expression);
  exports.BinaryOperatorExpr = BinaryOperatorExpr;
  var ReadPropExpr = function (_super) {
    __extends(ReadPropExpr, _super);
    function ReadPropExpr(receiver, name, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.receiver = receiver;
      this.name = name;
    }
    ReadPropExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitReadPropExpr(this, context);
    };
    ReadPropExpr.prototype.set = function (value) {
      return new WritePropExpr(this.receiver, this.name, value);
    };
    return ReadPropExpr;
  }(Expression);
  exports.ReadPropExpr = ReadPropExpr;
  var ReadKeyExpr = function (_super) {
    __extends(ReadKeyExpr, _super);
    function ReadKeyExpr(receiver, index, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.receiver = receiver;
      this.index = index;
    }
    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitReadKeyExpr(this, context);
    };
    ReadKeyExpr.prototype.set = function (value) {
      return new WriteKeyExpr(this.receiver, this.index, value);
    };
    return ReadKeyExpr;
  }(Expression);
  exports.ReadKeyExpr = ReadKeyExpr;
  var LiteralArrayExpr = function (_super) {
    __extends(LiteralArrayExpr, _super);
    function LiteralArrayExpr(entries, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.entries = entries;
    }
    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitLiteralArrayExpr(this, context);
    };
    return LiteralArrayExpr;
  }(Expression);
  exports.LiteralArrayExpr = LiteralArrayExpr;
  var LiteralMapExpr = function (_super) {
    __extends(LiteralMapExpr, _super);
    function LiteralMapExpr(entries, type) {
      if (type === void 0) {
        type = null;
      }
      _super.call(this, type);
      this.entries = entries;
      this.valueType = null;
      if (lang_1.isPresent(type)) {
        this.valueType = type.valueType;
      }
    }
    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {
      return visitor.visitLiteralMapExpr(this, context);
    };
    return LiteralMapExpr;
  }(Expression);
  exports.LiteralMapExpr = LiteralMapExpr;
  exports.THIS_EXPR = new ReadVarExpr(BuiltinVar.This);
  exports.SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);
  exports.CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);
  exports.CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);
  exports.NULL_EXPR = new LiteralExpr(null, null);
  (function (StmtModifier) {
    StmtModifier[StmtModifier["Final"] = 0] = "Final";
    StmtModifier[StmtModifier["Private"] = 1] = "Private";
  })(exports.StmtModifier || (exports.StmtModifier = {}));
  var StmtModifier = exports.StmtModifier;
  var Statement = function () {
    function Statement(modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      this.modifiers = modifiers;
      if (lang_1.isBlank(modifiers)) {
        this.modifiers = [];
      }
    }
    Statement.prototype.hasModifier = function (modifier) {
      return this.modifiers.indexOf(modifier) !== -1;
    };
    return Statement;
  }();
  exports.Statement = Statement;
  var DeclareVarStmt = function (_super) {
    __extends(DeclareVarStmt, _super);
    function DeclareVarStmt(name, value, type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.name = name;
      this.value = value;
      this.type = lang_1.isPresent(type) ? type : value.type;
    }
    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitDeclareVarStmt(this, context);
    };
    return DeclareVarStmt;
  }(Statement);
  exports.DeclareVarStmt = DeclareVarStmt;
  var DeclareFunctionStmt = function (_super) {
    __extends(DeclareFunctionStmt, _super);
    function DeclareFunctionStmt(name, params, statements, type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.name = name;
      this.params = params;
      this.statements = statements;
      this.type = type;
    }
    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitDeclareFunctionStmt(this, context);
    };
    return DeclareFunctionStmt;
  }(Statement);
  exports.DeclareFunctionStmt = DeclareFunctionStmt;
  var ExpressionStatement = function (_super) {
    __extends(ExpressionStatement, _super);
    function ExpressionStatement(expr) {
      _super.call(this);
      this.expr = expr;
    }
    ExpressionStatement.prototype.visitStatement = function (visitor, context) {
      return visitor.visitExpressionStmt(this, context);
    };
    return ExpressionStatement;
  }(Statement);
  exports.ExpressionStatement = ExpressionStatement;
  var ReturnStatement = function (_super) {
    __extends(ReturnStatement, _super);
    function ReturnStatement(value) {
      _super.call(this);
      this.value = value;
    }
    ReturnStatement.prototype.visitStatement = function (visitor, context) {
      return visitor.visitReturnStmt(this, context);
    };
    return ReturnStatement;
  }(Statement);
  exports.ReturnStatement = ReturnStatement;
  var AbstractClassPart = function () {
    function AbstractClassPart(type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      this.type = type;
      this.modifiers = modifiers;
      if (lang_1.isBlank(modifiers)) {
        this.modifiers = [];
      }
    }
    AbstractClassPart.prototype.hasModifier = function (modifier) {
      return this.modifiers.indexOf(modifier) !== -1;
    };
    return AbstractClassPart;
  }();
  exports.AbstractClassPart = AbstractClassPart;
  var ClassField = function (_super) {
    __extends(ClassField, _super);
    function ClassField(name, type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, type, modifiers);
      this.name = name;
    }
    return ClassField;
  }(AbstractClassPart);
  exports.ClassField = ClassField;
  var ClassMethod = function (_super) {
    __extends(ClassMethod, _super);
    function ClassMethod(name, params, body, type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, type, modifiers);
      this.name = name;
      this.params = params;
      this.body = body;
    }
    return ClassMethod;
  }(AbstractClassPart);
  exports.ClassMethod = ClassMethod;
  var ClassGetter = function (_super) {
    __extends(ClassGetter, _super);
    function ClassGetter(name, body, type, modifiers) {
      if (type === void 0) {
        type = null;
      }
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, type, modifiers);
      this.name = name;
      this.body = body;
    }
    return ClassGetter;
  }(AbstractClassPart);
  exports.ClassGetter = ClassGetter;
  var ClassStmt = function (_super) {
    __extends(ClassStmt, _super);
    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers) {
      if (modifiers === void 0) {
        modifiers = null;
      }
      _super.call(this, modifiers);
      this.name = name;
      this.parent = parent;
      this.fields = fields;
      this.getters = getters;
      this.constructorMethod = constructorMethod;
      this.methods = methods;
    }
    ClassStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitDeclareClassStmt(this, context);
    };
    return ClassStmt;
  }(Statement);
  exports.ClassStmt = ClassStmt;
  var IfStmt = function (_super) {
    __extends(IfStmt, _super);
    function IfStmt(condition, trueCase, falseCase) {
      if (falseCase === void 0) {
        falseCase = [];
      }
      _super.call(this);
      this.condition = condition;
      this.trueCase = trueCase;
      this.falseCase = falseCase;
    }
    IfStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitIfStmt(this, context);
    };
    return IfStmt;
  }(Statement);
  exports.IfStmt = IfStmt;
  var CommentStmt = function (_super) {
    __extends(CommentStmt, _super);
    function CommentStmt(comment) {
      _super.call(this);
      this.comment = comment;
    }
    CommentStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitCommentStmt(this, context);
    };
    return CommentStmt;
  }(Statement);
  exports.CommentStmt = CommentStmt;
  var TryCatchStmt = function (_super) {
    __extends(TryCatchStmt, _super);
    function TryCatchStmt(bodyStmts, catchStmts) {
      _super.call(this);
      this.bodyStmts = bodyStmts;
      this.catchStmts = catchStmts;
    }
    TryCatchStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitTryCatchStmt(this, context);
    };
    return TryCatchStmt;
  }(Statement);
  exports.TryCatchStmt = TryCatchStmt;
  var ThrowStmt = function (_super) {
    __extends(ThrowStmt, _super);
    function ThrowStmt(error) {
      _super.call(this);
      this.error = error;
    }
    ThrowStmt.prototype.visitStatement = function (visitor, context) {
      return visitor.visitThrowStmt(this, context);
    };
    return ThrowStmt;
  }(Statement);
  exports.ThrowStmt = ThrowStmt;
  var ExpressionTransformer = function () {
    function ExpressionTransformer() {}
    ExpressionTransformer.prototype.visitReadVarExpr = function (ast, context) {
      return ast;
    };
    ExpressionTransformer.prototype.visitWriteVarExpr = function (expr, context) {
      return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitWriteKeyExpr = function (expr, context) {
      return new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitWritePropExpr = function (expr, context) {
      return new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {
      var method = lang_1.isPresent(ast.builtin) ? ast.builtin : ast.name;
      return new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type);
    };
    ExpressionTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {
      return new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);
    };
    ExpressionTransformer.prototype.visitInstantiateExpr = function (ast, context) {
      return new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);
    };
    ExpressionTransformer.prototype.visitLiteralExpr = function (ast, context) {
      return ast;
    };
    ExpressionTransformer.prototype.visitExternalExpr = function (ast, context) {
      return ast;
    };
    ExpressionTransformer.prototype.visitConditionalExpr = function (ast, context) {
      return new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitNotExpr = function (ast, context) {
      return new NotExpr(ast.condition.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitCastExpr = function (ast, context) {
      return new CastExpr(ast.value.visitExpression(this, context), context);
    };
    ExpressionTransformer.prototype.visitFunctionExpr = function (ast, context) {
      return ast;
    };
    ExpressionTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {
      return new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type);
    };
    ExpressionTransformer.prototype.visitReadPropExpr = function (ast, context) {
      return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);
    };
    ExpressionTransformer.prototype.visitReadKeyExpr = function (ast, context) {
      return new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type);
    };
    ExpressionTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {
      return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));
    };
    ExpressionTransformer.prototype.visitLiteralMapExpr = function (ast, context) {
      var _this = this;
      return new LiteralMapExpr(ast.entries.map(function (entry) {
        return [entry[0], entry[1].visitExpression(_this, context)];
      }));
    };
    ExpressionTransformer.prototype.visitAllExpressions = function (exprs, context) {
      var _this = this;
      return exprs.map(function (expr) {
        return expr.visitExpression(_this, context);
      });
    };
    ExpressionTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {
      return new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);
    };
    ExpressionTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {
      return stmt;
    };
    ExpressionTransformer.prototype.visitExpressionStmt = function (stmt, context) {
      return new ExpressionStatement(stmt.expr.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitReturnStmt = function (stmt, context) {
      return new ReturnStatement(stmt.value.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {
      return stmt;
    };
    ExpressionTransformer.prototype.visitIfStmt = function (stmt, context) {
      return new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context));
    };
    ExpressionTransformer.prototype.visitTryCatchStmt = function (stmt, context) {
      return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context));
    };
    ExpressionTransformer.prototype.visitThrowStmt = function (stmt, context) {
      return new ThrowStmt(stmt.error.visitExpression(this, context));
    };
    ExpressionTransformer.prototype.visitCommentStmt = function (stmt, context) {
      return stmt;
    };
    ExpressionTransformer.prototype.visitAllStatements = function (stmts, context) {
      var _this = this;
      return stmts.map(function (stmt) {
        return stmt.visitStatement(_this, context);
      });
    };
    return ExpressionTransformer;
  }();
  exports.ExpressionTransformer = ExpressionTransformer;
  var RecursiveExpressionVisitor = function () {
    function RecursiveExpressionVisitor() {}
    RecursiveExpressionVisitor.prototype.visitReadVarExpr = function (ast, context) {
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitWriteVarExpr = function (expr, context) {
      expr.value.visitExpression(this, context);
      return expr;
    };
    RecursiveExpressionVisitor.prototype.visitWriteKeyExpr = function (expr, context) {
      expr.receiver.visitExpression(this, context);
      expr.index.visitExpression(this, context);
      expr.value.visitExpression(this, context);
      return expr;
    };
    RecursiveExpressionVisitor.prototype.visitWritePropExpr = function (expr, context) {
      expr.receiver.visitExpression(this, context);
      expr.value.visitExpression(this, context);
      return expr;
    };
    RecursiveExpressionVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {
      ast.receiver.visitExpression(this, context);
      this.visitAllExpressions(ast.args, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {
      ast.fn.visitExpression(this, context);
      this.visitAllExpressions(ast.args, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitInstantiateExpr = function (ast, context) {
      ast.classExpr.visitExpression(this, context);
      this.visitAllExpressions(ast.args, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitLiteralExpr = function (ast, context) {
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitExternalExpr = function (ast, context) {
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitConditionalExpr = function (ast, context) {
      ast.condition.visitExpression(this, context);
      ast.trueCase.visitExpression(this, context);
      ast.falseCase.visitExpression(this, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitNotExpr = function (ast, context) {
      ast.condition.visitExpression(this, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitCastExpr = function (ast, context) {
      ast.value.visitExpression(this, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitFunctionExpr = function (ast, context) {
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {
      ast.lhs.visitExpression(this, context);
      ast.rhs.visitExpression(this, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitReadPropExpr = function (ast, context) {
      ast.receiver.visitExpression(this, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitReadKeyExpr = function (ast, context) {
      ast.receiver.visitExpression(this, context);
      ast.index.visitExpression(this, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {
      this.visitAllExpressions(ast.entries, context);
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitLiteralMapExpr = function (ast, context) {
      var _this = this;
      ast.entries.forEach(function (entry) {
        return entry[1].visitExpression(_this, context);
      });
      return ast;
    };
    RecursiveExpressionVisitor.prototype.visitAllExpressions = function (exprs, context) {
      var _this = this;
      exprs.forEach(function (expr) {
        return expr.visitExpression(_this, context);
      });
    };
    RecursiveExpressionVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {
      stmt.value.visitExpression(this, context);
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitExpressionStmt = function (stmt, context) {
      stmt.expr.visitExpression(this, context);
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitReturnStmt = function (stmt, context) {
      stmt.value.visitExpression(this, context);
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitIfStmt = function (stmt, context) {
      stmt.condition.visitExpression(this, context);
      this.visitAllStatements(stmt.trueCase, context);
      this.visitAllStatements(stmt.falseCase, context);
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitTryCatchStmt = function (stmt, context) {
      this.visitAllStatements(stmt.bodyStmts, context);
      this.visitAllStatements(stmt.catchStmts, context);
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitThrowStmt = function (stmt, context) {
      stmt.error.visitExpression(this, context);
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitCommentStmt = function (stmt, context) {
      return stmt;
    };
    RecursiveExpressionVisitor.prototype.visitAllStatements = function (stmts, context) {
      var _this = this;
      stmts.forEach(function (stmt) {
        return stmt.visitStatement(_this, context);
      });
    };
    return RecursiveExpressionVisitor;
  }();
  exports.RecursiveExpressionVisitor = RecursiveExpressionVisitor;
  function replaceVarInExpression(varName, newValue, expression) {
    var transformer = new _ReplaceVariableTransformer(varName, newValue);
    return expression.visitExpression(transformer, null);
  }
  exports.replaceVarInExpression = replaceVarInExpression;
  var _ReplaceVariableTransformer = function (_super) {
    __extends(_ReplaceVariableTransformer, _super);
    function _ReplaceVariableTransformer(_varName, _newValue) {
      _super.call(this);
      this._varName = _varName;
      this._newValue = _newValue;
    }
    _ReplaceVariableTransformer.prototype.visitReadVarExpr = function (ast, context) {
      return ast.name == this._varName ? this._newValue : ast;
    };
    return _ReplaceVariableTransformer;
  }(ExpressionTransformer);
  function findReadVarNames(stmts) {
    var finder = new _VariableFinder();
    finder.visitAllStatements(stmts, null);
    return finder.varNames;
  }
  exports.findReadVarNames = findReadVarNames;
  var _VariableFinder = function (_super) {
    __extends(_VariableFinder, _super);
    function _VariableFinder() {
      _super.apply(this, arguments);
      this.varNames = new Set();
    }
    _VariableFinder.prototype.visitReadVarExpr = function (ast, context) {
      this.varNames.add(ast.name);
      return null;
    };
    return _VariableFinder;
  }(RecursiveExpressionVisitor);
  function variable(name, type) {
    if (type === void 0) {
      type = null;
    }
    return new ReadVarExpr(name, type);
  }
  exports.variable = variable;
  function importExpr(id, typeParams) {
    if (typeParams === void 0) {
      typeParams = null;
    }
    return new ExternalExpr(id, null, typeParams);
  }
  exports.importExpr = importExpr;
  function importType(id, typeParams, typeModifiers) {
    if (typeParams === void 0) {
      typeParams = null;
    }
    if (typeModifiers === void 0) {
      typeModifiers = null;
    }
    return lang_1.isPresent(id) ? new ExternalType(id, typeParams, typeModifiers) : null;
  }
  exports.importType = importType;
  function literal(value, type) {
    if (type === void 0) {
      type = null;
    }
    return new LiteralExpr(value, type);
  }
  exports.literal = literal;
  function literalArr(values, type) {
    if (type === void 0) {
      type = null;
    }
    return new LiteralArrayExpr(values, type);
  }
  exports.literalArr = literalArr;
  function literalMap(values, type) {
    if (type === void 0) {
      type = null;
    }
    return new LiteralMapExpr(values, type);
  }
  exports.literalMap = literalMap;
  function not(expr) {
    return new NotExpr(expr);
  }
  exports.not = not;
  function fn(params, body, type) {
    if (type === void 0) {
      type = null;
    }
    return new FunctionExpr(params, body, type);
  }
  exports.fn = fn;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  function _enumExpression(classIdentifier, value) {
    if (lang_1.isBlank(value)) return o.NULL_EXPR;
    var name = lang_1.resolveEnumToken(classIdentifier.runtime, value);
    return o.importExpr(new compile_metadata_1.CompileIdentifierMetadata({
      name: classIdentifier.name + "." + name,
      moduleUrl: classIdentifier.moduleUrl,
      runtime: value
    }));
  }
  var ViewTypeEnum = function () {
    function ViewTypeEnum() {}
    ViewTypeEnum.fromValue = function (value) {
      return _enumExpression(identifiers_1.Identifiers.ViewType, value);
    };
    ViewTypeEnum.HOST = ViewTypeEnum.fromValue(core_private_1.ViewType.HOST);
    ViewTypeEnum.COMPONENT = ViewTypeEnum.fromValue(core_private_1.ViewType.COMPONENT);
    ViewTypeEnum.EMBEDDED = ViewTypeEnum.fromValue(core_private_1.ViewType.EMBEDDED);
    return ViewTypeEnum;
  }();
  exports.ViewTypeEnum = ViewTypeEnum;
  var ViewEncapsulationEnum = function () {
    function ViewEncapsulationEnum() {}
    ViewEncapsulationEnum.fromValue = function (value) {
      return _enumExpression(identifiers_1.Identifiers.ViewEncapsulation, value);
    };
    ViewEncapsulationEnum.Emulated = ViewEncapsulationEnum.fromValue(core_1.ViewEncapsulation.Emulated);
    ViewEncapsulationEnum.Native = ViewEncapsulationEnum.fromValue(core_1.ViewEncapsulation.Native);
    ViewEncapsulationEnum.None = ViewEncapsulationEnum.fromValue(core_1.ViewEncapsulation.None);
    return ViewEncapsulationEnum;
  }();
  exports.ViewEncapsulationEnum = ViewEncapsulationEnum;
  var ChangeDetectorStateEnum = function () {
    function ChangeDetectorStateEnum() {}
    ChangeDetectorStateEnum.fromValue = function (value) {
      return _enumExpression(identifiers_1.Identifiers.ChangeDetectorState, value);
    };
    ChangeDetectorStateEnum.NeverChecked = ChangeDetectorStateEnum.fromValue(core_private_1.ChangeDetectorState.NeverChecked);
    ChangeDetectorStateEnum.CheckedBefore = ChangeDetectorStateEnum.fromValue(core_private_1.ChangeDetectorState.CheckedBefore);
    ChangeDetectorStateEnum.Errored = ChangeDetectorStateEnum.fromValue(core_private_1.ChangeDetectorState.Errored);
    return ChangeDetectorStateEnum;
  }();
  exports.ChangeDetectorStateEnum = ChangeDetectorStateEnum;
  var ChangeDetectionStrategyEnum = function () {
    function ChangeDetectionStrategyEnum() {}
    ChangeDetectionStrategyEnum.fromValue = function (value) {
      return _enumExpression(identifiers_1.Identifiers.ChangeDetectionStrategy, value);
    };
    ChangeDetectionStrategyEnum.CheckOnce = ChangeDetectionStrategyEnum.fromValue(core_1.ChangeDetectionStrategy.CheckOnce);
    ChangeDetectionStrategyEnum.Checked = ChangeDetectionStrategyEnum.fromValue(core_1.ChangeDetectionStrategy.Checked);
    ChangeDetectionStrategyEnum.CheckAlways = ChangeDetectionStrategyEnum.fromValue(core_1.ChangeDetectionStrategy.CheckAlways);
    ChangeDetectionStrategyEnum.Detached = ChangeDetectionStrategyEnum.fromValue(core_1.ChangeDetectionStrategy.Detached);
    ChangeDetectionStrategyEnum.OnPush = ChangeDetectionStrategyEnum.fromValue(core_1.ChangeDetectionStrategy.OnPush);
    ChangeDetectionStrategyEnum.Default = ChangeDetectionStrategyEnum.fromValue(core_1.ChangeDetectionStrategy.Default);
    return ChangeDetectionStrategyEnum;
  }();
  exports.ChangeDetectionStrategyEnum = ChangeDetectionStrategyEnum;
  var ViewConstructorVars = function () {
    function ViewConstructorVars() {}
    ViewConstructorVars.viewUtils = o.variable('viewUtils');
    ViewConstructorVars.parentInjector = o.variable('parentInjector');
    ViewConstructorVars.declarationEl = o.variable('declarationEl');
    return ViewConstructorVars;
  }();
  exports.ViewConstructorVars = ViewConstructorVars;
  var ViewProperties = function () {
    function ViewProperties() {}
    ViewProperties.renderer = o.THIS_EXPR.prop('renderer');
    ViewProperties.projectableNodes = o.THIS_EXPR.prop('projectableNodes');
    ViewProperties.viewUtils = o.THIS_EXPR.prop('viewUtils');
    return ViewProperties;
  }();
  exports.ViewProperties = ViewProperties;
  var EventHandlerVars = function () {
    function EventHandlerVars() {}
    EventHandlerVars.event = o.variable('$event');
    return EventHandlerVars;
  }();
  exports.EventHandlerVars = EventHandlerVars;
  var InjectMethodVars = function () {
    function InjectMethodVars() {}
    InjectMethodVars.token = o.variable('token');
    InjectMethodVars.requestNodeIndex = o.variable('requestNodeIndex');
    InjectMethodVars.notFoundResult = o.variable('notFoundResult');
    return InjectMethodVars;
  }();
  exports.InjectMethodVars = InjectMethodVars;
  var DetectChangesVars = function () {
    function DetectChangesVars() {}
    DetectChangesVars.throwOnChange = o.variable("throwOnChange");
    DetectChangesVars.changes = o.variable("changes");
    DetectChangesVars.changed = o.variable("changed");
    DetectChangesVars.valUnwrapper = o.variable("valUnwrapper");
    return DetectChangesVars;
  }();
  exports.DetectChangesVars = DetectChangesVars;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/lifecycle_binder.js', ['npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var o = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/output_ast.js');
  var constants_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/constants.js');
  var STATE_IS_NEVER_CHECKED = o.THIS_EXPR.prop('cdState').identical(constants_1.ChangeDetectorStateEnum.NeverChecked);
  var NOT_THROW_ON_CHANGES = o.not(constants_1.DetectChangesVars.throwOnChange);
  function bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement) {
    var view = compileElement.view;
    var detectChangesInInputsMethod = view.detectChangesInInputsMethod;
    var lifecycleHooks = directiveAst.directive.lifecycleHooks;
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.OnChanges) !== -1 && directiveAst.inputs.length > 0) {
      detectChangesInInputsMethod.addStmt(new o.IfStmt(constants_1.DetectChangesVars.changes.notIdentical(o.NULL_EXPR), [directiveInstance.callMethod('ngOnChanges', [constants_1.DetectChangesVars.changes]).toStmt()]));
    }
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.OnInit) !== -1) {
      detectChangesInInputsMethod.addStmt(new o.IfStmt(STATE_IS_NEVER_CHECKED.and(NOT_THROW_ON_CHANGES), [directiveInstance.callMethod('ngOnInit', []).toStmt()]));
    }
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.DoCheck) !== -1) {
      detectChangesInInputsMethod.addStmt(new o.IfStmt(NOT_THROW_ON_CHANGES, [directiveInstance.callMethod('ngDoCheck', []).toStmt()]));
    }
  }
  exports.bindDirectiveDetectChangesLifecycleCallbacks = bindDirectiveDetectChangesLifecycleCallbacks;
  function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {
    var view = compileElement.view;
    var lifecycleHooks = directiveMeta.lifecycleHooks;
    var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;
    afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.AfterContentInit) !== -1) {
      afterContentLifecycleCallbacksMethod.addStmt(new o.IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));
    }
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.AfterContentChecked) !== -1) {
      afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());
    }
  }
  exports.bindDirectiveAfterContentLifecycleCallbacks = bindDirectiveAfterContentLifecycleCallbacks;
  function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {
    var view = compileElement.view;
    var lifecycleHooks = directiveMeta.lifecycleHooks;
    var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;
    afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.AfterViewInit) !== -1) {
      afterViewLifecycleCallbacksMethod.addStmt(new o.IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));
    }
    if (lifecycleHooks.indexOf(core_private_1.LifecycleHooks.AfterViewChecked) !== -1) {
      afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());
    }
  }
  exports.bindDirectiveAfterViewLifecycleCallbacks = bindDirectiveAfterViewLifecycleCallbacks;
  function bindDirectiveDestroyLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {
    var onDestroyMethod = compileElement.view.destroyMethod;
    onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);
    if (directiveMeta.lifecycleHooks.indexOf(core_private_1.LifecycleHooks.OnDestroy) !== -1) {
      onDestroyMethod.addStmt(directiveInstance.callMethod('ngOnDestroy', []).toStmt());
    }
  }
  exports.bindDirectiveDestroyLifecycleCallbacks = bindDirectiveDestroyLifecycleCallbacks;
  function bindPipeDestroyLifecycleCallbacks(pipeMeta, pipeInstance, view) {
    var onDestroyMethod = view.destroyMethod;
    if (pipeMeta.lifecycleHooks.indexOf(core_private_1.LifecycleHooks.OnDestroy) !== -1) {
      onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());
    }
  }
  exports.bindPipeDestroyLifecycleCallbacks = bindPipeDestroyLifecycleCallbacks;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_binder.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/property_binder.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/event_binder.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/lifecycle_binder.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var template_ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js');
  var property_binder_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/property_binder.js');
  var event_binder_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/event_binder.js');
  var lifecycle_binder_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/lifecycle_binder.js');
  function bindView(view, parsedTemplate) {
    var visitor = new ViewBinderVisitor(view);
    template_ast_1.templateVisitAll(visitor, parsedTemplate);
    view.pipes.forEach(function (pipe) {
      lifecycle_binder_1.bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view);
    });
  }
  exports.bindView = bindView;
  var ViewBinderVisitor = function () {
    function ViewBinderVisitor(view) {
      this.view = view;
      this._nodeIndex = 0;
    }
    ViewBinderVisitor.prototype.visitBoundText = function (ast, parent) {
      var node = this.view.nodes[this._nodeIndex++];
      property_binder_1.bindRenderText(ast, node, this.view);
      return null;
    };
    ViewBinderVisitor.prototype.visitText = function (ast, parent) {
      this._nodeIndex++;
      return null;
    };
    ViewBinderVisitor.prototype.visitNgContent = function (ast, parent) {
      return null;
    };
    ViewBinderVisitor.prototype.visitElement = function (ast, parent) {
      var compileElement = this.view.nodes[this._nodeIndex++];
      var eventListeners = event_binder_1.collectEventListeners(ast.outputs, ast.directives, compileElement);
      property_binder_1.bindRenderInputs(ast.inputs, compileElement);
      event_binder_1.bindRenderOutputs(eventListeners);
      collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {
        var directiveInstance = compileElement.directiveInstances[index];
        property_binder_1.bindDirectiveInputs(directiveAst, directiveInstance, compileElement);
        lifecycle_binder_1.bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);
        property_binder_1.bindDirectiveHostProps(directiveAst, directiveInstance, compileElement);
        event_binder_1.bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);
      });
      template_ast_1.templateVisitAll(this, ast.children, compileElement);
      collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {
        var directiveInstance = compileElement.directiveInstances[index];
        lifecycle_binder_1.bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);
        lifecycle_binder_1.bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);
        lifecycle_binder_1.bindDirectiveDestroyLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);
      });
      return null;
    };
    ViewBinderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {
      var compileElement = this.view.nodes[this._nodeIndex++];
      var eventListeners = event_binder_1.collectEventListeners(ast.outputs, ast.directives, compileElement);
      collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {
        var directiveInstance = compileElement.directiveInstances[index];
        property_binder_1.bindDirectiveInputs(directiveAst, directiveInstance, compileElement);
        lifecycle_binder_1.bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);
        event_binder_1.bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);
        lifecycle_binder_1.bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);
        lifecycle_binder_1.bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);
        lifecycle_binder_1.bindDirectiveDestroyLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);
      });
      bindView(compileElement.embeddedView, ast.children);
      return null;
    };
    ViewBinderVisitor.prototype.visitAttr = function (ast, ctx) {
      return null;
    };
    ViewBinderVisitor.prototype.visitDirective = function (ast, ctx) {
      return null;
    };
    ViewBinderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {
      return null;
    };
    ViewBinderVisitor.prototype.visitReference = function (ast, ctx) {
      return null;
    };
    ViewBinderVisitor.prototype.visitVariable = function (ast, ctx) {
      return null;
    };
    ViewBinderVisitor.prototype.visitDirectiveProperty = function (ast, context) {
      return null;
    };
    ViewBinderVisitor.prototype.visitElementProperty = function (ast, context) {
      return null;
    };
    return ViewBinderVisitor;
  }();
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var _ASSET_SCHEME = 'asset:';
  function createUrlResolverWithoutPackagePrefix() {
    return new UrlResolver();
  }
  exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;
  function createOfflineCompileUrlResolver() {
    return new UrlResolver(_ASSET_SCHEME);
  }
  exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;
  exports.DEFAULT_PACKAGE_URL_PROVIDER = {
    provide: core_1.PACKAGE_ROOT_URL,
    useValue: "/"
  };
  var UrlResolver = function () {
    function UrlResolver(_packagePrefix) {
      if (_packagePrefix === void 0) {
        _packagePrefix = null;
      }
      this._packagePrefix = _packagePrefix;
    }
    UrlResolver.prototype.resolve = function (baseUrl, url) {
      var resolvedUrl = url;
      if (lang_1.isPresent(baseUrl) && baseUrl.length > 0) {
        resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);
      }
      var resolvedParts = _split(resolvedUrl);
      var prefix = this._packagePrefix;
      if (lang_1.isPresent(prefix) && lang_1.isPresent(resolvedParts) && resolvedParts[_ComponentIndex.Scheme] == "package") {
        var path = resolvedParts[_ComponentIndex.Path];
        if (this._packagePrefix === _ASSET_SCHEME) {
          var pathSegements = path.split(/\//);
          resolvedUrl = "asset:" + pathSegements[0] + "/lib/" + pathSegements.slice(1).join('/');
        } else {
          prefix = lang_1.StringWrapper.stripRight(prefix, '/');
          path = lang_1.StringWrapper.stripLeft(path, '/');
          return prefix + "/" + path;
        }
      }
      return resolvedUrl;
    };
    UrlResolver.decorators = [{ type: core_1.Injectable }];
    UrlResolver.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Inject,
        args: [core_1.PACKAGE_ROOT_URL]
      }]
    }];
    return UrlResolver;
  }();
  exports.UrlResolver = UrlResolver;
  function getUrlScheme(url) {
    var match = _split(url);
    return match && match[_ComponentIndex.Scheme] || "";
  }
  exports.getUrlScheme = getUrlScheme;
  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
    var out = [];
    if (lang_1.isPresent(opt_scheme)) {
      out.push(opt_scheme + ':');
    }
    if (lang_1.isPresent(opt_domain)) {
      out.push('//');
      if (lang_1.isPresent(opt_userInfo)) {
        out.push(opt_userInfo + '@');
      }
      out.push(opt_domain);
      if (lang_1.isPresent(opt_port)) {
        out.push(':' + opt_port);
      }
    }
    if (lang_1.isPresent(opt_path)) {
      out.push(opt_path);
    }
    if (lang_1.isPresent(opt_queryData)) {
      out.push('?' + opt_queryData);
    }
    if (lang_1.isPresent(opt_fragment)) {
      out.push('#' + opt_fragment);
    }
    return out.join('');
  }
  var _splitRe = lang_1.RegExpWrapper.create('^' + '(?:' + '([^:/?#.]+)' + ':)?' + '(?://' + '(?:([^/?#]*)@)?' + '([\\w\\d\\-\\u0100-\\uffff.%]*)' + '(?::([0-9]+))?' + ')?' + '([^?#]+)?' + '(?:\\?([^#]*))?' + '(?:#(.*))?' + '$');
  var _ComponentIndex;
  (function (_ComponentIndex) {
    _ComponentIndex[_ComponentIndex["Scheme"] = 1] = "Scheme";
    _ComponentIndex[_ComponentIndex["UserInfo"] = 2] = "UserInfo";
    _ComponentIndex[_ComponentIndex["Domain"] = 3] = "Domain";
    _ComponentIndex[_ComponentIndex["Port"] = 4] = "Port";
    _ComponentIndex[_ComponentIndex["Path"] = 5] = "Path";
    _ComponentIndex[_ComponentIndex["QueryData"] = 6] = "QueryData";
    _ComponentIndex[_ComponentIndex["Fragment"] = 7] = "Fragment";
  })(_ComponentIndex || (_ComponentIndex = {}));
  function _split(uri) {
    return lang_1.RegExpWrapper.firstMatch(_splitRe, uri);
  }
  function _removeDotSegments(path) {
    if (path == '/') return '/';
    var leadingSlash = path[0] == '/' ? '/' : '';
    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';
    var segments = path.split('/');
    var out = [];
    var up = 0;
    for (var pos = 0; pos < segments.length; pos++) {
      var segment = segments[pos];
      switch (segment) {
        case '':
        case '.':
          break;
        case '..':
          if (out.length > 0) {
            out.pop();
          } else {
            up++;
          }
          break;
        default:
          out.push(segment);
      }
    }
    if (leadingSlash == '') {
      while (up-- > 0) {
        out.unshift('..');
      }
      if (out.length === 0) out.push('.');
    }
    return leadingSlash + out.join('/') + trailingSlash;
  }
  function _joinAndCanonicalizePath(parts) {
    var path = parts[_ComponentIndex.Path];
    path = lang_1.isBlank(path) ? '' : _removeDotSegments(path);
    parts[_ComponentIndex.Path] = path;
    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);
  }
  function _resolveUrl(base, url) {
    var parts = _split(encodeURI(url));
    var baseParts = _split(base);
    if (lang_1.isPresent(parts[_ComponentIndex.Scheme])) {
      return _joinAndCanonicalizePath(parts);
    } else {
      parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];
    }
    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {
      if (lang_1.isBlank(parts[i])) {
        parts[i] = baseParts[i];
      }
    }
    if (parts[_ComponentIndex.Path][0] == '/') {
      return _joinAndCanonicalizePath(parts);
    }
    var path = baseParts[_ComponentIndex.Path];
    if (lang_1.isBlank(path)) path = '/';
    var index = path.lastIndexOf('/');
    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];
    parts[_ComponentIndex.Path] = path;
    return _joinAndCanonicalizePath(parts);
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/selector.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js', 'npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var selector_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/selector.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  var url_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js');
  var HOST_REG_EXP = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))$/g;
  var CompileMetadataWithIdentifier = function () {
    function CompileMetadataWithIdentifier() {}
    Object.defineProperty(CompileMetadataWithIdentifier.prototype, "identifier", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return CompileMetadataWithIdentifier;
  }();
  exports.CompileMetadataWithIdentifier = CompileMetadataWithIdentifier;
  var CompileMetadataWithType = function (_super) {
    __extends(CompileMetadataWithType, _super);
    function CompileMetadataWithType() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(CompileMetadataWithType.prototype, "type", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(CompileMetadataWithType.prototype, "identifier", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return CompileMetadataWithType;
  }(CompileMetadataWithIdentifier);
  exports.CompileMetadataWithType = CompileMetadataWithType;
  function metadataFromJson(data) {
    return _COMPILE_METADATA_FROM_JSON[data['class']](data);
  }
  exports.metadataFromJson = metadataFromJson;
  var CompileIdentifierMetadata = function () {
    function CompileIdentifierMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          runtime = _b.runtime,
          name = _b.name,
          moduleUrl = _b.moduleUrl,
          prefix = _b.prefix,
          value = _b.value;
      this.runtime = runtime;
      this.name = name;
      this.prefix = prefix;
      this.moduleUrl = moduleUrl;
      this.value = value;
    }
    CompileIdentifierMetadata.fromJson = function (data) {
      var value = lang_1.isArray(data['value']) ? _arrayFromJson(data['value'], metadataFromJson) : _objFromJson(data['value'], metadataFromJson);
      return new CompileIdentifierMetadata({
        name: data['name'],
        prefix: data['prefix'],
        moduleUrl: data['moduleUrl'],
        value: value
      });
    };
    CompileIdentifierMetadata.prototype.toJson = function () {
      var value = lang_1.isArray(this.value) ? _arrayToJson(this.value) : _objToJson(this.value);
      return {
        'class': 'Identifier',
        'name': this.name,
        'moduleUrl': this.moduleUrl,
        'prefix': this.prefix,
        'value': value
      };
    };
    Object.defineProperty(CompileIdentifierMetadata.prototype, "identifier", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    return CompileIdentifierMetadata;
  }();
  exports.CompileIdentifierMetadata = CompileIdentifierMetadata;
  var CompileDiDependencyMetadata = function () {
    function CompileDiDependencyMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          isAttribute = _b.isAttribute,
          isSelf = _b.isSelf,
          isHost = _b.isHost,
          isSkipSelf = _b.isSkipSelf,
          isOptional = _b.isOptional,
          isValue = _b.isValue,
          query = _b.query,
          viewQuery = _b.viewQuery,
          token = _b.token,
          value = _b.value;
      this.isAttribute = lang_1.normalizeBool(isAttribute);
      this.isSelf = lang_1.normalizeBool(isSelf);
      this.isHost = lang_1.normalizeBool(isHost);
      this.isSkipSelf = lang_1.normalizeBool(isSkipSelf);
      this.isOptional = lang_1.normalizeBool(isOptional);
      this.isValue = lang_1.normalizeBool(isValue);
      this.query = query;
      this.viewQuery = viewQuery;
      this.token = token;
      this.value = value;
    }
    CompileDiDependencyMetadata.fromJson = function (data) {
      return new CompileDiDependencyMetadata({
        token: _objFromJson(data['token'], CompileTokenMetadata.fromJson),
        query: _objFromJson(data['query'], CompileQueryMetadata.fromJson),
        viewQuery: _objFromJson(data['viewQuery'], CompileQueryMetadata.fromJson),
        value: data['value'],
        isAttribute: data['isAttribute'],
        isSelf: data['isSelf'],
        isHost: data['isHost'],
        isSkipSelf: data['isSkipSelf'],
        isOptional: data['isOptional'],
        isValue: data['isValue']
      });
    };
    CompileDiDependencyMetadata.prototype.toJson = function () {
      return {
        'token': _objToJson(this.token),
        'query': _objToJson(this.query),
        'viewQuery': _objToJson(this.viewQuery),
        'value': this.value,
        'isAttribute': this.isAttribute,
        'isSelf': this.isSelf,
        'isHost': this.isHost,
        'isSkipSelf': this.isSkipSelf,
        'isOptional': this.isOptional,
        'isValue': this.isValue
      };
    };
    return CompileDiDependencyMetadata;
  }();
  exports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;
  var CompileProviderMetadata = function () {
    function CompileProviderMetadata(_a) {
      var token = _a.token,
          useClass = _a.useClass,
          useValue = _a.useValue,
          useExisting = _a.useExisting,
          useFactory = _a.useFactory,
          deps = _a.deps,
          multi = _a.multi;
      this.token = token;
      this.useClass = useClass;
      this.useValue = useValue;
      this.useExisting = useExisting;
      this.useFactory = useFactory;
      this.deps = lang_1.normalizeBlank(deps);
      this.multi = lang_1.normalizeBool(multi);
    }
    CompileProviderMetadata.fromJson = function (data) {
      return new CompileProviderMetadata({
        token: _objFromJson(data['token'], CompileTokenMetadata.fromJson),
        useClass: _objFromJson(data['useClass'], CompileTypeMetadata.fromJson),
        useExisting: _objFromJson(data['useExisting'], CompileTokenMetadata.fromJson),
        useValue: _objFromJson(data['useValue'], CompileIdentifierMetadata.fromJson),
        useFactory: _objFromJson(data['useFactory'], CompileFactoryMetadata.fromJson),
        multi: data['multi'],
        deps: _arrayFromJson(data['deps'], CompileDiDependencyMetadata.fromJson)
      });
    };
    CompileProviderMetadata.prototype.toJson = function () {
      return {
        'class': 'Provider',
        'token': _objToJson(this.token),
        'useClass': _objToJson(this.useClass),
        'useExisting': _objToJson(this.useExisting),
        'useValue': _objToJson(this.useValue),
        'useFactory': _objToJson(this.useFactory),
        'multi': this.multi,
        'deps': _arrayToJson(this.deps)
      };
    };
    return CompileProviderMetadata;
  }();
  exports.CompileProviderMetadata = CompileProviderMetadata;
  var CompileFactoryMetadata = function () {
    function CompileFactoryMetadata(_a) {
      var runtime = _a.runtime,
          name = _a.name,
          moduleUrl = _a.moduleUrl,
          prefix = _a.prefix,
          diDeps = _a.diDeps,
          value = _a.value;
      this.runtime = runtime;
      this.name = name;
      this.prefix = prefix;
      this.moduleUrl = moduleUrl;
      this.diDeps = _normalizeArray(diDeps);
      this.value = value;
    }
    Object.defineProperty(CompileFactoryMetadata.prototype, "identifier", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    CompileFactoryMetadata.fromJson = function (data) {
      return new CompileFactoryMetadata({
        name: data['name'],
        prefix: data['prefix'],
        moduleUrl: data['moduleUrl'],
        value: data['value'],
        diDeps: _arrayFromJson(data['diDeps'], CompileDiDependencyMetadata.fromJson)
      });
    };
    CompileFactoryMetadata.prototype.toJson = function () {
      return {
        'class': 'Factory',
        'name': this.name,
        'prefix': this.prefix,
        'moduleUrl': this.moduleUrl,
        'value': this.value,
        'diDeps': _arrayToJson(this.diDeps)
      };
    };
    return CompileFactoryMetadata;
  }();
  exports.CompileFactoryMetadata = CompileFactoryMetadata;
  var CompileTokenMetadata = function () {
    function CompileTokenMetadata(_a) {
      var value = _a.value,
          identifier = _a.identifier,
          identifierIsInstance = _a.identifierIsInstance;
      this.value = value;
      this.identifier = identifier;
      this.identifierIsInstance = lang_1.normalizeBool(identifierIsInstance);
    }
    CompileTokenMetadata.fromJson = function (data) {
      return new CompileTokenMetadata({
        value: data['value'],
        identifier: _objFromJson(data['identifier'], CompileIdentifierMetadata.fromJson),
        identifierIsInstance: data['identifierIsInstance']
      });
    };
    CompileTokenMetadata.prototype.toJson = function () {
      return {
        'value': this.value,
        'identifier': _objToJson(this.identifier),
        'identifierIsInstance': this.identifierIsInstance
      };
    };
    Object.defineProperty(CompileTokenMetadata.prototype, "runtimeCacheKey", {
      get: function () {
        if (lang_1.isPresent(this.identifier)) {
          return this.identifier.runtime;
        } else {
          return this.value;
        }
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(CompileTokenMetadata.prototype, "assetCacheKey", {
      get: function () {
        if (lang_1.isPresent(this.identifier)) {
          return lang_1.isPresent(this.identifier.moduleUrl) && lang_1.isPresent(url_resolver_1.getUrlScheme(this.identifier.moduleUrl)) ? this.identifier.name + "|" + this.identifier.moduleUrl + "|" + this.identifierIsInstance : null;
        } else {
          return this.value;
        }
      },
      enumerable: true,
      configurable: true
    });
    CompileTokenMetadata.prototype.equalsTo = function (token2) {
      var rk = this.runtimeCacheKey;
      var ak = this.assetCacheKey;
      return lang_1.isPresent(rk) && rk == token2.runtimeCacheKey || lang_1.isPresent(ak) && ak == token2.assetCacheKey;
    };
    Object.defineProperty(CompileTokenMetadata.prototype, "name", {
      get: function () {
        return lang_1.isPresent(this.value) ? util_1.sanitizeIdentifier(this.value) : this.identifier.name;
      },
      enumerable: true,
      configurable: true
    });
    return CompileTokenMetadata;
  }();
  exports.CompileTokenMetadata = CompileTokenMetadata;
  var CompileTokenMap = function () {
    function CompileTokenMap() {
      this._valueMap = new Map();
      this._values = [];
    }
    CompileTokenMap.prototype.add = function (token, value) {
      var existing = this.get(token);
      if (lang_1.isPresent(existing)) {
        throw new exceptions_1.BaseException("Can only add to a TokenMap! Token: " + token.name);
      }
      this._values.push(value);
      var rk = token.runtimeCacheKey;
      if (lang_1.isPresent(rk)) {
        this._valueMap.set(rk, value);
      }
      var ak = token.assetCacheKey;
      if (lang_1.isPresent(ak)) {
        this._valueMap.set(ak, value);
      }
    };
    CompileTokenMap.prototype.get = function (token) {
      var rk = token.runtimeCacheKey;
      var ak = token.assetCacheKey;
      var result;
      if (lang_1.isPresent(rk)) {
        result = this._valueMap.get(rk);
      }
      if (lang_1.isBlank(result) && lang_1.isPresent(ak)) {
        result = this._valueMap.get(ak);
      }
      return result;
    };
    CompileTokenMap.prototype.values = function () {
      return this._values;
    };
    Object.defineProperty(CompileTokenMap.prototype, "size", {
      get: function () {
        return this._values.length;
      },
      enumerable: true,
      configurable: true
    });
    return CompileTokenMap;
  }();
  exports.CompileTokenMap = CompileTokenMap;
  var CompileTypeMetadata = function () {
    function CompileTypeMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          runtime = _b.runtime,
          name = _b.name,
          moduleUrl = _b.moduleUrl,
          prefix = _b.prefix,
          isHost = _b.isHost,
          value = _b.value,
          diDeps = _b.diDeps;
      this.runtime = runtime;
      this.name = name;
      this.moduleUrl = moduleUrl;
      this.prefix = prefix;
      this.isHost = lang_1.normalizeBool(isHost);
      this.value = value;
      this.diDeps = _normalizeArray(diDeps);
    }
    CompileTypeMetadata.fromJson = function (data) {
      return new CompileTypeMetadata({
        name: data['name'],
        moduleUrl: data['moduleUrl'],
        prefix: data['prefix'],
        isHost: data['isHost'],
        value: data['value'],
        diDeps: _arrayFromJson(data['diDeps'], CompileDiDependencyMetadata.fromJson)
      });
    };
    Object.defineProperty(CompileTypeMetadata.prototype, "identifier", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(CompileTypeMetadata.prototype, "type", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    CompileTypeMetadata.prototype.toJson = function () {
      return {
        'class': 'Type',
        'name': this.name,
        'moduleUrl': this.moduleUrl,
        'prefix': this.prefix,
        'isHost': this.isHost,
        'value': this.value,
        'diDeps': _arrayToJson(this.diDeps)
      };
    };
    return CompileTypeMetadata;
  }();
  exports.CompileTypeMetadata = CompileTypeMetadata;
  var CompileQueryMetadata = function () {
    function CompileQueryMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          selectors = _b.selectors,
          descendants = _b.descendants,
          first = _b.first,
          propertyName = _b.propertyName,
          read = _b.read;
      this.selectors = selectors;
      this.descendants = lang_1.normalizeBool(descendants);
      this.first = lang_1.normalizeBool(first);
      this.propertyName = propertyName;
      this.read = read;
    }
    CompileQueryMetadata.fromJson = function (data) {
      return new CompileQueryMetadata({
        selectors: _arrayFromJson(data['selectors'], CompileTokenMetadata.fromJson),
        descendants: data['descendants'],
        first: data['first'],
        propertyName: data['propertyName'],
        read: _objFromJson(data['read'], CompileTokenMetadata.fromJson)
      });
    };
    CompileQueryMetadata.prototype.toJson = function () {
      return {
        'selectors': _arrayToJson(this.selectors),
        'descendants': this.descendants,
        'first': this.first,
        'propertyName': this.propertyName,
        'read': _objToJson(this.read)
      };
    };
    return CompileQueryMetadata;
  }();
  exports.CompileQueryMetadata = CompileQueryMetadata;
  var CompileTemplateMetadata = function () {
    function CompileTemplateMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          encapsulation = _b.encapsulation,
          template = _b.template,
          templateUrl = _b.templateUrl,
          styles = _b.styles,
          styleUrls = _b.styleUrls,
          ngContentSelectors = _b.ngContentSelectors;
      this.encapsulation = lang_1.isPresent(encapsulation) ? encapsulation : core_1.ViewEncapsulation.Emulated;
      this.template = template;
      this.templateUrl = templateUrl;
      this.styles = lang_1.isPresent(styles) ? styles : [];
      this.styleUrls = lang_1.isPresent(styleUrls) ? styleUrls : [];
      this.ngContentSelectors = lang_1.isPresent(ngContentSelectors) ? ngContentSelectors : [];
    }
    CompileTemplateMetadata.fromJson = function (data) {
      return new CompileTemplateMetadata({
        encapsulation: lang_1.isPresent(data['encapsulation']) ? core_private_1.VIEW_ENCAPSULATION_VALUES[data['encapsulation']] : data['encapsulation'],
        template: data['template'],
        templateUrl: data['templateUrl'],
        styles: data['styles'],
        styleUrls: data['styleUrls'],
        ngContentSelectors: data['ngContentSelectors']
      });
    };
    CompileTemplateMetadata.prototype.toJson = function () {
      return {
        'encapsulation': lang_1.isPresent(this.encapsulation) ? lang_1.serializeEnum(this.encapsulation) : this.encapsulation,
        'template': this.template,
        'templateUrl': this.templateUrl,
        'styles': this.styles,
        'styleUrls': this.styleUrls,
        'ngContentSelectors': this.ngContentSelectors
      };
    };
    return CompileTemplateMetadata;
  }();
  exports.CompileTemplateMetadata = CompileTemplateMetadata;
  var CompileDirectiveMetadata = function () {
    function CompileDirectiveMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          type = _b.type,
          isComponent = _b.isComponent,
          selector = _b.selector,
          exportAs = _b.exportAs,
          changeDetection = _b.changeDetection,
          inputs = _b.inputs,
          outputs = _b.outputs,
          hostListeners = _b.hostListeners,
          hostProperties = _b.hostProperties,
          hostAttributes = _b.hostAttributes,
          lifecycleHooks = _b.lifecycleHooks,
          providers = _b.providers,
          viewProviders = _b.viewProviders,
          queries = _b.queries,
          viewQueries = _b.viewQueries,
          template = _b.template;
      this.type = type;
      this.isComponent = isComponent;
      this.selector = selector;
      this.exportAs = exportAs;
      this.changeDetection = changeDetection;
      this.inputs = inputs;
      this.outputs = outputs;
      this.hostListeners = hostListeners;
      this.hostProperties = hostProperties;
      this.hostAttributes = hostAttributes;
      this.lifecycleHooks = _normalizeArray(lifecycleHooks);
      this.providers = _normalizeArray(providers);
      this.viewProviders = _normalizeArray(viewProviders);
      this.queries = _normalizeArray(queries);
      this.viewQueries = _normalizeArray(viewQueries);
      this.template = template;
    }
    CompileDirectiveMetadata.create = function (_a) {
      var _b = _a === void 0 ? {} : _a,
          type = _b.type,
          isComponent = _b.isComponent,
          selector = _b.selector,
          exportAs = _b.exportAs,
          changeDetection = _b.changeDetection,
          inputs = _b.inputs,
          outputs = _b.outputs,
          host = _b.host,
          lifecycleHooks = _b.lifecycleHooks,
          providers = _b.providers,
          viewProviders = _b.viewProviders,
          queries = _b.queries,
          viewQueries = _b.viewQueries,
          template = _b.template;
      var hostListeners = {};
      var hostProperties = {};
      var hostAttributes = {};
      if (lang_1.isPresent(host)) {
        collection_1.StringMapWrapper.forEach(host, function (value, key) {
          var matches = lang_1.RegExpWrapper.firstMatch(HOST_REG_EXP, key);
          if (lang_1.isBlank(matches)) {
            hostAttributes[key] = value;
          } else if (lang_1.isPresent(matches[1])) {
            hostProperties[matches[1]] = value;
          } else if (lang_1.isPresent(matches[2])) {
            hostListeners[matches[2]] = value;
          }
        });
      }
      var inputsMap = {};
      if (lang_1.isPresent(inputs)) {
        inputs.forEach(function (bindConfig) {
          var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);
          inputsMap[parts[0]] = parts[1];
        });
      }
      var outputsMap = {};
      if (lang_1.isPresent(outputs)) {
        outputs.forEach(function (bindConfig) {
          var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);
          outputsMap[parts[0]] = parts[1];
        });
      }
      return new CompileDirectiveMetadata({
        type: type,
        isComponent: lang_1.normalizeBool(isComponent),
        selector: selector,
        exportAs: exportAs,
        changeDetection: changeDetection,
        inputs: inputsMap,
        outputs: outputsMap,
        hostListeners: hostListeners,
        hostProperties: hostProperties,
        hostAttributes: hostAttributes,
        lifecycleHooks: lang_1.isPresent(lifecycleHooks) ? lifecycleHooks : [],
        providers: providers,
        viewProviders: viewProviders,
        queries: queries,
        viewQueries: viewQueries,
        template: template
      });
    };
    Object.defineProperty(CompileDirectiveMetadata.prototype, "identifier", {
      get: function () {
        return this.type;
      },
      enumerable: true,
      configurable: true
    });
    CompileDirectiveMetadata.fromJson = function (data) {
      return new CompileDirectiveMetadata({
        isComponent: data['isComponent'],
        selector: data['selector'],
        exportAs: data['exportAs'],
        type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],
        changeDetection: lang_1.isPresent(data['changeDetection']) ? core_private_1.CHANGE_DETECTION_STRATEGY_VALUES[data['changeDetection']] : data['changeDetection'],
        inputs: data['inputs'],
        outputs: data['outputs'],
        hostListeners: data['hostListeners'],
        hostProperties: data['hostProperties'],
        hostAttributes: data['hostAttributes'],
        lifecycleHooks: data['lifecycleHooks'].map(function (hookValue) {
          return core_private_1.LIFECYCLE_HOOKS_VALUES[hookValue];
        }),
        template: lang_1.isPresent(data['template']) ? CompileTemplateMetadata.fromJson(data['template']) : data['template'],
        providers: _arrayFromJson(data['providers'], metadataFromJson),
        viewProviders: _arrayFromJson(data['viewProviders'], metadataFromJson),
        queries: _arrayFromJson(data['queries'], CompileQueryMetadata.fromJson),
        viewQueries: _arrayFromJson(data['viewQueries'], CompileQueryMetadata.fromJson)
      });
    };
    CompileDirectiveMetadata.prototype.toJson = function () {
      return {
        'class': 'Directive',
        'isComponent': this.isComponent,
        'selector': this.selector,
        'exportAs': this.exportAs,
        'type': lang_1.isPresent(this.type) ? this.type.toJson() : this.type,
        'changeDetection': lang_1.isPresent(this.changeDetection) ? lang_1.serializeEnum(this.changeDetection) : this.changeDetection,
        'inputs': this.inputs,
        'outputs': this.outputs,
        'hostListeners': this.hostListeners,
        'hostProperties': this.hostProperties,
        'hostAttributes': this.hostAttributes,
        'lifecycleHooks': this.lifecycleHooks.map(function (hook) {
          return lang_1.serializeEnum(hook);
        }),
        'template': lang_1.isPresent(this.template) ? this.template.toJson() : this.template,
        'providers': _arrayToJson(this.providers),
        'viewProviders': _arrayToJson(this.viewProviders),
        'queries': _arrayToJson(this.queries),
        'viewQueries': _arrayToJson(this.viewQueries)
      };
    };
    return CompileDirectiveMetadata;
  }();
  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;
  function createHostComponentMeta(componentType, componentSelector) {
    var template = selector_1.CssSelector.parse(componentSelector)[0].getMatchingElementTemplate();
    return CompileDirectiveMetadata.create({
      type: new CompileTypeMetadata({
        runtime: Object,
        name: componentType.name + "_Host",
        moduleUrl: componentType.moduleUrl,
        isHost: true
      }),
      template: new CompileTemplateMetadata({
        template: template,
        templateUrl: '',
        styles: [],
        styleUrls: [],
        ngContentSelectors: []
      }),
      changeDetection: core_1.ChangeDetectionStrategy.Default,
      inputs: [],
      outputs: [],
      host: {},
      lifecycleHooks: [],
      isComponent: true,
      selector: '*',
      providers: [],
      viewProviders: [],
      queries: [],
      viewQueries: []
    });
  }
  exports.createHostComponentMeta = createHostComponentMeta;
  var CompilePipeMetadata = function () {
    function CompilePipeMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          type = _b.type,
          name = _b.name,
          pure = _b.pure,
          lifecycleHooks = _b.lifecycleHooks;
      this.type = type;
      this.name = name;
      this.pure = lang_1.normalizeBool(pure);
      this.lifecycleHooks = _normalizeArray(lifecycleHooks);
    }
    Object.defineProperty(CompilePipeMetadata.prototype, "identifier", {
      get: function () {
        return this.type;
      },
      enumerable: true,
      configurable: true
    });
    CompilePipeMetadata.fromJson = function (data) {
      return new CompilePipeMetadata({
        type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],
        name: data['name'],
        pure: data['pure']
      });
    };
    CompilePipeMetadata.prototype.toJson = function () {
      return {
        'class': 'Pipe',
        'type': lang_1.isPresent(this.type) ? this.type.toJson() : null,
        'name': this.name,
        'pure': this.pure
      };
    };
    return CompilePipeMetadata;
  }();
  exports.CompilePipeMetadata = CompilePipeMetadata;
  var _COMPILE_METADATA_FROM_JSON = {
    'Directive': CompileDirectiveMetadata.fromJson,
    'Pipe': CompilePipeMetadata.fromJson,
    'Type': CompileTypeMetadata.fromJson,
    'Provider': CompileProviderMetadata.fromJson,
    'Identifier': CompileIdentifierMetadata.fromJson,
    'Factory': CompileFactoryMetadata.fromJson
  };
  function _arrayFromJson(obj, fn) {
    return lang_1.isBlank(obj) ? null : obj.map(function (o) {
      return _objFromJson(o, fn);
    });
  }
  function _arrayToJson(obj) {
    return lang_1.isBlank(obj) ? null : obj.map(_objToJson);
  }
  function _objFromJson(obj, fn) {
    if (lang_1.isArray(obj)) return _arrayFromJson(obj, fn);
    if (lang_1.isString(obj) || lang_1.isBlank(obj) || lang_1.isBoolean(obj) || lang_1.isNumber(obj)) return obj;
    return fn(obj);
  }
  function _objToJson(obj) {
    if (lang_1.isArray(obj)) return _arrayToJson(obj);
    if (lang_1.isString(obj) || lang_1.isBlank(obj) || lang_1.isBoolean(obj) || lang_1.isNumber(obj)) return obj;
    return obj.toJson();
  }
  function _normalizeArray(obj) {
    return lang_1.isPresent(obj) ? obj : [];
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/util.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  exports.MODULE_SUFFIX = lang_1.IS_DART ? '.dart' : '';
  var CAMEL_CASE_REGEXP = /([A-Z])/g;
  var DASH_CASE_REGEXP = /-([a-z])/g;
  function camelCaseToDashCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function (m) {
      return '-' + m[1].toLowerCase();
    });
  }
  exports.camelCaseToDashCase = camelCaseToDashCase;
  function dashCaseToCamelCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function (m) {
      return m[1].toUpperCase();
    });
  }
  exports.dashCaseToCamelCase = dashCaseToCamelCase;
  function splitAtColon(input, defaultValues) {
    var parts = lang_1.StringWrapper.split(input.trim(), /\s*:\s*/g);
    if (parts.length > 1) {
      return parts;
    } else {
      return defaultValues;
    }
  }
  exports.splitAtColon = splitAtColon;
  function sanitizeIdentifier(name) {
    return lang_1.StringWrapper.replaceAll(name, /\W/g, '_');
  }
  exports.sanitizeIdentifier = sanitizeIdentifier;
  function visitValue(value, visitor, context) {
    if (lang_1.isArray(value)) {
      return visitor.visitArray(value, context);
    } else if (lang_1.isStrictStringMap(value)) {
      return visitor.visitStringMap(value, context);
    } else if (lang_1.isBlank(value) || lang_1.isPrimitive(value)) {
      return visitor.visitPrimitive(value, context);
    } else {
      return visitor.visitOther(value, context);
    }
  }
  exports.visitValue = visitValue;
  var ValueTransformer = function () {
    function ValueTransformer() {}
    ValueTransformer.prototype.visitArray = function (arr, context) {
      var _this = this;
      return arr.map(function (value) {
        return visitValue(value, _this, context);
      });
    };
    ValueTransformer.prototype.visitStringMap = function (map, context) {
      var _this = this;
      var result = {};
      collection_1.StringMapWrapper.forEach(map, function (value, key) {
        result[key] = visitValue(value, _this, context);
      });
      return result;
    };
    ValueTransformer.prototype.visitPrimitive = function (value, context) {
      return value;
    };
    ValueTransformer.prototype.visitOther = function (value, context) {
      return value;
    };
    return ValueTransformer;
  }();
  exports.ValueTransformer = ValueTransformer;
  function assetUrl(pkg, path, type) {
    if (path === void 0) {
      path = null;
    }
    if (type === void 0) {
      type = 'src';
    }
    if (lang_1.IS_DART) {
      if (path == null) {
        return "asset:angular2/" + pkg + "/" + pkg + ".dart";
      } else {
        return "asset:angular2/lib/" + pkg + "/src/" + path + ".dart";
      }
    } else {
      if (path == null) {
        return "asset:@angular/lib/" + pkg + "/index";
      } else {
        return "asset:@angular/lib/" + pkg + "/src/" + path;
      }
    }
  }
  exports.assetUrl = assetUrl;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var core_private_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var compile_metadata_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js');
  var util_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/util.js');
  var APP_VIEW_MODULE_URL = util_1.assetUrl('core', 'linker/view');
  var VIEW_UTILS_MODULE_URL = util_1.assetUrl('core', 'linker/view_utils');
  var CD_MODULE_URL = util_1.assetUrl('core', 'change_detection/change_detection');
  var impViewUtils = core_private_2.ViewUtils;
  var impAppView = core_private_2.AppView;
  var impDebugAppView = core_private_2.DebugAppView;
  var impDebugContext = core_private_2.DebugContext;
  var impAppElement = core_private_2.AppElement;
  var impElementRef = core_1.ElementRef;
  var impViewContainerRef = core_1.ViewContainerRef;
  var impChangeDetectorRef = core_1.ChangeDetectorRef;
  var impRenderComponentType = core_1.RenderComponentType;
  var impQueryList = core_1.QueryList;
  var impTemplateRef = core_1.TemplateRef;
  var impTemplateRef_ = core_private_2.TemplateRef_;
  var impValueUnwrapper = core_private_2.ValueUnwrapper;
  var impInjector = core_1.Injector;
  var impViewEncapsulation = core_1.ViewEncapsulation;
  var impViewType = core_private_2.ViewType;
  var impChangeDetectionStrategy = core_1.ChangeDetectionStrategy;
  var impStaticNodeDebugInfo = core_private_2.StaticNodeDebugInfo;
  var impRenderer = core_1.Renderer;
  var impSimpleChange = core_1.SimpleChange;
  var impUninitialized = core_private_2.uninitialized;
  var impChangeDetectorState = core_private_2.ChangeDetectorState;
  var impFlattenNestedViewRenderNodes = core_private_2.flattenNestedViewRenderNodes;
  var impDevModeEqual = core_private_2.devModeEqual;
  var impInterpolate = core_private_2.interpolate;
  var impCheckBinding = core_private_2.checkBinding;
  var impCastByValue = core_private_2.castByValue;
  var impEMPTY_ARRAY = core_private_2.EMPTY_ARRAY;
  var impEMPTY_MAP = core_private_2.EMPTY_MAP;
  var Identifiers = function () {
    function Identifiers() {}
    Identifiers.ViewUtils = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ViewUtils',
      moduleUrl: util_1.assetUrl('core', 'linker/view_utils'),
      runtime: impViewUtils
    });
    Identifiers.AppView = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'AppView',
      moduleUrl: APP_VIEW_MODULE_URL,
      runtime: impAppView
    });
    Identifiers.DebugAppView = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'DebugAppView',
      moduleUrl: APP_VIEW_MODULE_URL,
      runtime: impDebugAppView
    });
    Identifiers.AppElement = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'AppElement',
      moduleUrl: util_1.assetUrl('core', 'linker/element'),
      runtime: impAppElement
    });
    Identifiers.ElementRef = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ElementRef',
      moduleUrl: util_1.assetUrl('core', 'linker/element_ref'),
      runtime: impElementRef
    });
    Identifiers.ViewContainerRef = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ViewContainerRef',
      moduleUrl: util_1.assetUrl('core', 'linker/view_container_ref'),
      runtime: impViewContainerRef
    });
    Identifiers.ChangeDetectorRef = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ChangeDetectorRef',
      moduleUrl: util_1.assetUrl('core', 'change_detection/change_detector_ref'),
      runtime: impChangeDetectorRef
    });
    Identifiers.RenderComponentType = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'RenderComponentType',
      moduleUrl: util_1.assetUrl('core', 'render/api'),
      runtime: impRenderComponentType
    });
    Identifiers.QueryList = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'QueryList',
      moduleUrl: util_1.assetUrl('core', 'linker/query_list'),
      runtime: impQueryList
    });
    Identifiers.TemplateRef = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'TemplateRef',
      moduleUrl: util_1.assetUrl('core', 'linker/template_ref'),
      runtime: impTemplateRef
    });
    Identifiers.TemplateRef_ = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'TemplateRef_',
      moduleUrl: util_1.assetUrl('core', 'linker/template_ref'),
      runtime: impTemplateRef_
    });
    Identifiers.ValueUnwrapper = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ValueUnwrapper',
      moduleUrl: CD_MODULE_URL,
      runtime: impValueUnwrapper
    });
    Identifiers.Injector = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'Injector',
      moduleUrl: util_1.assetUrl('core', 'di/injector'),
      runtime: impInjector
    });
    Identifiers.ViewEncapsulation = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ViewEncapsulation',
      moduleUrl: util_1.assetUrl('core', 'metadata/view'),
      runtime: impViewEncapsulation
    });
    Identifiers.ViewType = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ViewType',
      moduleUrl: util_1.assetUrl('core', 'linker/view_type'),
      runtime: impViewType
    });
    Identifiers.ChangeDetectionStrategy = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ChangeDetectionStrategy',
      moduleUrl: CD_MODULE_URL,
      runtime: impChangeDetectionStrategy
    });
    Identifiers.StaticNodeDebugInfo = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'StaticNodeDebugInfo',
      moduleUrl: util_1.assetUrl('core', 'linker/debug_context'),
      runtime: impStaticNodeDebugInfo
    });
    Identifiers.DebugContext = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'DebugContext',
      moduleUrl: util_1.assetUrl('core', 'linker/debug_context'),
      runtime: impDebugContext
    });
    Identifiers.Renderer = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'Renderer',
      moduleUrl: util_1.assetUrl('core', 'render/api'),
      runtime: impRenderer
    });
    Identifiers.SimpleChange = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'SimpleChange',
      moduleUrl: CD_MODULE_URL,
      runtime: impSimpleChange
    });
    Identifiers.uninitialized = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'uninitialized',
      moduleUrl: CD_MODULE_URL,
      runtime: impUninitialized
    });
    Identifiers.ChangeDetectorState = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'ChangeDetectorState',
      moduleUrl: CD_MODULE_URL,
      runtime: impChangeDetectorState
    });
    Identifiers.checkBinding = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'checkBinding',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: impCheckBinding
    });
    Identifiers.flattenNestedViewRenderNodes = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'flattenNestedViewRenderNodes',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: impFlattenNestedViewRenderNodes
    });
    Identifiers.devModeEqual = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'devModeEqual',
      moduleUrl: CD_MODULE_URL,
      runtime: impDevModeEqual
    });
    Identifiers.interpolate = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'interpolate',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: impInterpolate
    });
    Identifiers.castByValue = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'castByValue',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: impCastByValue
    });
    Identifiers.EMPTY_ARRAY = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'EMPTY_ARRAY',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: impEMPTY_ARRAY
    });
    Identifiers.EMPTY_MAP = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'EMPTY_MAP',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: impEMPTY_MAP
    });
    Identifiers.pureProxies = [null, new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy1',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy1
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy2',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy2
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy3',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy3
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy4',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy4
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy5',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy5
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy6',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy6
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy7',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy7
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy8',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy8
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy9',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy9
    }), new compile_metadata_1.CompileIdentifierMetadata({
      name: 'pureProxy10',
      moduleUrl: VIEW_UTILS_MODULE_URL,
      runtime: core_private_2.pureProxy10
    })];
    Identifiers.SecurityContext = new compile_metadata_1.CompileIdentifierMetadata({
      name: 'SecurityContext',
      moduleUrl: util_1.assetUrl('core', 'security'),
      runtime: core_private_1.SecurityContext
    });
    return Identifiers;
  }();
  exports.Identifiers = Identifiers;
  function identifierToken(identifier) {
    return new compile_metadata_1.CompileTokenMetadata({ identifier: identifier });
  }
  exports.identifierToken = identifierToken;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/config.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var identifiers_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/identifiers.js');
  var CompilerConfig = function () {
    function CompilerConfig(genDebugInfo, logBindingUpdate, useJit, renderTypes) {
      if (renderTypes === void 0) {
        renderTypes = null;
      }
      this.genDebugInfo = genDebugInfo;
      this.logBindingUpdate = logBindingUpdate;
      this.useJit = useJit;
      if (lang_1.isBlank(renderTypes)) {
        renderTypes = new DefaultRenderTypes();
      }
      this.renderTypes = renderTypes;
    }
    return CompilerConfig;
  }();
  exports.CompilerConfig = CompilerConfig;
  var RenderTypes = function () {
    function RenderTypes() {}
    Object.defineProperty(RenderTypes.prototype, "renderer", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderTypes.prototype, "renderText", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderTypes.prototype, "renderElement", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderTypes.prototype, "renderComment", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderTypes.prototype, "renderNode", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderTypes.prototype, "renderEvent", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return RenderTypes;
  }();
  exports.RenderTypes = RenderTypes;
  var DefaultRenderTypes = function () {
    function DefaultRenderTypes() {
      this.renderer = identifiers_1.Identifiers.Renderer;
      this.renderText = null;
      this.renderElement = null;
      this.renderComment = null;
      this.renderNode = null;
      this.renderEvent = null;
    }
    return DefaultRenderTypes;
  }();
  exports.DefaultRenderTypes = DefaultRenderTypes;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_compiler.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_element.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_view.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_builder.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_binder.js', 'npm:@angular/compiler@2.0.0-rc.1/src/config.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var compile_element_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_element.js');
  var compile_view_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/compile_view.js');
  var view_builder_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_builder.js');
  var view_binder_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_binder.js');
  var config_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/config.js');
  var ViewCompileResult = function () {
    function ViewCompileResult(statements, viewFactoryVar, dependencies) {
      this.statements = statements;
      this.viewFactoryVar = viewFactoryVar;
      this.dependencies = dependencies;
    }
    return ViewCompileResult;
  }();
  exports.ViewCompileResult = ViewCompileResult;
  var ViewCompiler = function () {
    function ViewCompiler(_genConfig) {
      this._genConfig = _genConfig;
    }
    ViewCompiler.prototype.compileComponent = function (component, template, styles, pipes) {
      var statements = [];
      var dependencies = [];
      var view = new compile_view_1.CompileView(component, this._genConfig, pipes, styles, 0, compile_element_1.CompileElement.createNull(), []);
      view_builder_1.buildView(view, template, dependencies);
      view_binder_1.bindView(view, template);
      view_builder_1.finishView(view, statements);
      return new ViewCompileResult(statements, view.viewFactory.name, dependencies);
    };
    ViewCompiler.decorators = [{ type: core_1.Injectable }];
    ViewCompiler.ctorParameters = [{ type: config_1.CompilerConfig }];
    return ViewCompiler;
  }();
  exports.ViewCompiler = ViewCompiler;
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/core_private.js", ["npm:@angular/core@2.0.0-rc.1.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  exports.isDefaultChangeDetectionStrategy = core_1.__core_private__.isDefaultChangeDetectionStrategy;
  exports.ChangeDetectorState = core_1.__core_private__.ChangeDetectorState;
  exports.CHANGE_DETECTION_STRATEGY_VALUES = core_1.__core_private__.CHANGE_DETECTION_STRATEGY_VALUES;
  exports.constructDependencies = core_1.__core_private__.constructDependencies;
  exports.LifecycleHooks = core_1.__core_private__.LifecycleHooks;
  exports.LIFECYCLE_HOOKS_VALUES = core_1.__core_private__.LIFECYCLE_HOOKS_VALUES;
  exports.ReflectorReader = core_1.__core_private__.ReflectorReader;
  exports.ReflectorComponentResolver = core_1.__core_private__.ReflectorComponentResolver;
  exports.AppElement = core_1.__core_private__.AppElement;
  exports.AppView = core_1.__core_private__.AppView;
  exports.DebugAppView = core_1.__core_private__.DebugAppView;
  exports.ViewType = core_1.__core_private__.ViewType;
  exports.MAX_INTERPOLATION_VALUES = core_1.__core_private__.MAX_INTERPOLATION_VALUES;
  exports.checkBinding = core_1.__core_private__.checkBinding;
  exports.flattenNestedViewRenderNodes = core_1.__core_private__.flattenNestedViewRenderNodes;
  exports.interpolate = core_1.__core_private__.interpolate;
  exports.ViewUtils = core_1.__core_private__.ViewUtils;
  exports.VIEW_ENCAPSULATION_VALUES = core_1.__core_private__.VIEW_ENCAPSULATION_VALUES;
  exports.DebugContext = core_1.__core_private__.DebugContext;
  exports.StaticNodeDebugInfo = core_1.__core_private__.StaticNodeDebugInfo;
  exports.devModeEqual = core_1.__core_private__.devModeEqual;
  exports.uninitialized = core_1.__core_private__.uninitialized;
  exports.ValueUnwrapper = core_1.__core_private__.ValueUnwrapper;
  exports.TemplateRef_ = core_1.__core_private__.TemplateRef_;
  exports.RenderDebugInfo = core_1.__core_private__.RenderDebugInfo;
  exports.SecurityContext = core_1.__core_private__.SecurityContext;
  exports.SanitizationService = core_1.__core_private__.SanitizationService;
  exports.createProvider = core_1.__core_private__.createProvider;
  exports.isProviderLiteral = core_1.__core_private__.isProviderLiteral;
  exports.EMPTY_ARRAY = core_1.__core_private__.EMPTY_ARRAY;
  exports.EMPTY_MAP = core_1.__core_private__.EMPTY_MAP;
  exports.pureProxy1 = core_1.__core_private__.pureProxy1;
  exports.pureProxy2 = core_1.__core_private__.pureProxy2;
  exports.pureProxy3 = core_1.__core_private__.pureProxy3;
  exports.pureProxy4 = core_1.__core_private__.pureProxy4;
  exports.pureProxy5 = core_1.__core_private__.pureProxy5;
  exports.pureProxy6 = core_1.__core_private__.pureProxy6;
  exports.pureProxy7 = core_1.__core_private__.pureProxy7;
  exports.pureProxy8 = core_1.__core_private__.pureProxy8;
  exports.pureProxy9 = core_1.__core_private__.pureProxy9;
  exports.pureProxy10 = core_1.__core_private__.pureProxy10;
  exports.castByValue = core_1.__core_private__.castByValue;
  exports.Console = core_1.__core_private__.Console;
  

  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var ElementSchemaRegistry = function () {
        function ElementSchemaRegistry() {}
        return ElementSchemaRegistry;
    }();
    exports.ElementSchemaRegistry = ElementSchemaRegistry;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/schema/dom_element_schema_registry.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/core_private.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var core_private_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/core_private.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var element_schema_registry_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js');
  var EVENT = 'event';
  var BOOLEAN = 'boolean';
  var NUMBER = 'number';
  var STRING = 'string';
  var OBJECT = 'object';
  var SCHEMA = ['*|%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop', '^*|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*autocomplete,*autocompleteerror,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate', 'media|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,#volume', '@svg:^*|*abort,*autocomplete,*autocompleteerror,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex', '@svg:graphics^@svg:|', '@svg:animation^@svg:|*begin,*end,*repeat', '@svg:geometry^@svg:|', '@svg:componentTransferFunction^@svg:|', '@svg:gradient^@svg:|', '@svg:textContent^@svg:graphics|', '@svg:textPositioning^@svg:textContent|', 'a|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,rel,rev,search,shape,target,text,type,username', 'area|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,search,shape,target,username', 'audio^media|', 'br|clear', 'base|href,target', 'body|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink', 'button|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value', 'canvas|#height,#width', 'content|select', 'dl|!compact', 'datalist|', 'details|!open', 'dialog|!open,returnValue', 'dir|!compact', 'div|align', 'embed|align,height,name,src,type,width', 'fieldset|!disabled,name', 'font|color,face,size', 'form|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target', 'frame|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src', 'frameset|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows', 'hr|align,color,!noShade,size,width', 'head|', 'h1,h2,h3,h4,h5,h6|align', 'html|version', 'iframe|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,%sandbox,scrolling,src,srcdoc,width', 'img|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,sizes,src,srcset,useMap,#vspace,#width', 'input|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width', 'keygen|!autofocus,challenge,!disabled,keytype,name', 'li|type,#value', 'label|htmlFor', 'legend|align', 'link|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type', 'map|name', 'marquee|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width', 'menu|!compact', 'meta|content,httpEquiv,name,scheme', 'meter|#high,#low,#max,#min,#optimum,#value', 'ins,del|cite,dateTime', 'ol|!compact,!reversed,#start,type', 'object|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width', 'optgroup|!disabled,label', 'option|!defaultSelected,!disabled,label,!selected,text,value', 'output|defaultValue,%htmlFor,name,value', 'p|align', 'param|name,type,value,valueType', 'picture|', 'pre|#width', 'progress|#max,#value', 'q,blockquote,cite|', 'script|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type', 'select|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value', 'shadow|', 'source|media,sizes,src,srcset,type', 'span|', 'style|!disabled,media,type', 'caption|align', 'th,td|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width', 'col,colgroup|align,ch,chOff,#span,vAlign,width', 'table|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width', 'tr|align,bgColor,ch,chOff,vAlign', 'tfoot,thead,tbody|align,ch,chOff,vAlign', 'template|', 'textarea|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap', 'title|text', 'track|!default,kind,label,src,srclang', 'ul|!compact,type', 'unknown|', 'video^media|#height,poster,#width', '@svg:a^@svg:graphics|', '@svg:animate^@svg:animation|', '@svg:animateMotion^@svg:animation|', '@svg:animateTransform^@svg:animation|', '@svg:circle^@svg:geometry|', '@svg:clipPath^@svg:graphics|', '@svg:cursor^@svg:|', '@svg:defs^@svg:graphics|', '@svg:desc^@svg:|', '@svg:discard^@svg:|', '@svg:ellipse^@svg:geometry|', '@svg:feBlend^@svg:|', '@svg:feColorMatrix^@svg:|', '@svg:feComponentTransfer^@svg:|', '@svg:feComposite^@svg:|', '@svg:feConvolveMatrix^@svg:|', '@svg:feDiffuseLighting^@svg:|', '@svg:feDisplacementMap^@svg:|', '@svg:feDistantLight^@svg:|', '@svg:feDropShadow^@svg:|', '@svg:feFlood^@svg:|', '@svg:feFuncA^@svg:componentTransferFunction|', '@svg:feFuncB^@svg:componentTransferFunction|', '@svg:feFuncG^@svg:componentTransferFunction|', '@svg:feFuncR^@svg:componentTransferFunction|', '@svg:feGaussianBlur^@svg:|', '@svg:feImage^@svg:|', '@svg:feMerge^@svg:|', '@svg:feMergeNode^@svg:|', '@svg:feMorphology^@svg:|', '@svg:feOffset^@svg:|', '@svg:fePointLight^@svg:|', '@svg:feSpecularLighting^@svg:|', '@svg:feSpotLight^@svg:|', '@svg:feTile^@svg:|', '@svg:feTurbulence^@svg:|', '@svg:filter^@svg:|', '@svg:foreignObject^@svg:graphics|', '@svg:g^@svg:graphics|', '@svg:image^@svg:graphics|', '@svg:line^@svg:geometry|', '@svg:linearGradient^@svg:gradient|', '@svg:mpath^@svg:|', '@svg:marker^@svg:|', '@svg:mask^@svg:|', '@svg:metadata^@svg:|', '@svg:path^@svg:geometry|', '@svg:pattern^@svg:|', '@svg:polygon^@svg:geometry|', '@svg:polyline^@svg:geometry|', '@svg:radialGradient^@svg:gradient|', '@svg:rect^@svg:geometry|', '@svg:svg^@svg:graphics|#currentScale,#zoomAndPan', '@svg:script^@svg:|type', '@svg:set^@svg:animation|', '@svg:stop^@svg:|', '@svg:style^@svg:|!disabled,media,title,type', '@svg:switch^@svg:graphics|', '@svg:symbol^@svg:|', '@svg:tspan^@svg:textPositioning|', '@svg:text^@svg:textPositioning|', '@svg:textPath^@svg:textContent|', '@svg:title^@svg:|', '@svg:use^@svg:graphics|', '@svg:view^@svg:|#zoomAndPan'];
  var attrToPropMap = {
    'class': 'className',
    'innerHtml': 'innerHTML',
    'readonly': 'readOnly',
    'tabindex': 'tabIndex'
  };
  var DomElementSchemaRegistry = function (_super) {
    __extends(DomElementSchemaRegistry, _super);
    function DomElementSchemaRegistry() {
      var _this = this;
      _super.call(this);
      this.schema = {};
      SCHEMA.forEach(function (encodedType) {
        var parts = encodedType.split('|');
        var properties = parts[1].split(',');
        var typeParts = (parts[0] + '^').split('^');
        var typeName = typeParts[0];
        var type = {};
        typeName.split(',').forEach(function (tag) {
          return _this.schema[tag] = type;
        });
        var superType = _this.schema[typeParts[1]];
        if (lang_1.isPresent(superType)) {
          collection_1.StringMapWrapper.forEach(superType, function (v, k) {
            return type[k] = v;
          });
        }
        properties.forEach(function (property) {
          if (property == '') {} else if (property.startsWith('*')) {} else if (property.startsWith('!')) {
            type[property.substring(1)] = BOOLEAN;
          } else if (property.startsWith('#')) {
            type[property.substring(1)] = NUMBER;
          } else if (property.startsWith('%')) {
            type[property.substring(1)] = OBJECT;
          } else {
            type[property] = STRING;
          }
        });
      });
    }
    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName) {
      if (tagName.indexOf('-') !== -1) {
        return true;
      } else {
        var elementProperties = this.schema[tagName.toLowerCase()];
        if (!lang_1.isPresent(elementProperties)) {
          elementProperties = this.schema['unknown'];
        }
        return lang_1.isPresent(elementProperties[propName]);
      }
    };
    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName) {
      if (propName === 'style') return core_private_1.SecurityContext.STYLE;
      if (tagName === 'a' && propName === 'href') return core_private_1.SecurityContext.URL;
      if (propName === 'innerHTML') return core_private_1.SecurityContext.HTML;
      return core_private_1.SecurityContext.NONE;
    };
    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) {
      var mappedPropName = collection_1.StringMapWrapper.get(attrToPropMap, propName);
      return lang_1.isPresent(mappedPropName) ? mappedPropName : propName;
    };
    DomElementSchemaRegistry.decorators = [{ type: core_1.Injectable }];
    DomElementSchemaRegistry.ctorParameters = [];
    return DomElementSchemaRegistry;
  }(element_schema_registry_1.ElementSchemaRegistry);
  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/ast.js", ["npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var collection_1 = $__require("npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js");
    var AST = function () {
      function AST() {}
      AST.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return null;
      };
      AST.prototype.toString = function () {
        return "AST";
      };
      return AST;
    }();
    exports.AST = AST;
    var Quote = function (_super) {
      __extends(Quote, _super);
      function Quote(prefix, uninterpretedExpression, location) {
        _super.call(this);
        this.prefix = prefix;
        this.uninterpretedExpression = uninterpretedExpression;
        this.location = location;
      }
      Quote.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitQuote(this, context);
      };
      Quote.prototype.toString = function () {
        return "Quote";
      };
      return Quote;
    }(AST);
    exports.Quote = Quote;
    var EmptyExpr = function (_super) {
      __extends(EmptyExpr, _super);
      function EmptyExpr() {
        _super.apply(this, arguments);
      }
      EmptyExpr.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
      };
      return EmptyExpr;
    }(AST);
    exports.EmptyExpr = EmptyExpr;
    var ImplicitReceiver = function (_super) {
      __extends(ImplicitReceiver, _super);
      function ImplicitReceiver() {
        _super.apply(this, arguments);
      }
      ImplicitReceiver.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitImplicitReceiver(this, context);
      };
      return ImplicitReceiver;
    }(AST);
    exports.ImplicitReceiver = ImplicitReceiver;
    var Chain = function (_super) {
      __extends(Chain, _super);
      function Chain(expressions) {
        _super.call(this);
        this.expressions = expressions;
      }
      Chain.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitChain(this, context);
      };
      return Chain;
    }(AST);
    exports.Chain = Chain;
    var Conditional = function (_super) {
      __extends(Conditional, _super);
      function Conditional(condition, trueExp, falseExp) {
        _super.call(this);
        this.condition = condition;
        this.trueExp = trueExp;
        this.falseExp = falseExp;
      }
      Conditional.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitConditional(this, context);
      };
      return Conditional;
    }(AST);
    exports.Conditional = Conditional;
    var PropertyRead = function (_super) {
      __extends(PropertyRead, _super);
      function PropertyRead(receiver, name) {
        _super.call(this);
        this.receiver = receiver;
        this.name = name;
      }
      PropertyRead.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitPropertyRead(this, context);
      };
      return PropertyRead;
    }(AST);
    exports.PropertyRead = PropertyRead;
    var PropertyWrite = function (_super) {
      __extends(PropertyWrite, _super);
      function PropertyWrite(receiver, name, value) {
        _super.call(this);
        this.receiver = receiver;
        this.name = name;
        this.value = value;
      }
      PropertyWrite.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitPropertyWrite(this, context);
      };
      return PropertyWrite;
    }(AST);
    exports.PropertyWrite = PropertyWrite;
    var SafePropertyRead = function (_super) {
      __extends(SafePropertyRead, _super);
      function SafePropertyRead(receiver, name) {
        _super.call(this);
        this.receiver = receiver;
        this.name = name;
      }
      SafePropertyRead.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitSafePropertyRead(this, context);
      };
      return SafePropertyRead;
    }(AST);
    exports.SafePropertyRead = SafePropertyRead;
    var KeyedRead = function (_super) {
      __extends(KeyedRead, _super);
      function KeyedRead(obj, key) {
        _super.call(this);
        this.obj = obj;
        this.key = key;
      }
      KeyedRead.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitKeyedRead(this, context);
      };
      return KeyedRead;
    }(AST);
    exports.KeyedRead = KeyedRead;
    var KeyedWrite = function (_super) {
      __extends(KeyedWrite, _super);
      function KeyedWrite(obj, key, value) {
        _super.call(this);
        this.obj = obj;
        this.key = key;
        this.value = value;
      }
      KeyedWrite.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitKeyedWrite(this, context);
      };
      return KeyedWrite;
    }(AST);
    exports.KeyedWrite = KeyedWrite;
    var BindingPipe = function (_super) {
      __extends(BindingPipe, _super);
      function BindingPipe(exp, name, args) {
        _super.call(this);
        this.exp = exp;
        this.name = name;
        this.args = args;
      }
      BindingPipe.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitPipe(this, context);
      };
      return BindingPipe;
    }(AST);
    exports.BindingPipe = BindingPipe;
    var LiteralPrimitive = function (_super) {
      __extends(LiteralPrimitive, _super);
      function LiteralPrimitive(value) {
        _super.call(this);
        this.value = value;
      }
      LiteralPrimitive.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitLiteralPrimitive(this, context);
      };
      return LiteralPrimitive;
    }(AST);
    exports.LiteralPrimitive = LiteralPrimitive;
    var LiteralArray = function (_super) {
      __extends(LiteralArray, _super);
      function LiteralArray(expressions) {
        _super.call(this);
        this.expressions = expressions;
      }
      LiteralArray.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitLiteralArray(this, context);
      };
      return LiteralArray;
    }(AST);
    exports.LiteralArray = LiteralArray;
    var LiteralMap = function (_super) {
      __extends(LiteralMap, _super);
      function LiteralMap(keys, values) {
        _super.call(this);
        this.keys = keys;
        this.values = values;
      }
      LiteralMap.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitLiteralMap(this, context);
      };
      return LiteralMap;
    }(AST);
    exports.LiteralMap = LiteralMap;
    var Interpolation = function (_super) {
      __extends(Interpolation, _super);
      function Interpolation(strings, expressions) {
        _super.call(this);
        this.strings = strings;
        this.expressions = expressions;
      }
      Interpolation.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitInterpolation(this, context);
      };
      return Interpolation;
    }(AST);
    exports.Interpolation = Interpolation;
    var Binary = function (_super) {
      __extends(Binary, _super);
      function Binary(operation, left, right) {
        _super.call(this);
        this.operation = operation;
        this.left = left;
        this.right = right;
      }
      Binary.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitBinary(this, context);
      };
      return Binary;
    }(AST);
    exports.Binary = Binary;
    var PrefixNot = function (_super) {
      __extends(PrefixNot, _super);
      function PrefixNot(expression) {
        _super.call(this);
        this.expression = expression;
      }
      PrefixNot.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitPrefixNot(this, context);
      };
      return PrefixNot;
    }(AST);
    exports.PrefixNot = PrefixNot;
    var MethodCall = function (_super) {
      __extends(MethodCall, _super);
      function MethodCall(receiver, name, args) {
        _super.call(this);
        this.receiver = receiver;
        this.name = name;
        this.args = args;
      }
      MethodCall.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitMethodCall(this, context);
      };
      return MethodCall;
    }(AST);
    exports.MethodCall = MethodCall;
    var SafeMethodCall = function (_super) {
      __extends(SafeMethodCall, _super);
      function SafeMethodCall(receiver, name, args) {
        _super.call(this);
        this.receiver = receiver;
        this.name = name;
        this.args = args;
      }
      SafeMethodCall.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitSafeMethodCall(this, context);
      };
      return SafeMethodCall;
    }(AST);
    exports.SafeMethodCall = SafeMethodCall;
    var FunctionCall = function (_super) {
      __extends(FunctionCall, _super);
      function FunctionCall(target, args) {
        _super.call(this);
        this.target = target;
        this.args = args;
      }
      FunctionCall.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return visitor.visitFunctionCall(this, context);
      };
      return FunctionCall;
    }(AST);
    exports.FunctionCall = FunctionCall;
    var ASTWithSource = function (_super) {
      __extends(ASTWithSource, _super);
      function ASTWithSource(ast, source, location) {
        _super.call(this);
        this.ast = ast;
        this.source = source;
        this.location = location;
      }
      ASTWithSource.prototype.visit = function (visitor, context) {
        if (context === void 0) {
          context = null;
        }
        return this.ast.visit(visitor, context);
      };
      ASTWithSource.prototype.toString = function () {
        return this.source + " in " + this.location;
      };
      return ASTWithSource;
    }(AST);
    exports.ASTWithSource = ASTWithSource;
    var TemplateBinding = function () {
      function TemplateBinding(key, keyIsVar, name, expression) {
        this.key = key;
        this.keyIsVar = keyIsVar;
        this.name = name;
        this.expression = expression;
      }
      return TemplateBinding;
    }();
    exports.TemplateBinding = TemplateBinding;
    var RecursiveAstVisitor = function () {
      function RecursiveAstVisitor() {}
      RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {
        ast.left.visit(this);
        ast.right.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitChain = function (ast, context) {
        return this.visitAll(ast.expressions, context);
      };
      RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {
        ast.condition.visit(this);
        ast.trueExp.visit(this);
        ast.falseExp.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {
        ast.exp.visit(this);
        this.visitAll(ast.args, context);
        return null;
      };
      RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {
        ast.target.visit(this);
        this.visitAll(ast.args, context);
        return null;
      };
      RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) {
        return null;
      };
      RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {
        return this.visitAll(ast.expressions, context);
      };
      RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {
        ast.obj.visit(this);
        ast.key.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {
        ast.obj.visit(this);
        ast.key.visit(this);
        ast.value.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {
        return this.visitAll(ast.expressions, context);
      };
      RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) {
        return this.visitAll(ast.values, context);
      };
      RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) {
        return null;
      };
      RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {
        ast.receiver.visit(this);
        return this.visitAll(ast.args, context);
      };
      RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {
        ast.expression.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {
        ast.receiver.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {
        ast.receiver.visit(this);
        ast.value.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {
        ast.receiver.visit(this);
        return null;
      };
      RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {
        ast.receiver.visit(this);
        return this.visitAll(ast.args, context);
      };
      RecursiveAstVisitor.prototype.visitAll = function (asts, context) {
        var _this = this;
        asts.forEach(function (ast) {
          return ast.visit(_this, context);
        });
        return null;
      };
      RecursiveAstVisitor.prototype.visitQuote = function (ast, context) {
        return null;
      };
      return RecursiveAstVisitor;
    }();
    exports.RecursiveAstVisitor = RecursiveAstVisitor;
    var AstTransformer = function () {
      function AstTransformer() {}
      AstTransformer.prototype.visitImplicitReceiver = function (ast, context) {
        return ast;
      };
      AstTransformer.prototype.visitInterpolation = function (ast, context) {
        return new Interpolation(ast.strings, this.visitAll(ast.expressions));
      };
      AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {
        return new LiteralPrimitive(ast.value);
      };
      AstTransformer.prototype.visitPropertyRead = function (ast, context) {
        return new PropertyRead(ast.receiver.visit(this), ast.name);
      };
      AstTransformer.prototype.visitPropertyWrite = function (ast, context) {
        return new PropertyWrite(ast.receiver.visit(this), ast.name, ast.value);
      };
      AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {
        return new SafePropertyRead(ast.receiver.visit(this), ast.name);
      };
      AstTransformer.prototype.visitMethodCall = function (ast, context) {
        return new MethodCall(ast.receiver.visit(this), ast.name, this.visitAll(ast.args));
      };
      AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {
        return new SafeMethodCall(ast.receiver.visit(this), ast.name, this.visitAll(ast.args));
      };
      AstTransformer.prototype.visitFunctionCall = function (ast, context) {
        return new FunctionCall(ast.target.visit(this), this.visitAll(ast.args));
      };
      AstTransformer.prototype.visitLiteralArray = function (ast, context) {
        return new LiteralArray(this.visitAll(ast.expressions));
      };
      AstTransformer.prototype.visitLiteralMap = function (ast, context) {
        return new LiteralMap(ast.keys, this.visitAll(ast.values));
      };
      AstTransformer.prototype.visitBinary = function (ast, context) {
        return new Binary(ast.operation, ast.left.visit(this), ast.right.visit(this));
      };
      AstTransformer.prototype.visitPrefixNot = function (ast, context) {
        return new PrefixNot(ast.expression.visit(this));
      };
      AstTransformer.prototype.visitConditional = function (ast, context) {
        return new Conditional(ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));
      };
      AstTransformer.prototype.visitPipe = function (ast, context) {
        return new BindingPipe(ast.exp.visit(this), ast.name, this.visitAll(ast.args));
      };
      AstTransformer.prototype.visitKeyedRead = function (ast, context) {
        return new KeyedRead(ast.obj.visit(this), ast.key.visit(this));
      };
      AstTransformer.prototype.visitKeyedWrite = function (ast, context) {
        return new KeyedWrite(ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));
      };
      AstTransformer.prototype.visitAll = function (asts) {
        var res = collection_1.ListWrapper.createFixedSize(asts.length);
        for (var i = 0; i < asts.length; ++i) {
          res[i] = asts[i].visit(this);
        }
        return res;
      };
      AstTransformer.prototype.visitChain = function (ast, context) {
        return new Chain(this.visitAll(ast.expressions));
      };
      AstTransformer.prototype.visitQuote = function (ast, context) {
        return new Quote(ast.prefix, ast.uninterpretedExpression, ast.location);
      };
      return AstTransformer;
    }();
    exports.AstTransformer = AstTransformer;
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/parser.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/lexer.js', 'npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/ast.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var lexer_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/lexer.js');
  var ast_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/ast.js');
  var _implicitReceiver = new ast_1.ImplicitReceiver();
  var INTERPOLATION_REGEXP = /\{\{([\s\S]*?)\}\}/g;
  var ParseException = function (_super) {
    __extends(ParseException, _super);
    function ParseException(message, input, errLocation, ctxLocation) {
      _super.call(this, "Parser Error: " + message + " " + errLocation + " [" + input + "] in " + ctxLocation);
    }
    return ParseException;
  }(exceptions_1.BaseException);
  var SplitInterpolation = function () {
    function SplitInterpolation(strings, expressions) {
      this.strings = strings;
      this.expressions = expressions;
    }
    return SplitInterpolation;
  }();
  exports.SplitInterpolation = SplitInterpolation;
  var TemplateBindingParseResult = function () {
    function TemplateBindingParseResult(templateBindings, warnings) {
      this.templateBindings = templateBindings;
      this.warnings = warnings;
    }
    return TemplateBindingParseResult;
  }();
  exports.TemplateBindingParseResult = TemplateBindingParseResult;
  var Parser = function () {
    function Parser(_lexer) {
      this._lexer = _lexer;
    }
    Parser.prototype.parseAction = function (input, location) {
      this._checkNoInterpolation(input, location);
      var tokens = this._lexer.tokenize(this._stripComments(input));
      var ast = new _ParseAST(input, location, tokens, true).parseChain();
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.parseBinding = function (input, location) {
      var ast = this._parseBindingAst(input, location);
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.parseSimpleBinding = function (input, location) {
      var ast = this._parseBindingAst(input, location);
      if (!SimpleExpressionChecker.check(ast)) {
        throw new ParseException('Host binding expression can only contain field access and constants', input, location);
      }
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype._parseBindingAst = function (input, location) {
      var quote = this._parseQuote(input, location);
      if (lang_1.isPresent(quote)) {
        return quote;
      }
      this._checkNoInterpolation(input, location);
      var tokens = this._lexer.tokenize(this._stripComments(input));
      return new _ParseAST(input, location, tokens, false).parseChain();
    };
    Parser.prototype._parseQuote = function (input, location) {
      if (lang_1.isBlank(input)) return null;
      var prefixSeparatorIndex = input.indexOf(':');
      if (prefixSeparatorIndex == -1) return null;
      var prefix = input.substring(0, prefixSeparatorIndex).trim();
      if (!lexer_1.isIdentifier(prefix)) return null;
      var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);
      return new ast_1.Quote(prefix, uninterpretedExpression, location);
    };
    Parser.prototype.parseTemplateBindings = function (input, location) {
      var tokens = this._lexer.tokenize(input);
      return new _ParseAST(input, location, tokens, false).parseTemplateBindings();
    };
    Parser.prototype.parseInterpolation = function (input, location) {
      var split = this.splitInterpolation(input, location);
      if (split == null) return null;
      var expressions = [];
      for (var i = 0; i < split.expressions.length; ++i) {
        var tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));
        var ast = new _ParseAST(input, location, tokens, false).parseChain();
        expressions.push(ast);
      }
      return new ast_1.ASTWithSource(new ast_1.Interpolation(split.strings, expressions), input, location);
    };
    Parser.prototype.splitInterpolation = function (input, location) {
      var parts = lang_1.StringWrapper.split(input, INTERPOLATION_REGEXP);
      if (parts.length <= 1) {
        return null;
      }
      var strings = [];
      var expressions = [];
      for (var i = 0; i < parts.length; i++) {
        var part = parts[i];
        if (i % 2 === 0) {
          strings.push(part);
        } else if (part.trim().length > 0) {
          expressions.push(part);
        } else {
          throw new ParseException('Blank expressions are not allowed in interpolated strings', input, "at column " + this._findInterpolationErrorColumn(parts, i) + " in", location);
        }
      }
      return new SplitInterpolation(strings, expressions);
    };
    Parser.prototype.wrapLiteralPrimitive = function (input, location) {
      return new ast_1.ASTWithSource(new ast_1.LiteralPrimitive(input), input, location);
    };
    Parser.prototype._stripComments = function (input) {
      var i = this._commentStart(input);
      return lang_1.isPresent(i) ? input.substring(0, i).trim() : input;
    };
    Parser.prototype._commentStart = function (input) {
      var outerQuote = null;
      for (var i = 0; i < input.length - 1; i++) {
        var char = lang_1.StringWrapper.charCodeAt(input, i);
        var nextChar = lang_1.StringWrapper.charCodeAt(input, i + 1);
        if (char === lexer_1.$SLASH && nextChar == lexer_1.$SLASH && lang_1.isBlank(outerQuote)) return i;
        if (outerQuote === char) {
          outerQuote = null;
        } else if (lang_1.isBlank(outerQuote) && lexer_1.isQuote(char)) {
          outerQuote = char;
        }
      }
      return null;
    };
    Parser.prototype._checkNoInterpolation = function (input, location) {
      var parts = lang_1.StringWrapper.split(input, INTERPOLATION_REGEXP);
      if (parts.length > 1) {
        throw new ParseException('Got interpolation ({{}}) where expression was expected', input, "at column " + this._findInterpolationErrorColumn(parts, 1) + " in", location);
      }
    };
    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx) {
      var errLocation = '';
      for (var j = 0; j < partInErrIdx; j++) {
        errLocation += j % 2 === 0 ? parts[j] : "{{" + parts[j] + "}}";
      }
      return errLocation.length;
    };
    Parser.decorators = [{ type: core_1.Injectable }];
    Parser.ctorParameters = [{ type: lexer_1.Lexer }];
    return Parser;
  }();
  exports.Parser = Parser;
  var _ParseAST = function () {
    function _ParseAST(input, location, tokens, parseAction) {
      this.input = input;
      this.location = location;
      this.tokens = tokens;
      this.parseAction = parseAction;
      this.index = 0;
    }
    _ParseAST.prototype.peek = function (offset) {
      var i = this.index + offset;
      return i < this.tokens.length ? this.tokens[i] : lexer_1.EOF;
    };
    Object.defineProperty(_ParseAST.prototype, "next", {
      get: function () {
        return this.peek(0);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(_ParseAST.prototype, "inputIndex", {
      get: function () {
        return this.index < this.tokens.length ? this.next.index : this.input.length;
      },
      enumerable: true,
      configurable: true
    });
    _ParseAST.prototype.advance = function () {
      this.index++;
    };
    _ParseAST.prototype.optionalCharacter = function (code) {
      if (this.next.isCharacter(code)) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.peekKeywordLet = function () {
      return this.next.isKeywordLet();
    };
    _ParseAST.prototype.peekDeprecatedKeywordVar = function () {
      return this.next.isKeywordDeprecatedVar();
    };
    _ParseAST.prototype.peekDeprecatedOperatorHash = function () {
      return this.next.isOperator('#');
    };
    _ParseAST.prototype.expectCharacter = function (code) {
      if (this.optionalCharacter(code)) return;
      this.error("Missing expected " + lang_1.StringWrapper.fromCharCode(code));
    };
    _ParseAST.prototype.optionalOperator = function (op) {
      if (this.next.isOperator(op)) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.expectOperator = function (operator) {
      if (this.optionalOperator(operator)) return;
      this.error("Missing expected operator " + operator);
    };
    _ParseAST.prototype.expectIdentifierOrKeyword = function () {
      var n = this.next;
      if (!n.isIdentifier() && !n.isKeyword()) {
        this.error("Unexpected token " + n + ", expected identifier or keyword");
      }
      this.advance();
      return n.toString();
    };
    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {
      var n = this.next;
      if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {
        this.error("Unexpected token " + n + ", expected identifier, keyword, or string");
      }
      this.advance();
      return n.toString();
    };
    _ParseAST.prototype.parseChain = function () {
      var exprs = [];
      while (this.index < this.tokens.length) {
        var expr = this.parsePipe();
        exprs.push(expr);
        if (this.optionalCharacter(lexer_1.$SEMICOLON)) {
          if (!this.parseAction) {
            this.error("Binding expression cannot contain chained expression");
          }
          while (this.optionalCharacter(lexer_1.$SEMICOLON)) {}
        } else if (this.index < this.tokens.length) {
          this.error("Unexpected token '" + this.next + "'");
        }
      }
      if (exprs.length == 0) return new ast_1.EmptyExpr();
      if (exprs.length == 1) return exprs[0];
      return new ast_1.Chain(exprs);
    };
    _ParseAST.prototype.parsePipe = function () {
      var result = this.parseExpression();
      if (this.optionalOperator("|")) {
        if (this.parseAction) {
          this.error("Cannot have a pipe in an action expression");
        }
        do {
          var name = this.expectIdentifierOrKeyword();
          var args = [];
          while (this.optionalCharacter(lexer_1.$COLON)) {
            args.push(this.parseExpression());
          }
          result = new ast_1.BindingPipe(result, name, args);
        } while (this.optionalOperator("|"));
      }
      return result;
    };
    _ParseAST.prototype.parseExpression = function () {
      return this.parseConditional();
    };
    _ParseAST.prototype.parseConditional = function () {
      var start = this.inputIndex;
      var result = this.parseLogicalOr();
      if (this.optionalOperator('?')) {
        var yes = this.parsePipe();
        if (!this.optionalCharacter(lexer_1.$COLON)) {
          var end = this.inputIndex;
          var expression = this.input.substring(start, end);
          this.error("Conditional expression " + expression + " requires all 3 expressions");
        }
        var no = this.parsePipe();
        return new ast_1.Conditional(result, yes, no);
      } else {
        return result;
      }
    };
    _ParseAST.prototype.parseLogicalOr = function () {
      var result = this.parseLogicalAnd();
      while (this.optionalOperator('||')) {
        result = new ast_1.Binary('||', result, this.parseLogicalAnd());
      }
      return result;
    };
    _ParseAST.prototype.parseLogicalAnd = function () {
      var result = this.parseEquality();
      while (this.optionalOperator('&&')) {
        result = new ast_1.Binary('&&', result, this.parseEquality());
      }
      return result;
    };
    _ParseAST.prototype.parseEquality = function () {
      var result = this.parseRelational();
      while (true) {
        if (this.optionalOperator('==')) {
          result = new ast_1.Binary('==', result, this.parseRelational());
        } else if (this.optionalOperator('===')) {
          result = new ast_1.Binary('===', result, this.parseRelational());
        } else if (this.optionalOperator('!=')) {
          result = new ast_1.Binary('!=', result, this.parseRelational());
        } else if (this.optionalOperator('!==')) {
          result = new ast_1.Binary('!==', result, this.parseRelational());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseRelational = function () {
      var result = this.parseAdditive();
      while (true) {
        if (this.optionalOperator('<')) {
          result = new ast_1.Binary('<', result, this.parseAdditive());
        } else if (this.optionalOperator('>')) {
          result = new ast_1.Binary('>', result, this.parseAdditive());
        } else if (this.optionalOperator('<=')) {
          result = new ast_1.Binary('<=', result, this.parseAdditive());
        } else if (this.optionalOperator('>=')) {
          result = new ast_1.Binary('>=', result, this.parseAdditive());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseAdditive = function () {
      var result = this.parseMultiplicative();
      while (true) {
        if (this.optionalOperator('+')) {
          result = new ast_1.Binary('+', result, this.parseMultiplicative());
        } else if (this.optionalOperator('-')) {
          result = new ast_1.Binary('-', result, this.parseMultiplicative());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseMultiplicative = function () {
      var result = this.parsePrefix();
      while (true) {
        if (this.optionalOperator('*')) {
          result = new ast_1.Binary('*', result, this.parsePrefix());
        } else if (this.optionalOperator('%')) {
          result = new ast_1.Binary('%', result, this.parsePrefix());
        } else if (this.optionalOperator('/')) {
          result = new ast_1.Binary('/', result, this.parsePrefix());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parsePrefix = function () {
      if (this.optionalOperator('+')) {
        return this.parsePrefix();
      } else if (this.optionalOperator('-')) {
        return new ast_1.Binary('-', new ast_1.LiteralPrimitive(0), this.parsePrefix());
      } else if (this.optionalOperator('!')) {
        return new ast_1.PrefixNot(this.parsePrefix());
      } else {
        return this.parseCallChain();
      }
    };
    _ParseAST.prototype.parseCallChain = function () {
      var result = this.parsePrimary();
      while (true) {
        if (this.optionalCharacter(lexer_1.$PERIOD)) {
          result = this.parseAccessMemberOrMethodCall(result, false);
        } else if (this.optionalOperator('?.')) {
          result = this.parseAccessMemberOrMethodCall(result, true);
        } else if (this.optionalCharacter(lexer_1.$LBRACKET)) {
          var key = this.parsePipe();
          this.expectCharacter(lexer_1.$RBRACKET);
          if (this.optionalOperator("=")) {
            var value = this.parseConditional();
            result = new ast_1.KeyedWrite(result, key, value);
          } else {
            result = new ast_1.KeyedRead(result, key);
          }
        } else if (this.optionalCharacter(lexer_1.$LPAREN)) {
          var args = this.parseCallArguments();
          this.expectCharacter(lexer_1.$RPAREN);
          result = new ast_1.FunctionCall(result, args);
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parsePrimary = function () {
      if (this.optionalCharacter(lexer_1.$LPAREN)) {
        var result = this.parsePipe();
        this.expectCharacter(lexer_1.$RPAREN);
        return result;
      } else if (this.next.isKeywordNull() || this.next.isKeywordUndefined()) {
        this.advance();
        return new ast_1.LiteralPrimitive(null);
      } else if (this.next.isKeywordTrue()) {
        this.advance();
        return new ast_1.LiteralPrimitive(true);
      } else if (this.next.isKeywordFalse()) {
        this.advance();
        return new ast_1.LiteralPrimitive(false);
      } else if (this.optionalCharacter(lexer_1.$LBRACKET)) {
        var elements = this.parseExpressionList(lexer_1.$RBRACKET);
        this.expectCharacter(lexer_1.$RBRACKET);
        return new ast_1.LiteralArray(elements);
      } else if (this.next.isCharacter(lexer_1.$LBRACE)) {
        return this.parseLiteralMap();
      } else if (this.next.isIdentifier()) {
        return this.parseAccessMemberOrMethodCall(_implicitReceiver, false);
      } else if (this.next.isNumber()) {
        var value = this.next.toNumber();
        this.advance();
        return new ast_1.LiteralPrimitive(value);
      } else if (this.next.isString()) {
        var literalValue = this.next.toString();
        this.advance();
        return new ast_1.LiteralPrimitive(literalValue);
      } else if (this.index >= this.tokens.length) {
        this.error("Unexpected end of expression: " + this.input);
      } else {
        this.error("Unexpected token " + this.next);
      }
      throw new exceptions_1.BaseException("Fell through all cases in parsePrimary");
    };
    _ParseAST.prototype.parseExpressionList = function (terminator) {
      var result = [];
      if (!this.next.isCharacter(terminator)) {
        do {
          result.push(this.parsePipe());
        } while (this.optionalCharacter(lexer_1.$COMMA));
      }
      return result;
    };
    _ParseAST.prototype.parseLiteralMap = function () {
      var keys = [];
      var values = [];
      this.expectCharacter(lexer_1.$LBRACE);
      if (!this.optionalCharacter(lexer_1.$RBRACE)) {
        do {
          var key = this.expectIdentifierOrKeywordOrString();
          keys.push(key);
          this.expectCharacter(lexer_1.$COLON);
          values.push(this.parsePipe());
        } while (this.optionalCharacter(lexer_1.$COMMA));
        this.expectCharacter(lexer_1.$RBRACE);
      }
      return new ast_1.LiteralMap(keys, values);
    };
    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {
      if (isSafe === void 0) {
        isSafe = false;
      }
      var id = this.expectIdentifierOrKeyword();
      if (this.optionalCharacter(lexer_1.$LPAREN)) {
        var args = this.parseCallArguments();
        this.expectCharacter(lexer_1.$RPAREN);
        return isSafe ? new ast_1.SafeMethodCall(receiver, id, args) : new ast_1.MethodCall(receiver, id, args);
      } else {
        if (isSafe) {
          if (this.optionalOperator("=")) {
            this.error("The '?.' operator cannot be used in the assignment");
          } else {
            return new ast_1.SafePropertyRead(receiver, id);
          }
        } else {
          if (this.optionalOperator("=")) {
            if (!this.parseAction) {
              this.error("Bindings cannot contain assignments");
            }
            var value = this.parseConditional();
            return new ast_1.PropertyWrite(receiver, id, value);
          } else {
            return new ast_1.PropertyRead(receiver, id);
          }
        }
      }
      return null;
    };
    _ParseAST.prototype.parseCallArguments = function () {
      if (this.next.isCharacter(lexer_1.$RPAREN)) return [];
      var positionals = [];
      do {
        positionals.push(this.parsePipe());
      } while (this.optionalCharacter(lexer_1.$COMMA));
      return positionals;
    };
    _ParseAST.prototype.parseBlockContent = function () {
      if (!this.parseAction) {
        this.error("Binding expression cannot contain chained expression");
      }
      var exprs = [];
      while (this.index < this.tokens.length && !this.next.isCharacter(lexer_1.$RBRACE)) {
        var expr = this.parseExpression();
        exprs.push(expr);
        if (this.optionalCharacter(lexer_1.$SEMICOLON)) {
          while (this.optionalCharacter(lexer_1.$SEMICOLON)) {}
        }
      }
      if (exprs.length == 0) return new ast_1.EmptyExpr();
      if (exprs.length == 1) return exprs[0];
      return new ast_1.Chain(exprs);
    };
    _ParseAST.prototype.expectTemplateBindingKey = function () {
      var result = '';
      var operatorFound = false;
      do {
        result += this.expectIdentifierOrKeywordOrString();
        operatorFound = this.optionalOperator('-');
        if (operatorFound) {
          result += '-';
        }
      } while (operatorFound);
      return result.toString();
    };
    _ParseAST.prototype.parseTemplateBindings = function () {
      var bindings = [];
      var prefix = null;
      var warnings = [];
      while (this.index < this.tokens.length) {
        var keyIsVar = this.peekKeywordLet();
        if (!keyIsVar && this.peekDeprecatedKeywordVar()) {
          keyIsVar = true;
          warnings.push("\"var\" inside of expressions is deprecated. Use \"let\" instead!");
        }
        if (!keyIsVar && this.peekDeprecatedOperatorHash()) {
          keyIsVar = true;
          warnings.push("\"#\" inside of expressions is deprecated. Use \"let\" instead!");
        }
        if (keyIsVar) {
          this.advance();
        }
        var key = this.expectTemplateBindingKey();
        if (!keyIsVar) {
          if (prefix == null) {
            prefix = key;
          } else {
            key = prefix + key[0].toUpperCase() + key.substring(1);
          }
        }
        this.optionalCharacter(lexer_1.$COLON);
        var name = null;
        var expression = null;
        if (keyIsVar) {
          if (this.optionalOperator("=")) {
            name = this.expectTemplateBindingKey();
          } else {
            name = '\$implicit';
          }
        } else if (this.next !== lexer_1.EOF && !this.peekKeywordLet() && !this.peekDeprecatedKeywordVar() && !this.peekDeprecatedOperatorHash()) {
          var start = this.inputIndex;
          var ast = this.parsePipe();
          var source = this.input.substring(start, this.inputIndex);
          expression = new ast_1.ASTWithSource(ast, source, this.location);
        }
        bindings.push(new ast_1.TemplateBinding(key, keyIsVar, name, expression));
        if (!this.optionalCharacter(lexer_1.$SEMICOLON)) {
          this.optionalCharacter(lexer_1.$COMMA);
        }
      }
      return new TemplateBindingParseResult(bindings, warnings);
    };
    _ParseAST.prototype.error = function (message, index) {
      if (index === void 0) {
        index = null;
      }
      if (lang_1.isBlank(index)) index = this.index;
      var location = index < this.tokens.length ? "at column " + (this.tokens[index].index + 1) + " in" : "at the end of the expression";
      throw new ParseException(message, this.input, location, this.location);
    };
    return _ParseAST;
  }();
  exports._ParseAST = _ParseAST;
  var SimpleExpressionChecker = function () {
    function SimpleExpressionChecker() {
      this.simple = true;
    }
    SimpleExpressionChecker.check = function (ast) {
      var s = new SimpleExpressionChecker();
      ast.visit(s);
      return s.simple;
    };
    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) {};
    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) {};
    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) {};
    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) {
      this.visitAll(ast.expressions);
    };
    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) {
      this.visitAll(ast.values);
    };
    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitAll = function (asts) {
      var res = collection_1.ListWrapper.createFixedSize(asts.length);
      for (var i = 0; i < asts.length; ++i) {
        res[i] = asts[i].visit(this);
      }
      return res;
    };
    SimpleExpressionChecker.prototype.visitChain = function (ast, context) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) {
      this.simple = false;
    };
    return SimpleExpressionChecker;
  }();
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/lexer.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  (function (TokenType) {
    TokenType[TokenType["Character"] = 0] = "Character";
    TokenType[TokenType["Identifier"] = 1] = "Identifier";
    TokenType[TokenType["Keyword"] = 2] = "Keyword";
    TokenType[TokenType["String"] = 3] = "String";
    TokenType[TokenType["Operator"] = 4] = "Operator";
    TokenType[TokenType["Number"] = 5] = "Number";
  })(exports.TokenType || (exports.TokenType = {}));
  var TokenType = exports.TokenType;
  var Lexer = function () {
    function Lexer() {}
    Lexer.prototype.tokenize = function (text) {
      var scanner = new _Scanner(text);
      var tokens = [];
      var token = scanner.scanToken();
      while (token != null) {
        tokens.push(token);
        token = scanner.scanToken();
      }
      return tokens;
    };
    Lexer.decorators = [{ type: core_1.Injectable }];
    return Lexer;
  }();
  exports.Lexer = Lexer;
  var Token = function () {
    function Token(index, type, numValue, strValue) {
      this.index = index;
      this.type = type;
      this.numValue = numValue;
      this.strValue = strValue;
    }
    Token.prototype.isCharacter = function (code) {
      return this.type == TokenType.Character && this.numValue == code;
    };
    Token.prototype.isNumber = function () {
      return this.type == TokenType.Number;
    };
    Token.prototype.isString = function () {
      return this.type == TokenType.String;
    };
    Token.prototype.isOperator = function (operater) {
      return this.type == TokenType.Operator && this.strValue == operater;
    };
    Token.prototype.isIdentifier = function () {
      return this.type == TokenType.Identifier;
    };
    Token.prototype.isKeyword = function () {
      return this.type == TokenType.Keyword;
    };
    Token.prototype.isKeywordDeprecatedVar = function () {
      return this.type == TokenType.Keyword && this.strValue == "var";
    };
    Token.prototype.isKeywordLet = function () {
      return this.type == TokenType.Keyword && this.strValue == "let";
    };
    Token.prototype.isKeywordNull = function () {
      return this.type == TokenType.Keyword && this.strValue == "null";
    };
    Token.prototype.isKeywordUndefined = function () {
      return this.type == TokenType.Keyword && this.strValue == "undefined";
    };
    Token.prototype.isKeywordTrue = function () {
      return this.type == TokenType.Keyword && this.strValue == "true";
    };
    Token.prototype.isKeywordFalse = function () {
      return this.type == TokenType.Keyword && this.strValue == "false";
    };
    Token.prototype.toNumber = function () {
      return this.type == TokenType.Number ? this.numValue : -1;
    };
    Token.prototype.toString = function () {
      switch (this.type) {
        case TokenType.Character:
        case TokenType.Identifier:
        case TokenType.Keyword:
        case TokenType.Operator:
        case TokenType.String:
          return this.strValue;
        case TokenType.Number:
          return this.numValue.toString();
        default:
          return null;
      }
    };
    return Token;
  }();
  exports.Token = Token;
  function newCharacterToken(index, code) {
    return new Token(index, TokenType.Character, code, lang_1.StringWrapper.fromCharCode(code));
  }
  function newIdentifierToken(index, text) {
    return new Token(index, TokenType.Identifier, 0, text);
  }
  function newKeywordToken(index, text) {
    return new Token(index, TokenType.Keyword, 0, text);
  }
  function newOperatorToken(index, text) {
    return new Token(index, TokenType.Operator, 0, text);
  }
  function newStringToken(index, text) {
    return new Token(index, TokenType.String, 0, text);
  }
  function newNumberToken(index, n) {
    return new Token(index, TokenType.Number, n, "");
  }
  exports.EOF = new Token(-1, TokenType.Character, 0, "");
  exports.$EOF = 0;
  exports.$TAB = 9;
  exports.$LF = 10;
  exports.$VTAB = 11;
  exports.$FF = 12;
  exports.$CR = 13;
  exports.$SPACE = 32;
  exports.$BANG = 33;
  exports.$DQ = 34;
  exports.$HASH = 35;
  exports.$$ = 36;
  exports.$PERCENT = 37;
  exports.$AMPERSAND = 38;
  exports.$SQ = 39;
  exports.$LPAREN = 40;
  exports.$RPAREN = 41;
  exports.$STAR = 42;
  exports.$PLUS = 43;
  exports.$COMMA = 44;
  exports.$MINUS = 45;
  exports.$PERIOD = 46;
  exports.$SLASH = 47;
  exports.$COLON = 58;
  exports.$SEMICOLON = 59;
  exports.$LT = 60;
  exports.$EQ = 61;
  exports.$GT = 62;
  exports.$QUESTION = 63;
  var $0 = 48;
  var $9 = 57;
  var $A = 65,
      $E = 69,
      $Z = 90;
  exports.$LBRACKET = 91;
  exports.$BACKSLASH = 92;
  exports.$RBRACKET = 93;
  var $CARET = 94;
  var $_ = 95;
  exports.$BT = 96;
  var $a = 97,
      $e = 101,
      $f = 102;
  var $n = 110,
      $r = 114,
      $t = 116,
      $u = 117,
      $v = 118,
      $z = 122;
  exports.$LBRACE = 123;
  exports.$BAR = 124;
  exports.$RBRACE = 125;
  var $NBSP = 160;
  var ScannerError = function (_super) {
    __extends(ScannerError, _super);
    function ScannerError(message) {
      _super.call(this);
      this.message = message;
    }
    ScannerError.prototype.toString = function () {
      return this.message;
    };
    return ScannerError;
  }(exceptions_1.BaseException);
  exports.ScannerError = ScannerError;
  var _Scanner = function () {
    function _Scanner(input) {
      this.input = input;
      this.peek = 0;
      this.index = -1;
      this.length = input.length;
      this.advance();
    }
    _Scanner.prototype.advance = function () {
      this.peek = ++this.index >= this.length ? exports.$EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index);
    };
    _Scanner.prototype.scanToken = function () {
      var input = this.input,
          length = this.length,
          peek = this.peek,
          index = this.index;
      while (peek <= exports.$SPACE) {
        if (++index >= length) {
          peek = exports.$EOF;
          break;
        } else {
          peek = lang_1.StringWrapper.charCodeAt(input, index);
        }
      }
      this.peek = peek;
      this.index = index;
      if (index >= length) {
        return null;
      }
      if (isIdentifierStart(peek)) return this.scanIdentifier();
      if (isDigit(peek)) return this.scanNumber(index);
      var start = index;
      switch (peek) {
        case exports.$PERIOD:
          this.advance();
          return isDigit(this.peek) ? this.scanNumber(start) : newCharacterToken(start, exports.$PERIOD);
        case exports.$LPAREN:
        case exports.$RPAREN:
        case exports.$LBRACE:
        case exports.$RBRACE:
        case exports.$LBRACKET:
        case exports.$RBRACKET:
        case exports.$COMMA:
        case exports.$COLON:
        case exports.$SEMICOLON:
          return this.scanCharacter(start, peek);
        case exports.$SQ:
        case exports.$DQ:
          return this.scanString();
        case exports.$HASH:
        case exports.$PLUS:
        case exports.$MINUS:
        case exports.$STAR:
        case exports.$SLASH:
        case exports.$PERCENT:
        case $CARET:
          return this.scanOperator(start, lang_1.StringWrapper.fromCharCode(peek));
        case exports.$QUESTION:
          return this.scanComplexOperator(start, '?', exports.$PERIOD, '.');
        case exports.$LT:
        case exports.$GT:
          return this.scanComplexOperator(start, lang_1.StringWrapper.fromCharCode(peek), exports.$EQ, '=');
        case exports.$BANG:
        case exports.$EQ:
          return this.scanComplexOperator(start, lang_1.StringWrapper.fromCharCode(peek), exports.$EQ, '=', exports.$EQ, '=');
        case exports.$AMPERSAND:
          return this.scanComplexOperator(start, '&', exports.$AMPERSAND, '&');
        case exports.$BAR:
          return this.scanComplexOperator(start, '|', exports.$BAR, '|');
        case $NBSP:
          while (isWhitespace(this.peek)) this.advance();
          return this.scanToken();
      }
      this.error("Unexpected character [" + lang_1.StringWrapper.fromCharCode(peek) + "]", 0);
      return null;
    };
    _Scanner.prototype.scanCharacter = function (start, code) {
      this.advance();
      return newCharacterToken(start, code);
    };
    _Scanner.prototype.scanOperator = function (start, str) {
      this.advance();
      return newOperatorToken(start, str);
    };
    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {
      this.advance();
      var str = one;
      if (this.peek == twoCode) {
        this.advance();
        str += two;
      }
      if (lang_1.isPresent(threeCode) && this.peek == threeCode) {
        this.advance();
        str += three;
      }
      return newOperatorToken(start, str);
    };
    _Scanner.prototype.scanIdentifier = function () {
      var start = this.index;
      this.advance();
      while (isIdentifierPart(this.peek)) this.advance();
      var str = this.input.substring(start, this.index);
      if (collection_1.SetWrapper.has(KEYWORDS, str)) {
        return newKeywordToken(start, str);
      } else {
        return newIdentifierToken(start, str);
      }
    };
    _Scanner.prototype.scanNumber = function (start) {
      var simple = this.index === start;
      this.advance();
      while (true) {
        if (isDigit(this.peek)) {} else if (this.peek == exports.$PERIOD) {
          simple = false;
        } else if (isExponentStart(this.peek)) {
          this.advance();
          if (isExponentSign(this.peek)) this.advance();
          if (!isDigit(this.peek)) this.error('Invalid exponent', -1);
          simple = false;
        } else {
          break;
        }
        this.advance();
      }
      var str = this.input.substring(start, this.index);
      var value = simple ? lang_1.NumberWrapper.parseIntAutoRadix(str) : lang_1.NumberWrapper.parseFloat(str);
      return newNumberToken(start, value);
    };
    _Scanner.prototype.scanString = function () {
      var start = this.index;
      var quote = this.peek;
      this.advance();
      var buffer;
      var marker = this.index;
      var input = this.input;
      while (this.peek != quote) {
        if (this.peek == exports.$BACKSLASH) {
          if (buffer == null) buffer = new lang_1.StringJoiner();
          buffer.add(input.substring(marker, this.index));
          this.advance();
          var unescapedCode;
          if (this.peek == $u) {
            var hex = input.substring(this.index + 1, this.index + 5);
            try {
              unescapedCode = lang_1.NumberWrapper.parseInt(hex, 16);
            } catch (e) {
              this.error("Invalid unicode escape [\\u" + hex + "]", 0);
            }
            for (var i = 0; i < 5; i++) {
              this.advance();
            }
          } else {
            unescapedCode = unescape(this.peek);
            this.advance();
          }
          buffer.add(lang_1.StringWrapper.fromCharCode(unescapedCode));
          marker = this.index;
        } else if (this.peek == exports.$EOF) {
          this.error('Unterminated quote', 0);
        } else {
          this.advance();
        }
      }
      var last = input.substring(marker, this.index);
      this.advance();
      var unescaped = last;
      if (buffer != null) {
        buffer.add(last);
        unescaped = buffer.toString();
      }
      return newStringToken(start, unescaped);
    };
    _Scanner.prototype.error = function (message, offset) {
      var position = this.index + offset;
      throw new ScannerError("Lexer Error: " + message + " at column " + position + " in expression [" + this.input + "]");
    };
    return _Scanner;
  }();
  function isWhitespace(code) {
    return code >= exports.$TAB && code <= exports.$SPACE || code == $NBSP;
  }
  function isIdentifierStart(code) {
    return $a <= code && code <= $z || $A <= code && code <= $Z || code == $_ || code == exports.$$;
  }
  function isIdentifier(input) {
    if (input.length == 0) return false;
    var scanner = new _Scanner(input);
    if (!isIdentifierStart(scanner.peek)) return false;
    scanner.advance();
    while (scanner.peek !== exports.$EOF) {
      if (!isIdentifierPart(scanner.peek)) return false;
      scanner.advance();
    }
    return true;
  }
  exports.isIdentifier = isIdentifier;
  function isIdentifierPart(code) {
    return $a <= code && code <= $z || $A <= code && code <= $Z || $0 <= code && code <= $9 || code == $_ || code == exports.$$;
  }
  function isDigit(code) {
    return $0 <= code && code <= $9;
  }
  function isExponentStart(code) {
    return code == $e || code == $E;
  }
  function isExponentSign(code) {
    return code == exports.$MINUS || code == exports.$PLUS;
  }
  function isQuote(code) {
    return code === exports.$SQ || code === exports.$DQ || code === exports.$BT;
  }
  exports.isQuote = isQuote;
  function unescape(code) {
    switch (code) {
      case $n:
        return exports.$LF;
      case $f:
        return exports.$FF;
      case $r:
        return exports.$CR;
      case $t:
        return exports.$TAB;
      case $v:
        return exports.$VTAB;
      default:
        return code;
    }
  }
  var OPERATORS = collection_1.SetWrapper.createFromList(['+', '-', '*', '/', '%', '^', '=', '==', '!=', '===', '!==', '<', '>', '<=', '>=', '&&', '||', '&', '|', '!', '?', '#', '?.']);
  var KEYWORDS = collection_1.SetWrapper.createFromList(['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else']);
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/compiler.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/config.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js', 'npm:@angular/compiler@2.0.0-rc.1/src/offline_compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/runtime_compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/xhr.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/directive_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/pipe_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/directive_normalizer.js', 'npm:@angular/compiler@2.0.0-rc.1/src/metadata_resolver.js', 'npm:@angular/compiler@2.0.0-rc.1/src/style_compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js', 'npm:@angular/compiler@2.0.0-rc.1/src/schema/dom_element_schema_registry.js', 'npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/parser.js', 'npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/lexer.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js'));
  var template_parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_parser.js');
  exports.TEMPLATE_TRANSFORMS = template_parser_1.TEMPLATE_TRANSFORMS;
  var config_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/config.js');
  exports.CompilerConfig = config_1.CompilerConfig;
  exports.RenderTypes = config_1.RenderTypes;
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/src/compile_metadata.js'));
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/src/offline_compiler.js'));
  var runtime_compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/runtime_compiler.js');
  exports.RuntimeCompiler = runtime_compiler_1.RuntimeCompiler;
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js'));
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/src/xhr.js'));
  var view_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_resolver.js');
  exports.ViewResolver = view_resolver_1.ViewResolver;
  var directive_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/directive_resolver.js');
  exports.DirectiveResolver = directive_resolver_1.DirectiveResolver;
  var pipe_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/pipe_resolver.js');
  exports.PipeResolver = pipe_resolver_1.PipeResolver;
  var template_parser_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/template_parser.js');
  var html_parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/html_parser.js');
  var directive_normalizer_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/directive_normalizer.js');
  var metadata_resolver_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/metadata_resolver.js');
  var style_compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/style_compiler.js');
  var view_compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_compiler/view_compiler.js');
  var config_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/config.js');
  var runtime_compiler_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/runtime_compiler.js');
  var element_schema_registry_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js');
  var dom_element_schema_registry_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/schema/dom_element_schema_registry.js');
  var url_resolver_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/url_resolver.js');
  var parser_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/parser.js');
  var lexer_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/expression_parser/lexer.js');
  var view_resolver_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/view_resolver.js');
  var directive_resolver_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/directive_resolver.js');
  var pipe_resolver_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/pipe_resolver.js');
  function _createCompilerConfig() {
    return new config_2.CompilerConfig(lang_1.assertionsEnabled(), false, true);
  }
  exports.COMPILER_PROVIDERS = [lexer_1.Lexer, parser_1.Parser, html_parser_1.HtmlParser, template_parser_2.TemplateParser, directive_normalizer_1.DirectiveNormalizer, metadata_resolver_1.CompileMetadataResolver, url_resolver_2.DEFAULT_PACKAGE_URL_PROVIDER, style_compiler_1.StyleCompiler, view_compiler_1.ViewCompiler, {
    provide: config_2.CompilerConfig,
    useFactory: _createCompilerConfig,
    deps: []
  }, runtime_compiler_2.RuntimeCompiler, {
    provide: core_1.ComponentResolver,
    useExisting: runtime_compiler_2.RuntimeCompiler
  }, dom_element_schema_registry_1.DomElementSchemaRegistry, {
    provide: element_schema_registry_1.ElementSchemaRegistry,
    useExisting: dom_element_schema_registry_1.DomElementSchemaRegistry
  }, url_resolver_2.UrlResolver, view_resolver_2.ViewResolver, directive_resolver_2.DirectiveResolver, pipe_resolver_2.PipeResolver];
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js", ["npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js");
  var TextAst = function () {
    function TextAst(value, ngContentIndex, sourceSpan) {
      this.value = value;
      this.ngContentIndex = ngContentIndex;
      this.sourceSpan = sourceSpan;
    }
    TextAst.prototype.visit = function (visitor, context) {
      return visitor.visitText(this, context);
    };
    return TextAst;
  }();
  exports.TextAst = TextAst;
  var BoundTextAst = function () {
    function BoundTextAst(value, ngContentIndex, sourceSpan) {
      this.value = value;
      this.ngContentIndex = ngContentIndex;
      this.sourceSpan = sourceSpan;
    }
    BoundTextAst.prototype.visit = function (visitor, context) {
      return visitor.visitBoundText(this, context);
    };
    return BoundTextAst;
  }();
  exports.BoundTextAst = BoundTextAst;
  var AttrAst = function () {
    function AttrAst(name, value, sourceSpan) {
      this.name = name;
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    AttrAst.prototype.visit = function (visitor, context) {
      return visitor.visitAttr(this, context);
    };
    return AttrAst;
  }();
  exports.AttrAst = AttrAst;
  var BoundElementPropertyAst = function () {
    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {
      this.name = name;
      this.type = type;
      this.securityContext = securityContext;
      this.value = value;
      this.unit = unit;
      this.sourceSpan = sourceSpan;
    }
    BoundElementPropertyAst.prototype.visit = function (visitor, context) {
      return visitor.visitElementProperty(this, context);
    };
    return BoundElementPropertyAst;
  }();
  exports.BoundElementPropertyAst = BoundElementPropertyAst;
  var BoundEventAst = function () {
    function BoundEventAst(name, target, handler, sourceSpan) {
      this.name = name;
      this.target = target;
      this.handler = handler;
      this.sourceSpan = sourceSpan;
    }
    BoundEventAst.prototype.visit = function (visitor, context) {
      return visitor.visitEvent(this, context);
    };
    Object.defineProperty(BoundEventAst.prototype, "fullName", {
      get: function () {
        if (lang_1.isPresent(this.target)) {
          return this.target + ":" + this.name;
        } else {
          return this.name;
        }
      },
      enumerable: true,
      configurable: true
    });
    return BoundEventAst;
  }();
  exports.BoundEventAst = BoundEventAst;
  var ReferenceAst = function () {
    function ReferenceAst(name, value, sourceSpan) {
      this.name = name;
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    ReferenceAst.prototype.visit = function (visitor, context) {
      return visitor.visitReference(this, context);
    };
    return ReferenceAst;
  }();
  exports.ReferenceAst = ReferenceAst;
  var VariableAst = function () {
    function VariableAst(name, value, sourceSpan) {
      this.name = name;
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    VariableAst.prototype.visit = function (visitor, context) {
      return visitor.visitVariable(this, context);
    };
    return VariableAst;
  }();
  exports.VariableAst = VariableAst;
  var ElementAst = function () {
    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {
      this.name = name;
      this.attrs = attrs;
      this.inputs = inputs;
      this.outputs = outputs;
      this.references = references;
      this.directives = directives;
      this.providers = providers;
      this.hasViewContainer = hasViewContainer;
      this.children = children;
      this.ngContentIndex = ngContentIndex;
      this.sourceSpan = sourceSpan;
    }
    ElementAst.prototype.visit = function (visitor, context) {
      return visitor.visitElement(this, context);
    };
    return ElementAst;
  }();
  exports.ElementAst = ElementAst;
  var EmbeddedTemplateAst = function () {
    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {
      this.attrs = attrs;
      this.outputs = outputs;
      this.references = references;
      this.variables = variables;
      this.directives = directives;
      this.providers = providers;
      this.hasViewContainer = hasViewContainer;
      this.children = children;
      this.ngContentIndex = ngContentIndex;
      this.sourceSpan = sourceSpan;
    }
    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {
      return visitor.visitEmbeddedTemplate(this, context);
    };
    return EmbeddedTemplateAst;
  }();
  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;
  var BoundDirectivePropertyAst = function () {
    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {
      this.directiveName = directiveName;
      this.templateName = templateName;
      this.value = value;
      this.sourceSpan = sourceSpan;
    }
    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {
      return visitor.visitDirectiveProperty(this, context);
    };
    return BoundDirectivePropertyAst;
  }();
  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;
  var DirectiveAst = function () {
    function DirectiveAst(directive, inputs, hostProperties, hostEvents, sourceSpan) {
      this.directive = directive;
      this.inputs = inputs;
      this.hostProperties = hostProperties;
      this.hostEvents = hostEvents;
      this.sourceSpan = sourceSpan;
    }
    DirectiveAst.prototype.visit = function (visitor, context) {
      return visitor.visitDirective(this, context);
    };
    return DirectiveAst;
  }();
  exports.DirectiveAst = DirectiveAst;
  var ProviderAst = function () {
    function ProviderAst(token, multiProvider, eager, providers, providerType, sourceSpan) {
      this.token = token;
      this.multiProvider = multiProvider;
      this.eager = eager;
      this.providers = providers;
      this.providerType = providerType;
      this.sourceSpan = sourceSpan;
    }
    ProviderAst.prototype.visit = function (visitor, context) {
      return null;
    };
    return ProviderAst;
  }();
  exports.ProviderAst = ProviderAst;
  (function (ProviderAstType) {
    ProviderAstType[ProviderAstType["PublicService"] = 0] = "PublicService";
    ProviderAstType[ProviderAstType["PrivateService"] = 1] = "PrivateService";
    ProviderAstType[ProviderAstType["Component"] = 2] = "Component";
    ProviderAstType[ProviderAstType["Directive"] = 3] = "Directive";
    ProviderAstType[ProviderAstType["Builtin"] = 4] = "Builtin";
  })(exports.ProviderAstType || (exports.ProviderAstType = {}));
  var ProviderAstType = exports.ProviderAstType;
  var NgContentAst = function () {
    function NgContentAst(index, ngContentIndex, sourceSpan) {
      this.index = index;
      this.ngContentIndex = ngContentIndex;
      this.sourceSpan = sourceSpan;
    }
    NgContentAst.prototype.visit = function (visitor, context) {
      return visitor.visitNgContent(this, context);
    };
    return NgContentAst;
  }();
  exports.NgContentAst = NgContentAst;
  (function (PropertyBindingType) {
    PropertyBindingType[PropertyBindingType["Property"] = 0] = "Property";
    PropertyBindingType[PropertyBindingType["Attribute"] = 1] = "Attribute";
    PropertyBindingType[PropertyBindingType["Class"] = 2] = "Class";
    PropertyBindingType[PropertyBindingType["Style"] = 3] = "Style";
  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));
  var PropertyBindingType = exports.PropertyBindingType;
  function templateVisitAll(visitor, asts, context) {
    if (context === void 0) {
      context = null;
    }
    var result = [];
    asts.forEach(function (ast) {
      var astResult = ast.visit(visitor, context);
      if (lang_1.isPresent(astResult)) {
        result.push(astResult);
      }
    });
    return result;
  }
  exports.templateVisitAll = templateVisitAll;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/selector.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
    var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
    var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
    var _EMPTY_ATTR_VALUE = '';
    var _SELECTOR_REGEXP = lang_1.RegExpWrapper.create('(\\:not\\()|' + '([-\\w]+)|' + '(?:\\.([-\\w]+))|' + '(?:\\[([-\\w*]+)(?:=([^\\]]*))?\\])|' + '(\\))|' + '(\\s*,\\s*)');
    var CssSelector = function () {
      function CssSelector() {
        this.element = null;
        this.classNames = [];
        this.attrs = [];
        this.notSelectors = [];
      }
      CssSelector.parse = function (selector) {
        var results = [];
        var _addResult = function (res, cssSel) {
          if (cssSel.notSelectors.length > 0 && lang_1.isBlank(cssSel.element) && collection_1.ListWrapper.isEmpty(cssSel.classNames) && collection_1.ListWrapper.isEmpty(cssSel.attrs)) {
            cssSel.element = "*";
          }
          res.push(cssSel);
        };
        var cssSelector = new CssSelector();
        var matcher = lang_1.RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);
        var match;
        var current = cssSelector;
        var inNot = false;
        while (lang_1.isPresent(match = lang_1.RegExpMatcherWrapper.next(matcher))) {
          if (lang_1.isPresent(match[1])) {
            if (inNot) {
              throw new exceptions_1.BaseException('Nesting :not is not allowed in a selector');
            }
            inNot = true;
            current = new CssSelector();
            cssSelector.notSelectors.push(current);
          }
          if (lang_1.isPresent(match[2])) {
            current.setElement(match[2]);
          }
          if (lang_1.isPresent(match[3])) {
            current.addClassName(match[3]);
          }
          if (lang_1.isPresent(match[4])) {
            current.addAttribute(match[4], match[5]);
          }
          if (lang_1.isPresent(match[6])) {
            inNot = false;
            current = cssSelector;
          }
          if (lang_1.isPresent(match[7])) {
            if (inNot) {
              throw new exceptions_1.BaseException('Multiple selectors in :not are not supported');
            }
            _addResult(results, cssSelector);
            cssSelector = current = new CssSelector();
          }
        }
        _addResult(results, cssSelector);
        return results;
      };
      CssSelector.prototype.isElementSelector = function () {
        return lang_1.isPresent(this.element) && collection_1.ListWrapper.isEmpty(this.classNames) && collection_1.ListWrapper.isEmpty(this.attrs) && this.notSelectors.length === 0;
      };
      CssSelector.prototype.setElement = function (element) {
        if (element === void 0) {
          element = null;
        }
        this.element = element;
      };
      CssSelector.prototype.getMatchingElementTemplate = function () {
        var tagName = lang_1.isPresent(this.element) ? this.element : 'div';
        var classAttr = this.classNames.length > 0 ? " class=\"" + this.classNames.join(' ') + "\"" : '';
        var attrs = '';
        for (var i = 0; i < this.attrs.length; i += 2) {
          var attrName = this.attrs[i];
          var attrValue = this.attrs[i + 1] !== '' ? "=\"" + this.attrs[i + 1] + "\"" : '';
          attrs += " " + attrName + attrValue;
        }
        return "<" + tagName + classAttr + attrs + "></" + tagName + ">";
      };
      CssSelector.prototype.addAttribute = function (name, value) {
        if (value === void 0) {
          value = _EMPTY_ATTR_VALUE;
        }
        this.attrs.push(name);
        if (lang_1.isPresent(value)) {
          value = value.toLowerCase();
        } else {
          value = _EMPTY_ATTR_VALUE;
        }
        this.attrs.push(value);
      };
      CssSelector.prototype.addClassName = function (name) {
        this.classNames.push(name.toLowerCase());
      };
      CssSelector.prototype.toString = function () {
        var res = '';
        if (lang_1.isPresent(this.element)) {
          res += this.element;
        }
        if (lang_1.isPresent(this.classNames)) {
          for (var i = 0; i < this.classNames.length; i++) {
            res += '.' + this.classNames[i];
          }
        }
        if (lang_1.isPresent(this.attrs)) {
          for (var i = 0; i < this.attrs.length;) {
            var attrName = this.attrs[i++];
            var attrValue = this.attrs[i++];
            res += '[' + attrName;
            if (attrValue.length > 0) {
              res += '=' + attrValue;
            }
            res += ']';
          }
        }
        this.notSelectors.forEach(function (notSelector) {
          return res += ":not(" + notSelector + ")";
        });
        return res;
      };
      return CssSelector;
    }();
    exports.CssSelector = CssSelector;
    var SelectorMatcher = function () {
      function SelectorMatcher() {
        this._elementMap = new collection_1.Map();
        this._elementPartialMap = new collection_1.Map();
        this._classMap = new collection_1.Map();
        this._classPartialMap = new collection_1.Map();
        this._attrValueMap = new collection_1.Map();
        this._attrValuePartialMap = new collection_1.Map();
        this._listContexts = [];
      }
      SelectorMatcher.createNotMatcher = function (notSelectors) {
        var notMatcher = new SelectorMatcher();
        notMatcher.addSelectables(notSelectors, null);
        return notMatcher;
      };
      SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {
        var listContext = null;
        if (cssSelectors.length > 1) {
          listContext = new SelectorListContext(cssSelectors);
          this._listContexts.push(listContext);
        }
        for (var i = 0; i < cssSelectors.length; i++) {
          this._addSelectable(cssSelectors[i], callbackCtxt, listContext);
        }
      };
      SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {
        var matcher = this;
        var element = cssSelector.element;
        var classNames = cssSelector.classNames;
        var attrs = cssSelector.attrs;
        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);
        if (lang_1.isPresent(element)) {
          var isTerminal = attrs.length === 0 && classNames.length === 0;
          if (isTerminal) {
            this._addTerminal(matcher._elementMap, element, selectable);
          } else {
            matcher = this._addPartial(matcher._elementPartialMap, element);
          }
        }
        if (lang_1.isPresent(classNames)) {
          for (var index = 0; index < classNames.length; index++) {
            var isTerminal = attrs.length === 0 && index === classNames.length - 1;
            var className = classNames[index];
            if (isTerminal) {
              this._addTerminal(matcher._classMap, className, selectable);
            } else {
              matcher = this._addPartial(matcher._classPartialMap, className);
            }
          }
        }
        if (lang_1.isPresent(attrs)) {
          for (var index = 0; index < attrs.length;) {
            var isTerminal = index === attrs.length - 2;
            var attrName = attrs[index++];
            var attrValue = attrs[index++];
            if (isTerminal) {
              var terminalMap = matcher._attrValueMap;
              var terminalValuesMap = terminalMap.get(attrName);
              if (lang_1.isBlank(terminalValuesMap)) {
                terminalValuesMap = new collection_1.Map();
                terminalMap.set(attrName, terminalValuesMap);
              }
              this._addTerminal(terminalValuesMap, attrValue, selectable);
            } else {
              var parttialMap = matcher._attrValuePartialMap;
              var partialValuesMap = parttialMap.get(attrName);
              if (lang_1.isBlank(partialValuesMap)) {
                partialValuesMap = new collection_1.Map();
                parttialMap.set(attrName, partialValuesMap);
              }
              matcher = this._addPartial(partialValuesMap, attrValue);
            }
          }
        }
      };
      SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {
        var terminalList = map.get(name);
        if (lang_1.isBlank(terminalList)) {
          terminalList = [];
          map.set(name, terminalList);
        }
        terminalList.push(selectable);
      };
      SelectorMatcher.prototype._addPartial = function (map, name) {
        var matcher = map.get(name);
        if (lang_1.isBlank(matcher)) {
          matcher = new SelectorMatcher();
          map.set(name, matcher);
        }
        return matcher;
      };
      SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {
        var result = false;
        var element = cssSelector.element;
        var classNames = cssSelector.classNames;
        var attrs = cssSelector.attrs;
        for (var i = 0; i < this._listContexts.length; i++) {
          this._listContexts[i].alreadyMatched = false;
        }
        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;
        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) || result;
        if (lang_1.isPresent(classNames)) {
          for (var index = 0; index < classNames.length; index++) {
            var className = classNames[index];
            result = this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;
            result = this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) || result;
          }
        }
        if (lang_1.isPresent(attrs)) {
          for (var index = 0; index < attrs.length;) {
            var attrName = attrs[index++];
            var attrValue = attrs[index++];
            var terminalValuesMap = this._attrValueMap.get(attrName);
            if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {
              result = this._matchTerminal(terminalValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) || result;
            }
            result = this._matchTerminal(terminalValuesMap, attrValue, cssSelector, matchedCallback) || result;
            var partialValuesMap = this._attrValuePartialMap.get(attrName);
            if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {
              result = this._matchPartial(partialValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) || result;
            }
            result = this._matchPartial(partialValuesMap, attrValue, cssSelector, matchedCallback) || result;
          }
        }
        return result;
      };
      SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {
        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {
          return false;
        }
        var selectables = map.get(name);
        var starSelectables = map.get("*");
        if (lang_1.isPresent(starSelectables)) {
          selectables = selectables.concat(starSelectables);
        }
        if (lang_1.isBlank(selectables)) {
          return false;
        }
        var selectable;
        var result = false;
        for (var index = 0; index < selectables.length; index++) {
          selectable = selectables[index];
          result = selectable.finalize(cssSelector, matchedCallback) || result;
        }
        return result;
      };
      SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {
        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {
          return false;
        }
        var nestedSelector = map.get(name);
        if (lang_1.isBlank(nestedSelector)) {
          return false;
        }
        return nestedSelector.match(cssSelector, matchedCallback);
      };
      return SelectorMatcher;
    }();
    exports.SelectorMatcher = SelectorMatcher;
    var SelectorListContext = function () {
      function SelectorListContext(selectors) {
        this.selectors = selectors;
        this.alreadyMatched = false;
      }
      return SelectorListContext;
    }();
    exports.SelectorListContext = SelectorListContext;
    var SelectorContext = function () {
      function SelectorContext(selector, cbContext, listContext) {
        this.selector = selector;
        this.cbContext = cbContext;
        this.listContext = listContext;
        this.notSelectors = selector.notSelectors;
      }
      SelectorContext.prototype.finalize = function (cssSelector, callback) {
        var result = true;
        if (this.notSelectors.length > 0 && (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {
          var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);
          result = !notMatcher.match(cssSelector, null);
        }
        if (result && lang_1.isPresent(callback) && (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {
          if (lang_1.isPresent(this.listContext)) {
            this.listContext.alreadyMatched = true;
          }
          callback(this.selector, this.cbContext);
        }
        return result;
      };
      return SelectorContext;
    }();
    exports.SelectorContext = SelectorContext;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/facade/base_wrapped_exception.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
    * A base class for the WrappedException that can be used to identify
    * a WrappedException from ExceptionHandler without adding circular
    * dependency.
    */
    var BaseWrappedException = function (_super) {
        __extends(BaseWrappedException, _super);
        function BaseWrappedException(message) {
            _super.call(this, message);
        }
        Object.defineProperty(BaseWrappedException.prototype, "wrapperMessage", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "wrapperStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalException", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "context", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "message", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        return BaseWrappedException;
    }(Error);
    exports.BaseWrappedException = BaseWrappedException;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js", ["npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js");
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = function () {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  }();
  var createMapFromMap = function () {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function (v, k) {
        map.set(k, v);
      });
      return map;
    };
  }();
  var _clearValues = function () {
    if (new exports.Map().keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!(k = keyIterator.next()).done) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function (v, k) {
          m.set(k, null);
        });
      };
    }
  }();
  var _arrayFromMap = function () {
    try {
      if (new exports.Map().values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function (v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  }();
  var MapWrapper = function () {
    function MapWrapper() {}
    MapWrapper.clone = function (m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function (stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function (m) {
      var r = {};
      m.forEach(function (v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function (pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function (m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function (m) {
      return m;
    };
    MapWrapper.keys = function (m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function (m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  }();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = function () {
    function StringMapWrapper() {}
    StringMapWrapper.create = function () {
      return {};
    };
    StringMapWrapper.contains = function (map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function (map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function (map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function (map) {
      return Object.keys(map);
    };
    StringMapWrapper.values = function (map) {
      return Object.keys(map).reduce(function (r, a) {
        r.push(map[a]);
        return r;
      }, []);
    };
    StringMapWrapper.isEmpty = function (map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function (map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function (map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function (m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function (m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  }();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = function () {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function (size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function (size) {
      return new Array(size);
    };
    ListWrapper.clone = function (array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function (array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function (array) {
      if (!array) return null;
      return array[0];
    };
    ListWrapper.last = function (array) {
      if (!array || array.length == 0) return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function (array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function (list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function (array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function (a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function (list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function (list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function (list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function (list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function (list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function (list) {
      return list.length == 0;
    };
    ListWrapper.fill = function (list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function (a, b) {
      if (a.length != b.length) return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    };
    ListWrapper.slice = function (l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function (l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function (l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function (l) {
      return l.toString();
    };
    ListWrapper.toJSON = function (l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function (list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    ListWrapper.flatten = function (list) {
      var target = [];
      _flattenArray(list, target);
      return target;
    };
    ListWrapper.addAll = function (list, source) {
      for (var i = 0; i < source.length; i++) {
        list.push(source[i]);
      }
    };
    return ListWrapper;
  }();
  exports.ListWrapper = ListWrapper;
  function _flattenArray(source, target) {
    if (lang_1.isPresent(source)) {
      for (var i = 0; i < source.length; i++) {
        var item = source[i];
        if (lang_1.isArray(item)) {
          _flattenArray(item, target);
        } else {
          target.push(item);
        }
      }
    }
    return target;
  }
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj)) return false;
    return lang_1.isArray(obj) || !(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj;
  }
  exports.isListLikeIterable = isListLikeIterable;
  function areIterablesEqual(a, b, comparator) {
    var iterator1 = a[lang_1.getSymbolIterator()]();
    var iterator2 = b[lang_1.getSymbolIterator()]();
    while (true) {
      var item1 = iterator1.next();
      var item2 = iterator2.next();
      if (item1.done && item2.done) return true;
      if (item1.done || item2.done) return false;
      if (!comparator(item1.value, item2.value)) return false;
    }
  }
  exports.areIterablesEqual = areIterablesEqual;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!(item = iterator.next()).done) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = function () {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  }();
  var SetWrapper = function () {
    function SetWrapper() {}
    SetWrapper.createFromList = function (lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function (s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function (m, k) {
      m.delete(k);
    };
    return SetWrapper;
  }();
  exports.SetWrapper = SetWrapper;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/facade/exception_handler.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var base_wrapped_exception_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var collection_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/collection.js');
  var _ArrayLogger = function () {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function () {};
    ;
    return _ArrayLogger;
  }();
  var ExceptionHandler = function () {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException) throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function (exception) {
      return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function (exception) {
      try {
        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception.originalException;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  }();
  exports.ExceptionHandler = ExceptionHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/exception_handler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var base_wrapped_exception_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var exception_handler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exception_handler.js');
  var exception_handler_2 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exception_handler.js');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = function (_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = new Error(message).stack;
    }
    BaseException.prototype.toString = function () {
      return this.message;
    };
    return BaseException;
  }(Error);
  exports.BaseException = BaseException;
  var WrappedException = function (_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = new Error(_wrapperMessage).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function () {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function () {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function () {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function () {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function () {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function () {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function () {
      return this.message;
    };
    return WrappedException;
  }(base_wrapped_exception_1.BaseWrappedException);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/src/output/path_util.js', ['npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var exceptions_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/exceptions.js');
  var lang_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/facade/lang.js');
  var _ASSET_URL_RE = /asset:([^\/]+)\/([^\/]+)\/(.+)/g;
  var ImportGenerator = function () {
    function ImportGenerator() {}
    ImportGenerator.parseAssetUrl = function (url) {
      return AssetUrl.parse(url);
    };
    return ImportGenerator;
  }();
  exports.ImportGenerator = ImportGenerator;
  var AssetUrl = function () {
    function AssetUrl(packageName, firstLevelDir, modulePath) {
      this.packageName = packageName;
      this.firstLevelDir = firstLevelDir;
      this.modulePath = modulePath;
    }
    AssetUrl.parse = function (url, allowNonMatching) {
      if (allowNonMatching === void 0) {
        allowNonMatching = true;
      }
      var match = lang_1.RegExpWrapper.firstMatch(_ASSET_URL_RE, url);
      if (lang_1.isPresent(match)) {
        return new AssetUrl(match[1], match[2], match[3]);
      }
      if (allowNonMatching) {
        return null;
      }
      throw new exceptions_1.BaseException("Url " + url + " is not a valid asset: url");
    };
    return AssetUrl;
  }();
  exports.AssetUrl = AssetUrl;
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/private_export.js', ['npm:@angular/compiler@2.0.0-rc.1/src/selector.js', 'npm:@angular/compiler@2.0.0-rc.1/src/output/path_util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var selector = $__require('npm:@angular/compiler@2.0.0-rc.1/src/selector.js');
  var pathUtil = $__require('npm:@angular/compiler@2.0.0-rc.1/src/output/path_util.js');
  var __compiler_private__;
  (function (__compiler_private__) {
    __compiler_private__.SelectorMatcher = selector.SelectorMatcher;
    __compiler_private__.CssSelector = selector.CssSelector;
    __compiler_private__.AssetUrl = pathUtil.AssetUrl;
    __compiler_private__.ImportGenerator = pathUtil.ImportGenerator;
  })(__compiler_private__ = exports.__compiler_private__ || (exports.__compiler_private__ = {}));
  return module.exports;
});
System.registerDynamic('npm:@angular/compiler@2.0.0-rc.1/compiler.js', ['npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js', 'npm:@angular/compiler@2.0.0-rc.1/src/compiler.js', 'npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js', 'npm:@angular/compiler@2.0.0-rc.1/private_export.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  var element_schema_registry_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/schema/element_schema_registry.js');
  exports.ElementSchemaRegistry = element_schema_registry_1.ElementSchemaRegistry;
  var compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1/src/compiler.js');
  exports.COMPILER_PROVIDERS = compiler_1.COMPILER_PROVIDERS;
  exports.TEMPLATE_TRANSFORMS = compiler_1.TEMPLATE_TRANSFORMS;
  exports.CompilerConfig = compiler_1.CompilerConfig;
  exports.RenderTypes = compiler_1.RenderTypes;
  exports.UrlResolver = compiler_1.UrlResolver;
  exports.DEFAULT_PACKAGE_URL_PROVIDER = compiler_1.DEFAULT_PACKAGE_URL_PROVIDER;
  exports.createOfflineCompileUrlResolver = compiler_1.createOfflineCompileUrlResolver;
  exports.XHR = compiler_1.XHR;
  exports.ViewResolver = compiler_1.ViewResolver;
  exports.DirectiveResolver = compiler_1.DirectiveResolver;
  exports.PipeResolver = compiler_1.PipeResolver;
  exports.SourceModule = compiler_1.SourceModule;
  exports.NormalizedComponentWithViewDirectives = compiler_1.NormalizedComponentWithViewDirectives;
  exports.OfflineCompiler = compiler_1.OfflineCompiler;
  exports.CompileMetadataWithIdentifier = compiler_1.CompileMetadataWithIdentifier;
  exports.CompileMetadataWithType = compiler_1.CompileMetadataWithType;
  exports.CompileIdentifierMetadata = compiler_1.CompileIdentifierMetadata;
  exports.CompileDiDependencyMetadata = compiler_1.CompileDiDependencyMetadata;
  exports.CompileProviderMetadata = compiler_1.CompileProviderMetadata;
  exports.CompileFactoryMetadata = compiler_1.CompileFactoryMetadata;
  exports.CompileTokenMetadata = compiler_1.CompileTokenMetadata;
  exports.CompileTypeMetadata = compiler_1.CompileTypeMetadata;
  exports.CompileQueryMetadata = compiler_1.CompileQueryMetadata;
  exports.CompileTemplateMetadata = compiler_1.CompileTemplateMetadata;
  exports.CompileDirectiveMetadata = compiler_1.CompileDirectiveMetadata;
  exports.CompilePipeMetadata = compiler_1.CompilePipeMetadata;
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/src/template_ast.js'));
  __export($__require('npm:@angular/compiler@2.0.0-rc.1/private_export.js'));
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1/index.js", ["npm:@angular/compiler@2.0.0-rc.1/compiler.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("npm:@angular/compiler@2.0.0-rc.1/compiler.js"));
  return module.exports;
});
System.registerDynamic("npm:@angular/compiler@2.0.0-rc.1.js", ["npm:@angular/compiler@2.0.0-rc.1/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@angular/compiler@2.0.0-rc.1/index.js");
  return module.exports;
});
System.registerDynamic("npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/facade/promise.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var PromiseCompleter = function () {
        function PromiseCompleter() {
            var _this = this;
            this.promise = new Promise(function (res, rej) {
                _this.resolve = res;
                _this.reject = rej;
            });
        }
        return PromiseCompleter;
    }();
    exports.PromiseCompleter = PromiseCompleter;
    var PromiseWrapper = function () {
        function PromiseWrapper() {}
        PromiseWrapper.resolve = function (obj) {
            return Promise.resolve(obj);
        };
        PromiseWrapper.reject = function (obj, _) {
            return Promise.reject(obj);
        };
        // Note: We can't rename this method into `catch`, as this is not a valid
        // method name in Dart.
        PromiseWrapper.catchError = function (promise, onError) {
            return promise.catch(onError);
        };
        PromiseWrapper.all = function (promises) {
            if (promises.length == 0) return Promise.resolve([]);
            return Promise.all(promises);
        };
        PromiseWrapper.then = function (promise, success, rejection) {
            return promise.then(success, rejection);
        };
        PromiseWrapper.wrap = function (computation) {
            return new Promise(function (res, rej) {
                try {
                    res(computation());
                } catch (e) {
                    rej(e);
                }
            });
        };
        PromiseWrapper.scheduleMicrotask = function (computation) {
            PromiseWrapper.then(PromiseWrapper.resolve(null), computation, function (_) {});
        };
        PromiseWrapper.isPromise = function (obj) {
            return obj instanceof Promise;
        };
        PromiseWrapper.completer = function () {
            return new PromiseCompleter();
        };
        return PromiseWrapper;
    }();
    exports.PromiseWrapper = PromiseWrapper;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/xhr/xhr_impl.js', ['npm:@angular/compiler@2.0.0-rc.1.js', 'npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/facade/promise.js', 'npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var compiler_1 = $__require('npm:@angular/compiler@2.0.0-rc.1.js');
  var promise_1 = $__require('npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/facade/promise.js');
  var lang_1 = $__require('npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/facade/lang.js');
  var XHRImpl = function (_super) {
    __extends(XHRImpl, _super);
    function XHRImpl() {
      _super.apply(this, arguments);
    }
    XHRImpl.prototype.get = function (url) {
      var completer = promise_1.PromiseWrapper.completer();
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, true);
      xhr.responseType = 'text';
      xhr.onload = function () {
        var response = lang_1.isPresent(xhr.response) ? xhr.response : xhr.responseText;
        var status = xhr.status === 1223 ? 204 : xhr.status;
        if (status === 0) {
          status = response ? 200 : 0;
        }
        if (200 <= status && status <= 300) {
          completer.resolve(response);
        } else {
          completer.reject("Failed to load " + url, null);
        }
      };
      xhr.onerror = function () {
        completer.reject("Failed to load " + url, null);
      };
      xhr.send();
      return completer.promise;
    };
    return XHRImpl;
  }(compiler_1.XHR);
  exports.XHRImpl = XHRImpl;
  return module.exports;
});
System.registerDynamic("npm:google-code-prettify@1.0.1/src/prettify.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  /* */
  "format cjs";

  var define,
      global = this || self,
      GLOBAL = global;
  (function (process) {
    var IN_GLOBAL_SCOPE = true;
    window['PR_SHOULD_USE_CONTINUATION'] = true;
    var prettyPrintOne;
    var prettyPrint;
    (function () {
      var win = window;
      var FLOW_CONTROL_KEYWORDS = ["break,continue,do,else,for,if,return,while"];
      var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "auto,case,char,const,default," + "double,enum,extern,float,goto,inline,int,long,register,short,signed," + "sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];
      var COMMON_KEYWORDS = [C_KEYWORDS, "catch,class,delete,false,import," + "new,operator,private,protected,public,this,throw,true,try,typeof"];
      var CPP_KEYWORDS = [COMMON_KEYWORDS, "alignof,align_union,asm,axiom,bool," + "concept,concept_map,const_cast,constexpr,decltype,delegate," + "dynamic_cast,explicit,export,friend,generic,late_check," + "mutable,namespace,nullptr,property,reinterpret_cast,static_assert," + "static_cast,template,typeid,typename,using,virtual,where"];
      var JAVA_KEYWORDS = [COMMON_KEYWORDS, "abstract,assert,boolean,byte,extends,final,finally,implements,import," + "instanceof,interface,null,native,package,strictfp,super,synchronized," + "throws,transient"];
      var CSHARP_KEYWORDS = [JAVA_KEYWORDS, "as,base,by,checked,decimal,delegate,descending,dynamic,event," + "fixed,foreach,from,group,implicit,in,internal,into,is,let," + "lock,object,out,override,orderby,params,partial,readonly,ref,sbyte," + "sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort," + "var,virtual,where"];
      var COFFEE_KEYWORDS = "all,and,by,catch,class,else,extends,false,finally," + "for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then," + "throw,true,try,unless,until,when,while,yes";
      var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS, "debugger,eval,export,function,get,null,set,undefined,var,with," + "Infinity,NaN"];
      var PERL_KEYWORDS = "caller,delete,die,do,dump,elsif,eval,exit,foreach,for," + "goto,if,import,last,local,my,next,no,our,print,package,redo,require," + "sub,undef,unless,until,use,wantarray,while,BEGIN,END";
      var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "and,as,assert,class,def,del," + "elif,except,exec,finally,from,global,import,in,is,lambda," + "nonlocal,not,or,pass,print,raise,try,with,yield," + "False,True,None"];
      var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "alias,and,begin,case,class," + "def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo," + "rescue,retry,self,super,then,true,undef,unless,until,when,yield," + "BEGIN,END"];
      var RUST_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "as,assert,const,copy,drop," + "enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv," + "pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"];
      var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "case,done,elif,esac,eval,fi," + "function,in,local,set,then,until"];
      var ALL_KEYWORDS = [CPP_KEYWORDS, CSHARP_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS, PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS];
      var C_TYPES = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/;
      var PR_STRING = 'str';
      var PR_KEYWORD = 'kwd';
      var PR_COMMENT = 'com';
      var PR_TYPE = 'typ';
      var PR_LITERAL = 'lit';
      var PR_PUNCTUATION = 'pun';
      var PR_PLAIN = 'pln';
      var PR_TAG = 'tag';
      var PR_DECLARATION = 'dec';
      var PR_SOURCE = 'src';
      var PR_ATTRIB_NAME = 'atn';
      var PR_ATTRIB_VALUE = 'atv';
      var PR_NOCODE = 'nocode';
      var REGEXP_PRECEDER_PATTERN = '(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*';
      function combinePrefixPatterns(regexs) {
        var capturedGroupIndex = 0;
        var needToFoldCase = false;
        var ignoreCase = false;
        for (var i = 0, n = regexs.length; i < n; ++i) {
          var regex = regexs[i];
          if (regex.ignoreCase) {
            ignoreCase = true;
          } else if (/[a-z]/i.test(regex.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi, ''))) {
            needToFoldCase = true;
            ignoreCase = false;
            break;
          }
        }
        var escapeCharToCodeUnit = {
          'b': 8,
          't': 9,
          'n': 0xa,
          'v': 0xb,
          'f': 0xc,
          'r': 0xd
        };
        function decodeEscape(charsetPart) {
          var cc0 = charsetPart.charCodeAt(0);
          if (cc0 !== 92) {
            return cc0;
          }
          var c1 = charsetPart.charAt(1);
          cc0 = escapeCharToCodeUnit[c1];
          if (cc0) {
            return cc0;
          } else if ('0' <= c1 && c1 <= '7') {
            return parseInt(charsetPart.substring(1), 8);
          } else if (c1 === 'u' || c1 === 'x') {
            return parseInt(charsetPart.substring(2), 16);
          } else {
            return charsetPart.charCodeAt(1);
          }
        }
        function encodeEscape(charCode) {
          if (charCode < 0x20) {
            return (charCode < 0x10 ? '\\x0' : '\\x') + charCode.toString(16);
          }
          var ch = String.fromCharCode(charCode);
          return ch === '\\' || ch === '-' || ch === ']' || ch === '^' ? "\\" + ch : ch;
        }
        function caseFoldCharset(charSet) {
          var charsetParts = charSet.substring(1, charSet.length - 1).match(new RegExp('\\\\u[0-9A-Fa-f]{4}' + '|\\\\x[0-9A-Fa-f]{2}' + '|\\\\[0-3][0-7]{0,2}' + '|\\\\[0-7]{1,2}' + '|\\\\[\\s\\S]' + '|-' + '|[^-\\\\]', 'g'));
          var ranges = [];
          var inverse = charsetParts[0] === '^';
          var out = ['['];
          if (inverse) {
            out.push('^');
          }
          for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {
            var p = charsetParts[i];
            if (/\\[bdsw]/i.test(p)) {
              out.push(p);
            } else {
              var start = decodeEscape(p);
              var end;
              if (i + 2 < n && '-' === charsetParts[i + 1]) {
                end = decodeEscape(charsetParts[i + 2]);
                i += 2;
              } else {
                end = start;
              }
              ranges.push([start, end]);
              if (!(end < 65 || start > 122)) {
                if (!(end < 65 || start > 90)) {
                  ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);
                }
                if (!(end < 97 || start > 122)) {
                  ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);
                }
              }
            }
          }
          ranges.sort(function (a, b) {
            return a[0] - b[0] || b[1] - a[1];
          });
          var consolidatedRanges = [];
          var lastRange = [];
          for (var i = 0; i < ranges.length; ++i) {
            var range = ranges[i];
            if (range[0] <= lastRange[1] + 1) {
              lastRange[1] = Math.max(lastRange[1], range[1]);
            } else {
              consolidatedRanges.push(lastRange = range);
            }
          }
          for (var i = 0; i < consolidatedRanges.length; ++i) {
            var range = consolidatedRanges[i];
            out.push(encodeEscape(range[0]));
            if (range[1] > range[0]) {
              if (range[1] + 1 > range[0]) {
                out.push('-');
              }
              out.push(encodeEscape(range[1]));
            }
          }
          out.push(']');
          return out.join('');
        }
        function allowAnywhereFoldCaseAndRenumberGroups(regex) {
          var parts = regex.source.match(new RegExp('(?:' + '\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]' + '|\\\\u[A-Fa-f0-9]{4}' + '|\\\\x[A-Fa-f0-9]{2}' + '|\\\\[0-9]+' + '|\\\\[^ux0-9]' + '|\\(\\?[:!=]' + '|[\\(\\)\\^]' + '|[^\\x5B\\x5C\\(\\)\\^]+' + ')', 'g'));
          var n = parts.length;
          var capturedGroups = [];
          for (var i = 0, groupIndex = 0; i < n; ++i) {
            var p = parts[i];
            if (p === '(') {
              ++groupIndex;
            } else if ('\\' === p.charAt(0)) {
              var decimalValue = +p.substring(1);
              if (decimalValue) {
                if (decimalValue <= groupIndex) {
                  capturedGroups[decimalValue] = -1;
                } else {
                  parts[i] = encodeEscape(decimalValue);
                }
              }
            }
          }
          for (var i = 1; i < capturedGroups.length; ++i) {
            if (-1 === capturedGroups[i]) {
              capturedGroups[i] = ++capturedGroupIndex;
            }
          }
          for (var i = 0, groupIndex = 0; i < n; ++i) {
            var p = parts[i];
            if (p === '(') {
              ++groupIndex;
              if (!capturedGroups[groupIndex]) {
                parts[i] = '(?:';
              }
            } else if ('\\' === p.charAt(0)) {
              var decimalValue = +p.substring(1);
              if (decimalValue && decimalValue <= groupIndex) {
                parts[i] = '\\' + capturedGroups[decimalValue];
              }
            }
          }
          for (var i = 0; i < n; ++i) {
            if ('^' === parts[i] && '^' !== parts[i + 1]) {
              parts[i] = '';
            }
          }
          if (regex.ignoreCase && needToFoldCase) {
            for (var i = 0; i < n; ++i) {
              var p = parts[i];
              var ch0 = p.charAt(0);
              if (p.length >= 2 && ch0 === '[') {
                parts[i] = caseFoldCharset(p);
              } else if (ch0 !== '\\') {
                parts[i] = p.replace(/[a-zA-Z]/g, function (ch) {
                  var cc = ch.charCodeAt(0);
                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';
                });
              }
            }
          }
          return parts.join('');
        }
        var rewritten = [];
        for (var i = 0, n = regexs.length; i < n; ++i) {
          var regex = regexs[i];
          if (regex.global || regex.multiline) {
            throw new Error('' + regex);
          }
          rewritten.push('(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');
        }
        return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');
      }
      function extractSourceSpans(node, isPreformatted) {
        var nocode = /(?:^|\s)nocode(?:\s|$)/;
        var chunks = [];
        var length = 0;
        var spans = [];
        var k = 0;
        function walk(node) {
          var type = node.nodeType;
          if (type == 1) {
            if (nocode.test(node.className)) {
              return;
            }
            for (var child = node.firstChild; child; child = child.nextSibling) {
              walk(child);
            }
            var nodeName = node.nodeName.toLowerCase();
            if ('br' === nodeName || 'li' === nodeName) {
              chunks[k] = '\n';
              spans[k << 1] = length++;
              spans[k++ << 1 | 1] = node;
            }
          } else if (type == 3 || type == 4) {
            var text = node.nodeValue;
            if (text.length) {
              if (!isPreformatted) {
                text = text.replace(/[ \t\r\n]+/g, ' ');
              } else {
                text = text.replace(/\r\n?/g, '\n');
              }
              chunks[k] = text;
              spans[k << 1] = length;
              length += text.length;
              spans[k++ << 1 | 1] = node;
            }
          }
        }
        walk(node);
        return {
          sourceCode: chunks.join('').replace(/\n$/, ''),
          spans: spans
        };
      }
      function appendDecorations(basePos, sourceCode, langHandler, out) {
        if (!sourceCode) {
          return;
        }
        var job = {
          sourceCode: sourceCode,
          basePos: basePos
        };
        langHandler(job);
        out.push.apply(out, job.decorations);
      }
      var notWs = /\S/;
      function childContentWrapper(element) {
        var wrapper = undefined;
        for (var c = element.firstChild; c; c = c.nextSibling) {
          var type = c.nodeType;
          wrapper = type === 1 ? wrapper ? element : c : type === 3 ? notWs.test(c.nodeValue) ? element : wrapper : wrapper;
        }
        return wrapper === element ? undefined : wrapper;
      }
      function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {
        var shortcuts = {};
        var tokenizer;
        (function () {
          var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);
          var allRegexs = [];
          var regexKeys = {};
          for (var i = 0, n = allPatterns.length; i < n; ++i) {
            var patternParts = allPatterns[i];
            var shortcutChars = patternParts[3];
            if (shortcutChars) {
              for (var c = shortcutChars.length; --c >= 0;) {
                shortcuts[shortcutChars.charAt(c)] = patternParts;
              }
            }
            var regex = patternParts[1];
            var k = '' + regex;
            if (!regexKeys.hasOwnProperty(k)) {
              allRegexs.push(regex);
              regexKeys[k] = null;
            }
          }
          allRegexs.push(/[\0-\uffff]/);
          tokenizer = combinePrefixPatterns(allRegexs);
        })();
        var nPatterns = fallthroughStylePatterns.length;
        var decorate = function (job) {
          var sourceCode = job.sourceCode,
              basePos = job.basePos;
          var decorations = [basePos, PR_PLAIN];
          var pos = 0;
          var tokens = sourceCode.match(tokenizer) || [];
          var styleCache = {};
          for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {
            var token = tokens[ti];
            var style = styleCache[token];
            var match = void 0;
            var isEmbedded;
            if (typeof style === 'string') {
              isEmbedded = false;
            } else {
              var patternParts = shortcuts[token.charAt(0)];
              if (patternParts) {
                match = token.match(patternParts[1]);
                style = patternParts[0];
              } else {
                for (var i = 0; i < nPatterns; ++i) {
                  patternParts = fallthroughStylePatterns[i];
                  match = token.match(patternParts[1]);
                  if (match) {
                    style = patternParts[0];
                    break;
                  }
                }
                if (!match) {
                  style = PR_PLAIN;
                }
              }
              isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);
              if (isEmbedded && !(match && typeof match[1] === 'string')) {
                isEmbedded = false;
                style = PR_SOURCE;
              }
              if (!isEmbedded) {
                styleCache[token] = style;
              }
            }
            var tokenStart = pos;
            pos += token.length;
            if (!isEmbedded) {
              decorations.push(basePos + tokenStart, style);
            } else {
              var embeddedSource = match[1];
              var embeddedSourceStart = token.indexOf(embeddedSource);
              var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;
              if (match[2]) {
                embeddedSourceEnd = token.length - match[2].length;
                embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;
              }
              var lang = style.substring(5);
              appendDecorations(basePos + tokenStart, token.substring(0, embeddedSourceStart), decorate, decorations);
              appendDecorations(basePos + tokenStart + embeddedSourceStart, embeddedSource, langHandlerForExtension(lang, embeddedSource), decorations);
              appendDecorations(basePos + tokenStart + embeddedSourceEnd, token.substring(embeddedSourceEnd), decorate, decorations);
            }
          }
          job.decorations = decorations;
        };
        return decorate;
      }
      function sourceDecorator(options) {
        var shortcutStylePatterns = [],
            fallthroughStylePatterns = [];
        if (options['tripleQuotedStrings']) {
          shortcutStylePatterns.push([PR_STRING, /^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/, null, '\'"']);
        } else if (options['multiLineStrings']) {
          shortcutStylePatterns.push([PR_STRING, /^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/, null, '\'"`']);
        } else {
          shortcutStylePatterns.push([PR_STRING, /^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/, null, '"\'']);
        }
        if (options['verbatimStrings']) {
          fallthroughStylePatterns.push([PR_STRING, /^@\"(?:[^\"]|\"\")*(?:\"|$)/, null]);
        }
        var hc = options['hashComments'];
        if (hc) {
          if (options['cStyleComments']) {
            if (hc > 1) {
              shortcutStylePatterns.push([PR_COMMENT, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#']);
            } else {
              shortcutStylePatterns.push([PR_COMMENT, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/, null, '#']);
            }
            fallthroughStylePatterns.push([PR_STRING, /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/, null]);
          } else {
            shortcutStylePatterns.push([PR_COMMENT, /^#[^\r\n]*/, null, '#']);
          }
        }
        if (options['cStyleComments']) {
          fallthroughStylePatterns.push([PR_COMMENT, /^\/\/[^\r\n]*/, null]);
          fallthroughStylePatterns.push([PR_COMMENT, /^\/\*[\s\S]*?(?:\*\/|$)/, null]);
        }
        var regexLiterals = options['regexLiterals'];
        if (regexLiterals) {
          var regexExcls = regexLiterals > 1 ? '' : '\n\r';
          var regexAny = regexExcls ? '.' : '[\\S\\s]';
          var REGEX_LITERAL = '/(?=[^/*' + regexExcls + '])' + '(?:[^/\\x5B\\x5C' + regexExcls + ']' + '|\\x5C' + regexAny + '|\\x5B(?:[^\\x5C\\x5D' + regexExcls + ']' + '|\\x5C' + regexAny + ')*(?:\\x5D|$))+' + '/';
          fallthroughStylePatterns.push(['lang-regex', RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')]);
        }
        var types = options['types'];
        if (types) {
          fallthroughStylePatterns.push([PR_TYPE, types]);
        }
        var keywords = ("" + options['keywords']).replace(/^ | $/g, '');
        if (keywords.length) {
          fallthroughStylePatterns.push([PR_KEYWORD, new RegExp('^(?:' + keywords.replace(/[\s,]+/g, '|') + ')\\b'), null]);
        }
        shortcutStylePatterns.push([PR_PLAIN, /^\s+/, null, ' \r\n\t\xA0']);
        var punctuation = '^.[^\\s\\w.$@\'"`/\\\\]*';
        if (options['regexLiterals']) {
          punctuation += '(?!\s*\/)';
        }
        fallthroughStylePatterns.push([PR_LITERAL, /^@[a-z_$][a-z_$@0-9]*/i, null], [PR_TYPE, /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/, null], [PR_PLAIN, /^[a-z_$][a-z_$@0-9]*/i, null], [PR_LITERAL, new RegExp('^(?:' + '0x[a-f0-9]+' + '|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)' + '(?:e[+\\-]?\\d+)?' + ')' + '[a-z]*', 'i'), null, '0123456789'], [PR_PLAIN, /^\\[\s\S]?/, null], [PR_PUNCTUATION, new RegExp(punctuation), null]);
        return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);
      }
      var decorateSource = sourceDecorator({
        'keywords': ALL_KEYWORDS,
        'hashComments': true,
        'cStyleComments': true,
        'multiLineStrings': true,
        'regexLiterals': true
      });
      function numberLines(node, opt_startLineNum, isPreformatted) {
        var nocode = /(?:^|\s)nocode(?:\s|$)/;
        var lineBreak = /\r\n?|\n/;
        var document = node.ownerDocument;
        var li = document.createElement('li');
        while (node.firstChild) {
          li.appendChild(node.firstChild);
        }
        var listItems = [li];
        function walk(node) {
          var type = node.nodeType;
          if (type == 1 && !nocode.test(node.className)) {
            if ('br' === node.nodeName) {
              breakAfter(node);
              if (node.parentNode) {
                node.parentNode.removeChild(node);
              }
            } else {
              for (var child = node.firstChild; child; child = child.nextSibling) {
                walk(child);
              }
            }
          } else if ((type == 3 || type == 4) && isPreformatted) {
            var text = node.nodeValue;
            var match = text.match(lineBreak);
            if (match) {
              var firstLine = text.substring(0, match.index);
              node.nodeValue = firstLine;
              var tail = text.substring(match.index + match[0].length);
              if (tail) {
                var parent = node.parentNode;
                parent.insertBefore(document.createTextNode(tail), node.nextSibling);
              }
              breakAfter(node);
              if (!firstLine) {
                node.parentNode.removeChild(node);
              }
            }
          }
        }
        function breakAfter(lineEndNode) {
          while (!lineEndNode.nextSibling) {
            lineEndNode = lineEndNode.parentNode;
            if (!lineEndNode) {
              return;
            }
          }
          function breakLeftOf(limit, copy) {
            var rightSide = copy ? limit.cloneNode(false) : limit;
            var parent = limit.parentNode;
            if (parent) {
              var parentClone = breakLeftOf(parent, 1);
              var next = limit.nextSibling;
              parentClone.appendChild(rightSide);
              for (var sibling = next; sibling; sibling = next) {
                next = sibling.nextSibling;
                parentClone.appendChild(sibling);
              }
            }
            return rightSide;
          }
          var copiedListItem = breakLeftOf(lineEndNode.nextSibling, 0);
          for (var parent; (parent = copiedListItem.parentNode) && parent.nodeType === 1;) {
            copiedListItem = parent;
          }
          listItems.push(copiedListItem);
        }
        for (var i = 0; i < listItems.length; ++i) {
          walk(listItems[i]);
        }
        if (opt_startLineNum === (opt_startLineNum | 0)) {
          listItems[0].setAttribute('value', opt_startLineNum);
        }
        var ol = document.createElement('ol');
        ol.className = 'linenums';
        var offset = Math.max(0, opt_startLineNum - 1 | 0) || 0;
        for (var i = 0, n = listItems.length; i < n; ++i) {
          li = listItems[i];
          li.className = 'L' + (i + offset) % 10;
          if (!li.firstChild) {
            li.appendChild(document.createTextNode('\xA0'));
          }
          ol.appendChild(li);
        }
        node.appendChild(ol);
      }
      function recombineTagsAndDecorations(job) {
        var isIE8OrEarlier = /\bMSIE\s(\d+)/.exec(navigator.userAgent);
        isIE8OrEarlier = isIE8OrEarlier && +isIE8OrEarlier[1] <= 8;
        var newlineRe = /\n/g;
        var source = job.sourceCode;
        var sourceLength = source.length;
        var sourceIndex = 0;
        var spans = job.spans;
        var nSpans = spans.length;
        var spanIndex = 0;
        var decorations = job.decorations;
        var nDecorations = decorations.length;
        var decorationIndex = 0;
        decorations[nDecorations] = sourceLength;
        var decPos, i;
        for (i = decPos = 0; i < nDecorations;) {
          if (decorations[i] !== decorations[i + 2]) {
            decorations[decPos++] = decorations[i++];
            decorations[decPos++] = decorations[i++];
          } else {
            i += 2;
          }
        }
        nDecorations = decPos;
        for (i = decPos = 0; i < nDecorations;) {
          var startPos = decorations[i];
          var startDec = decorations[i + 1];
          var end = i + 2;
          while (end + 2 <= nDecorations && decorations[end + 1] === startDec) {
            end += 2;
          }
          decorations[decPos++] = startPos;
          decorations[decPos++] = startDec;
          i = end;
        }
        nDecorations = decorations.length = decPos;
        var sourceNode = job.sourceNode;
        var oldDisplay;
        if (sourceNode) {
          oldDisplay = sourceNode.style.display;
          sourceNode.style.display = 'none';
        }
        try {
          var decoration = null;
          while (spanIndex < nSpans) {
            var spanStart = spans[spanIndex];
            var spanEnd = spans[spanIndex + 2] || sourceLength;
            var decEnd = decorations[decorationIndex + 2] || sourceLength;
            var end = Math.min(spanEnd, decEnd);
            var textNode = spans[spanIndex + 1];
            var styledText;
            if (textNode.nodeType !== 1 && (styledText = source.substring(sourceIndex, end))) {
              if (isIE8OrEarlier) {
                styledText = styledText.replace(newlineRe, '\r');
              }
              textNode.nodeValue = styledText;
              var document = textNode.ownerDocument;
              var span = document.createElement('span');
              span.className = decorations[decorationIndex + 1];
              var parentNode = textNode.parentNode;
              parentNode.replaceChild(span, textNode);
              span.appendChild(textNode);
              if (sourceIndex < spanEnd) {
                spans[spanIndex + 1] = textNode = document.createTextNode(source.substring(end, spanEnd));
                parentNode.insertBefore(textNode, span.nextSibling);
              }
            }
            sourceIndex = end;
            if (sourceIndex >= spanEnd) {
              spanIndex += 2;
            }
            if (sourceIndex >= decEnd) {
              decorationIndex += 2;
            }
          }
        } finally {
          if (sourceNode) {
            sourceNode.style.display = oldDisplay;
          }
        }
      }
      var langHandlerRegistry = {};
      function registerLangHandler(handler, fileExtensions) {
        for (var i = fileExtensions.length; --i >= 0;) {
          var ext = fileExtensions[i];
          if (!langHandlerRegistry.hasOwnProperty(ext)) {
            langHandlerRegistry[ext] = handler;
          } else if (win['console']) {
            console['warn']('cannot override language handler %s', ext);
          }
        }
      }
      function langHandlerForExtension(extension, source) {
        if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {
          extension = /^\s*</.test(source) ? 'default-markup' : 'default-code';
        }
        return langHandlerRegistry[extension];
      }
      registerLangHandler(decorateSource, ['default-code']);
      registerLangHandler(createSimpleLexer([], [[PR_PLAIN, /^[^<?]+/], [PR_DECLARATION, /^<!\w[^>]*(?:>|$)/], [PR_COMMENT, /^<\!--[\s\S]*?(?:-\->|$)/], ['lang-', /^<\?([\s\S]+?)(?:\?>|$)/], ['lang-', /^<%([\s\S]+?)(?:%>|$)/], [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/], ['lang-', /^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i], ['lang-js', /^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i], ['lang-css', /^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i], ['lang-in.tag', /^(<\/?[a-z][^<>]*>)/i]]), ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);
      registerLangHandler(createSimpleLexer([[PR_PLAIN, /^[\s]+/, null, ' \t\r\n'], [PR_ATTRIB_VALUE, /^(?:\"[^\"]*\"?|\'[^\']*\'?)/, null, '\"\'']], [[PR_TAG, /^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i], [PR_ATTRIB_NAME, /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i], ['lang-uq.val', /^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/], [PR_PUNCTUATION, /^[=<>\/]+/], ['lang-js', /^on\w+\s*=\s*\"([^\"]+)\"/i], ['lang-js', /^on\w+\s*=\s*\'([^\']+)\'/i], ['lang-js', /^on\w+\s*=\s*([^\"\'>\s]+)/i], ['lang-css', /^style\s*=\s*\"([^\"]+)\"/i], ['lang-css', /^style\s*=\s*\'([^\']+)\'/i], ['lang-css', /^style\s*=\s*([^\"\'>\s]+)/i]]), ['in.tag']);
      registerLangHandler(createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\s\S]+/]]), ['uq.val']);
      registerLangHandler(sourceDecorator({
        'keywords': CPP_KEYWORDS,
        'hashComments': true,
        'cStyleComments': true,
        'types': C_TYPES
      }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);
      registerLangHandler(sourceDecorator({ 'keywords': 'null,true,false' }), ['json']);
      registerLangHandler(sourceDecorator({
        'keywords': CSHARP_KEYWORDS,
        'hashComments': true,
        'cStyleComments': true,
        'verbatimStrings': true,
        'types': C_TYPES
      }), ['cs']);
      registerLangHandler(sourceDecorator({
        'keywords': JAVA_KEYWORDS,
        'cStyleComments': true
      }), ['java']);
      registerLangHandler(sourceDecorator({
        'keywords': SH_KEYWORDS,
        'hashComments': true,
        'multiLineStrings': true
      }), ['bash', 'bsh', 'csh', 'sh']);
      registerLangHandler(sourceDecorator({
        'keywords': PYTHON_KEYWORDS,
        'hashComments': true,
        'multiLineStrings': true,
        'tripleQuotedStrings': true
      }), ['cv', 'py', 'python']);
      registerLangHandler(sourceDecorator({
        'keywords': PERL_KEYWORDS,
        'hashComments': true,
        'multiLineStrings': true,
        'regexLiterals': 2
      }), ['perl', 'pl', 'pm']);
      registerLangHandler(sourceDecorator({
        'keywords': RUBY_KEYWORDS,
        'hashComments': true,
        'multiLineStrings': true,
        'regexLiterals': true
      }), ['rb', 'ruby']);
      registerLangHandler(sourceDecorator({
        'keywords': JSCRIPT_KEYWORDS,
        'cStyleComments': true,
        'regexLiterals': true
      }), ['javascript', 'js']);
      registerLangHandler(sourceDecorator({
        'keywords': COFFEE_KEYWORDS,
        'hashComments': 3,
        'cStyleComments': true,
        'multilineStrings': true,
        'tripleQuotedStrings': true,
        'regexLiterals': true
      }), ['coffee']);
      registerLangHandler(sourceDecorator({
        'keywords': RUST_KEYWORDS,
        'cStyleComments': true,
        'multilineStrings': true
      }), ['rc', 'rs', 'rust']);
      registerLangHandler(createSimpleLexer([], [[PR_STRING, /^[\s\S]+/]]), ['regex']);
      function applyDecorator(job) {
        var opt_langExtension = job.langExtension;
        try {
          var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre);
          var source = sourceAndSpans.sourceCode;
          job.sourceCode = source;
          job.spans = sourceAndSpans.spans;
          job.basePos = 0;
          langHandlerForExtension(opt_langExtension, source)(job);
          recombineTagsAndDecorations(job);
        } catch (e) {
          if (win['console']) {
            console['log'](e && e['stack'] || e);
          }
        }
      }
      function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {
        var container = document.createElement('div');
        container.innerHTML = '<pre>' + sourceCodeHtml + '</pre>';
        container = container.firstChild;
        if (opt_numberLines) {
          numberLines(container, opt_numberLines, true);
        }
        var job = {
          langExtension: opt_langExtension,
          numberLines: opt_numberLines,
          sourceNode: container,
          pre: 1
        };
        applyDecorator(job);
        return container.innerHTML;
      }
      function $prettyPrint(opt_whenDone, opt_root) {
        var root = opt_root || document.body;
        var doc = root.ownerDocument || document;
        function byTagName(tn) {
          return root.getElementsByTagName(tn);
        }
        var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];
        var elements = [];
        for (var i = 0; i < codeSegments.length; ++i) {
          for (var j = 0, n = codeSegments[i].length; j < n; ++j) {
            elements.push(codeSegments[i][j]);
          }
        }
        codeSegments = null;
        var clock = Date;
        if (!clock['now']) {
          clock = { 'now': function () {
              return +new Date();
            } };
        }
        var k = 0;
        var prettyPrintingJob;
        var langExtensionRe = /\blang(?:uage)?-([\w.]+)(?!\S)/;
        var prettyPrintRe = /\bprettyprint\b/;
        var prettyPrintedRe = /\bprettyprinted\b/;
        var preformattedTagNameRe = /pre|xmp/i;
        var codeRe = /^code$/i;
        var preCodeXmpRe = /^(?:pre|code|xmp)$/i;
        var EMPTY = {};
        function doWork() {
          var endTime = win['PR_SHOULD_USE_CONTINUATION'] ? clock['now']() + 250 : Infinity;
          for (; k < elements.length && clock['now']() < endTime; k++) {
            var cs = elements[k];
            var attrs = EMPTY;
            {
              for (var preceder = cs; preceder = preceder.previousSibling;) {
                var nt = preceder.nodeType;
                var value = (nt === 7 || nt === 8) && preceder.nodeValue;
                if (value ? !/^\??prettify\b/.test(value) : nt !== 3 || /\S/.test(preceder.nodeValue)) {
                  break;
                }
                if (value) {
                  attrs = {};
                  value.replace(/\b(\w+)=([\w:.%+-]+)/g, function (_, name, value) {
                    attrs[name] = value;
                  });
                  break;
                }
              }
            }
            var className = cs.className;
            if ((attrs !== EMPTY || prettyPrintRe.test(className)) && !prettyPrintedRe.test(className)) {
              var nested = false;
              for (var p = cs.parentNode; p; p = p.parentNode) {
                var tn = p.tagName;
                if (preCodeXmpRe.test(tn) && p.className && prettyPrintRe.test(p.className)) {
                  nested = true;
                  break;
                }
              }
              if (!nested) {
                cs.className += ' prettyprinted';
                var langExtension = attrs['lang'];
                if (!langExtension) {
                  langExtension = className.match(langExtensionRe);
                  var wrapper;
                  if (!langExtension && (wrapper = childContentWrapper(cs)) && codeRe.test(wrapper.tagName)) {
                    langExtension = wrapper.className.match(langExtensionRe);
                  }
                  if (langExtension) {
                    langExtension = langExtension[1];
                  }
                }
                var preformatted;
                if (preformattedTagNameRe.test(cs.tagName)) {
                  preformatted = 1;
                } else {
                  var currentStyle = cs['currentStyle'];
                  var defaultView = doc.defaultView;
                  var whitespace = currentStyle ? currentStyle['whiteSpace'] : defaultView && defaultView.getComputedStyle ? defaultView.getComputedStyle(cs, null).getPropertyValue('white-space') : 0;
                  preformatted = whitespace && 'pre' === whitespace.substring(0, 3);
                }
                var lineNums = attrs['linenums'];
                if (!(lineNums = lineNums === 'true' || +lineNums)) {
                  lineNums = className.match(/\blinenums\b(?::(\d+))?/);
                  lineNums = lineNums ? lineNums[1] && lineNums[1].length ? +lineNums[1] : true : false;
                }
                if (lineNums) {
                  numberLines(cs, lineNums, preformatted);
                }
                prettyPrintingJob = {
                  langExtension: langExtension,
                  sourceNode: cs,
                  numberLines: lineNums,
                  pre: preformatted
                };
                applyDecorator(prettyPrintingJob);
              }
            }
          }
          if (k < elements.length) {
            setTimeout(doWork, 250);
          } else if ('function' === typeof opt_whenDone) {
            opt_whenDone();
          }
        }
        doWork();
      }
      var PR = win['PR'] = {
        'createSimpleLexer': createSimpleLexer,
        'registerLangHandler': registerLangHandler,
        'sourceDecorator': sourceDecorator,
        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,
        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,
        'PR_COMMENT': PR_COMMENT,
        'PR_DECLARATION': PR_DECLARATION,
        'PR_KEYWORD': PR_KEYWORD,
        'PR_LITERAL': PR_LITERAL,
        'PR_NOCODE': PR_NOCODE,
        'PR_PLAIN': PR_PLAIN,
        'PR_PUNCTUATION': PR_PUNCTUATION,
        'PR_SOURCE': PR_SOURCE,
        'PR_STRING': PR_STRING,
        'PR_TAG': PR_TAG,
        'PR_TYPE': PR_TYPE,
        'prettyPrintOne': IN_GLOBAL_SCOPE ? win['prettyPrintOne'] = $prettyPrintOne : prettyPrintOne = $prettyPrintOne,
        'prettyPrint': prettyPrint = IN_GLOBAL_SCOPE ? win['prettyPrint'] = $prettyPrint : prettyPrint = $prettyPrint
      };
      if (typeof define === "function" && define['amd']) {
        define("google-code-prettify", [], function () {
          return PR;
        });
      }
    })();
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
  return module.exports;
});
System.registerDynamic('npm:google-code-prettify@1.0.1/src/lang-basic.js', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // Contributed by peter dot kofler at code minus cop dot org

  /**
   * @fileoverview
   * Registers a language handler for Basic.
   *
   * To use, include prettify.js and this file in your HTML page.
   * Then put your code in an HTML tag like
   *      <pre class="prettyprint lang-basic">(my BASIC code)</pre>
   *
   * @author peter dot kofler at code minus cop dot org
   */

  var define,
      global = this || self,
      GLOBAL = global;
  PR.registerLangHandler(PR.createSimpleLexer([// shortcutStylePatterns
  // "single-line-string"
  [PR.PR_STRING, /^(?:"(?:[^\\"\r\n]|\\.)*(?:"|$))/, null, '"'],
  // Whitespace
  [PR.PR_PLAIN, /^\s+/, null, ' \r\n\t\xA0']], [// fallthroughStylePatterns
  // A line comment that starts with REM
  [PR.PR_COMMENT, /^REM[^\r\n]*/, null], [PR.PR_KEYWORD, /^\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\b/, null], [PR.PR_PLAIN, /^[A-Z][A-Z0-9]?(?:\$|%)?/i, null],
  // Literals .0, 0, 0.0 0E13
  [PR.PR_LITERAL, /^(?:\d+(?:\.\d*)?|\.\d+)(?:e[+\-]?\d+)?/i, null, '0123456789'], [PR.PR_PUNCTUATION, /^.[^\s\w\.$%"]*/, null]
  // [PR.PR_PUNCTUATION,   /^[-,:;!<>=\+^\/\*]+/]
  ]), ['basic', 'cbm']);
  return module.exports;
});
(function() {
var define = System.amdDefine;
(function(global, factory) {
  if (typeof module === "object" && typeof module.exports === "object") {
    module.exports = global.document ? factory(global, true) : function(w) {
      if (!w.document) {
        throw new Error("jQuery requires a window with a document");
      }
      return factory(w);
    };
  } else {
    factory(global);
  }
}(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
  var arr = [];
  var document = window.document;
  var slice = arr.slice;
  var concat = arr.concat;
  var push = arr.push;
  var indexOf = arr.indexOf;
  var class2type = {};
  var toString = class2type.toString;
  var hasOwn = class2type.hasOwnProperty;
  var support = {};
  var version = "2.2.0",
      jQuery = function(selector, context) {
        return new jQuery.fn.init(selector, context);
      },
      rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
      rmsPrefix = /^-ms-/,
      rdashAlpha = /-([\da-z])/gi,
      fcamelCase = function(all, letter) {
        return letter.toUpperCase();
      };
  jQuery.fn = jQuery.prototype = {
    jquery: version,
    constructor: jQuery,
    selector: "",
    length: 0,
    toArray: function() {
      return slice.call(this);
    },
    get: function(num) {
      return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this);
    },
    pushStack: function(elems) {
      var ret = jQuery.merge(this.constructor(), elems);
      ret.prevObject = this;
      ret.context = this.context;
      return ret;
    },
    each: function(callback) {
      return jQuery.each(this, callback);
    },
    map: function(callback) {
      return this.pushStack(jQuery.map(this, function(elem, i) {
        return callback.call(elem, i, elem);
      }));
    },
    slice: function() {
      return this.pushStack(slice.apply(this, arguments));
    },
    first: function() {
      return this.eq(0);
    },
    last: function() {
      return this.eq(-1);
    },
    eq: function(i) {
      var len = this.length,
          j = +i + (i < 0 ? len : 0);
      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    end: function() {
      return this.prevObject || this.constructor();
    },
    push: push,
    sort: arr.sort,
    splice: arr.splice
  };
  jQuery.extend = jQuery.fn.extend = function() {
    var options,
        name,
        src,
        copy,
        copyIsArray,
        clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false;
    if (typeof target === "boolean") {
      deep = target;
      target = arguments[i] || {};
      i++;
    }
    if (typeof target !== "object" && !jQuery.isFunction(target)) {
      target = {};
    }
    if (i === length) {
      target = this;
      i--;
    }
    for (; i < length; i++) {
      if ((options = arguments[i]) != null) {
        for (name in options) {
          src = target[name];
          copy = options[name];
          if (target === copy) {
            continue;
          }
          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
            if (copyIsArray) {
              copyIsArray = false;
              clone = src && jQuery.isArray(src) ? src : [];
            } else {
              clone = src && jQuery.isPlainObject(src) ? src : {};
            }
            target[name] = jQuery.extend(deep, clone, copy);
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    }
    return target;
  };
  jQuery.extend({
    expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
    isReady: true,
    error: function(msg) {
      throw new Error(msg);
    },
    noop: function() {},
    isFunction: function(obj) {
      return jQuery.type(obj) === "function";
    },
    isArray: Array.isArray,
    isWindow: function(obj) {
      return obj != null && obj === obj.window;
    },
    isNumeric: function(obj) {
      var realStringObj = obj && obj.toString();
      return !jQuery.isArray(obj) && (realStringObj - parseFloat(realStringObj) + 1) >= 0;
    },
    isPlainObject: function(obj) {
      if (jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
        return false;
      }
      if (obj.constructor && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
        return false;
      }
      return true;
    },
    isEmptyObject: function(obj) {
      var name;
      for (name in obj) {
        return false;
      }
      return true;
    },
    type: function(obj) {
      if (obj == null) {
        return obj + "";
      }
      return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
    },
    globalEval: function(code) {
      var script,
          indirect = eval;
      code = jQuery.trim(code);
      if (code) {
        if (code.indexOf("use strict") === 1) {
          script = document.createElement("script");
          script.text = code;
          document.head.appendChild(script).parentNode.removeChild(script);
        } else {
          indirect(code);
        }
      }
    },
    camelCase: function(string) {
      return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    },
    nodeName: function(elem, name) {
      return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    },
    each: function(obj, callback) {
      var length,
          i = 0;
      if (isArrayLike(obj)) {
        length = obj.length;
        for (; i < length; i++) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      } else {
        for (i in obj) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      }
      return obj;
    },
    trim: function(text) {
      return text == null ? "" : (text + "").replace(rtrim, "");
    },
    makeArray: function(arr, results) {
      var ret = results || [];
      if (arr != null) {
        if (isArrayLike(Object(arr))) {
          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
        } else {
          push.call(ret, arr);
        }
      }
      return ret;
    },
    inArray: function(elem, arr, i) {
      return arr == null ? -1 : indexOf.call(arr, elem, i);
    },
    merge: function(first, second) {
      var len = +second.length,
          j = 0,
          i = first.length;
      for (; j < len; j++) {
        first[i++] = second[j];
      }
      first.length = i;
      return first;
    },
    grep: function(elems, callback, invert) {
      var callbackInverse,
          matches = [],
          i = 0,
          length = elems.length,
          callbackExpect = !invert;
      for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);
        if (callbackInverse !== callbackExpect) {
          matches.push(elems[i]);
        }
      }
      return matches;
    },
    map: function(elems, callback, arg) {
      var length,
          value,
          i = 0,
          ret = [];
      if (isArrayLike(elems)) {
        length = elems.length;
        for (; i < length; i++) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret.push(value);
          }
        }
      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret.push(value);
          }
        }
      }
      return concat.apply([], ret);
    },
    guid: 1,
    proxy: function(fn, context) {
      var tmp,
          args,
          proxy;
      if (typeof context === "string") {
        tmp = fn[context];
        context = fn;
        fn = tmp;
      }
      if (!jQuery.isFunction(fn)) {
        return undefined;
      }
      args = slice.call(arguments, 2);
      proxy = function() {
        return fn.apply(context || this, args.concat(slice.call(arguments)));
      };
      proxy.guid = fn.guid = fn.guid || jQuery.guid++;
      return proxy;
    },
    now: Date.now,
    support: support
  });
  if (typeof Symbol === "function") {
    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
  }
  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(i, name) {
    class2type["[object " + name + "]"] = name.toLowerCase();
  });
  function isArrayLike(obj) {
    var length = !!obj && "length" in obj && obj.length,
        type = jQuery.type(obj);
    if (type === "function" || jQuery.isWindow(obj)) {
      return false;
    }
    return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj;
  }
  var Sizzle = (function(window) {
    var i,
        support,
        Expr,
        getText,
        isXML,
        tokenize,
        compile,
        select,
        outermostContext,
        sortInput,
        hasDuplicate,
        setDocument,
        document,
        docElem,
        documentIsHTML,
        rbuggyQSA,
        rbuggyMatches,
        matches,
        contains,
        expando = "sizzle" + 1 * new Date(),
        preferredDoc = window.document,
        dirruns = 0,
        done = 0,
        classCache = createCache(),
        tokenCache = createCache(),
        compilerCache = createCache(),
        sortOrder = function(a, b) {
          if (a === b) {
            hasDuplicate = true;
          }
          return 0;
        },
        MAX_NEGATIVE = 1 << 31,
        hasOwn = ({}).hasOwnProperty,
        arr = [],
        pop = arr.pop,
        push_native = arr.push,
        push = arr.push,
        slice = arr.slice,
        indexOf = function(list, elem) {
          var i = 0,
              len = list.length;
          for (; i < len; i++) {
            if (list[i] === elem) {
              return i;
            }
          }
          return -1;
        },
        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        whitespace = "[\\x20\\t\\r\\n\\f]",
        identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
        attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
        pseudos = ":(" + identifier + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
        rwhitespace = new RegExp(whitespace + "+", "g"),
        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
        rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
        rpseudo = new RegExp(pseudos),
        ridentifier = new RegExp("^" + identifier + "$"),
        matchExpr = {
          "ID": new RegExp("^#(" + identifier + ")"),
          "CLASS": new RegExp("^\\.(" + identifier + ")"),
          "TAG": new RegExp("^(" + identifier + "|[*])"),
          "ATTR": new RegExp("^" + attributes),
          "PSEUDO": new RegExp("^" + pseudos),
          "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
          "bool": new RegExp("^(?:" + booleans + ")$", "i"),
          "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        },
        rinputs = /^(?:input|select|textarea|button)$/i,
        rheader = /^h\d$/i,
        rnative = /^[^{]+\{\s*\[native \w/,
        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        rsibling = /[+~]/,
        rescape = /'|\\/g,
        runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
        funescape = function(_, escaped, escapedWhitespace) {
          var high = "0x" + escaped - 0x10000;
          return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
        },
        unloadHandler = function() {
          setDocument();
        };
    try {
      push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);
      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {apply: arr.length ? function(target, els) {
          push_native.apply(target, slice.call(els));
        } : function(target, els) {
          var j = target.length,
              i = 0;
          while ((target[j++] = els[i++])) {}
          target.length = j - 1;
        }};
    }
    function Sizzle(selector, context, results, seed) {
      var m,
          i,
          elem,
          nid,
          nidselect,
          match,
          groups,
          newSelector,
          newContext = context && context.ownerDocument,
          nodeType = context ? context.nodeType : 9;
      results = results || [];
      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
      }
      if (!seed) {
        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
          setDocument(context);
        }
        context = context || document;
        if (documentIsHTML) {
          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            if ((m = match[1])) {
              if (nodeType === 9) {
                if ((elem = context.getElementById(m))) {
                  if (elem.id === m) {
                    results.push(elem);
                    return results;
                  }
                } else {
                  return results;
                }
              } else {
                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                  results.push(elem);
                  return results;
                }
              }
            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));
              return results;
            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
              push.apply(results, context.getElementsByClassName(m));
              return results;
            }
          }
          if (support.qsa && !compilerCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
            if (nodeType !== 1) {
              newContext = context;
              newSelector = selector;
            } else if (context.nodeName.toLowerCase() !== "object") {
              if ((nid = context.getAttribute("id"))) {
                nid = nid.replace(rescape, "\\$&");
              } else {
                context.setAttribute("id", (nid = expando));
              }
              groups = tokenize(selector);
              i = groups.length;
              nidselect = ridentifier.test(nid) ? "#" + nid : "[id='" + nid + "']";
              while (i--) {
                groups[i] = nidselect + " " + toSelector(groups[i]);
              }
              newSelector = groups.join(",");
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
            }
            if (newSelector) {
              try {
                push.apply(results, newContext.querySelectorAll(newSelector));
                return results;
              } catch (qsaError) {} finally {
                if (nid === expando) {
                  context.removeAttribute("id");
                }
              }
            }
          }
        }
      }
      return select(selector.replace(rtrim, "$1"), context, results, seed);
    }
    function createCache() {
      var keys = [];
      function cache(key, value) {
        if (keys.push(key + " ") > Expr.cacheLength) {
          delete cache[keys.shift()];
        }
        return (cache[key + " "] = value);
      }
      return cache;
    }
    function markFunction(fn) {
      fn[expando] = true;
      return fn;
    }
    function assert(fn) {
      var div = document.createElement("div");
      try {
        return !!fn(div);
      } catch (e) {
        return false;
      } finally {
        if (div.parentNode) {
          div.parentNode.removeChild(div);
        }
        div = null;
      }
    }
    function addHandle(attrs, handler) {
      var arr = attrs.split("|"),
          i = arr.length;
      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }
    function siblingCheck(a, b) {
      var cur = b && a,
          diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
      if (diff) {
        return diff;
      }
      if (cur) {
        while ((cur = cur.nextSibling)) {
          if (cur === b) {
            return -1;
          }
        }
      }
      return a ? 1 : -1;
    }
    function createInputPseudo(type) {
      return function(elem) {
        var name = elem.nodeName.toLowerCase();
        return name === "input" && elem.type === type;
      };
    }
    function createButtonPseudo(type) {
      return function(elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === "input" || name === "button") && elem.type === type;
      };
    }
    function createPositionalPseudo(fn) {
      return markFunction(function(argument) {
        argument = +argument;
        return markFunction(function(seed, matches) {
          var j,
              matchIndexes = fn([], seed.length, argument),
              i = matchIndexes.length;
          while (i--) {
            if (seed[(j = matchIndexes[i])]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }
    function testContext(context) {
      return context && typeof context.getElementsByTagName !== "undefined" && context;
    }
    support = Sizzle.support = {};
    isXML = Sizzle.isXML = function(elem) {
      var documentElement = elem && (elem.ownerDocument || elem).documentElement;
      return documentElement ? documentElement.nodeName !== "HTML" : false;
    };
    setDocument = Sizzle.setDocument = function(node) {
      var hasCompare,
          parent,
          doc = node ? node.ownerDocument || node : preferredDoc;
      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      }
      document = doc;
      docElem = document.documentElement;
      documentIsHTML = !isXML(document);
      if ((parent = document.defaultView) && parent.top !== parent) {
        if (parent.addEventListener) {
          parent.addEventListener("unload", unloadHandler, false);
        } else if (parent.attachEvent) {
          parent.attachEvent("onunload", unloadHandler);
        }
      }
      support.attributes = assert(function(div) {
        div.className = "i";
        return !div.getAttribute("className");
      });
      support.getElementsByTagName = assert(function(div) {
        div.appendChild(document.createComment(""));
        return !div.getElementsByTagName("*").length;
      });
      support.getElementsByClassName = rnative.test(document.getElementsByClassName);
      support.getById = assert(function(div) {
        docElem.appendChild(div).id = expando;
        return !document.getElementsByName || !document.getElementsByName(expando).length;
      });
      if (support.getById) {
        Expr.find["ID"] = function(id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var m = context.getElementById(id);
            return m ? [m] : [];
          }
        };
        Expr.filter["ID"] = function(id) {
          var attrId = id.replace(runescape, funescape);
          return function(elem) {
            return elem.getAttribute("id") === attrId;
          };
        };
      } else {
        delete Expr.find["ID"];
        Expr.filter["ID"] = function(id) {
          var attrId = id.replace(runescape, funescape);
          return function(elem) {
            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
            return node && node.value === attrId;
          };
        };
      }
      Expr.find["TAG"] = support.getElementsByTagName ? function(tag, context) {
        if (typeof context.getElementsByTagName !== "undefined") {
          return context.getElementsByTagName(tag);
        } else if (support.qsa) {
          return context.querySelectorAll(tag);
        }
      } : function(tag, context) {
        var elem,
            tmp = [],
            i = 0,
            results = context.getElementsByTagName(tag);
        if (tag === "*") {
          while ((elem = results[i++])) {
            if (elem.nodeType === 1) {
              tmp.push(elem);
            }
          }
          return tmp;
        }
        return results;
      };
      Expr.find["CLASS"] = support.getElementsByClassName && function(className, context) {
        if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
          return context.getElementsByClassName(className);
        }
      };
      rbuggyMatches = [];
      rbuggyQSA = [];
      if ((support.qsa = rnative.test(document.querySelectorAll))) {
        assert(function(div) {
          docElem.appendChild(div).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";
          if (div.querySelectorAll("[msallowcapture^='']").length) {
            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
          }
          if (!div.querySelectorAll("[selected]").length) {
            rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
          }
          if (!div.querySelectorAll("[id~=" + expando + "-]").length) {
            rbuggyQSA.push("~=");
          }
          if (!div.querySelectorAll(":checked").length) {
            rbuggyQSA.push(":checked");
          }
          if (!div.querySelectorAll("a#" + expando + "+*").length) {
            rbuggyQSA.push(".#.+[+~]");
          }
        });
        assert(function(div) {
          var input = document.createElement("input");
          input.setAttribute("type", "hidden");
          div.appendChild(input).setAttribute("name", "D");
          if (div.querySelectorAll("[name=d]").length) {
            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
          }
          if (!div.querySelectorAll(":enabled").length) {
            rbuggyQSA.push(":enabled", ":disabled");
          }
          div.querySelectorAll("*,:x");
          rbuggyQSA.push(",.*:");
        });
      }
      if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {
        assert(function(div) {
          support.disconnectedMatch = matches.call(div, "div");
          matches.call(div, "[s!='']:x");
          rbuggyMatches.push("!=", pseudos);
        });
      }
      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
      hasCompare = rnative.test(docElem.compareDocumentPosition);
      contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a,
            bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      } : function(a, b) {
        if (b) {
          while ((b = b.parentNode)) {
            if (b === a) {
              return true;
            }
          }
        }
        return false;
      };
      sortOrder = hasCompare ? function(a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
        if (compare) {
          return compare;
        }
        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
        if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {
          if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
            return -1;
          }
          if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
            return 1;
          }
          return sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0;
        }
        return compare & 4 ? -1 : 1;
      } : function(a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var cur,
            i = 0,
            aup = a.parentNode,
            bup = b.parentNode,
            ap = [a],
            bp = [b];
        if (!aup || !bup) {
          return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0;
        } else if (aup === bup) {
          return siblingCheck(a, b);
        }
        cur = a;
        while ((cur = cur.parentNode)) {
          ap.unshift(cur);
        }
        cur = b;
        while ((cur = cur.parentNode)) {
          bp.unshift(cur);
        }
        while (ap[i] === bp[i]) {
          i++;
        }
        return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
      };
      return document;
    };
    Sizzle.matches = function(expr, elements) {
      return Sizzle(expr, null, null, elements);
    };
    Sizzle.matchesSelector = function(elem, expr) {
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      expr = expr.replace(rattributeQuotes, "='$1']");
      if (support.matchesSelector && documentIsHTML && !compilerCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          var ret = matches.call(elem, expr);
          if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
            return ret;
          }
        } catch (e) {}
      }
      return Sizzle(expr, document, null, [elem]).length > 0;
    };
    Sizzle.contains = function(context, elem) {
      if ((context.ownerDocument || context) !== document) {
        setDocument(context);
      }
      return contains(context, elem);
    };
    Sizzle.attr = function(elem, name) {
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      var fn = Expr.attrHandle[name.toLowerCase()],
          val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
    };
    Sizzle.error = function(msg) {
      throw new Error("Syntax error, unrecognized expression: " + msg);
    };
    Sizzle.uniqueSort = function(results) {
      var elem,
          duplicates = [],
          j = 0,
          i = 0;
      hasDuplicate = !support.detectDuplicates;
      sortInput = !support.sortStable && results.slice(0);
      results.sort(sortOrder);
      if (hasDuplicate) {
        while ((elem = results[i++])) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }
        while (j--) {
          results.splice(duplicates[j], 1);
        }
      }
      sortInput = null;
      return results;
    };
    getText = Sizzle.getText = function(elem) {
      var node,
          ret = "",
          i = 0,
          nodeType = elem.nodeType;
      if (!nodeType) {
        while ((node = elem[i++])) {
          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        if (typeof elem.textContent === "string") {
          return elem.textContent;
        } else {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      }
      return ret;
    };
    Expr = Sizzle.selectors = {
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: true
        },
        " ": {dir: "parentNode"},
        "+": {
          dir: "previousSibling",
          first: true
        },
        "~": {dir: "previousSibling"}
      },
      preFilter: {
        "ATTR": function(match) {
          match[1] = match[1].replace(runescape, funescape);
          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
          if (match[2] === "~=") {
            match[3] = " " + match[3] + " ";
          }
          return match.slice(0, 4);
        },
        "CHILD": function(match) {
          match[1] = match[1].toLowerCase();
          if (match[1].slice(0, 3) === "nth") {
            if (!match[3]) {
              Sizzle.error(match[0]);
            }
            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
            match[5] = +((match[7] + match[8]) || match[3] === "odd");
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }
          return match;
        },
        "PSEUDO": function(match) {
          var excess,
              unquoted = !match[6] && match[2];
          if (matchExpr["CHILD"].test(match[0])) {
            return null;
          }
          if (match[3]) {
            match[2] = match[4] || match[5] || "";
          } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
            match[0] = match[0].slice(0, excess);
            match[2] = unquoted.slice(0, excess);
          }
          return match.slice(0, 3);
        }
      },
      filter: {
        "TAG": function(nodeNameSelector) {
          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
          return nodeNameSelector === "*" ? function() {
            return true;
          } : function(elem) {
            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
          };
        },
        "CLASS": function(className) {
          var pattern = classCache[className + " "];
          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
          });
        },
        "ATTR": function(name, operator, check) {
          return function(elem) {
            var result = Sizzle.attr(elem, name);
            if (result == null) {
              return operator === "!=";
            }
            if (!operator) {
              return true;
            }
            result += "";
            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
          };
        },
        "CHILD": function(type, what, argument, first, last) {
          var simple = type.slice(0, 3) !== "nth",
              forward = type.slice(-4) !== "last",
              ofType = what === "of-type";
          return first === 1 && last === 0 ? function(elem) {
            return !!elem.parentNode;
          } : function(elem, context, xml) {
            var cache,
                uniqueCache,
                outerCache,
                node,
                nodeIndex,
                start,
                dir = simple !== forward ? "nextSibling" : "previousSibling",
                parent = elem.parentNode,
                name = ofType && elem.nodeName.toLowerCase(),
                useCache = !xml && !ofType,
                diff = false;
            if (parent) {
              if (simple) {
                while (dir) {
                  node = elem;
                  while ((node = node[dir])) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                      return false;
                    }
                  }
                  start = dir = type === "only" && !start && "nextSibling";
                }
                return true;
              }
              start = [forward ? parent.firstChild : parent.lastChild];
              if (forward && useCache) {
                node = parent;
                outerCache = node[expando] || (node[expando] = {});
                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                cache = uniqueCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = nodeIndex && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];
                while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    uniqueCache[type] = [dirruns, nodeIndex, diff];
                    break;
                  }
                }
              } else {
                if (useCache) {
                  node = elem;
                  outerCache = node[expando] || (node[expando] = {});
                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                  cache = uniqueCache[type] || [];
                  nodeIndex = cache[0] === dirruns && cache[1];
                  diff = nodeIndex;
                }
                if (diff === false) {
                  while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                      if (useCache) {
                        outerCache = node[expando] || (node[expando] = {});
                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        uniqueCache[type] = [dirruns, diff];
                      }
                      if (node === elem) {
                        break;
                      }
                    }
                  }
                }
              }
              diff -= last;
              return diff === first || (diff % first === 0 && diff / first >= 0);
            }
          };
        },
        "PSEUDO": function(pseudo, argument) {
          var args,
              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
          if (fn[expando]) {
            return fn(argument);
          }
          if (fn.length > 1) {
            args = [pseudo, pseudo, "", argument];
            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
              var idx,
                  matched = fn(seed, argument),
                  i = matched.length;
              while (i--) {
                idx = indexOf(seed, matched[i]);
                seed[idx] = !(matches[idx] = matched[i]);
              }
            }) : function(elem) {
              return fn(elem, 0, args);
            };
          }
          return fn;
        }
      },
      pseudos: {
        "not": markFunction(function(selector) {
          var input = [],
              results = [],
              matcher = compile(selector.replace(rtrim, "$1"));
          return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
            var elem,
                unmatched = matcher(seed, null, xml, []),
                i = seed.length;
            while (i--) {
              if ((elem = unmatched[i])) {
                seed[i] = !(matches[i] = elem);
              }
            }
          }) : function(elem, context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results);
            input[0] = null;
            return !results.pop();
          };
        }),
        "has": markFunction(function(selector) {
          return function(elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),
        "contains": markFunction(function(text) {
          text = text.replace(runescape, funescape);
          return function(elem) {
            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
          };
        }),
        "lang": markFunction(function(lang) {
          if (!ridentifier.test(lang || "")) {
            Sizzle.error("unsupported lang: " + lang);
          }
          lang = lang.replace(runescape, funescape).toLowerCase();
          return function(elem) {
            var elemLang;
            do {
              if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);
            return false;
          };
        }),
        "target": function(elem) {
          var hash = window.location && window.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        "root": function(elem) {
          return elem === docElem;
        },
        "focus": function(elem) {
          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        "enabled": function(elem) {
          return elem.disabled === false;
        },
        "disabled": function(elem) {
          return elem.disabled === true;
        },
        "checked": function(elem) {
          var nodeName = elem.nodeName.toLowerCase();
          return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
        },
        "selected": function(elem) {
          if (elem.parentNode) {
            elem.parentNode.selectedIndex;
          }
          return elem.selected === true;
        },
        "empty": function(elem) {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }
          return true;
        },
        "parent": function(elem) {
          return !Expr.pseudos["empty"](elem);
        },
        "header": function(elem) {
          return rheader.test(elem.nodeName);
        },
        "input": function(elem) {
          return rinputs.test(elem.nodeName);
        },
        "button": function(elem) {
          var name = elem.nodeName.toLowerCase();
          return name === "input" && elem.type === "button" || name === "button";
        },
        "text": function(elem) {
          var attr;
          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
        },
        "first": createPositionalPseudo(function() {
          return [0];
        }),
        "last": createPositionalPseudo(function(matchIndexes, length) {
          return [length - 1];
        }),
        "eq": createPositionalPseudo(function(matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        "even": createPositionalPseudo(function(matchIndexes, length) {
          var i = 0;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "odd": createPositionalPseudo(function(matchIndexes, length) {
          var i = 1;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; --i >= 0; ) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; ++i < length; ) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        })
      }
    };
    Expr.pseudos["nth"] = Expr.pseudos["eq"];
    for (i in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true
    }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }
    for (i in {
      submit: true,
      reset: true
    }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    }
    function setFilters() {}
    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();
    tokenize = Sizzle.tokenize = function(selector, parseOnly) {
      var matched,
          match,
          tokens,
          type,
          soFar,
          groups,
          preFilters,
          cached = tokenCache[selector + " "];
      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }
      soFar = selector;
      groups = [];
      preFilters = Expr.preFilter;
      while (soFar) {
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            soFar = soFar.slice(match[0].length) || soFar;
          }
          groups.push((tokens = []));
        }
        matched = false;
        if ((match = rcombinators.exec(soFar))) {
          matched = match.shift();
          tokens.push({
            value: matched,
            type: match[0].replace(rtrim, " ")
          });
          soFar = soFar.slice(matched.length);
        }
        for (type in Expr.filter) {
          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }
        if (!matched) {
          break;
        }
      }
      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
    };
    function toSelector(tokens) {
      var i = 0,
          len = tokens.length,
          selector = "";
      for (; i < len; i++) {
        selector += tokens[i].value;
      }
      return selector;
    }
    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir,
          checkNonElements = base && dir === "parentNode",
          doneName = done++;
      return combinator.first ? function(elem, context, xml) {
        while ((elem = elem[dir])) {
          if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
          }
        }
      } : function(elem, context, xml) {
        var oldCache,
            uniqueCache,
            outerCache,
            newCache = [dirruns, doneName];
        if (xml) {
          while ((elem = elem[dir])) {
            if (elem.nodeType === 1 || checkNonElements) {
              if (matcher(elem, context, xml)) {
                return true;
              }
            }
          }
        } else {
          while ((elem = elem[dir])) {
            if (elem.nodeType === 1 || checkNonElements) {
              outerCache = elem[expando] || (elem[expando] = {});
              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
              if ((oldCache = uniqueCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                return (newCache[2] = oldCache[2]);
              } else {
                uniqueCache[dir] = newCache;
                if ((newCache[2] = matcher(elem, context, xml))) {
                  return true;
                }
              }
            }
          }
        }
      };
    }
    function elementMatcher(matchers) {
      return matchers.length > 1 ? function(elem, context, xml) {
        var i = matchers.length;
        while (i--) {
          if (!matchers[i](elem, context, xml)) {
            return false;
          }
        }
        return true;
      } : matchers[0];
    }
    function multipleContexts(selector, contexts, results) {
      var i = 0,
          len = contexts.length;
      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }
      return results;
    }
    function condense(unmatched, map, filter, context, xml) {
      var elem,
          newUnmatched = [],
          i = 0,
          len = unmatched.length,
          mapped = map != null;
      for (; i < len; i++) {
        if ((elem = unmatched[i])) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);
            if (mapped) {
              map.push(i);
            }
          }
        }
      }
      return newUnmatched;
    }
    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }
      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }
      return markFunction(function(seed, results, context, xml) {
        var temp,
            i,
            elem,
            preMap = [],
            postMap = [],
            preexisting = results.length,
            elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
            matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
            matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        }
        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml);
          i = temp.length;
          while (i--) {
            if ((elem = temp[i])) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }
        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              temp = [];
              i = matcherOut.length;
              while (i--) {
                if ((elem = matcherOut[i])) {
                  temp.push((matcherIn[i] = elem));
                }
              }
              postFinder(null, (matcherOut = []), temp, xml);
            }
            i = matcherOut.length;
            while (i--) {
              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          }
        } else {
          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }
    function matcherFromTokens(tokens) {
      var checkContext,
          matcher,
          j,
          len = tokens.length,
          leadingRelative = Expr.relative[tokens[0].type],
          implicitRelative = leadingRelative || Expr.relative[" "],
          i = leadingRelative ? 1 : 0,
          matchContext = addCombinator(function(elem) {
            return elem === checkContext;
          }, implicitRelative, true),
          matchAnyContext = addCombinator(function(elem) {
            return indexOf(checkContext, elem) > -1;
          }, implicitRelative, true),
          matchers = [function(elem, context, xml) {
            var ret = (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
            checkContext = null;
            return ret;
          }];
      for (; i < len; i++) {
        if ((matcher = Expr.relative[tokens[i].type])) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
          if (matcher[expando]) {
            j = ++i;
            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }
            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === " " ? "*" : ""})).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens));
          }
          matchers.push(matcher);
        }
      }
      return elementMatcher(matchers);
    }
    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0,
          byElement = elementMatchers.length > 0,
          superMatcher = function(seed, context, xml, results, outermost) {
            var elem,
                j,
                matcher,
                matchedCount = 0,
                i = "0",
                unmatched = seed && [],
                setMatched = [],
                contextBackup = outermostContext,
                elems = seed || byElement && Expr.find["TAG"]("*", outermost),
                dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                len = elems.length;
            if (outermost) {
              outermostContext = context === document || context || outermost;
            }
            for (; i !== len && (elem = elems[i]) != null; i++) {
              if (byElement && elem) {
                j = 0;
                if (!context && elem.ownerDocument !== document) {
                  setDocument(elem);
                  xml = !documentIsHTML;
                }
                while ((matcher = elementMatchers[j++])) {
                  if (matcher(elem, context || document, xml)) {
                    results.push(elem);
                    break;
                  }
                }
                if (outermost) {
                  dirruns = dirrunsUnique;
                }
              }
              if (bySet) {
                if ((elem = !matcher && elem)) {
                  matchedCount--;
                }
                if (seed) {
                  unmatched.push(elem);
                }
              }
            }
            matchedCount += i;
            if (bySet && i !== matchedCount) {
              j = 0;
              while ((matcher = setMatchers[j++])) {
                matcher(unmatched, setMatched, context, xml);
              }
              if (seed) {
                if (matchedCount > 0) {
                  while (i--) {
                    if (!(unmatched[i] || setMatched[i])) {
                      setMatched[i] = pop.call(results);
                    }
                  }
                }
                setMatched = condense(setMatched);
              }
              push.apply(results, setMatched);
              if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {
                Sizzle.uniqueSort(results);
              }
            }
            if (outermost) {
              dirruns = dirrunsUnique;
              outermostContext = contextBackup;
            }
            return unmatched;
          };
      return bySet ? markFunction(superMatcher) : superMatcher;
    }
    compile = Sizzle.compile = function(selector, match) {
      var i,
          setMatchers = [],
          elementMatchers = [],
          cached = compilerCache[selector + " "];
      if (!cached) {
        if (!match) {
          match = tokenize(selector);
        }
        i = match.length;
        while (i--) {
          cached = matcherFromTokens(match[i]);
          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        }
        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
        cached.selector = selector;
      }
      return cached;
    };
    select = Sizzle.select = function(selector, context, results, seed) {
      var i,
          tokens,
          token,
          type,
          find,
          compiled = typeof selector === "function" && selector,
          match = !seed && tokenize((selector = compiled.selector || selector));
      results = results || [];
      if (match.length === 1) {
        tokens = match[0] = match[0].slice(0);
        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
          if (!context) {
            return results;
          } else if (compiled) {
            context = context.parentNode;
          }
          selector = selector.slice(tokens.shift().value.length);
        }
        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
        while (i--) {
          token = tokens[i];
          if (Expr.relative[(type = token.type)]) {
            break;
          }
          if ((find = Expr.find[type])) {
            if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
              tokens.splice(i, 1);
              selector = seed.length && toSelector(tokens);
              if (!selector) {
                push.apply(results, seed);
                return results;
              }
              break;
            }
          }
        }
      }
      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
      return results;
    };
    support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
    support.detectDuplicates = !!hasDuplicate;
    setDocument();
    support.sortDetached = assert(function(div1) {
      return div1.compareDocumentPosition(document.createElement("div")) & 1;
    });
    if (!assert(function(div) {
      div.innerHTML = "<a href='#'></a>";
      return div.firstChild.getAttribute("href") === "#";
    })) {
      addHandle("type|href|height|width", function(elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        }
      });
    }
    if (!support.attributes || !assert(function(div) {
      div.innerHTML = "<input/>";
      div.firstChild.setAttribute("value", "");
      return div.firstChild.getAttribute("value") === "";
    })) {
      addHandle("value", function(elem, name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === "input") {
          return elem.defaultValue;
        }
      });
    }
    if (!assert(function(div) {
      return div.getAttribute("disabled") == null;
    })) {
      addHandle(booleans, function(elem, name, isXML) {
        var val;
        if (!isXML) {
          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }
      });
    }
    return Sizzle;
  })(window);
  jQuery.find = Sizzle;
  jQuery.expr = Sizzle.selectors;
  jQuery.expr[":"] = jQuery.expr.pseudos;
  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
  jQuery.text = Sizzle.getText;
  jQuery.isXMLDoc = Sizzle.isXML;
  jQuery.contains = Sizzle.contains;
  var dir = function(elem, dir, until) {
    var matched = [],
        truncate = until !== undefined;
    while ((elem = elem[dir]) && elem.nodeType !== 9) {
      if (elem.nodeType === 1) {
        if (truncate && jQuery(elem).is(until)) {
          break;
        }
        matched.push(elem);
      }
    }
    return matched;
  };
  var siblings = function(n, elem) {
    var matched = [];
    for (; n; n = n.nextSibling) {
      if (n.nodeType === 1 && n !== elem) {
        matched.push(n);
      }
    }
    return matched;
  };
  var rneedsContext = jQuery.expr.match.needsContext;
  var rsingleTag = (/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/);
  var risSimple = /^.[^:#\[\.,]*$/;
  function winnow(elements, qualifier, not) {
    if (jQuery.isFunction(qualifier)) {
      return jQuery.grep(elements, function(elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
      });
    }
    if (qualifier.nodeType) {
      return jQuery.grep(elements, function(elem) {
        return (elem === qualifier) !== not;
      });
    }
    if (typeof qualifier === "string") {
      if (risSimple.test(qualifier)) {
        return jQuery.filter(qualifier, elements, not);
      }
      qualifier = jQuery.filter(qualifier, elements);
    }
    return jQuery.grep(elements, function(elem) {
      return (indexOf.call(qualifier, elem) > -1) !== not;
    });
  }
  jQuery.filter = function(expr, elems, not) {
    var elem = elems[0];
    if (not) {
      expr = ":not(" + expr + ")";
    }
    return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
      return elem.nodeType === 1;
    }));
  };
  jQuery.fn.extend({
    find: function(selector) {
      var i,
          len = this.length,
          ret = [],
          self = this;
      if (typeof selector !== "string") {
        return this.pushStack(jQuery(selector).filter(function() {
          for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
              return true;
            }
          }
        }));
      }
      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }
      ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
      ret.selector = this.selector ? this.selector + " " + selector : selector;
      return ret;
    },
    filter: function(selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },
    not: function(selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },
    is: function(selector) {
      return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    }
  });
  var rootjQuery,
      rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
      init = jQuery.fn.init = function(selector, context, root) {
        var match,
            elem;
        if (!selector) {
          return this;
        }
        root = root || rootjQuery;
        if (typeof selector === "string") {
          if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
            match = [null, selector, null];
          } else {
            match = rquickExpr.exec(selector);
          }
          if (match && (match[1] || !context)) {
            if (match[1]) {
              context = context instanceof jQuery ? context[0] : context;
              jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
              if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                for (match in context) {
                  if (jQuery.isFunction(this[match])) {
                    this[match](context[match]);
                  } else {
                    this.attr(match, context[match]);
                  }
                }
              }
              return this;
            } else {
              elem = document.getElementById(match[2]);
              if (elem && elem.parentNode) {
                this.length = 1;
                this[0] = elem;
              }
              this.context = document;
              this.selector = selector;
              return this;
            }
          } else if (!context || context.jquery) {
            return (context || root).find(selector);
          } else {
            return this.constructor(context).find(selector);
          }
        } else if (selector.nodeType) {
          this.context = this[0] = selector;
          this.length = 1;
          return this;
        } else if (jQuery.isFunction(selector)) {
          return root.ready !== undefined ? root.ready(selector) : selector(jQuery);
        }
        if (selector.selector !== undefined) {
          this.selector = selector.selector;
          this.context = selector.context;
        }
        return jQuery.makeArray(selector, this);
      };
  init.prototype = jQuery.fn;
  rootjQuery = jQuery(document);
  var rparentsprev = /^(?:parents|prev(?:Until|All))/,
      guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
      };
  jQuery.fn.extend({
    has: function(target) {
      var targets = jQuery(target, this),
          l = targets.length;
      return this.filter(function() {
        var i = 0;
        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },
    closest: function(selectors, context) {
      var cur,
          i = 0,
          l = this.length,
          matched = [],
          pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
      for (; i < l; i++) {
        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
          if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
            matched.push(cur);
            break;
          }
        }
      }
      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
    },
    index: function(elem) {
      if (!elem) {
        return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;
      }
      if (typeof elem === "string") {
        return indexOf.call(jQuery(elem), this[0]);
      }
      return indexOf.call(this, elem.jquery ? elem[0] : elem);
    },
    add: function(selector, context) {
      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
    },
    addBack: function(selector) {
      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
  });
  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {}
    return cur;
  }
  jQuery.each({
    parent: function(elem) {
      var parent = elem.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function(elem) {
      return dir(elem, "parentNode");
    },
    parentsUntil: function(elem, i, until) {
      return dir(elem, "parentNode", until);
    },
    next: function(elem) {
      return sibling(elem, "nextSibling");
    },
    prev: function(elem) {
      return sibling(elem, "previousSibling");
    },
    nextAll: function(elem) {
      return dir(elem, "nextSibling");
    },
    prevAll: function(elem) {
      return dir(elem, "previousSibling");
    },
    nextUntil: function(elem, i, until) {
      return dir(elem, "nextSibling", until);
    },
    prevUntil: function(elem, i, until) {
      return dir(elem, "previousSibling", until);
    },
    siblings: function(elem) {
      return siblings((elem.parentNode || {}).firstChild, elem);
    },
    children: function(elem) {
      return siblings(elem.firstChild);
    },
    contents: function(elem) {
      return elem.contentDocument || jQuery.merge([], elem.childNodes);
    }
  }, function(name, fn) {
    jQuery.fn[name] = function(until, selector) {
      var matched = jQuery.map(this, fn, until);
      if (name.slice(-5) !== "Until") {
        selector = until;
      }
      if (selector && typeof selector === "string") {
        matched = jQuery.filter(selector, matched);
      }
      if (this.length > 1) {
        if (!guaranteedUnique[name]) {
          jQuery.uniqueSort(matched);
        }
        if (rparentsprev.test(name)) {
          matched.reverse();
        }
      }
      return this.pushStack(matched);
    };
  });
  var rnotwhite = (/\S+/g);
  function createOptions(options) {
    var object = {};
    jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
      object[flag] = true;
    });
    return object;
  }
  jQuery.Callbacks = function(options) {
    options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);
    var firing,
        memory,
        fired,
        locked,
        list = [],
        queue = [],
        firingIndex = -1,
        fire = function() {
          locked = options.once;
          fired = firing = true;
          for (; queue.length; firingIndex = -1) {
            memory = queue.shift();
            while (++firingIndex < list.length) {
              if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                firingIndex = list.length;
                memory = false;
              }
            }
          }
          if (!options.memory) {
            memory = false;
          }
          firing = false;
          if (locked) {
            if (memory) {
              list = [];
            } else {
              list = "";
            }
          }
        },
        self = {
          add: function() {
            if (list) {
              if (memory && !firing) {
                firingIndex = list.length - 1;
                queue.push(memory);
              }
              (function add(args) {
                jQuery.each(args, function(_, arg) {
                  if (jQuery.isFunction(arg)) {
                    if (!options.unique || !self.has(arg)) {
                      list.push(arg);
                    }
                  } else if (arg && arg.length && jQuery.type(arg) !== "string") {
                    add(arg);
                  }
                });
              })(arguments);
              if (memory && !firing) {
                fire();
              }
            }
            return this;
          },
          remove: function() {
            jQuery.each(arguments, function(_, arg) {
              var index;
              while ((index = jQuery.inArray(arg, list, index)) > -1) {
                list.splice(index, 1);
                if (index <= firingIndex) {
                  firingIndex--;
                }
              }
            });
            return this;
          },
          has: function(fn) {
            return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
          },
          empty: function() {
            if (list) {
              list = [];
            }
            return this;
          },
          disable: function() {
            locked = queue = [];
            list = memory = "";
            return this;
          },
          disabled: function() {
            return !list;
          },
          lock: function() {
            locked = queue = [];
            if (!memory) {
              list = memory = "";
            }
            return this;
          },
          locked: function() {
            return !!locked;
          },
          fireWith: function(context, args) {
            if (!locked) {
              args = args || [];
              args = [context, args.slice ? args.slice() : args];
              queue.push(args);
              if (!firing) {
                fire();
              }
            }
            return this;
          },
          fire: function() {
            self.fireWith(this, arguments);
            return this;
          },
          fired: function() {
            return !!fired;
          }
        };
    return self;
  };
  jQuery.extend({
    Deferred: function(func) {
      var tuples = [["resolve", "done", jQuery.Callbacks("once memory"), "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"], ["notify", "progress", jQuery.Callbacks("memory")]],
          state = "pending",
          promise = {
            state: function() {
              return state;
            },
            always: function() {
              deferred.done(arguments).fail(arguments);
              return this;
            },
            then: function() {
              var fns = arguments;
              return jQuery.Deferred(function(newDefer) {
                jQuery.each(tuples, function(i, tuple) {
                  var fn = jQuery.isFunction(fns[i]) && fns[i];
                  deferred[tuple[1]](function() {
                    var returned = fn && fn.apply(this, arguments);
                    if (returned && jQuery.isFunction(returned.promise)) {
                      returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                    } else {
                      newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);
                    }
                  });
                });
                fns = null;
              }).promise();
            },
            promise: function(obj) {
              return obj != null ? jQuery.extend(obj, promise) : promise;
            }
          },
          deferred = {};
      promise.pipe = promise.then;
      jQuery.each(tuples, function(i, tuple) {
        var list = tuple[2],
            stateString = tuple[3];
        promise[tuple[1]] = list.add;
        if (stateString) {
          list.add(function() {
            state = stateString;
          }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
        }
        deferred[tuple[0]] = function() {
          deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments);
          return this;
        };
        deferred[tuple[0] + "With"] = list.fireWith;
      });
      promise.promise(deferred);
      if (func) {
        func.call(deferred, deferred);
      }
      return deferred;
    },
    when: function(subordinate) {
      var i = 0,
          resolveValues = slice.call(arguments),
          length = resolveValues.length,
          remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,
          deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
          updateFunc = function(i, contexts, values) {
            return function(value) {
              contexts[i] = this;
              values[i] = arguments.length > 1 ? slice.call(arguments) : value;
              if (values === progressValues) {
                deferred.notifyWith(contexts, values);
              } else if (!(--remaining)) {
                deferred.resolveWith(contexts, values);
              }
            };
          },
          progressValues,
          progressContexts,
          resolveContexts;
      if (length > 1) {
        progressValues = new Array(length);
        progressContexts = new Array(length);
        resolveContexts = new Array(length);
        for (; i < length; i++) {
          if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
            resolveValues[i].promise().progress(updateFunc(i, progressContexts, progressValues)).done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject);
          } else {
            --remaining;
          }
        }
      }
      if (!remaining) {
        deferred.resolveWith(resolveContexts, resolveValues);
      }
      return deferred.promise();
    }
  });
  var readyList;
  jQuery.fn.ready = function(fn) {
    jQuery.ready.promise().done(fn);
    return this;
  };
  jQuery.extend({
    isReady: false,
    readyWait: 1,
    holdReady: function(hold) {
      if (hold) {
        jQuery.readyWait++;
      } else {
        jQuery.ready(true);
      }
    },
    ready: function(wait) {
      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      }
      jQuery.isReady = true;
      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      }
      readyList.resolveWith(document, [jQuery]);
      if (jQuery.fn.triggerHandler) {
        jQuery(document).triggerHandler("ready");
        jQuery(document).off("ready");
      }
    }
  });
  function completed() {
    document.removeEventListener("DOMContentLoaded", completed);
    window.removeEventListener("load", completed);
    jQuery.ready();
  }
  jQuery.ready.promise = function(obj) {
    if (!readyList) {
      readyList = jQuery.Deferred();
      if (document.readyState === "complete" || (document.readyState !== "loading" && !document.documentElement.doScroll)) {
        window.setTimeout(jQuery.ready);
      } else {
        document.addEventListener("DOMContentLoaded", completed);
        window.addEventListener("load", completed);
      }
    }
    return readyList.promise(obj);
  };
  jQuery.ready.promise();
  var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0,
        len = elems.length,
        bulk = key == null;
    if (jQuery.type(key) === "object") {
      chainable = true;
      for (i in key) {
        access(elems, fn, i, key[i], true, emptyGet, raw);
      }
    } else if (value !== undefined) {
      chainable = true;
      if (!jQuery.isFunction(value)) {
        raw = true;
      }
      if (bulk) {
        if (raw) {
          fn.call(elems, value);
          fn = null;
        } else {
          bulk = fn;
          fn = function(elem, key, value) {
            return bulk.call(jQuery(elem), value);
          };
        }
      }
      if (fn) {
        for (; i < len; i++) {
          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
      }
    }
    return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;
  };
  var acceptData = function(owner) {
    return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType);
  };
  function Data() {
    this.expando = jQuery.expando + Data.uid++;
  }
  Data.uid = 1;
  Data.prototype = {
    register: function(owner, initial) {
      var value = initial || {};
      if (owner.nodeType) {
        owner[this.expando] = value;
      } else {
        Object.defineProperty(owner, this.expando, {
          value: value,
          writable: true,
          configurable: true
        });
      }
      return owner[this.expando];
    },
    cache: function(owner) {
      if (!acceptData(owner)) {
        return {};
      }
      var value = owner[this.expando];
      if (!value) {
        value = {};
        if (acceptData(owner)) {
          if (owner.nodeType) {
            owner[this.expando] = value;
          } else {
            Object.defineProperty(owner, this.expando, {
              value: value,
              configurable: true
            });
          }
        }
      }
      return value;
    },
    set: function(owner, data, value) {
      var prop,
          cache = this.cache(owner);
      if (typeof data === "string") {
        cache[data] = value;
      } else {
        for (prop in data) {
          cache[prop] = data[prop];
        }
      }
      return cache;
    },
    get: function(owner, key) {
      return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][key];
    },
    access: function(owner, key, value) {
      var stored;
      if (key === undefined || ((key && typeof key === "string") && value === undefined)) {
        stored = this.get(owner, key);
        return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));
      }
      this.set(owner, key, value);
      return value !== undefined ? value : key;
    },
    remove: function(owner, key) {
      var i,
          name,
          camel,
          cache = owner[this.expando];
      if (cache === undefined) {
        return;
      }
      if (key === undefined) {
        this.register(owner);
      } else {
        if (jQuery.isArray(key)) {
          name = key.concat(key.map(jQuery.camelCase));
        } else {
          camel = jQuery.camelCase(key);
          if (key in cache) {
            name = [key, camel];
          } else {
            name = camel;
            name = name in cache ? [name] : (name.match(rnotwhite) || []);
          }
        }
        i = name.length;
        while (i--) {
          delete cache[name[i]];
        }
      }
      if (key === undefined || jQuery.isEmptyObject(cache)) {
        if (owner.nodeType) {
          owner[this.expando] = undefined;
        } else {
          delete owner[this.expando];
        }
      }
    },
    hasData: function(owner) {
      var cache = owner[this.expando];
      return cache !== undefined && !jQuery.isEmptyObject(cache);
    }
  };
  var dataPriv = new Data();
  var dataUser = new Data();
  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      rmultiDash = /[A-Z]/g;
  function dataAttr(elem, key, data) {
    var name;
    if (data === undefined && elem.nodeType === 1) {
      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
      data = elem.getAttribute(name);
      if (typeof data === "string") {
        try {
          data = data === "true" ? true : data === "false" ? false : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
        } catch (e) {}
        dataUser.set(elem, key, data);
      } else {
        data = undefined;
      }
    }
    return data;
  }
  jQuery.extend({
    hasData: function(elem) {
      return dataUser.hasData(elem) || dataPriv.hasData(elem);
    },
    data: function(elem, name, data) {
      return dataUser.access(elem, name, data);
    },
    removeData: function(elem, name) {
      dataUser.remove(elem, name);
    },
    _data: function(elem, name, data) {
      return dataPriv.access(elem, name, data);
    },
    _removeData: function(elem, name) {
      dataPriv.remove(elem, name);
    }
  });
  jQuery.fn.extend({
    data: function(key, value) {
      var i,
          name,
          data,
          elem = this[0],
          attrs = elem && elem.attributes;
      if (key === undefined) {
        if (this.length) {
          data = dataUser.get(elem);
          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
            i = attrs.length;
            while (i--) {
              if (attrs[i]) {
                name = attrs[i].name;
                if (name.indexOf("data-") === 0) {
                  name = jQuery.camelCase(name.slice(5));
                  dataAttr(elem, name, data[name]);
                }
              }
            }
            dataPriv.set(elem, "hasDataAttrs", true);
          }
        }
        return data;
      }
      if (typeof key === "object") {
        return this.each(function() {
          dataUser.set(this, key);
        });
      }
      return access(this, function(value) {
        var data,
            camelKey;
        if (elem && value === undefined) {
          data = dataUser.get(elem, key) || dataUser.get(elem, key.replace(rmultiDash, "-$&").toLowerCase());
          if (data !== undefined) {
            return data;
          }
          camelKey = jQuery.camelCase(key);
          data = dataUser.get(elem, camelKey);
          if (data !== undefined) {
            return data;
          }
          data = dataAttr(elem, camelKey, undefined);
          if (data !== undefined) {
            return data;
          }
          return;
        }
        camelKey = jQuery.camelCase(key);
        this.each(function() {
          var data = dataUser.get(this, camelKey);
          dataUser.set(this, camelKey, value);
          if (key.indexOf("-") > -1 && data !== undefined) {
            dataUser.set(this, key, value);
          }
        });
      }, null, value, arguments.length > 1, null, true);
    },
    removeData: function(key) {
      return this.each(function() {
        dataUser.remove(this, key);
      });
    }
  });
  jQuery.extend({
    queue: function(elem, type, data) {
      var queue;
      if (elem) {
        type = (type || "fx") + "queue";
        queue = dataPriv.get(elem, type);
        if (data) {
          if (!queue || jQuery.isArray(data)) {
            queue = dataPriv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }
        return queue || [];
      }
    },
    dequeue: function(elem, type) {
      type = type || "fx";
      var queue = jQuery.queue(elem, type),
          startLength = queue.length,
          fn = queue.shift(),
          hooks = jQuery._queueHooks(elem, type),
          next = function() {
            jQuery.dequeue(elem, type);
          };
      if (fn === "inprogress") {
        fn = queue.shift();
        startLength--;
      }
      if (fn) {
        if (type === "fx") {
          queue.unshift("inprogress");
        }
        delete hooks.stop;
        fn.call(elem, next, hooks);
      }
      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },
    _queueHooks: function(elem, type) {
      var key = type + "queueHooks";
      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {empty: jQuery.Callbacks("once memory").add(function() {
          dataPriv.remove(elem, [type + "queue", key]);
        })});
    }
  });
  jQuery.fn.extend({
    queue: function(type, data) {
      var setter = 2;
      if (typeof type !== "string") {
        data = type;
        type = "fx";
        setter--;
      }
      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }
      return data === undefined ? this : this.each(function() {
        var queue = jQuery.queue(this, type, data);
        jQuery._queueHooks(this, type);
        if (type === "fx" && queue[0] !== "inprogress") {
          jQuery.dequeue(this, type);
        }
      });
    },
    dequeue: function(type) {
      return this.each(function() {
        jQuery.dequeue(this, type);
      });
    },
    clearQueue: function(type) {
      return this.queue(type || "fx", []);
    },
    promise: function(type, obj) {
      var tmp,
          count = 1,
          defer = jQuery.Deferred(),
          elements = this,
          i = this.length,
          resolve = function() {
            if (!(--count)) {
              defer.resolveWith(elements, [elements]);
            }
          };
      if (typeof type !== "string") {
        obj = type;
        type = undefined;
      }
      type = type || "fx";
      while (i--) {
        tmp = dataPriv.get(elements[i], type + "queueHooks");
        if (tmp && tmp.empty) {
          count++;
          tmp.empty.add(resolve);
        }
      }
      resolve();
      return defer.promise(obj);
    }
  });
  var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
  var cssExpand = ["Top", "Right", "Bottom", "Left"];
  var isHidden = function(elem, el) {
    elem = el || elem;
    return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem);
  };
  function adjustCSS(elem, prop, valueParts, tween) {
    var adjusted,
        scale = 1,
        maxIterations = 20,
        currentValue = tween ? function() {
          return tween.cur();
        } : function() {
          return jQuery.css(elem, prop, "");
        },
        initial = currentValue(),
        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
        initialInUnit = (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));
    if (initialInUnit && initialInUnit[3] !== unit) {
      unit = unit || initialInUnit[3];
      valueParts = valueParts || [];
      initialInUnit = +initial || 1;
      do {
        scale = scale || ".5";
        initialInUnit = initialInUnit / scale;
        jQuery.style(elem, prop, initialInUnit + unit);
      } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);
    }
    if (valueParts) {
      initialInUnit = +initialInUnit || +initial || 0;
      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
      if (tween) {
        tween.unit = unit;
        tween.start = initialInUnit;
        tween.end = adjusted;
      }
    }
    return adjusted;
  }
  var rcheckableType = (/^(?:checkbox|radio)$/i);
  var rtagName = (/<([\w:-]+)/);
  var rscriptType = (/^$|\/(?:java|ecma)script/i);
  var wrapMap = {
    option: [1, "<select multiple='multiple'>", "</select>"],
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""]
  };
  wrapMap.optgroup = wrapMap.option;
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td;
  function getAll(context, tag) {
    var ret = typeof context.getElementsByTagName !== "undefined" ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== "undefined" ? context.querySelectorAll(tag || "*") : [];
    return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;
  }
  function setGlobalEval(elems, refElements) {
    var i = 0,
        l = elems.length;
    for (; i < l; i++) {
      dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
  }
  var rhtml = /<|&#?\w+;/;
  function buildFragment(elems, context, scripts, selection, ignored) {
    var elem,
        tmp,
        tag,
        wrap,
        contains,
        j,
        fragment = context.createDocumentFragment(),
        nodes = [],
        i = 0,
        l = elems.length;
    for (; i < l; i++) {
      elem = elems[i];
      if (elem || elem === 0) {
        if (jQuery.type(elem) === "object") {
          jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
        } else if (!rhtml.test(elem)) {
          nodes.push(context.createTextNode(elem));
        } else {
          tmp = tmp || fragment.appendChild(context.createElement("div"));
          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
          wrap = wrapMap[tag] || wrapMap._default;
          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
          j = wrap[0];
          while (j--) {
            tmp = tmp.lastChild;
          }
          jQuery.merge(nodes, tmp.childNodes);
          tmp = fragment.firstChild;
          tmp.textContent = "";
        }
      }
    }
    fragment.textContent = "";
    i = 0;
    while ((elem = nodes[i++])) {
      if (selection && jQuery.inArray(elem, selection) > -1) {
        if (ignored) {
          ignored.push(elem);
        }
        continue;
      }
      contains = jQuery.contains(elem.ownerDocument, elem);
      tmp = getAll(fragment.appendChild(elem), "script");
      if (contains) {
        setGlobalEval(tmp);
      }
      if (scripts) {
        j = 0;
        while ((elem = tmp[j++])) {
          if (rscriptType.test(elem.type || "")) {
            scripts.push(elem);
          }
        }
      }
    }
    return fragment;
  }
  (function() {
    var fragment = document.createDocumentFragment(),
        div = fragment.appendChild(document.createElement("div")),
        input = document.createElement("input");
    input.setAttribute("type", "radio");
    input.setAttribute("checked", "checked");
    input.setAttribute("name", "t");
    div.appendChild(input);
    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
    div.innerHTML = "<textarea>x</textarea>";
    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
  })();
  var rkeyEvent = /^key/,
      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
      rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
  function returnTrue() {
    return true;
  }
  function returnFalse() {
    return false;
  }
  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {}
  }
  function on(elem, types, selector, data, fn, one) {
    var origFn,
        type;
    if (typeof types === "object") {
      if (typeof selector !== "string") {
        data = data || selector;
        selector = undefined;
      }
      for (type in types) {
        on(elem, type, selector, data, types[type], one);
      }
      return elem;
    }
    if (data == null && fn == null) {
      fn = selector;
      data = selector = undefined;
    } else if (fn == null) {
      if (typeof selector === "string") {
        fn = data;
        data = undefined;
      } else {
        fn = data;
        data = selector;
        selector = undefined;
      }
    }
    if (fn === false) {
      fn = returnFalse;
    } else if (!fn) {
      return this;
    }
    if (one === 1) {
      origFn = fn;
      fn = function(event) {
        jQuery().off(event);
        return origFn.apply(this, arguments);
      };
      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
    }
    return elem.each(function() {
      jQuery.event.add(this, types, fn, data, selector);
    });
  }
  jQuery.event = {
    global: {},
    add: function(elem, types, handler, data, selector) {
      var handleObjIn,
          eventHandle,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.get(elem);
      if (!elemData) {
        return;
      }
      if (handler.handler) {
        handleObjIn = handler;
        handler = handleObjIn.handler;
        selector = handleObjIn.selector;
      }
      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      }
      if (!(events = elemData.events)) {
        events = elemData.events = {};
      }
      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function(e) {
          return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
        };
      }
      types = (types || "").match(rnotwhite) || [""];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort();
        if (!type) {
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        special = jQuery.event.special[type] || {};
        handleObj = jQuery.extend({
          type: type,
          origType: origType,
          data: data,
          handler: handler,
          guid: handler.guid,
          selector: selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace: namespaces.join(".")
        }, handleObjIn);
        if (!(handlers = events[type])) {
          handlers = events[type] = [];
          handlers.delegateCount = 0;
          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle);
            }
          }
        }
        if (special.add) {
          special.add.call(elem, handleObj);
          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        }
        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        }
        jQuery.event.global[type] = true;
      }
    },
    remove: function(elem, types, handler, selector, mappedTypes) {
      var j,
          origCount,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
      if (!elemData || !(events = elemData.events)) {
        return;
      }
      types = (types || "").match(rnotwhite) || [""];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort();
        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        handlers = events[type] || [];
        tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
        origCount = j = handlers.length;
        while (j--) {
          handleObj = handlers[j];
          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
            handlers.splice(j, 1);
            if (handleObj.selector) {
              handlers.delegateCount--;
            }
            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        }
        if (origCount && !handlers.length) {
          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }
          delete events[type];
        }
      }
      if (jQuery.isEmptyObject(events)) {
        dataPriv.remove(elem, "handle events");
      }
    },
    dispatch: function(event) {
      event = jQuery.event.fix(event);
      var i,
          j,
          ret,
          matched,
          handleObj,
          handlerQueue = [],
          args = slice.call(arguments),
          handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
          special = jQuery.event.special[event.type] || {};
      args[0] = event;
      event.delegateTarget = this;
      if (special.preDispatch && special.preDispatch.call(this, event) === false) {
        return;
      }
      handlerQueue = jQuery.event.handlers.call(this, event, handlers);
      i = 0;
      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;
        j = 0;
        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();
                event.stopPropagation();
              }
            }
          }
        }
      }
      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }
      return event.result;
    },
    handlers: function(event, handlers) {
      var i,
          matches,
          sel,
          handleObj,
          handlerQueue = [],
          delegateCount = handlers.delegateCount,
          cur = event.target;
      if (delegateCount && cur.nodeType && (event.type !== "click" || isNaN(event.button) || event.button < 1)) {
        for (; cur !== this; cur = cur.parentNode || this) {
          if (cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click")) {
            matches = [];
            for (i = 0; i < delegateCount; i++) {
              handleObj = handlers[i];
              sel = handleObj.selector + " ";
              if (matches[sel] === undefined) {
                matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
              }
              if (matches[sel]) {
                matches.push(handleObj);
              }
            }
            if (matches.length) {
              handlerQueue.push({
                elem: cur,
                handlers: matches
              });
            }
          }
        }
      }
      if (delegateCount < handlers.length) {
        handlerQueue.push({
          elem: this,
          handlers: handlers.slice(delegateCount)
        });
      }
      return handlerQueue;
    },
    props: ("altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " + "metaKey relatedTarget shiftKey target timeStamp view which").split(" "),
    fixHooks: {},
    keyHooks: {
      props: "char charCode key keyCode".split(" "),
      filter: function(event, original) {
        if (event.which == null) {
          event.which = original.charCode != null ? original.charCode : original.keyCode;
        }
        return event;
      }
    },
    mouseHooks: {
      props: ("button buttons clientX clientY offsetX offsetY pageX pageY " + "screenX screenY toElement").split(" "),
      filter: function(event, original) {
        var eventDoc,
            doc,
            body,
            button = original.button;
        if (event.pageX == null && original.clientX != null) {
          eventDoc = event.target.ownerDocument || document;
          doc = eventDoc.documentElement;
          body = eventDoc.body;
          event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
          event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
        }
        if (!event.which && button !== undefined) {
          event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));
        }
        return event;
      }
    },
    fix: function(event) {
      if (event[jQuery.expando]) {
        return event;
      }
      var i,
          prop,
          copy,
          type = event.type,
          originalEvent = event,
          fixHook = this.fixHooks[type];
      if (!fixHook) {
        this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};
      }
      copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
      event = new jQuery.Event(originalEvent);
      i = copy.length;
      while (i--) {
        prop = copy[i];
        event[prop] = originalEvent[prop];
      }
      if (!event.target) {
        event.target = document;
      }
      if (event.target.nodeType === 3) {
        event.target = event.target.parentNode;
      }
      return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
    },
    special: {
      load: {noBubble: true},
      focus: {
        trigger: function() {
          if (this !== safeActiveElement() && this.focus) {
            this.focus();
            return false;
          }
        },
        delegateType: "focusin"
      },
      blur: {
        trigger: function() {
          if (this === safeActiveElement() && this.blur) {
            this.blur();
            return false;
          }
        },
        delegateType: "focusout"
      },
      click: {
        trigger: function() {
          if (this.type === "checkbox" && this.click && jQuery.nodeName(this, "input")) {
            this.click();
            return false;
          }
        },
        _default: function(event) {
          return jQuery.nodeName(event.target, "a");
        }
      },
      beforeunload: {postDispatch: function(event) {
          if (event.result !== undefined && event.originalEvent) {
            event.originalEvent.returnValue = event.result;
          }
        }}
    }
  };
  jQuery.removeEvent = function(elem, type, handle) {
    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle);
    }
  };
  jQuery.Event = function(src, props) {
    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    }
    if (src && src.type) {
      this.originalEvent = src;
      this.type = src.type;
      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
    } else {
      this.type = src;
    }
    if (props) {
      jQuery.extend(this, props);
    }
    this.timeStamp = src && src.timeStamp || jQuery.now();
    this[jQuery.expando] = true;
  };
  jQuery.Event.prototype = {
    constructor: jQuery.Event,
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    preventDefault: function() {
      var e = this.originalEvent;
      this.isDefaultPrevented = returnTrue;
      if (e) {
        e.preventDefault();
      }
    },
    stopPropagation: function() {
      var e = this.originalEvent;
      this.isPropagationStopped = returnTrue;
      if (e) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function() {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = returnTrue;
      if (e) {
        e.stopImmediatePropagation();
      }
      this.stopPropagation();
    }
  };
  jQuery.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function(orig, fix) {
    jQuery.event.special[orig] = {
      delegateType: fix,
      bindType: fix,
      handle: function(event) {
        var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj;
        if (!related || (related !== target && !jQuery.contains(target, related))) {
          event.type = handleObj.origType;
          ret = handleObj.handler.apply(this, arguments);
          event.type = fix;
        }
        return ret;
      }
    };
  });
  jQuery.fn.extend({
    on: function(types, selector, data, fn) {
      return on(this, types, selector, data, fn);
    },
    one: function(types, selector, data, fn) {
      return on(this, types, selector, data, fn, 1);
    },
    off: function(types, selector, fn) {
      var handleObj,
          type;
      if (types && types.preventDefault && types.handleObj) {
        handleObj = types.handleObj;
        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
        return this;
      }
      if (typeof types === "object") {
        for (type in types) {
          this.off(type, selector, types[type]);
        }
        return this;
      }
      if (selector === false || typeof selector === "function") {
        fn = selector;
        selector = undefined;
      }
      if (fn === false) {
        fn = returnFalse;
      }
      return this.each(function() {
        jQuery.event.remove(this, types, fn, selector);
      });
    }
  });
  var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
      rnoInnerhtml = /<script|<style|<link/i,
      rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
      rscriptTypeMasked = /^true\/(.*)/,
      rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
  function manipulationTarget(elem, content) {
    if (jQuery.nodeName(elem, "table") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
      return elem.getElementsByTagName("tbody")[0] || elem;
    }
    return elem;
  }
  function disableScript(elem) {
    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
    return elem;
  }
  function restoreScript(elem) {
    var match = rscriptTypeMasked.exec(elem.type);
    if (match) {
      elem.type = match[1];
    } else {
      elem.removeAttribute("type");
    }
    return elem;
  }
  function cloneCopyEvent(src, dest) {
    var i,
        l,
        type,
        pdataOld,
        pdataCur,
        udataOld,
        udataCur,
        events;
    if (dest.nodeType !== 1) {
      return;
    }
    if (dataPriv.hasData(src)) {
      pdataOld = dataPriv.access(src);
      pdataCur = dataPriv.set(dest, pdataOld);
      events = pdataOld.events;
      if (events) {
        delete pdataCur.handle;
        pdataCur.events = {};
        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    }
    if (dataUser.hasData(src)) {
      udataOld = dataUser.access(src);
      udataCur = jQuery.extend({}, udataOld);
      dataUser.set(dest, udataCur);
    }
  }
  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase();
    if (nodeName === "input" && rcheckableType.test(src.type)) {
      dest.checked = src.checked;
    } else if (nodeName === "input" || nodeName === "textarea") {
      dest.defaultValue = src.defaultValue;
    }
  }
  function domManip(collection, args, callback, ignored) {
    args = concat.apply([], args);
    var fragment,
        first,
        scripts,
        hasScripts,
        node,
        doc,
        i = 0,
        l = collection.length,
        iNoClone = l - 1,
        value = args[0],
        isFunction = jQuery.isFunction(value);
    if (isFunction || (l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value))) {
      return collection.each(function(index) {
        var self = collection.eq(index);
        if (isFunction) {
          args[0] = value.call(this, index, self.html());
        }
        domManip(self, args, callback, ignored);
      });
    }
    if (l) {
      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
      first = fragment.firstChild;
      if (fragment.childNodes.length === 1) {
        fragment = first;
      }
      if (first || ignored) {
        scripts = jQuery.map(getAll(fragment, "script"), disableScript);
        hasScripts = scripts.length;
        for (; i < l; i++) {
          node = fragment;
          if (i !== iNoClone) {
            node = jQuery.clone(node, true, true);
            if (hasScripts) {
              jQuery.merge(scripts, getAll(node, "script"));
            }
          }
          callback.call(collection[i], node, i);
        }
        if (hasScripts) {
          doc = scripts[scripts.length - 1].ownerDocument;
          jQuery.map(scripts, restoreScript);
          for (i = 0; i < hasScripts; i++) {
            node = scripts[i];
            if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
              if (node.src) {
                if (jQuery._evalUrl) {
                  jQuery._evalUrl(node.src);
                }
              } else {
                jQuery.globalEval(node.textContent.replace(rcleanScript, ""));
              }
            }
          }
        }
      }
    }
    return collection;
  }
  function remove(elem, selector, keepData) {
    var node,
        nodes = selector ? jQuery.filter(selector, elem) : elem,
        i = 0;
    for (; (node = nodes[i]) != null; i++) {
      if (!keepData && node.nodeType === 1) {
        jQuery.cleanData(getAll(node));
      }
      if (node.parentNode) {
        if (keepData && jQuery.contains(node.ownerDocument, node)) {
          setGlobalEval(getAll(node, "script"));
        }
        node.parentNode.removeChild(node);
      }
    }
    return elem;
  }
  jQuery.extend({
    htmlPrefilter: function(html) {
      return html.replace(rxhtmlTag, "<$1></$2>");
    },
    clone: function(elem, dataAndEvents, deepDataAndEvents) {
      var i,
          l,
          srcElements,
          destElements,
          clone = elem.cloneNode(true),
          inPage = jQuery.contains(elem.ownerDocument, elem);
      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
        destElements = getAll(clone);
        srcElements = getAll(elem);
        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      }
      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);
          destElements = destElements || getAll(clone);
          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      }
      destElements = getAll(clone, "script");
      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
      }
      return clone;
    },
    cleanData: function(elems) {
      var data,
          elem,
          type,
          special = jQuery.event.special,
          i = 0;
      for (; (elem = elems[i]) !== undefined; i++) {
        if (acceptData(elem)) {
          if ((data = elem[dataPriv.expando])) {
            if (data.events) {
              for (type in data.events) {
                if (special[type]) {
                  jQuery.event.remove(elem, type);
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            }
            elem[dataPriv.expando] = undefined;
          }
          if (elem[dataUser.expando]) {
            elem[dataUser.expando] = undefined;
          }
        }
      }
    }
  });
  jQuery.fn.extend({
    domManip: domManip,
    detach: function(selector) {
      return remove(this, selector, true);
    },
    remove: function(selector) {
      return remove(this, selector);
    },
    text: function(value) {
      return access(this, function(value) {
        return value === undefined ? jQuery.text(this) : this.empty().each(function() {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            this.textContent = value;
          }
        });
      }, null, value, arguments.length);
    },
    append: function() {
      return domManip(this, arguments, function(elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.appendChild(elem);
        }
      });
    },
    prepend: function() {
      return domManip(this, arguments, function(elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.insertBefore(elem, target.firstChild);
        }
      });
    },
    before: function() {
      return domManip(this, arguments, function(elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },
    after: function() {
      return domManip(this, arguments, function(elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },
    empty: function() {
      var elem,
          i = 0;
      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          jQuery.cleanData(getAll(elem, false));
          elem.textContent = "";
        }
      }
      return this;
    },
    clone: function(dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
      return this.map(function() {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },
    html: function(value) {
      return access(this, function(value) {
        var elem = this[0] || {},
            i = 0,
            l = this.length;
        if (value === undefined && elem.nodeType === 1) {
          return elem.innerHTML;
        }
        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
          value = jQuery.htmlPrefilter(value);
          try {
            for (; i < l; i++) {
              elem = this[i] || {};
              if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.innerHTML = value;
              }
            }
            elem = 0;
          } catch (e) {}
        }
        if (elem) {
          this.empty().append(value);
        }
      }, null, value, arguments.length);
    },
    replaceWith: function() {
      var ignored = [];
      return domManip(this, arguments, function(elem) {
        var parent = this.parentNode;
        if (jQuery.inArray(this, ignored) < 0) {
          jQuery.cleanData(getAll(this));
          if (parent) {
            parent.replaceChild(elem, this);
          }
        }
      }, ignored);
    }
  });
  jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function(name, original) {
    jQuery.fn[name] = function(selector) {
      var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;
      for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems);
        push.apply(ret, elems.get());
      }
      return this.pushStack(ret);
    };
  });
  var iframe,
      elemdisplay = {
        HTML: "block",
        BODY: "block"
      };
  function actualDisplay(name, doc) {
    var elem = jQuery(doc.createElement(name)).appendTo(doc.body),
        display = jQuery.css(elem[0], "display");
    elem.detach();
    return display;
  }
  function defaultDisplay(nodeName) {
    var doc = document,
        display = elemdisplay[nodeName];
    if (!display) {
      display = actualDisplay(nodeName, doc);
      if (display === "none" || !display) {
        iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement);
        doc = iframe[0].contentDocument;
        doc.write();
        doc.close();
        display = actualDisplay(nodeName, doc);
        iframe.detach();
      }
      elemdisplay[nodeName] = display;
    }
    return display;
  }
  var rmargin = (/^margin/);
  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
  var getStyles = function(elem) {
    var view = elem.ownerDocument.defaultView;
    if (!view.opener) {
      view = window;
    }
    return view.getComputedStyle(elem);
  };
  var swap = function(elem, options, callback, args) {
    var ret,
        name,
        old = {};
    for (name in options) {
      old[name] = elem.style[name];
      elem.style[name] = options[name];
    }
    ret = callback.apply(elem, args || []);
    for (name in options) {
      elem.style[name] = old[name];
    }
    return ret;
  };
  var documentElement = document.documentElement;
  (function() {
    var pixelPositionVal,
        boxSizingReliableVal,
        pixelMarginRightVal,
        reliableMarginLeftVal,
        container = document.createElement("div"),
        div = document.createElement("div");
    if (!div.style) {
      return;
    }
    div.style.backgroundClip = "content-box";
    div.cloneNode(true).style.backgroundClip = "";
    support.clearCloneStyle = div.style.backgroundClip === "content-box";
    container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" + "padding:0;margin-top:1px;position:absolute";
    container.appendChild(div);
    function computeStyleTests() {
      div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" + "position:relative;display:block;" + "margin:auto;border:1px;padding:1px;" + "top:1%;width:50%";
      div.innerHTML = "";
      documentElement.appendChild(container);
      var divStyle = window.getComputedStyle(div);
      pixelPositionVal = divStyle.top !== "1%";
      reliableMarginLeftVal = divStyle.marginLeft === "2px";
      boxSizingReliableVal = divStyle.width === "4px";
      div.style.marginRight = "50%";
      pixelMarginRightVal = divStyle.marginRight === "4px";
      documentElement.removeChild(container);
    }
    jQuery.extend(support, {
      pixelPosition: function() {
        computeStyleTests();
        return pixelPositionVal;
      },
      boxSizingReliable: function() {
        if (boxSizingReliableVal == null) {
          computeStyleTests();
        }
        return boxSizingReliableVal;
      },
      pixelMarginRight: function() {
        if (boxSizingReliableVal == null) {
          computeStyleTests();
        }
        return pixelMarginRightVal;
      },
      reliableMarginLeft: function() {
        if (boxSizingReliableVal == null) {
          computeStyleTests();
        }
        return reliableMarginLeftVal;
      },
      reliableMarginRight: function() {
        var ret,
            marginDiv = div.appendChild(document.createElement("div"));
        marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;box-sizing:content-box;" + "display:block;margin:0;border:0;padding:0";
        marginDiv.style.marginRight = marginDiv.style.width = "0";
        div.style.width = "1px";
        documentElement.appendChild(container);
        ret = !parseFloat(window.getComputedStyle(marginDiv).marginRight);
        documentElement.removeChild(container);
        div.removeChild(marginDiv);
        return ret;
      }
    });
  })();
  function curCSS(elem, name, computed) {
    var width,
        minWidth,
        maxWidth,
        ret,
        style = elem.style;
    computed = computed || getStyles(elem);
    if (computed) {
      ret = computed.getPropertyValue(name) || computed[name];
      if (ret === "" && !jQuery.contains(elem.ownerDocument, elem)) {
        ret = jQuery.style(elem, name);
      }
      if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth;
        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width;
        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }
    return ret !== undefined ? ret + "" : ret;
  }
  function addGetHookIf(conditionFn, hookFn) {
    return {get: function() {
        if (conditionFn()) {
          delete this.get;
          return;
        }
        return (this.get = hookFn).apply(this, arguments);
      }};
  }
  var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
      cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
      },
      cssPrefixes = ["Webkit", "O", "Moz", "ms"],
      emptyStyle = document.createElement("div").style;
  function vendorPropName(name) {
    if (name in emptyStyle) {
      return name;
    }
    var capName = name[0].toUpperCase() + name.slice(1),
        i = cssPrefixes.length;
    while (i--) {
      name = cssPrefixes[i] + capName;
      if (name in emptyStyle) {
        return name;
      }
    }
  }
  function setPositiveNumber(elem, value, subtract) {
    var matches = rcssNum.exec(value);
    return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
  }
  function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
    var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
        val = 0;
    for (; i < 4; i += 2) {
      if (extra === "margin") {
        val += jQuery.css(elem, extra + cssExpand[i], true, styles);
      }
      if (isBorderBox) {
        if (extra === "content") {
          val -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        }
        if (extra !== "margin") {
          val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      } else {
        val += jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        if (extra !== "padding") {
          val += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      }
    }
    return val;
  }
  function getWidthOrHeight(elem, name, extra) {
    var valueIsBorderBox = true,
        val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
        styles = getStyles(elem),
        isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";
    if (document.msFullscreenElement && window.top !== window) {
      if (elem.getClientRects().length) {
        val = Math.round(elem.getBoundingClientRect()[name] * 100);
      }
    }
    if (val <= 0 || val == null) {
      val = curCSS(elem, name, styles);
      if (val < 0 || val == null) {
        val = elem.style[name];
      }
      if (rnumnonpx.test(val)) {
        return val;
      }
      valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
      val = parseFloat(val) || 0;
    }
    return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles)) + "px";
  }
  function showHide(elements, show) {
    var display,
        elem,
        hidden,
        values = [],
        index = 0,
        length = elements.length;
    for (; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      values[index] = dataPriv.get(elem, "olddisplay");
      display = elem.style.display;
      if (show) {
        if (!values[index] && display === "none") {
          elem.style.display = "";
        }
        if (elem.style.display === "" && isHidden(elem)) {
          values[index] = dataPriv.access(elem, "olddisplay", defaultDisplay(elem.nodeName));
        }
      } else {
        hidden = isHidden(elem);
        if (display !== "none" || !hidden) {
          dataPriv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"));
        }
      }
    }
    for (index = 0; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      if (!show || elem.style.display === "none" || elem.style.display === "") {
        elem.style.display = show ? values[index] || "" : "none";
      }
    }
    return elements;
  }
  jQuery.extend({
    cssHooks: {opacity: {get: function(elem, computed) {
          if (computed) {
            var ret = curCSS(elem, "opacity");
            return ret === "" ? "1" : ret;
          }
        }}},
    cssNumber: {
      "animationIterationCount": true,
      "columnCount": true,
      "fillOpacity": true,
      "flexGrow": true,
      "flexShrink": true,
      "fontWeight": true,
      "lineHeight": true,
      "opacity": true,
      "order": true,
      "orphans": true,
      "widows": true,
      "zIndex": true,
      "zoom": true
    },
    cssProps: {"float": "cssFloat"},
    style: function(elem, name, value, extra) {
      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      }
      var ret,
          type,
          hooks,
          origName = jQuery.camelCase(name),
          style = elem.style;
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      if (value !== undefined) {
        type = typeof value;
        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
          value = adjustCSS(elem, name, ret);
          type = "number";
        }
        if (value == null || value !== value) {
          return;
        }
        if (type === "number") {
          value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
        }
        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
          style[name] = "inherit";
        }
        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
          style[name] = value;
        }
      } else {
        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
          return ret;
        }
        return style[name];
      }
    },
    css: function(elem, name, extra, styles) {
      var val,
          num,
          hooks,
          origName = jQuery.camelCase(name);
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      if (hooks && "get" in hooks) {
        val = hooks.get(elem, true, extra);
      }
      if (val === undefined) {
        val = curCSS(elem, name, styles);
      }
      if (val === "normal" && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      }
      if (extra === "" || extra) {
        num = parseFloat(val);
        return extra === true || isFinite(num) ? num || 0 : val;
      }
      return val;
    }
  });
  jQuery.each(["height", "width"], function(i, name) {
    jQuery.cssHooks[name] = {
      get: function(elem, computed, extra) {
        if (computed) {
          return rdisplayswap.test(jQuery.css(elem, "display")) && elem.offsetWidth === 0 ? swap(elem, cssShow, function() {
            return getWidthOrHeight(elem, name, extra);
          }) : getWidthOrHeight(elem, name, extra);
        }
      },
      set: function(elem, value, extra) {
        var matches,
            styles = extra && getStyles(elem),
            subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, "boxSizing", false, styles) === "border-box", styles);
        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
          elem.style[name] = value;
          value = jQuery.css(elem, name);
        }
        return setPositiveNumber(elem, value, subtract);
      }
    };
  });
  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
    if (computed) {
      return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {marginLeft: 0}, function() {
        return elem.getBoundingClientRect().left;
      })) + "px";
    }
  });
  jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
    if (computed) {
      return swap(elem, {"display": "inline-block"}, curCSS, [elem, "marginRight"]);
    }
  });
  jQuery.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function(prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {expand: function(value) {
        var i = 0,
            expanded = {},
            parts = typeof value === "string" ? value.split(" ") : [value];
        for (; i < 4; i++) {
          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }
        return expanded;
      }};
    if (!rmargin.test(prefix)) {
      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
  });
  jQuery.fn.extend({
    css: function(name, value) {
      return access(this, function(elem, name, value) {
        var styles,
            len,
            map = {},
            i = 0;
        if (jQuery.isArray(name)) {
          styles = getStyles(elem);
          len = name.length;
          for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
          }
          return map;
        }
        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
      }, name, value, arguments.length > 1);
    },
    show: function() {
      return showHide(this, true);
    },
    hide: function() {
      return showHide(this);
    },
    toggle: function(state) {
      if (typeof state === "boolean") {
        return state ? this.show() : this.hide();
      }
      return this.each(function() {
        if (isHidden(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    }
  });
  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }
  jQuery.Tween = Tween;
  Tween.prototype = {
    constructor: Tween,
    init: function(elem, options, prop, end, easing, unit) {
      this.elem = elem;
      this.prop = prop;
      this.easing = easing || jQuery.easing._default;
      this.options = options;
      this.start = this.now = this.cur();
      this.end = end;
      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
    },
    cur: function() {
      var hooks = Tween.propHooks[this.prop];
      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function(percent) {
      var eased,
          hooks = Tween.propHooks[this.prop];
      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
      } else {
        this.pos = eased = percent;
      }
      this.now = (this.end - this.start) * eased + this.start;
      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }
      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }
      return this;
    }
  };
  Tween.prototype.init.prototype = Tween.prototype;
  Tween.propHooks = {_default: {
      get: function(tween) {
        var result;
        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
          return tween.elem[tween.prop];
        }
        result = jQuery.css(tween.elem, tween.prop, "");
        return !result || result === "auto" ? 0 : result;
      },
      set: function(tween) {
        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      }
    }};
  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {set: function(tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    }};
  jQuery.easing = {
    linear: function(p) {
      return p;
    },
    swing: function(p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    },
    _default: "swing"
  };
  jQuery.fx = Tween.prototype.init;
  jQuery.fx.step = {};
  var fxNow,
      timerId,
      rfxtypes = /^(?:toggle|show|hide)$/,
      rrun = /queueHooks$/;
  function createFxNow() {
    window.setTimeout(function() {
      fxNow = undefined;
    });
    return (fxNow = jQuery.now());
  }
  function genFx(type, includeWidth) {
    var which,
        i = 0,
        attrs = {height: type};
    includeWidth = includeWidth ? 1 : 0;
    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];
      attrs["margin" + which] = attrs["padding" + which] = type;
    }
    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }
    return attrs;
  }
  function createTween(value, prop, animation) {
    var tween,
        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
        index = 0,
        length = collection.length;
    for (; index < length; index++) {
      if ((tween = collection[index].call(animation, prop, value))) {
        return tween;
      }
    }
  }
  function defaultPrefilter(elem, props, opts) {
    var prop,
        value,
        toggle,
        tween,
        hooks,
        oldfire,
        display,
        checkDisplay,
        anim = this,
        orig = {},
        style = elem.style,
        hidden = elem.nodeType && isHidden(elem),
        dataShow = dataPriv.get(elem, "fxshow");
    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, "fx");
      if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;
        hooks.empty.fire = function() {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }
      hooks.unqueued++;
      anim.always(function() {
        anim.always(function() {
          hooks.unqueued--;
          if (!jQuery.queue(elem, "fx").length) {
            hooks.empty.fire();
          }
        });
      });
    }
    if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
      opts.overflow = [style.overflow, style.overflowX, style.overflowY];
      display = jQuery.css(elem, "display");
      checkDisplay = display === "none" ? dataPriv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display;
      if (checkDisplay === "inline" && jQuery.css(elem, "float") === "none") {
        style.display = "inline-block";
      }
    }
    if (opts.overflow) {
      style.overflow = "hidden";
      anim.always(function() {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
      });
    }
    for (prop in props) {
      value = props[prop];
      if (rfxtypes.exec(value)) {
        delete props[prop];
        toggle = toggle || value === "toggle";
        if (value === (hidden ? "hide" : "show")) {
          if (value === "show" && dataShow && dataShow[prop] !== undefined) {
            hidden = true;
          } else {
            continue;
          }
        }
        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
      } else {
        display = undefined;
      }
    }
    if (!jQuery.isEmptyObject(orig)) {
      if (dataShow) {
        if ("hidden" in dataShow) {
          hidden = dataShow.hidden;
        }
      } else {
        dataShow = dataPriv.access(elem, "fxshow", {});
      }
      if (toggle) {
        dataShow.hidden = !hidden;
      }
      if (hidden) {
        jQuery(elem).show();
      } else {
        anim.done(function() {
          jQuery(elem).hide();
        });
      }
      anim.done(function() {
        var prop;
        dataPriv.remove(elem, "fxshow");
        for (prop in orig) {
          jQuery.style(elem, prop, orig[prop]);
        }
      });
      for (prop in orig) {
        tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
        if (!(prop in dataShow)) {
          dataShow[prop] = tween.start;
          if (hidden) {
            tween.end = tween.start;
            tween.start = prop === "width" || prop === "height" ? 1 : 0;
          }
        }
      }
    } else if ((display === "none" ? defaultDisplay(elem.nodeName) : display) === "inline") {
      style.display = display;
    }
  }
  function propFilter(props, specialEasing) {
    var index,
        name,
        easing,
        value,
        hooks;
    for (index in props) {
      name = jQuery.camelCase(index);
      easing = specialEasing[name];
      value = props[index];
      if (jQuery.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
      }
      if (index !== name) {
        props[name] = value;
        delete props[index];
      }
      hooks = jQuery.cssHooks[name];
      if (hooks && "expand" in hooks) {
        value = hooks.expand(value);
        delete props[name];
        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];
            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }
  function Animation(elem, properties, options) {
    var result,
        stopped,
        index = 0,
        length = Animation.prefilters.length,
        deferred = jQuery.Deferred().always(function() {
          delete tick.elem;
        }),
        tick = function() {
          if (stopped) {
            return false;
          }
          var currentTime = fxNow || createFxNow(),
              remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
              temp = remaining / animation.duration || 0,
              percent = 1 - temp,
              index = 0,
              length = animation.tweens.length;
          for (; index < length; index++) {
            animation.tweens[index].run(percent);
          }
          deferred.notifyWith(elem, [animation, percent, remaining]);
          if (percent < 1 && length) {
            return remaining;
          } else {
            deferred.resolveWith(elem, [animation]);
            return false;
          }
        },
        animation = deferred.promise({
          elem: elem,
          props: jQuery.extend({}, properties),
          opts: jQuery.extend(true, {
            specialEasing: {},
            easing: jQuery.easing._default
          }, options),
          originalProperties: properties,
          originalOptions: options,
          startTime: fxNow || createFxNow(),
          duration: options.duration,
          tweens: [],
          createTween: function(prop, end) {
            var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
            animation.tweens.push(tween);
            return tween;
          },
          stop: function(gotoEnd) {
            var index = 0,
                length = gotoEnd ? animation.tweens.length : 0;
            if (stopped) {
              return this;
            }
            stopped = true;
            for (; index < length; index++) {
              animation.tweens[index].run(1);
            }
            if (gotoEnd) {
              deferred.notifyWith(elem, [animation, 1, 0]);
              deferred.resolveWith(elem, [animation, gotoEnd]);
            } else {
              deferred.rejectWith(elem, [animation, gotoEnd]);
            }
            return this;
          }
        }),
        props = animation.props;
    propFilter(props, animation.opts.specialEasing);
    for (; index < length; index++) {
      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
      if (result) {
        if (jQuery.isFunction(result.stop)) {
          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);
        }
        return result;
      }
    }
    jQuery.map(props, createTween, animation);
    if (jQuery.isFunction(animation.opts.start)) {
      animation.opts.start.call(elem, animation);
    }
    jQuery.fx.timer(jQuery.extend(tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    }));
    return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
  }
  jQuery.Animation = jQuery.extend(Animation, {
    tweeners: {"*": [function(prop, value) {
        var tween = this.createTween(prop, value);
        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
        return tween;
      }]},
    tweener: function(props, callback) {
      if (jQuery.isFunction(props)) {
        callback = props;
        props = ["*"];
      } else {
        props = props.match(rnotwhite);
      }
      var prop,
          index = 0,
          length = props.length;
      for (; index < length; index++) {
        prop = props[index];
        Animation.tweeners[prop] = Animation.tweeners[prop] || [];
        Animation.tweeners[prop].unshift(callback);
      }
    },
    prefilters: [defaultPrefilter],
    prefilter: function(callback, prepend) {
      if (prepend) {
        Animation.prefilters.unshift(callback);
      } else {
        Animation.prefilters.push(callback);
      }
    }
  });
  jQuery.speed = function(speed, easing, fn) {
    var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
      complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
      duration: speed,
      easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
    };
    opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
    if (opt.queue == null || opt.queue === true) {
      opt.queue = "fx";
    }
    opt.old = opt.complete;
    opt.complete = function() {
      if (jQuery.isFunction(opt.old)) {
        opt.old.call(this);
      }
      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };
    return opt;
  };
  jQuery.fn.extend({
    fadeTo: function(speed, to, easing, callback) {
      return this.filter(isHidden).css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback);
    },
    animate: function(prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop),
          optall = jQuery.speed(speed, easing, callback),
          doAnimation = function() {
            var anim = Animation(this, jQuery.extend({}, prop), optall);
            if (empty || dataPriv.get(this, "finish")) {
              anim.stop(true);
            }
          };
      doAnimation.finish = doAnimation;
      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function(type, clearQueue, gotoEnd) {
      var stopQueue = function(hooks) {
        var stop = hooks.stop;
        delete hooks.stop;
        stop(gotoEnd);
      };
      if (typeof type !== "string") {
        gotoEnd = clearQueue;
        clearQueue = type;
        type = undefined;
      }
      if (clearQueue && type !== false) {
        this.queue(type || "fx", []);
      }
      return this.each(function() {
        var dequeue = true,
            index = type != null && type + "queueHooks",
            timers = jQuery.timers,
            data = dataPriv.get(this);
        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }
        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
          }
        }
        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },
    finish: function(type) {
      if (type !== false) {
        type = type || "fx";
      }
      return this.each(function() {
        var index,
            data = dataPriv.get(this),
            queue = data[type + "queue"],
            hooks = data[type + "queueHooks"],
            timers = jQuery.timers,
            length = queue ? queue.length : 0;
        data.finish = true;
        jQuery.queue(this, type, []);
        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        }
        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
          }
        }
        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        }
        delete data.finish;
      });
    }
  });
  jQuery.each(["toggle", "show", "hide"], function(i, name) {
    var cssFn = jQuery.fn[name];
    jQuery.fn[name] = function(speed, easing, callback) {
      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
  });
  jQuery.each({
    slideDown: genFx("show"),
    slideUp: genFx("hide"),
    slideToggle: genFx("toggle"),
    fadeIn: {opacity: "show"},
    fadeOut: {opacity: "hide"},
    fadeToggle: {opacity: "toggle"}
  }, function(name, props) {
    jQuery.fn[name] = function(speed, easing, callback) {
      return this.animate(props, speed, easing, callback);
    };
  });
  jQuery.timers = [];
  jQuery.fx.tick = function() {
    var timer,
        i = 0,
        timers = jQuery.timers;
    fxNow = jQuery.now();
    for (; i < timers.length; i++) {
      timer = timers[i];
      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }
    if (!timers.length) {
      jQuery.fx.stop();
    }
    fxNow = undefined;
  };
  jQuery.fx.timer = function(timer) {
    jQuery.timers.push(timer);
    if (timer()) {
      jQuery.fx.start();
    } else {
      jQuery.timers.pop();
    }
  };
  jQuery.fx.interval = 13;
  jQuery.fx.start = function() {
    if (!timerId) {
      timerId = window.setInterval(jQuery.fx.tick, jQuery.fx.interval);
    }
  };
  jQuery.fx.stop = function() {
    window.clearInterval(timerId);
    timerId = null;
  };
  jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  };
  jQuery.fn.delay = function(time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
    type = type || "fx";
    return this.queue(type, function(next, hooks) {
      var timeout = window.setTimeout(next, time);
      hooks.stop = function() {
        window.clearTimeout(timeout);
      };
    });
  };
  (function() {
    var input = document.createElement("input"),
        select = document.createElement("select"),
        opt = select.appendChild(document.createElement("option"));
    input.type = "checkbox";
    support.checkOn = input.value !== "";
    support.optSelected = opt.selected;
    select.disabled = true;
    support.optDisabled = !opt.disabled;
    input = document.createElement("input");
    input.value = "t";
    input.type = "radio";
    support.radioValue = input.value === "t";
  })();
  var boolHook,
      attrHandle = jQuery.expr.attrHandle;
  jQuery.fn.extend({
    attr: function(name, value) {
      return access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function(name) {
      return this.each(function() {
        jQuery.removeAttr(this, name);
      });
    }
  });
  jQuery.extend({
    attr: function(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType;
      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      if (typeof elem.getAttribute === "undefined") {
        return jQuery.prop(elem, name, value);
      }
      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        name = name.toLowerCase();
        hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
      }
      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);
          return;
        }
        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }
        elem.setAttribute(name, value + "");
        return value;
      }
      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }
      ret = jQuery.find.attr(elem, name);
      return ret == null ? undefined : ret;
    },
    attrHooks: {type: {set: function(elem, value) {
          if (!support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
            var val = elem.value;
            elem.setAttribute("type", value);
            if (val) {
              elem.value = val;
            }
            return value;
          }
        }}},
    removeAttr: function(elem, value) {
      var name,
          propName,
          i = 0,
          attrNames = value && value.match(rnotwhite);
      if (attrNames && elem.nodeType === 1) {
        while ((name = attrNames[i++])) {
          propName = jQuery.propFix[name] || name;
          if (jQuery.expr.match.bool.test(name)) {
            elem[propName] = false;
          }
          elem.removeAttribute(name);
        }
      }
    }
  });
  boolHook = {set: function(elem, value, name) {
      if (value === false) {
        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }
      return name;
    }};
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;
    attrHandle[name] = function(elem, name, isXML) {
      var ret,
          handle;
      if (!isXML) {
        handle = attrHandle[name];
        attrHandle[name] = ret;
        ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
        attrHandle[name] = handle;
      }
      return ret;
    };
  });
  var rfocusable = /^(?:input|select|textarea|button)$/i,
      rclickable = /^(?:a|area)$/i;
  jQuery.fn.extend({
    prop: function(name, value) {
      return access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function(name) {
      return this.each(function() {
        delete this[jQuery.propFix[name] || name];
      });
    }
  });
  jQuery.extend({
    prop: function(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType;
      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        name = jQuery.propFix[name] || name;
        hooks = jQuery.propHooks[name];
      }
      if (value !== undefined) {
        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }
        return (elem[name] = value);
      }
      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }
      return elem[name];
    },
    propHooks: {tabIndex: {get: function(elem) {
          var tabindex = jQuery.find.attr(elem, "tabindex");
          return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1;
        }}},
    propFix: {
      "for": "htmlFor",
      "class": "className"
    }
  });
  if (!support.optSelected) {
    jQuery.propHooks.selected = {get: function(elem) {
        var parent = elem.parentNode;
        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }
        return null;
      }};
  }
  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
    jQuery.propFix[this.toLowerCase()] = this;
  });
  var rclass = /[\t\r\n\f]/g;
  function getClass(elem) {
    return elem.getAttribute && elem.getAttribute("class") || "";
  }
  jQuery.fn.extend({
    addClass: function(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;
      if (jQuery.isFunction(value)) {
        return this.each(function(j) {
          jQuery(this).addClass(value.call(this, j, getClass(this)));
        });
      }
      if (typeof value === "string" && value) {
        classes = value.match(rnotwhite) || [];
        while ((elem = this[i++])) {
          curValue = getClass(elem);
          cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
          if (cur) {
            j = 0;
            while ((clazz = classes[j++])) {
              if (cur.indexOf(" " + clazz + " ") < 0) {
                cur += clazz + " ";
              }
            }
            finalValue = jQuery.trim(cur);
            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }
      return this;
    },
    removeClass: function(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;
      if (jQuery.isFunction(value)) {
        return this.each(function(j) {
          jQuery(this).removeClass(value.call(this, j, getClass(this)));
        });
      }
      if (!arguments.length) {
        return this.attr("class", "");
      }
      if (typeof value === "string" && value) {
        classes = value.match(rnotwhite) || [];
        while ((elem = this[i++])) {
          curValue = getClass(elem);
          cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
          if (cur) {
            j = 0;
            while ((clazz = classes[j++])) {
              while (cur.indexOf(" " + clazz + " ") > -1) {
                cur = cur.replace(" " + clazz + " ", " ");
              }
            }
            finalValue = jQuery.trim(cur);
            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }
      return this;
    },
    toggleClass: function(value, stateVal) {
      var type = typeof value;
      if (typeof stateVal === "boolean" && type === "string") {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }
      if (jQuery.isFunction(value)) {
        return this.each(function(i) {
          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
        });
      }
      return this.each(function() {
        var className,
            i,
            self,
            classNames;
        if (type === "string") {
          i = 0;
          self = jQuery(this);
          classNames = value.match(rnotwhite) || [];
          while ((className = classNames[i++])) {
            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          }
        } else if (value === undefined || type === "boolean") {
          className = getClass(this);
          if (className) {
            dataPriv.set(this, "__className__", className);
          }
          if (this.setAttribute) {
            this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
          }
        }
      });
    },
    hasClass: function(selector) {
      var className,
          elem,
          i = 0;
      className = " " + selector + " ";
      while ((elem = this[i++])) {
        if (elem.nodeType === 1 && (" " + getClass(elem) + " ").replace(rclass, " ").indexOf(className) > -1) {
          return true;
        }
      }
      return false;
    }
  });
  var rreturn = /\r/g;
  jQuery.fn.extend({val: function(value) {
      var hooks,
          ret,
          isFunction,
          elem = this[0];
      if (!arguments.length) {
        if (elem) {
          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
            return ret;
          }
          ret = elem.value;
          return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret;
        }
        return;
      }
      isFunction = jQuery.isFunction(value);
      return this.each(function(i) {
        var val;
        if (this.nodeType !== 1) {
          return;
        }
        if (isFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        }
        if (val == null) {
          val = "";
        } else if (typeof val === "number") {
          val += "";
        } else if (jQuery.isArray(val)) {
          val = jQuery.map(val, function(value) {
            return value == null ? "" : value + "";
          });
        }
        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
          this.value = val;
        }
      });
    }});
  jQuery.extend({valHooks: {
      option: {get: function(elem) {
          return jQuery.trim(elem.value);
        }},
      select: {
        get: function(elem) {
          var value,
              option,
              options = elem.options,
              index = elem.selectedIndex,
              one = elem.type === "select-one" || index < 0,
              values = one ? null : [],
              max = one ? index + 1 : options.length,
              i = index < 0 ? max : one ? index : 0;
          for (; i < max; i++) {
            option = options[i];
            if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
              value = jQuery(option).val();
              if (one) {
                return value;
              }
              values.push(value);
            }
          }
          return values;
        },
        set: function(elem, value) {
          var optionSet,
              option,
              options = elem.options,
              values = jQuery.makeArray(value),
              i = options.length;
          while (i--) {
            option = options[i];
            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
              optionSet = true;
            }
          }
          if (!optionSet) {
            elem.selectedIndex = -1;
          }
          return values;
        }
      }
    }});
  jQuery.each(["radio", "checkbox"], function() {
    jQuery.valHooks[this] = {set: function(elem, value) {
        if (jQuery.isArray(value)) {
          return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1);
        }
      }};
    if (!support.checkOn) {
      jQuery.valHooks[this].get = function(elem) {
        return elem.getAttribute("value") === null ? "on" : elem.value;
      };
    }
  });
  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
  jQuery.extend(jQuery.event, {
    trigger: function(event, data, elem, onlyHandlers) {
      var i,
          cur,
          tmp,
          bubbleType,
          ontype,
          handle,
          special,
          eventPath = [elem || document],
          type = hasOwn.call(event, "type") ? event.type : event,
          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
      cur = tmp = elem = elem || document;
      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      }
      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }
      if (type.indexOf(".") > -1) {
        namespaces = type.split(".");
        type = namespaces.shift();
        namespaces.sort();
      }
      ontype = type.indexOf(":") < 0 && "on" + type;
      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
      event.isTrigger = onlyHandlers ? 2 : 3;
      event.namespace = namespaces.join(".");
      event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
      event.result = undefined;
      if (!event.target) {
        event.target = elem;
      }
      data = data == null ? [event] : jQuery.makeArray(data, [event]);
      special = jQuery.event.special[type] || {};
      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
        return;
      }
      if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
        bubbleType = special.delegateType || type;
        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }
        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);
          tmp = cur;
        }
        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      }
      i = 0;
      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        event.type = i > 1 ? bubbleType : special.bindType || type;
        handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle");
        if (handle) {
          handle.apply(cur, data);
        }
        handle = ontype && cur[ontype];
        if (handle && handle.apply && acceptData(cur)) {
          event.result = handle.apply(cur, data);
          if (event.result === false) {
            event.preventDefault();
          }
        }
      }
      event.type = type;
      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
          if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
            tmp = elem[ontype];
            if (tmp) {
              elem[ontype] = null;
            }
            jQuery.event.triggered = type;
            elem[type]();
            jQuery.event.triggered = undefined;
            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }
      return event.result;
    },
    simulate: function(type, elem, event) {
      var e = jQuery.extend(new jQuery.Event(), event, {
        type: type,
        isSimulated: true
      });
      jQuery.event.trigger(e, null, elem);
      if (e.isDefaultPrevented()) {
        event.preventDefault();
      }
    }
  });
  jQuery.fn.extend({
    trigger: function(type, data) {
      return this.each(function() {
        jQuery.event.trigger(type, data, this);
      });
    },
    triggerHandler: function(type, data) {
      var elem = this[0];
      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    }
  });
  jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function(i, name) {
    jQuery.fn[name] = function(data, fn) {
      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
  });
  jQuery.fn.extend({hover: function(fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    }});
  support.focusin = "onfocusin" in window;
  if (!support.focusin) {
    jQuery.each({
      focus: "focusin",
      blur: "focusout"
    }, function(orig, fix) {
      var handler = function(event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
      };
      jQuery.event.special[fix] = {
        setup: function() {
          var doc = this.ownerDocument || this,
              attaches = dataPriv.access(doc, fix);
          if (!attaches) {
            doc.addEventListener(orig, handler, true);
          }
          dataPriv.access(doc, fix, (attaches || 0) + 1);
        },
        teardown: function() {
          var doc = this.ownerDocument || this,
              attaches = dataPriv.access(doc, fix) - 1;
          if (!attaches) {
            doc.removeEventListener(orig, handler, true);
            dataPriv.remove(doc, fix);
          } else {
            dataPriv.access(doc, fix, attaches);
          }
        }
      };
    });
  }
  var location = window.location;
  var nonce = jQuery.now();
  var rquery = (/\?/);
  jQuery.parseJSON = function(data) {
    return JSON.parse(data + "");
  };
  jQuery.parseXML = function(data) {
    var xml;
    if (!data || typeof data !== "string") {
      return null;
    }
    try {
      xml = (new window.DOMParser()).parseFromString(data, "text/xml");
    } catch (e) {
      xml = undefined;
    }
    if (!xml || xml.getElementsByTagName("parsererror").length) {
      jQuery.error("Invalid XML: " + data);
    }
    return xml;
  };
  var rhash = /#.*$/,
      rts = /([?&])_=[^&]*/,
      rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
      rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      rnoContent = /^(?:GET|HEAD)$/,
      rprotocol = /^\/\//,
      prefilters = {},
      transports = {},
      allTypes = "*/".concat("*"),
      originAnchor = document.createElement("a");
  originAnchor.href = location.href;
  function addToPrefiltersOrTransports(structure) {
    return function(dataTypeExpression, func) {
      if (typeof dataTypeExpression !== "string") {
        func = dataTypeExpression;
        dataTypeExpression = "*";
      }
      var dataType,
          i = 0,
          dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
      if (jQuery.isFunction(func)) {
        while ((dataType = dataTypes[i++])) {
          if (dataType[0] === "+") {
            dataType = dataType.slice(1) || "*";
            (structure[dataType] = structure[dataType] || []).unshift(func);
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  }
  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {},
        seekingTransport = (structure === transports);
    function inspect(dataType) {
      var selected;
      inspected[dataType] = true;
      jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
          options.dataTypes.unshift(dataTypeOrTransport);
          inspect(dataTypeOrTransport);
          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });
      return selected;
    }
    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
  }
  function ajaxExtend(target, src) {
    var key,
        deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};
    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];
      }
    }
    if (deep) {
      jQuery.extend(true, target, deep);
    }
    return target;
  }
  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct,
        type,
        finalDataType,
        firstDataType,
        contents = s.contents,
        dataTypes = s.dataTypes;
    while (dataTypes[0] === "*") {
      dataTypes.shift();
      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
      }
    }
    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);
          break;
        }
      }
    }
    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
          finalDataType = type;
          break;
        }
        if (!firstDataType) {
          firstDataType = type;
        }
      }
      finalDataType = finalDataType || firstDataType;
    }
    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }
      return responses[finalDataType];
    }
  }
  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2,
        current,
        conv,
        tmp,
        prev,
        converters = {},
        dataTypes = s.dataTypes.slice();
    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }
    current = dataTypes.shift();
    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      }
      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }
      prev = current;
      current = dataTypes.shift();
      if (current) {
        if (current === "*") {
          current = prev;
        } else if (prev !== "*" && prev !== current) {
          conv = converters[prev + " " + current] || converters["* " + current];
          if (!conv) {
            for (conv2 in converters) {
              tmp = conv2.split(" ");
              if (tmp[1] === current) {
                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                if (conv) {
                  if (conv === true) {
                    conv = converters[conv2];
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];
                    dataTypes.unshift(tmp[1]);
                  }
                  break;
                }
              }
            }
          }
          if (conv !== true) {
            if (conv && s.throws) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: "parsererror",
                  error: conv ? e : "No conversion from " + prev + " to " + current
                };
              }
            }
          }
        }
      }
    }
    return {
      state: "success",
      data: response
    };
  }
  jQuery.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: location.href,
      type: "GET",
      isLocal: rlocalProtocol.test(location.protocol),
      global: true,
      processData: true,
      async: true,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": allTypes,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /\bxml\b/,
        html: /\bhtml/,
        json: /\bjson\b/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      converters: {
        "* text": String,
        "text html": true,
        "text json": jQuery.parseJSON,
        "text xml": jQuery.parseXML
      },
      flatOptions: {
        url: true,
        context: true
      }
    },
    ajaxSetup: function(target, settings) {
      return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    ajax: function(url, options) {
      if (typeof url === "object") {
        options = url;
        url = undefined;
      }
      options = options || {};
      var transport,
          cacheURL,
          responseHeadersString,
          responseHeaders,
          timeoutTimer,
          urlAnchor,
          fireGlobals,
          i,
          s = jQuery.ajaxSetup({}, options),
          callbackContext = s.context || s,
          globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
          deferred = jQuery.Deferred(),
          completeDeferred = jQuery.Callbacks("once memory"),
          statusCode = s.statusCode || {},
          requestHeaders = {},
          requestHeadersNames = {},
          state = 0,
          strAbort = "canceled",
          jqXHR = {
            readyState: 0,
            getResponseHeader: function(key) {
              var match;
              if (state === 2) {
                if (!responseHeaders) {
                  responseHeaders = {};
                  while ((match = rheaders.exec(responseHeadersString))) {
                    responseHeaders[match[1].toLowerCase()] = match[2];
                  }
                }
                match = responseHeaders[key.toLowerCase()];
              }
              return match == null ? null : match;
            },
            getAllResponseHeaders: function() {
              return state === 2 ? responseHeadersString : null;
            },
            setRequestHeader: function(name, value) {
              var lname = name.toLowerCase();
              if (!state) {
                name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                requestHeaders[name] = value;
              }
              return this;
            },
            overrideMimeType: function(type) {
              if (!state) {
                s.mimeType = type;
              }
              return this;
            },
            statusCode: function(map) {
              var code;
              if (map) {
                if (state < 2) {
                  for (code in map) {
                    statusCode[code] = [statusCode[code], map[code]];
                  }
                } else {
                  jqXHR.always(map[jqXHR.status]);
                }
              }
              return this;
            },
            abort: function(statusText) {
              var finalText = statusText || strAbort;
              if (transport) {
                transport.abort(finalText);
              }
              done(0, finalText);
              return this;
            }
          };
      deferred.promise(jqXHR).complete = completeDeferred.add;
      jqXHR.success = jqXHR.done;
      jqXHR.error = jqXHR.fail;
      s.url = ((url || s.url || location.href) + "").replace(rhash, "").replace(rprotocol, location.protocol + "//");
      s.type = options.method || options.type || s.method || s.type;
      s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""];
      if (s.crossDomain == null) {
        urlAnchor = document.createElement("a");
        try {
          urlAnchor.href = s.url;
          urlAnchor.href = urlAnchor.href;
          s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
        } catch (e) {
          s.crossDomain = true;
        }
      }
      if (s.data && s.processData && typeof s.data !== "string") {
        s.data = jQuery.param(s.data, s.traditional);
      }
      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
      if (state === 2) {
        return jqXHR;
      }
      fireGlobals = jQuery.event && s.global;
      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger("ajaxStart");
      }
      s.type = s.type.toUpperCase();
      s.hasContent = !rnoContent.test(s.type);
      cacheURL = s.url;
      if (!s.hasContent) {
        if (s.data) {
          cacheURL = (s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data);
          delete s.data;
        }
        if (s.cache === false) {
          s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++;
        }
      }
      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
        }
        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
        }
      }
      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
        jqXHR.setRequestHeader("Content-Type", s.contentType);
      }
      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      }
      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
        return jqXHR.abort();
      }
      strAbort = "abort";
      for (i in {
        success: 1,
        error: 1,
        complete: 1
      }) {
        jqXHR[i](s[i]);
      }
      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
      if (!transport) {
        done(-1, "No Transport");
      } else {
        jqXHR.readyState = 1;
        if (fireGlobals) {
          globalEventContext.trigger("ajaxSend", [jqXHR, s]);
        }
        if (state === 2) {
          return jqXHR;
        }
        if (s.async && s.timeout > 0) {
          timeoutTimer = window.setTimeout(function() {
            jqXHR.abort("timeout");
          }, s.timeout);
        }
        try {
          state = 1;
          transport.send(requestHeaders, done);
        } catch (e) {
          if (state < 2) {
            done(-1, e);
          } else {
            throw e;
          }
        }
      }
      function done(status, nativeStatusText, responses, headers) {
        var isSuccess,
            success,
            error,
            response,
            modified,
            statusText = nativeStatusText;
        if (state === 2) {
          return;
        }
        state = 2;
        if (timeoutTimer) {
          window.clearTimeout(timeoutTimer);
        }
        transport = undefined;
        responseHeadersString = headers || "";
        jqXHR.readyState = status > 0 ? 4 : 0;
        isSuccess = status >= 200 && status < 300 || status === 304;
        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        }
        response = ajaxConvert(s, response, jqXHR, isSuccess);
        if (isSuccess) {
          if (s.ifModified) {
            modified = jqXHR.getResponseHeader("Last-Modified");
            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }
            modified = jqXHR.getResponseHeader("etag");
            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          }
          if (status === 204 || s.type === "HEAD") {
            statusText = "nocontent";
          } else if (status === 304) {
            statusText = "notmodified";
          } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
          }
        } else {
          error = statusText;
          if (status || !statusText) {
            statusText = "error";
            if (status < 0) {
              status = 0;
            }
          }
        }
        jqXHR.status = status;
        jqXHR.statusText = (nativeStatusText || statusText) + "";
        if (isSuccess) {
          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
        } else {
          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
        }
        jqXHR.statusCode(statusCode);
        statusCode = undefined;
        if (fireGlobals) {
          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
        }
        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
        if (fireGlobals) {
          globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
          if (!(--jQuery.active)) {
            jQuery.event.trigger("ajaxStop");
          }
        }
      }
      return jqXHR;
    },
    getJSON: function(url, data, callback) {
      return jQuery.get(url, data, callback, "json");
    },
    getScript: function(url, callback) {
      return jQuery.get(url, undefined, callback, "script");
    }
  });
  jQuery.each(["get", "post"], function(i, method) {
    jQuery[method] = function(url, data, callback, type) {
      if (jQuery.isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      }
      return jQuery.ajax(jQuery.extend({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
      }, jQuery.isPlainObject(url) && url));
    };
  });
  jQuery._evalUrl = function(url) {
    return jQuery.ajax({
      url: url,
      type: "GET",
      dataType: "script",
      async: false,
      global: false,
      "throws": true
    });
  };
  jQuery.fn.extend({
    wrapAll: function(html) {
      var wrap;
      if (jQuery.isFunction(html)) {
        return this.each(function(i) {
          jQuery(this).wrapAll(html.call(this, i));
        });
      }
      if (this[0]) {
        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }
        wrap.map(function() {
          var elem = this;
          while (elem.firstElementChild) {
            elem = elem.firstElementChild;
          }
          return elem;
        }).append(this);
      }
      return this;
    },
    wrapInner: function(html) {
      if (jQuery.isFunction(html)) {
        return this.each(function(i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }
      return this.each(function() {
        var self = jQuery(this),
            contents = self.contents();
        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },
    wrap: function(html) {
      var isFunction = jQuery.isFunction(html);
      return this.each(function(i) {
        jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
      });
    },
    unwrap: function() {
      return this.parent().each(function() {
        if (!jQuery.nodeName(this, "body")) {
          jQuery(this).replaceWith(this.childNodes);
        }
      }).end();
    }
  });
  jQuery.expr.filters.hidden = function(elem) {
    return !jQuery.expr.filters.visible(elem);
  };
  jQuery.expr.filters.visible = function(elem) {
    return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
  };
  var r20 = /%20/g,
      rbracket = /\[\]$/,
      rCRLF = /\r?\n/g,
      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
      rsubmittable = /^(?:input|select|textarea|keygen)/i;
  function buildParams(prefix, obj, traditional, add) {
    var name;
    if (jQuery.isArray(obj)) {
      jQuery.each(obj, function(i, v) {
        if (traditional || rbracket.test(prefix)) {
          add(prefix, v);
        } else {
          buildParams(prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]", v, traditional, add);
        }
      });
    } else if (!traditional && jQuery.type(obj) === "object") {
      for (name in obj) {
        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
      }
    } else {
      add(prefix, obj);
    }
  }
  jQuery.param = function(a, traditional) {
    var prefix,
        s = [],
        add = function(key, value) {
          value = jQuery.isFunction(value) ? value() : (value == null ? "" : value);
          s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };
    if (traditional === undefined) {
      traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
    }
    if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
      jQuery.each(a, function() {
        add(this.name, this.value);
      });
    } else {
      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    }
    return s.join("&").replace(r20, "+");
  };
  jQuery.fn.extend({
    serialize: function() {
      return jQuery.param(this.serializeArray());
    },
    serializeArray: function() {
      return this.map(function() {
        var elements = jQuery.prop(this, "elements");
        return elements ? jQuery.makeArray(elements) : this;
      }).filter(function() {
        var type = this.type;
        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
      }).map(function(i, elem) {
        var val = jQuery(this).val();
        return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
          return {
            name: elem.name,
            value: val.replace(rCRLF, "\r\n")
          };
        }) : {
          name: elem.name,
          value: val.replace(rCRLF, "\r\n")
        };
      }).get();
    }
  });
  jQuery.ajaxSettings.xhr = function() {
    try {
      return new window.XMLHttpRequest();
    } catch (e) {}
  };
  var xhrSuccessStatus = {
    0: 200,
    1223: 204
  },
      xhrSupported = jQuery.ajaxSettings.xhr();
  support.cors = !!xhrSupported && ("withCredentials" in xhrSupported);
  support.ajax = xhrSupported = !!xhrSupported;
  jQuery.ajaxTransport(function(options) {
    var callback,
        errorCallback;
    if (support.cors || xhrSupported && !options.crossDomain) {
      return {
        send: function(headers, complete) {
          var i,
              xhr = options.xhr();
          xhr.open(options.type, options.url, options.async, options.username, options.password);
          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          }
          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          }
          if (!options.crossDomain && !headers["X-Requested-With"]) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          }
          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          }
          callback = function(type) {
            return function() {
              if (callback) {
                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
                if (type === "abort") {
                  xhr.abort();
                } else if (type === "error") {
                  if (typeof xhr.status !== "number") {
                    complete(0, "error");
                  } else {
                    complete(xhr.status, xhr.statusText);
                  }
                } else {
                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {binary: xhr.response} : {text: xhr.responseText}, xhr.getAllResponseHeaders());
                }
              }
            };
          };
          xhr.onload = callback();
          errorCallback = xhr.onerror = callback("error");
          if (xhr.onabort !== undefined) {
            xhr.onabort = errorCallback;
          } else {
            xhr.onreadystatechange = function() {
              if (xhr.readyState === 4) {
                window.setTimeout(function() {
                  if (callback) {
                    errorCallback();
                  }
                });
              }
            };
          }
          callback = callback("abort");
          try {
            xhr.send(options.hasContent && options.data || null);
          } catch (e) {
            if (callback) {
              throw e;
            }
          }
        },
        abort: function() {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  jQuery.ajaxSetup({
    accepts: {script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"},
    contents: {script: /\b(?:java|ecma)script\b/},
    converters: {"text script": function(text) {
        jQuery.globalEval(text);
        return text;
      }}
  });
  jQuery.ajaxPrefilter("script", function(s) {
    if (s.cache === undefined) {
      s.cache = false;
    }
    if (s.crossDomain) {
      s.type = "GET";
    }
  });
  jQuery.ajaxTransport("script", function(s) {
    if (s.crossDomain) {
      var script,
          callback;
      return {
        send: function(_, complete) {
          script = jQuery("<script>").prop({
            charset: s.scriptCharset,
            src: s.url
          }).on("load error", callback = function(evt) {
            script.remove();
            callback = null;
            if (evt) {
              complete(evt.type === "error" ? 404 : 200, evt.type);
            }
          });
          document.head.appendChild(script[0]);
        },
        abort: function() {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  var oldCallbacks = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/;
  jQuery.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function() {
      var callback = oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++));
      this[callback] = true;
      return callback;
    }
  });
  jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
    var callbackName,
        overwritten,
        responseContainer,
        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
    if (jsonProp || s.dataTypes[0] === "jsonp") {
      callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
      if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
      } else if (s.jsonp !== false) {
        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
      }
      s.converters["script json"] = function() {
        if (!responseContainer) {
          jQuery.error(callbackName + " was not called");
        }
        return responseContainer[0];
      };
      s.dataTypes[0] = "json";
      overwritten = window[callbackName];
      window[callbackName] = function() {
        responseContainer = arguments;
      };
      jqXHR.always(function() {
        if (overwritten === undefined) {
          jQuery(window).removeProp(callbackName);
        } else {
          window[callbackName] = overwritten;
        }
        if (s[callbackName]) {
          s.jsonpCallback = originalSettings.jsonpCallback;
          oldCallbacks.push(callbackName);
        }
        if (responseContainer && jQuery.isFunction(overwritten)) {
          overwritten(responseContainer[0]);
        }
        responseContainer = overwritten = undefined;
      });
      return "script";
    }
  });
  support.createHTMLDocument = (function() {
    var body = document.implementation.createHTMLDocument("").body;
    body.innerHTML = "<form></form><form></form>";
    return body.childNodes.length === 2;
  })();
  jQuery.parseHTML = function(data, context, keepScripts) {
    if (!data || typeof data !== "string") {
      return null;
    }
    if (typeof context === "boolean") {
      keepScripts = context;
      context = false;
    }
    context = context || (support.createHTMLDocument ? document.implementation.createHTMLDocument("") : document);
    var parsed = rsingleTag.exec(data),
        scripts = !keepScripts && [];
    if (parsed) {
      return [context.createElement(parsed[1])];
    }
    parsed = buildFragment([data], context, scripts);
    if (scripts && scripts.length) {
      jQuery(scripts).remove();
    }
    return jQuery.merge([], parsed.childNodes);
  };
  var _load = jQuery.fn.load;
  jQuery.fn.load = function(url, params, callback) {
    if (typeof url !== "string" && _load) {
      return _load.apply(this, arguments);
    }
    var selector,
        type,
        response,
        self = this,
        off = url.indexOf(" ");
    if (off > -1) {
      selector = jQuery.trim(url.slice(off));
      url = url.slice(0, off);
    }
    if (jQuery.isFunction(params)) {
      callback = params;
      params = undefined;
    } else if (params && typeof params === "object") {
      type = "POST";
    }
    if (self.length > 0) {
      jQuery.ajax({
        url: url,
        type: type || "GET",
        dataType: "html",
        data: params
      }).done(function(responseText) {
        response = arguments;
        self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
      }).always(callback && function(jqXHR, status) {
        self.each(function() {
          callback.apply(self, response || [jqXHR.responseText, status, jqXHR]);
        });
      });
    }
    return this;
  };
  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
    jQuery.fn[type] = function(fn) {
      return this.on(type, fn);
    };
  });
  jQuery.expr.filters.animated = function(elem) {
    return jQuery.grep(jQuery.timers, function(fn) {
      return elem === fn.elem;
    }).length;
  };
  function getWindow(elem) {
    return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;
  }
  jQuery.offset = {setOffset: function(elem, options, i) {
      var curPosition,
          curLeft,
          curCSSTop,
          curTop,
          curOffset,
          curCSSLeft,
          calculatePosition,
          position = jQuery.css(elem, "position"),
          curElem = jQuery(elem),
          props = {};
      if (position === "static") {
        elem.style.position = "relative";
      }
      curOffset = curElem.offset();
      curCSSTop = jQuery.css(elem, "top");
      curCSSLeft = jQuery.css(elem, "left");
      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
      if (calculatePosition) {
        curPosition = curElem.position();
        curTop = curPosition.top;
        curLeft = curPosition.left;
      } else {
        curTop = parseFloat(curCSSTop) || 0;
        curLeft = parseFloat(curCSSLeft) || 0;
      }
      if (jQuery.isFunction(options)) {
        options = options.call(elem, i, jQuery.extend({}, curOffset));
      }
      if (options.top != null) {
        props.top = (options.top - curOffset.top) + curTop;
      }
      if (options.left != null) {
        props.left = (options.left - curOffset.left) + curLeft;
      }
      if ("using" in options) {
        options.using.call(elem, props);
      } else {
        curElem.css(props);
      }
    }};
  jQuery.fn.extend({
    offset: function(options) {
      if (arguments.length) {
        return options === undefined ? this : this.each(function(i) {
          jQuery.offset.setOffset(this, options, i);
        });
      }
      var docElem,
          win,
          elem = this[0],
          box = {
            top: 0,
            left: 0
          },
          doc = elem && elem.ownerDocument;
      if (!doc) {
        return;
      }
      docElem = doc.documentElement;
      if (!jQuery.contains(docElem, elem)) {
        return box;
      }
      box = elem.getBoundingClientRect();
      win = getWindow(doc);
      return {
        top: box.top + win.pageYOffset - docElem.clientTop,
        left: box.left + win.pageXOffset - docElem.clientLeft
      };
    },
    position: function() {
      if (!this[0]) {
        return;
      }
      var offsetParent,
          offset,
          elem = this[0],
          parentOffset = {
            top: 0,
            left: 0
          };
      if (jQuery.css(elem, "position") === "fixed") {
        offset = elem.getBoundingClientRect();
      } else {
        offsetParent = this.offsetParent();
        offset = this.offset();
        if (!jQuery.nodeName(offsetParent[0], "html")) {
          parentOffset = offsetParent.offset();
        }
        parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", true) - offsetParent.scrollTop();
        parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", true) - offsetParent.scrollLeft();
      }
      return {
        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
      };
    },
    offsetParent: function() {
      return this.map(function() {
        var offsetParent = this.offsetParent;
        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
          offsetParent = offsetParent.offsetParent;
        }
        return offsetParent || documentElement;
      });
    }
  });
  jQuery.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function(method, prop) {
    var top = "pageYOffset" === prop;
    jQuery.fn[method] = function(val) {
      return access(this, function(elem, method, val) {
        var win = getWindow(elem);
        if (val === undefined) {
          return win ? win[prop] : elem[method];
        }
        if (win) {
          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
        } else {
          elem[method] = val;
        }
      }, method, val, arguments.length);
    };
  });
  jQuery.each(["top", "left"], function(i, prop) {
    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
      if (computed) {
        computed = curCSS(elem, prop);
        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
      }
    });
  });
  jQuery.each({
    Height: "height",
    Width: "width"
  }, function(name, type) {
    jQuery.each({
      padding: "inner" + name,
      content: type,
      "": "outer" + name
    }, function(defaultExtra, funcName) {
      jQuery.fn[funcName] = function(margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
        return access(this, function(elem, type, value) {
          var doc;
          if (jQuery.isWindow(elem)) {
            return elem.document.documentElement["client" + name];
          }
          if (elem.nodeType === 9) {
            doc = elem.documentElement;
            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
          }
          return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable, null);
      };
    });
  });
  jQuery.fn.extend({
    bind: function(types, data, fn) {
      return this.on(types, null, data, fn);
    },
    unbind: function(types, fn) {
      return this.off(types, null, fn);
    },
    delegate: function(selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },
    undelegate: function(selector, types, fn) {
      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
    },
    size: function() {
      return this.length;
    }
  });
  jQuery.fn.andSelf = jQuery.fn.addBack;
  if (typeof define === "function" && define.amd) {
    define("npm:jquery@2.2.0/dist/jquery.js", [], function() {
      return jQuery;
    }) && define("jquery", ["npm:jquery@2.2.0/dist/jquery.js"], function(m) {
      return m;
    });
  }
  var _jQuery = window.jQuery,
      _$ = window.$;
  jQuery.noConflict = function(deep) {
    if (window.$ === jQuery) {
      window.$ = _$;
    }
    if (deep && window.jQuery === jQuery) {
      window.jQuery = _jQuery;
    }
    return jQuery;
  };
  if (!noGlobal) {
    window.jQuery = window.$ = jQuery;
  }
  return jQuery;
}));

})();
System.register("src/components/app/app.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:@angular/platform-browser@2.0.0-rc.1.js", "npm:@angular/common@2.0.0-rc.1.js", "npm:@angular/router-deprecated@2.0.0-rc.1.js", "npm:@angular/http@2.0.0-rc.1.js", "src/services/slidesHelper.js", "src/services/keyupListener.js", "src/services/constants.js", "src/components/menu/menu.js", "npm:@angular/compiler@2.0.0-rc.1.js", "npm:@angular/platform-browser-dynamic@2.0.0-rc.1/src/xhr/xhr_impl.js", "npm:google-code-prettify@1.0.1/src/prettify.js", "npm:google-code-prettify@1.0.1/src/lang-basic.js", "npm:jquery@2.2.0/dist/jquery.js"], function (exports_1, context_1) {
    "use strict";

    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, platform_browser_1, common_1, router_deprecated_1, http_1, slidesHelper_1, keyupListener_1, constants_1, menu_1, compiler_1, compiler_2, xhr_impl_1, App, ALL_ROUTER_BINDINGS, IN_BINDINGS, ALL_BINDINGS;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (platform_browser_1_1) {
            platform_browser_1 = platform_browser_1_1;
        }, function (common_1_1) {
            common_1 = common_1_1;
        }, function (router_deprecated_1_1) {
            router_deprecated_1 = router_deprecated_1_1;
        }, function (http_1_1) {
            http_1 = http_1_1;
        }, function (slidesHelper_1_1) {
            slidesHelper_1 = slidesHelper_1_1;
        }, function (keyupListener_1_1) {
            keyupListener_1 = keyupListener_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }, function (menu_1_1) {
            menu_1 = menu_1_1;
        }, function (compiler_1_1) {
            compiler_1 = compiler_1_1;
            compiler_2 = compiler_1_1;
        }, function (xhr_impl_1_1) {
            xhr_impl_1 = xhr_impl_1_1;
        }, function (_1) {}, function (_2) {}, function (_3) {}],
        execute: function () {
            //The app component contains the app version and name
            App = function () {
                function App() {
                    this.name = 'Training Angular';
                    this.version = '7.0.0';
                }
                return App;
            }();
            App = __decorate([core_1.Component({
                selector: 'app',
                styleUrls: ['src/components/app/app.css'],
                templateUrl: 'src/components/app/app.html',
                directives: [menu_1.Menu, router_deprecated_1.ROUTER_DIRECTIVES]
            }), __metadata("design:paramtypes", [])], App);
            exports_1("App", App);
            //Define providers for Router
            ALL_ROUTER_BINDINGS = [router_deprecated_1.ROUTER_BINDINGS, core_1.provide(common_1.APP_BASE_HREF, { useValue: '/' }), core_1.provide(common_1.LocationStrategy, { useClass: common_1.HashLocationStrategy })];
            //Define providers coming from the app itself
            IN_BINDINGS = [slidesHelper_1.SlidesHelper, keyupListener_1.KeyupListener, core_1.provide(constants_1.HOST_SLIDE_CONTAINER_CLASS, { useValue: 'hostSlideContainer' })];
            //Define all needed providers
            ALL_BINDINGS = [ALL_ROUTER_BINDINGS, compiler_1.COMPILER_PROVIDERS, core_1.provide(compiler_2.XHR, { useClass: xhr_impl_1.XHRImpl }), http_1.HTTP_PROVIDERS, IN_BINDINGS,
            // This service corresponds to the google prettify app, used to display code
            core_1.provide(constants_1.GPRETTIFYER, { useValue: window.prettyPrint }),
            // We also want a service for jQuery, used in editor/editortab components
            core_1.provide(constants_1.JQUERY, { useValue: window.jQuery })];
            platform_browser_1.bootstrapStatic(App, [menu_1.Menu, ALL_BINDINGS]);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection/aboutChangeDetection.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection = function (_super) {
                __extends(AboutChangeDetection, _super);
                function AboutChangeDetection(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection = __decorate([core_1.Component({
                selector: 'AboutChangeDetection',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection/aboutChangeDetection.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection/aboutChangeDetection.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection);
            exports_1("AboutChangeDetection", AboutChangeDetection);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection1/aboutChangeDetection1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection1 = function (_super) {
                __extends(AboutChangeDetection1, _super);
                function AboutChangeDetection1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection1;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection1 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection1',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection1/aboutChangeDetection1.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection1/aboutChangeDetection1.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection1);
            exports_1("AboutChangeDetection1", AboutChangeDetection1);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection2/aboutChangeDetection2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection2 = function (_super) {
                __extends(AboutChangeDetection2, _super);
                function AboutChangeDetection2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection2;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection2 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection2',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection2/aboutChangeDetection2.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection2/aboutChangeDetection2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection2);
            exports_1("AboutChangeDetection2", AboutChangeDetection2);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection3/aboutChangeDetection3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection3 = function (_super) {
                __extends(AboutChangeDetection3, _super);
                function AboutChangeDetection3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection3;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection3 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection3',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection3/aboutChangeDetection3.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection3/aboutChangeDetection3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection3);
            exports_1("AboutChangeDetection3", AboutChangeDetection3);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection4/aboutChangeDetection4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection4 = function (_super) {
                __extends(AboutChangeDetection4, _super);
                function AboutChangeDetection4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection4;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection4 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection4',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection4/aboutChangeDetection4.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection4/aboutChangeDetection4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection4);
            exports_1("AboutChangeDetection4", AboutChangeDetection4);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection5/aboutChangeDetection5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection5 = function (_super) {
                __extends(AboutChangeDetection5, _super);
                function AboutChangeDetection5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection5;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection5 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection5',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection5/aboutChangeDetection5.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection5/aboutChangeDetection5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection5);
            exports_1("AboutChangeDetection5", AboutChangeDetection5);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection6/aboutChangeDetection6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection6 = function (_super) {
                __extends(AboutChangeDetection6, _super);
                function AboutChangeDetection6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection6;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection6 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection6',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection6/aboutChangeDetection6.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection6/aboutChangeDetection6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection6);
            exports_1("AboutChangeDetection6", AboutChangeDetection6);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection7/aboutChangeDetection7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection7 = function (_super) {
                __extends(AboutChangeDetection7, _super);
                function AboutChangeDetection7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection7;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection7 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection7',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection7/aboutChangeDetection7.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection7/aboutChangeDetection7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection7);
            exports_1("AboutChangeDetection7", AboutChangeDetection7);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection8/aboutChangeDetection8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection8 = function (_super) {
                __extends(AboutChangeDetection8, _super);
                function AboutChangeDetection8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection8;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection8 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection8',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection8/aboutChangeDetection8.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection8/aboutChangeDetection8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection8);
            exports_1("AboutChangeDetection8", AboutChangeDetection8);
        }
    };
});
System.register("src/components/slides/advancedConcepts/aboutChangeDetection9/aboutChangeDetection9.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutChangeDetection9;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutChangeDetection9 = function (_super) {
                __extends(AboutChangeDetection9, _super);
                function AboutChangeDetection9(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutChangeDetection9;
            }(slideCommon_1.SlideCommon);
            AboutChangeDetection9 = __decorate([core_1.Component({
                selector: 'AboutChangeDetection9',
                templateUrl: 'src/components/slides/advancedConcepts/aboutChangeDetection9/aboutChangeDetection9.html',
                styleUrls: ['src/components/slides/advancedConcepts/aboutChangeDetection9/aboutChangeDetection9.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutChangeDetection9);
            exports_1("AboutChangeDetection9", AboutChangeDetection9);
        }
    };
});
System.register("src/components/slides/advancedConcepts/e2e/e2e.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, E2e;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            E2e = function (_super) {
                __extends(E2e, _super);
                function E2e(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return E2e;
            }(slideCommon_1.SlideCommon);
            E2e = __decorate([core_1.Component({
                selector: 'E2e',
                templateUrl: 'src/components/slides/advancedConcepts/e2e/e2e.html',
                styleUrls: ['src/components/slides/advancedConcepts/e2e/e2e.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], E2e);
            exports_1("E2e", E2e);
        }
    };
});
System.register("src/components/slides/advancedConcepts/e2e2/e2e2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, E2e2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            E2e2 = function (_super) {
                __extends(E2e2, _super);
                function E2e2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return E2e2;
            }(slideCommon_1.SlideCommon);
            E2e2 = __decorate([core_1.Component({
                selector: 'E2e2',
                templateUrl: 'src/components/slides/advancedConcepts/e2e2/e2e2.html',
                styleUrls: ['src/components/slides/advancedConcepts/e2e2/e2e2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], E2e2);
            exports_1("E2e2", E2e2);
        }
    };
});
System.register("src/components/slides/advancedConcepts/e2e3/e2e3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, E2e3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            E2e3 = function (_super) {
                __extends(E2e3, _super);
                function E2e3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return E2e3;
            }(slideCommon_1.SlideCommon);
            E2e3 = __decorate([core_1.Component({
                selector: 'E2e3',
                templateUrl: 'src/components/slides/advancedConcepts/e2e3/e2e3.html',
                styleUrls: ['src/components/slides/advancedConcepts/e2e3/e2e3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], E2e3);
            exports_1("E2e3", E2e3);
        }
    };
});
System.register("src/components/slides/advancedConcepts/pWE2E/pWE2E.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PWE2E;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PWE2E = function (_super) {
                __extends(PWE2E, _super);
                function PWE2E(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PWE2E;
            }(slideCommon_1.SlideCommon);
            PWE2E = __decorate([core_1.Component({
                selector: 'PWE2E',
                templateUrl: 'src/components/slides/advancedConcepts/pWE2E/pWE2E.html',
                styleUrls: ['src/components/slides/advancedConcepts/pWE2E/pWE2E.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PWE2E);
            exports_1("PWE2E", PWE2E);
        }
    };
});
System.register("src/components/slides/advancedConcepts/pWUnitTests/pWUnitTests.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PWUnitTests;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PWUnitTests = function (_super) {
                __extends(PWUnitTests, _super);
                function PWUnitTests(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PWUnitTests;
            }(slideCommon_1.SlideCommon);
            PWUnitTests = __decorate([core_1.Component({
                selector: 'PWUnitTests',
                templateUrl: 'src/components/slides/advancedConcepts/pWUnitTests/pWUnitTests.html',
                styleUrls: ['src/components/slides/advancedConcepts/pWUnitTests/pWUnitTests.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PWUnitTests);
            exports_1("PWUnitTests", PWUnitTests);
        }
    };
});
System.register("src/components/slides/advancedConcepts/pwObservables/pwObservables.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwObservables;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwObservables = function (_super) {
                __extends(PwObservables, _super);
                function PwObservables(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwObservables;
            }(slideCommon_1.SlideCommon);
            PwObservables = __decorate([core_1.Component({
                selector: 'PwObservables',
                templateUrl: 'src/components/slides/advancedConcepts/pwObservables/pwObservables.html',
                styleUrls: ['src/components/slides/advancedConcepts/pwObservables/pwObservables.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwObservables);
            exports_1("PwObservables", PwObservables);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests/unitTests.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests = function (_super) {
                __extends(UnitTests, _super);
                function UnitTests(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests;
            }(slideCommon_1.SlideCommon);
            UnitTests = __decorate([core_1.Component({
                selector: 'UnitTests',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests/unitTests.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests/unitTests.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests);
            exports_1("UnitTests", UnitTests);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests2/unitTests2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests2 = function (_super) {
                __extends(UnitTests2, _super);
                function UnitTests2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests2;
            }(slideCommon_1.SlideCommon);
            UnitTests2 = __decorate([core_1.Component({
                selector: 'UnitTests2',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests2/unitTests2.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests2/unitTests2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests2);
            exports_1("UnitTests2", UnitTests2);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests3/unitTests3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests3 = function (_super) {
                __extends(UnitTests3, _super);
                function UnitTests3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests3;
            }(slideCommon_1.SlideCommon);
            UnitTests3 = __decorate([core_1.Component({
                selector: 'UnitTests3',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests3/unitTests3.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests3/unitTests3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests3);
            exports_1("UnitTests3", UnitTests3);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests4/unitTests4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests4 = function (_super) {
                __extends(UnitTests4, _super);
                function UnitTests4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests4;
            }(slideCommon_1.SlideCommon);
            UnitTests4 = __decorate([core_1.Component({
                selector: 'UnitTests4',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests4/unitTests4.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests4/unitTests4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests4);
            exports_1("UnitTests4", UnitTests4);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests5/unitTests5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests5 = function (_super) {
                __extends(UnitTests5, _super);
                function UnitTests5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests5;
            }(slideCommon_1.SlideCommon);
            UnitTests5 = __decorate([core_1.Component({
                selector: 'UnitTests5',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests5/unitTests5.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests5/unitTests5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests5);
            exports_1("UnitTests5", UnitTests5);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests6/unitTests6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests6 = function (_super) {
                __extends(UnitTests6, _super);
                function UnitTests6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests6;
            }(slideCommon_1.SlideCommon);
            UnitTests6 = __decorate([core_1.Component({
                selector: 'UnitTests6',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests6/unitTests6.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests6/unitTests6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests6);
            exports_1("UnitTests6", UnitTests6);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests7/unitTests7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests7 = function (_super) {
                __extends(UnitTests7, _super);
                function UnitTests7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests7;
            }(slideCommon_1.SlideCommon);
            UnitTests7 = __decorate([core_1.Component({
                selector: 'UnitTests7',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests7/unitTests7.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests7/unitTests7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests7);
            exports_1("UnitTests7", UnitTests7);
        }
    };
});
System.register("src/components/slides/advancedConcepts/unitTests8/unitTests8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, UnitTests8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            UnitTests8 = function (_super) {
                __extends(UnitTests8, _super);
                function UnitTests8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return UnitTests8;
            }(slideCommon_1.SlideCommon);
            UnitTests8 = __decorate([core_1.Component({
                selector: 'UnitTests8',
                templateUrl: 'src/components/slides/advancedConcepts/unitTests8/unitTests8.html',
                styleUrls: ['src/components/slides/advancedConcepts/unitTests8/unitTests8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], UnitTests8);
            exports_1("UnitTests8", UnitTests8);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix1/esSix1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix1 = function (_super) {
                __extends(EsSix1, _super);
                function EsSix1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix1;
            }(slideCommon_1.SlideCommon);
            EsSix1 = __decorate([core_1.Component({
                selector: 'EsSix1',
                templateUrl: 'src/components/slides/ecosystem/esSix1/esSix1.html',
                styleUrls: ['src/components/slides/ecosystem/esSix1/esSix1.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix1);
            exports_1("EsSix1", EsSix1);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix10/esSix10.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix10;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix10 = function (_super) {
                __extends(EsSix10, _super);
                function EsSix10(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix10;
            }(slideCommon_1.SlideCommon);
            EsSix10 = __decorate([core_1.Component({
                selector: 'EsSix10',
                templateUrl: 'src/components/slides/ecosystem/esSix10/esSix10.html',
                styleUrls: ['src/components/slides/ecosystem/esSix10/esSix10.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix10);
            exports_1("EsSix10", EsSix10);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix11/esSix11.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix11;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix11 = function (_super) {
                __extends(EsSix11, _super);
                function EsSix11(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix11;
            }(slideCommon_1.SlideCommon);
            EsSix11 = __decorate([core_1.Component({
                selector: 'EsSix11',
                templateUrl: 'src/components/slides/ecosystem/esSix11/esSix11.html',
                styleUrls: ['src/components/slides/ecosystem/esSix11/esSix11.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix11);
            exports_1("EsSix11", EsSix11);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix12/esSix12.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix12;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix12 = function (_super) {
                __extends(EsSix12, _super);
                function EsSix12(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix12;
            }(slideCommon_1.SlideCommon);
            EsSix12 = __decorate([core_1.Component({
                selector: 'EsSix12',
                templateUrl: 'src/components/slides/ecosystem/esSix12/esSix12.html',
                styleUrls: ['src/components/slides/ecosystem/esSix12/esSix12.css'],
                directives: [editorTab_1.EditorTab, editor_1.Editor]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix12);
            exports_1("EsSix12", EsSix12);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix12_2/esSix12_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix12_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix12_2 = function (_super) {
                __extends(EsSix12_2, _super);
                function EsSix12_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix12_2;
            }(slideCommon_1.SlideCommon);
            EsSix12_2 = __decorate([core_1.Component({
                selector: 'EsSix12_2',
                templateUrl: 'src/components/slides/ecosystem/esSix12_2/esSix12_2.html',
                styleUrls: ['src/components/slides/ecosystem/esSix12_2/esSix12_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix12_2);
            exports_1("EsSix12_2", EsSix12_2);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix2/esSix2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix2 = function (_super) {
                __extends(EsSix2, _super);
                function EsSix2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix2;
            }(slideCommon_1.SlideCommon);
            EsSix2 = __decorate([core_1.Component({
                selector: 'EsSix2',
                templateUrl: 'src/components/slides/ecosystem/esSix2/esSix2.html',
                styleUrls: ['src/components/slides/ecosystem/esSix2/esSix2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix2);
            exports_1("EsSix2", EsSix2);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix3/esSix3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix3 = function (_super) {
                __extends(EsSix3, _super);
                function EsSix3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix3;
            }(slideCommon_1.SlideCommon);
            EsSix3 = __decorate([core_1.Component({
                selector: 'EsSix3',
                templateUrl: 'src/components/slides/ecosystem/esSix3/esSix3.html',
                styleUrls: ['src/components/slides/ecosystem/esSix3/esSix3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix3);
            exports_1("EsSix3", EsSix3);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix4/esSix4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix4 = function (_super) {
                __extends(EsSix4, _super);
                function EsSix4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix4;
            }(slideCommon_1.SlideCommon);
            EsSix4 = __decorate([core_1.Component({
                selector: 'EsSix4',
                templateUrl: 'src/components/slides/ecosystem/esSix4/esSix4.html',
                styleUrls: ['src/components/slides/ecosystem/esSix4/esSix4.css'],
                directives: [editorTab_1.EditorTab, editor_1.Editor]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix4);
            exports_1("EsSix4", EsSix4);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix4_2/esSix4_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix4_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix4_2 = function (_super) {
                __extends(EsSix4_2, _super);
                function EsSix4_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix4_2;
            }(slideCommon_1.SlideCommon);
            EsSix4_2 = __decorate([core_1.Component({
                selector: 'EsSix4_2',
                templateUrl: 'src/components/slides/ecosystem/esSix4_2/esSix4_2.html',
                styleUrls: ['src/components/slides/ecosystem/esSix4_2/esSix4_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix4_2);
            exports_1("EsSix4_2", EsSix4_2);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix4_3/esSix4_3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix4_3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix4_3 = function (_super) {
                __extends(EsSix4_3, _super);
                function EsSix4_3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix4_3;
            }(slideCommon_1.SlideCommon);
            EsSix4_3 = __decorate([core_1.Component({
                selector: 'EsSix4_3',
                templateUrl: 'src/components/slides/ecosystem/esSix4_3/esSix4_3.html',
                styleUrls: ['src/components/slides/ecosystem/esSix4_3/esSix4_3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix4_3);
            exports_1("EsSix4_3", EsSix4_3);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix5/esSix5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix5 = function (_super) {
                __extends(EsSix5, _super);
                function EsSix5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix5;
            }(slideCommon_1.SlideCommon);
            EsSix5 = __decorate([core_1.Component({
                selector: 'EsSix5',
                templateUrl: 'src/components/slides/ecosystem/esSix5/esSix5.html',
                styleUrls: ['src/components/slides/ecosystem/esSix5/esSix5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix5);
            exports_1("EsSix5", EsSix5);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix5_2/esSix5_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix5_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix5_2 = function (_super) {
                __extends(EsSix5_2, _super);
                function EsSix5_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix5_2;
            }(slideCommon_1.SlideCommon);
            EsSix5_2 = __decorate([core_1.Component({
                selector: 'EsSix5_2',
                templateUrl: 'src/components/slides/ecosystem/esSix5_2/esSix5_2.html',
                styleUrls: ['src/components/slides/ecosystem/esSix5_2/esSix5_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix5_2);
            exports_1("EsSix5_2", EsSix5_2);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix6/esSix6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix6 = function (_super) {
                __extends(EsSix6, _super);
                function EsSix6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix6;
            }(slideCommon_1.SlideCommon);
            EsSix6 = __decorate([core_1.Component({
                selector: 'EsSix6',
                templateUrl: 'src/components/slides/ecosystem/esSix6/esSix6.html',
                styleUrls: ['src/components/slides/ecosystem/esSix6/esSix6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix6);
            exports_1("EsSix6", EsSix6);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix6_2/esSix6_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix6_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix6_2 = function (_super) {
                __extends(EsSix6_2, _super);
                function EsSix6_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix6_2;
            }(slideCommon_1.SlideCommon);
            EsSix6_2 = __decorate([core_1.Component({
                selector: 'EsSix6_2',
                templateUrl: 'src/components/slides/ecosystem/esSix6_2/esSix6_2.html',
                styleUrls: ['src/components/slides/ecosystem/esSix6_2/esSix6_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix6_2);
            exports_1("EsSix6_2", EsSix6_2);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix7/esSix7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix7 = function (_super) {
                __extends(EsSix7, _super);
                function EsSix7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix7;
            }(slideCommon_1.SlideCommon);
            EsSix7 = __decorate([core_1.Component({
                selector: 'EsSix7',
                templateUrl: 'src/components/slides/ecosystem/esSix7/esSix7.html',
                styleUrls: ['src/components/slides/ecosystem/esSix7/esSix7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix7);
            exports_1("EsSix7", EsSix7);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix7_2/esSix7_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix7_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix7_2 = function (_super) {
                __extends(EsSix7_2, _super);
                function EsSix7_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix7_2;
            }(slideCommon_1.SlideCommon);
            EsSix7_2 = __decorate([core_1.Component({
                selector: 'EsSix7_2',
                templateUrl: 'src/components/slides/ecosystem/esSix7_2/esSix7_2.html',
                styleUrls: ['src/components/slides/ecosystem/esSix7_2/esSix7_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix7_2);
            exports_1("EsSix7_2", EsSix7_2);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix7_3/esSix7_3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix7_3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix7_3 = function (_super) {
                __extends(EsSix7_3, _super);
                function EsSix7_3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix7_3;
            }(slideCommon_1.SlideCommon);
            EsSix7_3 = __decorate([core_1.Component({
                selector: 'EsSix7_3',
                templateUrl: 'src/components/slides/ecosystem/esSix7_3/esSix7_3.html',
                styleUrls: ['src/components/slides/ecosystem/esSix7_3/esSix7_3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix7_3);
            exports_1("EsSix7_3", EsSix7_3);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix8/esSix8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix8 = function (_super) {
                __extends(EsSix8, _super);
                function EsSix8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix8;
            }(slideCommon_1.SlideCommon);
            EsSix8 = __decorate([core_1.Component({
                selector: 'EsSix8',
                templateUrl: 'src/components/slides/ecosystem/esSix8/esSix8.html',
                styleUrls: ['src/components/slides/ecosystem/esSix8/esSix8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix8);
            exports_1("EsSix8", EsSix8);
        }
    };
});
System.register("src/components/slides/ecosystem/esSix9/esSix9.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, EsSix9;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            EsSix9 = function (_super) {
                __extends(EsSix9, _super);
                function EsSix9(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return EsSix9;
            }(slideCommon_1.SlideCommon);
            EsSix9 = __decorate([core_1.Component({
                selector: 'EsSix9',
                templateUrl: 'src/components/slides/ecosystem/esSix9/esSix9.html',
                styleUrls: ['src/components/slides/ecosystem/esSix9/esSix9.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], EsSix9);
            exports_1("EsSix9", EsSix9);
        }
    };
});
System.register("src/components/slides/ecosystem/observables/observables.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Observables;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Observables = function (_super) {
                __extends(Observables, _super);
                function Observables(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Observables;
            }(slideCommon_1.SlideCommon);
            Observables = __decorate([core_1.Component({
                selector: 'Observables',
                templateUrl: 'src/components/slides/ecosystem/observables/observables.html',
                styleUrls: ['src/components/slides/ecosystem/observables/observables.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Observables);
            exports_1("Observables", Observables);
        }
    };
});
System.register("src/components/slides/ecosystem/observables2/observables2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Observables2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Observables2 = function (_super) {
                __extends(Observables2, _super);
                function Observables2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Observables2;
            }(slideCommon_1.SlideCommon);
            Observables2 = __decorate([core_1.Component({
                selector: 'Observables2',
                templateUrl: 'src/components/slides/ecosystem/observables2/observables2.html',
                styleUrls: ['src/components/slides/ecosystem/observables2/observables2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Observables2);
            exports_1("Observables2", Observables2);
        }
    };
});
System.register("src/components/slides/ecosystem/observables3/observables3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Observables3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Observables3 = function (_super) {
                __extends(Observables3, _super);
                function Observables3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Observables3;
            }(slideCommon_1.SlideCommon);
            Observables3 = __decorate([core_1.Component({
                selector: 'Observables3',
                templateUrl: 'src/components/slides/ecosystem/observables3/observables3.html',
                styleUrls: ['src/components/slides/ecosystem/observables3/observables3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Observables3);
            exports_1("Observables3", Observables3);
        }
    };
});
System.register("src/components/slides/ecosystem/observables4/observables4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Observables4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Observables4 = function (_super) {
                __extends(Observables4, _super);
                function Observables4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Observables4;
            }(slideCommon_1.SlideCommon);
            Observables4 = __decorate([core_1.Component({
                selector: 'Observables4',
                templateUrl: 'src/components/slides/ecosystem/observables4/observables4.html',
                styleUrls: ['src/components/slides/ecosystem/observables4/observables4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Observables4);
            exports_1("Observables4", Observables4);
        }
    };
});
System.register("src/components/slides/ecosystem/pw1/pw1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Pw1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Pw1 = function (_super) {
                __extends(Pw1, _super);
                function Pw1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Pw1;
            }(slideCommon_1.SlideCommon);
            Pw1 = __decorate([core_1.Component({
                selector: 'Pw1',
                templateUrl: 'src/components/slides/ecosystem/pw1/pw1.html',
                styleUrls: ['src/components/slides/ecosystem/pw1/pw1.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Pw1);
            exports_1("Pw1", Pw1);
        }
    };
});
System.register("src/components/slides/ecosystem/pw1_router/pw1_router.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Pw1_router;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Pw1_router = function (_super) {
                __extends(Pw1_router, _super);
                function Pw1_router(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Pw1_router;
            }(slideCommon_1.SlideCommon);
            Pw1_router = __decorate([core_1.Component({
                selector: 'Pw1_router',
                templateUrl: 'src/components/slides/ecosystem/pw1_router/pw1_router.html',
                styleUrls: ['src/components/slides/ecosystem/pw1_router/pw1_router.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Pw1_router);
            exports_1("Pw1_router", Pw1_router);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch/startFromScratch.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch = function (_super) {
                __extends(StartFromScratch, _super);
                function StartFromScratch(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch;
            }(slideCommon_1.SlideCommon);
            StartFromScratch = __decorate([core_1.Component({
                selector: 'StartFromScratch',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch/startFromScratch.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch/startFromScratch.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch);
            exports_1("StartFromScratch", StartFromScratch);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch2/startFromScratch2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch2 = function (_super) {
                __extends(StartFromScratch2, _super);
                function StartFromScratch2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch2;
            }(slideCommon_1.SlideCommon);
            StartFromScratch2 = __decorate([core_1.Component({
                selector: 'StartFromScratch2',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch2/startFromScratch2.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch2/startFromScratch2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch2);
            exports_1("StartFromScratch2", StartFromScratch2);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch3/startFromScratch3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch3 = function (_super) {
                __extends(StartFromScratch3, _super);
                function StartFromScratch3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch3;
            }(slideCommon_1.SlideCommon);
            StartFromScratch3 = __decorate([core_1.Component({
                selector: 'StartFromScratch3',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch3/startFromScratch3.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch3/startFromScratch3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch3);
            exports_1("StartFromScratch3", StartFromScratch3);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch3_2/startFromScratch3_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch3_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch3_2 = function (_super) {
                __extends(StartFromScratch3_2, _super);
                function StartFromScratch3_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch3_2;
            }(slideCommon_1.SlideCommon);
            StartFromScratch3_2 = __decorate([core_1.Component({
                selector: 'StartFromScratch3_2',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch3_2/startFromScratch3_2.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch3_2/startFromScratch3_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch3_2);
            exports_1("StartFromScratch3_2", StartFromScratch3_2);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch4/startFromScratch4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch4 = function (_super) {
                __extends(StartFromScratch4, _super);
                function StartFromScratch4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch4;
            }(slideCommon_1.SlideCommon);
            StartFromScratch4 = __decorate([core_1.Component({
                selector: 'StartFromScratch4',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch4/startFromScratch4.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch4/startFromScratch4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch4);
            exports_1("StartFromScratch4", StartFromScratch4);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch5/startFromScratch5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch5 = function (_super) {
                __extends(StartFromScratch5, _super);
                function StartFromScratch5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch5;
            }(slideCommon_1.SlideCommon);
            StartFromScratch5 = __decorate([core_1.Component({
                selector: 'StartFromScratch5',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch5/startFromScratch5.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch5/startFromScratch5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch5);
            exports_1("StartFromScratch5", StartFromScratch5);
        }
    };
});
System.register("src/components/slides/ecosystem/startFromScratch6/startFromScratch6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartFromScratch6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartFromScratch6 = function (_super) {
                __extends(StartFromScratch6, _super);
                function StartFromScratch6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartFromScratch6;
            }(slideCommon_1.SlideCommon);
            StartFromScratch6 = __decorate([core_1.Component({
                selector: 'StartFromScratch6',
                templateUrl: 'src/components/slides/ecosystem/startFromScratch6/startFromScratch6.html',
                styleUrls: ['src/components/slides/ecosystem/startFromScratch6/startFromScratch6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartFromScratch6);
            exports_1("StartFromScratch6", StartFromScratch6);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript1/typescript1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, Typescript1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript1 = function (_super) {
                __extends(Typescript1, _super);
                function Typescript1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript1;
            }(slideCommon_1.SlideCommon);
            Typescript1 = __decorate([core_1.Component({
                selector: 'Typescript1',
                templateUrl: 'src/components/slides/ecosystem/typescript1/typescript1.html',
                styleUrls: ['src/components/slides/ecosystem/typescript1/typescript1.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript1);
            exports_1("Typescript1", Typescript1);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript2/typescript2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, Typescript2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript2 = function (_super) {
                __extends(Typescript2, _super);
                function Typescript2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript2;
            }(slideCommon_1.SlideCommon);
            Typescript2 = __decorate([core_1.Component({
                selector: 'Typescript2',
                templateUrl: 'src/components/slides/ecosystem/typescript2/typescript2.html',
                styleUrls: ['src/components/slides/ecosystem/typescript2/typescript2.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript2);
            exports_1("Typescript2", Typescript2);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript3/typescript3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript3 = function (_super) {
                __extends(Typescript3, _super);
                function Typescript3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript3;
            }(slideCommon_1.SlideCommon);
            Typescript3 = __decorate([core_1.Component({
                selector: 'Typescript3',
                templateUrl: 'src/components/slides/ecosystem/typescript3/typescript3.html',
                styleUrls: ['src/components/slides/ecosystem/typescript3/typescript3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript3);
            exports_1("Typescript3", Typescript3);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript4/typescript4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript4 = function (_super) {
                __extends(Typescript4, _super);
                function Typescript4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript4;
            }(slideCommon_1.SlideCommon);
            Typescript4 = __decorate([core_1.Component({
                selector: 'Typescript4',
                templateUrl: 'src/components/slides/ecosystem/typescript4/typescript4.html',
                styleUrls: ['src/components/slides/ecosystem/typescript4/typescript4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript4);
            exports_1("Typescript4", Typescript4);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript4_2/typescript4_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript4_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript4_2 = function (_super) {
                __extends(Typescript4_2, _super);
                function Typescript4_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript4_2;
            }(slideCommon_1.SlideCommon);
            Typescript4_2 = __decorate([core_1.Component({
                selector: 'Typescript4_2',
                templateUrl: 'src/components/slides/ecosystem/typescript4_2/typescript4_2.html',
                styleUrls: ['src/components/slides/ecosystem/typescript4_2/typescript4_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript4_2);
            exports_1("Typescript4_2", Typescript4_2);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript4_3/typescript4_3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript4_3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript4_3 = function (_super) {
                __extends(Typescript4_3, _super);
                function Typescript4_3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript4_3;
            }(slideCommon_1.SlideCommon);
            Typescript4_3 = __decorate([core_1.Component({
                selector: 'Typescript4_3',
                templateUrl: 'src/components/slides/ecosystem/typescript4_3/typescript4_3.html',
                styleUrls: ['src/components/slides/ecosystem/typescript4_3/typescript4_3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript4_3);
            exports_1("Typescript4_3", Typescript4_3);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript4_4/typescript4_4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript4_4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript4_4 = function (_super) {
                __extends(Typescript4_4, _super);
                function Typescript4_4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript4_4;
            }(slideCommon_1.SlideCommon);
            Typescript4_4 = __decorate([core_1.Component({
                selector: 'Typescript4_4',
                templateUrl: 'src/components/slides/ecosystem/typescript4_4/typescript4_4.html',
                styleUrls: ['src/components/slides/ecosystem/typescript4_4/typescript4_4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript4_4);
            exports_1("Typescript4_4", Typescript4_4);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript5/typescript5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript5 = function (_super) {
                __extends(Typescript5, _super);
                function Typescript5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript5;
            }(slideCommon_1.SlideCommon);
            Typescript5 = __decorate([core_1.Component({
                selector: 'Typescript5',
                templateUrl: 'src/components/slides/ecosystem/typescript5/typescript5.html',
                styleUrls: ['src/components/slides/ecosystem/typescript5/typescript5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript5);
            exports_1("Typescript5", Typescript5);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript5_2/typescript5_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript5_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript5_2 = function (_super) {
                __extends(Typescript5_2, _super);
                function Typescript5_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript5_2;
            }(slideCommon_1.SlideCommon);
            Typescript5_2 = __decorate([core_1.Component({
                selector: 'Typescript5_2',
                templateUrl: 'src/components/slides/ecosystem/typescript5_2/typescript5_2.html',
                styleUrls: ['src/components/slides/ecosystem/typescript5_2/typescript5_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript5_2);
            exports_1("Typescript5_2", Typescript5_2);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript6/typescript6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript6 = function (_super) {
                __extends(Typescript6, _super);
                function Typescript6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript6;
            }(slideCommon_1.SlideCommon);
            Typescript6 = __decorate([core_1.Component({
                selector: 'Typescript6',
                templateUrl: 'src/components/slides/ecosystem/typescript6/typescript6.html',
                styleUrls: ['src/components/slides/ecosystem/typescript6/typescript6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript6);
            exports_1("Typescript6", Typescript6);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript7/typescript7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript7 = function (_super) {
                __extends(Typescript7, _super);
                function Typescript7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript7;
            }(slideCommon_1.SlideCommon);
            Typescript7 = __decorate([core_1.Component({
                selector: 'Typescript7',
                templateUrl: 'src/components/slides/ecosystem/typescript7/typescript7.html',
                styleUrls: ['src/components/slides/ecosystem/typescript7/typescript7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript7);
            exports_1("Typescript7", Typescript7);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript7_2/typescript7_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript7_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript7_2 = function (_super) {
                __extends(Typescript7_2, _super);
                function Typescript7_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript7_2;
            }(slideCommon_1.SlideCommon);
            Typescript7_2 = __decorate([core_1.Component({
                selector: 'Typescript7_2',
                templateUrl: 'src/components/slides/ecosystem/typescript7_2/typescript7_2.html',
                styleUrls: ['src/components/slides/ecosystem/typescript7_2/typescript7_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript7_2);
            exports_1("Typescript7_2", Typescript7_2);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript7_3/typescript7_3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript7_3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript7_3 = function (_super) {
                __extends(Typescript7_3, _super);
                function Typescript7_3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript7_3;
            }(slideCommon_1.SlideCommon);
            Typescript7_3 = __decorate([core_1.Component({
                selector: 'Typescript7_3',
                templateUrl: 'src/components/slides/ecosystem/typescript7_3/typescript7_3.html',
                styleUrls: ['src/components/slides/ecosystem/typescript7_3/typescript7_3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript7_3);
            exports_1("Typescript7_3", Typescript7_3);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript7_4/typescript7_4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript7_4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript7_4 = function (_super) {
                __extends(Typescript7_4, _super);
                function Typescript7_4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript7_4;
            }(slideCommon_1.SlideCommon);
            Typescript7_4 = __decorate([core_1.Component({
                selector: 'Typescript7_4',
                templateUrl: 'src/components/slides/ecosystem/typescript7_4/typescript7_4.html',
                styleUrls: ['src/components/slides/ecosystem/typescript7_4/typescript7_4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript7_4);
            exports_1("Typescript7_4", Typescript7_4);
        }
    };
});
System.register("src/components/slides/ecosystem/typescript8/typescript8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Typescript8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Typescript8 = function (_super) {
                __extends(Typescript8, _super);
                function Typescript8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Typescript8;
            }(slideCommon_1.SlideCommon);
            Typescript8 = __decorate([core_1.Component({
                selector: 'typescript8',
                templateUrl: 'src/components/slides/ecosystem/typescript8/typescript8.html',
                styleUrls: ['src/components/slides/ecosystem/typescript8/typescript8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Typescript8);
            exports_1("Typescript8", Typescript8);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutComposition/aboutComposition.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutComposition;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutComposition = function (_super) {
                __extends(AboutComposition, _super);
                function AboutComposition(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutComposition;
            }(slideCommon_1.SlideCommon);
            AboutComposition = __decorate([core_1.Component({
                selector: 'AboutComposition',
                templateUrl: 'src/components/slides/mainConcepts/aboutComposition/aboutComposition.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutComposition/aboutComposition.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutComposition);
            exports_1("AboutComposition", AboutComposition);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms/aboutForms.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms = function (_super) {
                __extends(AboutForms, _super);
                function AboutForms(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms;
            }(slideCommon_1.SlideCommon);
            AboutForms = __decorate([core_1.Component({
                selector: 'AboutForms',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms/aboutForms.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms/aboutForms.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms);
            exports_1("AboutForms", AboutForms);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms2/aboutForms2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms2 = function (_super) {
                __extends(AboutForms2, _super);
                function AboutForms2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms2;
            }(slideCommon_1.SlideCommon);
            AboutForms2 = __decorate([core_1.Component({
                selector: 'AboutForms2',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms2/aboutForms2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms2/aboutForms2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms2);
            exports_1("AboutForms2", AboutForms2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms3/aboutForms3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms3 = function (_super) {
                __extends(AboutForms3, _super);
                function AboutForms3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms3;
            }(slideCommon_1.SlideCommon);
            AboutForms3 = __decorate([core_1.Component({
                selector: 'AboutForms3',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms3/aboutForms3.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms3/aboutForms3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms3);
            exports_1("AboutForms3", AboutForms3);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms4/aboutForms4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms4 = function (_super) {
                __extends(AboutForms4, _super);
                function AboutForms4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms4;
            }(slideCommon_1.SlideCommon);
            AboutForms4 = __decorate([core_1.Component({
                selector: 'AboutForms4',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms4/aboutForms4.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms4/aboutForms4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms4);
            exports_1("AboutForms4", AboutForms4);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms5/aboutForms5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms5 = function (_super) {
                __extends(AboutForms5, _super);
                function AboutForms5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms5;
            }(slideCommon_1.SlideCommon);
            AboutForms5 = __decorate([core_1.Component({
                selector: 'AboutForms5',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms5/aboutForms5.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms5/aboutForms5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms5);
            exports_1("AboutForms5", AboutForms5);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms6/aboutForms6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms6 = function (_super) {
                __extends(AboutForms6, _super);
                function AboutForms6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms6;
            }(slideCommon_1.SlideCommon);
            AboutForms6 = __decorate([core_1.Component({
                selector: 'AboutForms6',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms6/aboutForms6.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms6/aboutForms6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms6);
            exports_1("AboutForms6", AboutForms6);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutForms7/aboutForms7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutForms7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutForms7 = function (_super) {
                __extends(AboutForms7, _super);
                function AboutForms7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutForms7;
            }(slideCommon_1.SlideCommon);
            AboutForms7 = __decorate([core_1.Component({
                selector: 'AboutForms7',
                templateUrl: 'src/components/slides/mainConcepts/aboutForms7/aboutForms7.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutForms7/aboutForms7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutForms7);
            exports_1("AboutForms7", AboutForms7);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutLifecycle/aboutLifecycle.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutLifecycle;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutLifecycle = function (_super) {
                __extends(AboutLifecycle, _super);
                function AboutLifecycle(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutLifecycle;
            }(slideCommon_1.SlideCommon);
            AboutLifecycle = __decorate([core_1.Component({
                selector: 'AboutLifecycle',
                templateUrl: 'src/components/slides/mainConcepts/aboutLifecycle/aboutLifecycle.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutLifecycle/aboutLifecycle.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutLifecycle);
            exports_1("AboutLifecycle", AboutLifecycle);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutLifecycle2/aboutLifecycle2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutLifecycle2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutLifecycle2 = function (_super) {
                __extends(AboutLifecycle2, _super);
                function AboutLifecycle2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutLifecycle2;
            }(slideCommon_1.SlideCommon);
            AboutLifecycle2 = __decorate([core_1.Component({
                selector: 'AboutLifecycle2',
                templateUrl: 'src/components/slides/mainConcepts/aboutLifecycle2/aboutLifecycle2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutLifecycle2/aboutLifecycle2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutLifecycle2);
            exports_1("AboutLifecycle2", AboutLifecycle2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutLifecycle3/aboutLifecycle3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutLifecycle3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutLifecycle3 = function (_super) {
                __extends(AboutLifecycle3, _super);
                function AboutLifecycle3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutLifecycle3;
            }(slideCommon_1.SlideCommon);
            AboutLifecycle3 = __decorate([core_1.Component({
                selector: 'AboutLifecycle3',
                templateUrl: 'src/components/slides/mainConcepts/aboutLifecycle3/aboutLifecycle3.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutLifecycle3/aboutLifecycle3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutLifecycle3);
            exports_1("AboutLifecycle3", AboutLifecycle3);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutLifecycle4/aboutLifecycle4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutLifecycle4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutLifecycle4 = function (_super) {
                __extends(AboutLifecycle4, _super);
                function AboutLifecycle4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutLifecycle4;
            }(slideCommon_1.SlideCommon);
            AboutLifecycle4 = __decorate([core_1.Component({
                selector: 'AboutLifecycle4',
                templateUrl: 'src/components/slides/mainConcepts/aboutLifecycle4/aboutLifecycle4.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutLifecycle4/aboutLifecycle4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutLifecycle4);
            exports_1("AboutLifecycle4", AboutLifecycle4);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutModules/aboutModules.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutModules;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutModules = function (_super) {
                __extends(AboutModules, _super);
                function AboutModules(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutModules;
            }(slideCommon_1.SlideCommon);
            AboutModules = __decorate([core_1.Component({
                selector: 'AboutModules',
                templateUrl: 'src/components/slides/mainConcepts/aboutModules/aboutModules.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutModules/aboutModules.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutModules);
            exports_1("AboutModules", AboutModules);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutModules2/aboutModules2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutModules2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutModules2 = function (_super) {
                __extends(AboutModules2, _super);
                function AboutModules2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutModules2;
            }(slideCommon_1.SlideCommon);
            AboutModules2 = __decorate([core_1.Component({
                selector: 'AboutModules2',
                templateUrl: 'src/components/slides/mainConcepts/aboutModules2/aboutModules2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutModules2/aboutModules2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutModules2);
            exports_1("AboutModules2", AboutModules2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutModules3/aboutModules3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutModules3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutModules3 = function (_super) {
                __extends(AboutModules3, _super);
                function AboutModules3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutModules3;
            }(slideCommon_1.SlideCommon);
            AboutModules3 = __decorate([core_1.Component({
                selector: 'AboutModules3',
                templateUrl: 'src/components/slides/mainConcepts/aboutModules3/aboutModules3.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutModules3/aboutModules3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutModules3);
            exports_1("AboutModules3", AboutModules3);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutModules4/aboutModules4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutModules4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutModules4 = function (_super) {
                __extends(AboutModules4, _super);
                function AboutModules4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutModules4;
            }(slideCommon_1.SlideCommon);
            AboutModules4 = __decorate([core_1.Component({
                selector: 'AboutModules4',
                templateUrl: 'src/components/slides/mainConcepts/aboutModules4/aboutModules4.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutModules4/aboutModules4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutModules4);
            exports_1("AboutModules4", AboutModules4);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes/aboutPipes.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes = function (_super) {
                __extends(AboutPipes, _super);
                function AboutPipes(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes;
            }(slideCommon_1.SlideCommon);
            AboutPipes = __decorate([core_1.Component({
                selector: 'aboutPipes',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes/aboutPipes.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes/aboutPipes.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes);
            exports_1("AboutPipes", AboutPipes);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes2/aboutPipes2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes2 = function (_super) {
                __extends(AboutPipes2, _super);
                function AboutPipes2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes2;
            }(slideCommon_1.SlideCommon);
            AboutPipes2 = __decorate([core_1.Component({
                selector: 'AboutPipes2',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes2/aboutPipes2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes2/aboutPipes2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes2);
            exports_1("AboutPipes2", AboutPipes2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes3/aboutPipes3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes3 = function (_super) {
                __extends(AboutPipes3, _super);
                function AboutPipes3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes3;
            }(slideCommon_1.SlideCommon);
            AboutPipes3 = __decorate([core_1.Component({
                selector: 'AboutPipes3',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes3/aboutPipes3.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes3/aboutPipes3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes3);
            exports_1("AboutPipes3", AboutPipes3);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes4/aboutPipes4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes4 = function (_super) {
                __extends(AboutPipes4, _super);
                function AboutPipes4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes4;
            }(slideCommon_1.SlideCommon);
            AboutPipes4 = __decorate([core_1.Component({
                selector: 'AboutPipes4',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes4/aboutPipes4.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes4/aboutPipes4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes4);
            exports_1("AboutPipes4", AboutPipes4);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes5/aboutPipes5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes5 = function (_super) {
                __extends(AboutPipes5, _super);
                function AboutPipes5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes5;
            }(slideCommon_1.SlideCommon);
            AboutPipes5 = __decorate([core_1.Component({
                selector: 'AboutPipes5',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes5/aboutPipes5.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes5/aboutPipes5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes5);
            exports_1("AboutPipes5", AboutPipes5);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes6/aboutPipes6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes6 = function (_super) {
                __extends(AboutPipes6, _super);
                function AboutPipes6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes6;
            }(slideCommon_1.SlideCommon);
            AboutPipes6 = __decorate([core_1.Component({
                selector: 'AboutPipes6',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes6/aboutPipes6.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes6/aboutPipes6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes6);
            exports_1("AboutPipes6", AboutPipes6);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes7/aboutPipes7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes7 = function (_super) {
                __extends(AboutPipes7, _super);
                function AboutPipes7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes7;
            }(slideCommon_1.SlideCommon);
            AboutPipes7 = __decorate([core_1.Component({
                selector: 'AboutPipes7',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes7/aboutPipes7.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes7/aboutPipes7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes7);
            exports_1("AboutPipes7", AboutPipes7);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutPipes8/aboutPipes8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutPipes8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutPipes8 = function (_super) {
                __extends(AboutPipes8, _super);
                function AboutPipes8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutPipes8;
            }(slideCommon_1.SlideCommon);
            AboutPipes8 = __decorate([core_1.Component({
                selector: 'AboutPipes8',
                templateUrl: 'src/components/slides/mainConcepts/aboutPipes8/aboutPipes8.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutPipes8/aboutPipes8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutPipes8);
            exports_1("AboutPipes8", AboutPipes8);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter/aboutRouter.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter = function (_super) {
                __extends(AboutRouter, _super);
                function AboutRouter(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter;
            }(slideCommon_1.SlideCommon);
            AboutRouter = __decorate([core_1.Component({
                selector: 'AboutRouter',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter/aboutRouter.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter/aboutRouter.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter);
            exports_1("AboutRouter", AboutRouter);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter10/aboutRouter10.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter10;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter10 = function (_super) {
                __extends(AboutRouter10, _super);
                function AboutRouter10(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter10;
            }(slideCommon_1.SlideCommon);
            AboutRouter10 = __decorate([core_1.Component({
                selector: 'AboutRouter10',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter10/aboutRouter10.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter10/aboutRouter10.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter10);
            exports_1("AboutRouter10", AboutRouter10);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter2/aboutRouter2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter2 = function (_super) {
                __extends(AboutRouter2, _super);
                function AboutRouter2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter2;
            }(slideCommon_1.SlideCommon);
            AboutRouter2 = __decorate([core_1.Component({
                selector: 'AboutRouter2',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter2/aboutRouter2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter2/aboutRouter2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter2);
            exports_1("AboutRouter2", AboutRouter2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter3/aboutRouter3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter3 = function (_super) {
                __extends(AboutRouter3, _super);
                function AboutRouter3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter3;
            }(slideCommon_1.SlideCommon);
            AboutRouter3 = __decorate([core_1.Component({
                selector: 'AboutRouter3',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter3/aboutRouter3.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter3/aboutRouter3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter3);
            exports_1("AboutRouter3", AboutRouter3);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter4/aboutRouter4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter4 = function (_super) {
                __extends(AboutRouter4, _super);
                function AboutRouter4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter4;
            }(slideCommon_1.SlideCommon);
            AboutRouter4 = __decorate([core_1.Component({
                selector: 'AboutRouter4',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter4/aboutRouter4.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter4/aboutRouter4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter4);
            exports_1("AboutRouter4", AboutRouter4);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter5/aboutRouter5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter5 = function (_super) {
                __extends(AboutRouter5, _super);
                function AboutRouter5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter5;
            }(slideCommon_1.SlideCommon);
            AboutRouter5 = __decorate([core_1.Component({
                selector: 'AboutRouter5',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter5/aboutRouter5.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter5/aboutRouter5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter5);
            exports_1("AboutRouter5", AboutRouter5);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter6/aboutRouter6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter6 = function (_super) {
                __extends(AboutRouter6, _super);
                function AboutRouter6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter6;
            }(slideCommon_1.SlideCommon);
            AboutRouter6 = __decorate([core_1.Component({
                selector: 'AboutRouter6',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter6/aboutRouter6.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter6/aboutRouter6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter6);
            exports_1("AboutRouter6", AboutRouter6);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter7/aboutRouter7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter7 = function (_super) {
                __extends(AboutRouter7, _super);
                function AboutRouter7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter7;
            }(slideCommon_1.SlideCommon);
            AboutRouter7 = __decorate([core_1.Component({
                selector: 'AboutRouter7',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter7/aboutRouter7.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter7/aboutRouter7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter7);
            exports_1("AboutRouter7", AboutRouter7);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter8/aboutRouter8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter8 = function (_super) {
                __extends(AboutRouter8, _super);
                function AboutRouter8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter8;
            }(slideCommon_1.SlideCommon);
            AboutRouter8 = __decorate([core_1.Component({
                selector: 'AboutRouter8',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter8/aboutRouter8.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter8/aboutRouter8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter8);
            exports_1("AboutRouter8", AboutRouter8);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutRouter9/aboutRouter9.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutRouter9;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutRouter9 = function (_super) {
                __extends(AboutRouter9, _super);
                function AboutRouter9(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutRouter9;
            }(slideCommon_1.SlideCommon);
            AboutRouter9 = __decorate([core_1.Component({
                selector: 'AboutRouter9',
                templateUrl: 'src/components/slides/mainConcepts/aboutRouter9/aboutRouter9.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutRouter9/aboutRouter9.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutRouter9);
            exports_1("AboutRouter9", AboutRouter9);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates/aboutTemplates.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates = function (_super) {
                __extends(AboutTemplates, _super);
                function AboutTemplates(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates;
            }(slideCommon_1.SlideCommon);
            AboutTemplates = __decorate([core_1.Component({
                selector: 'AboutTemplates',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates/aboutTemplates.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates/aboutTemplates.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates);
            exports_1("AboutTemplates", AboutTemplates);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates10/aboutTemplates10.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates10;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates10 = function (_super) {
                __extends(AboutTemplates10, _super);
                function AboutTemplates10(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates10;
            }(slideCommon_1.SlideCommon);
            AboutTemplates10 = __decorate([core_1.Component({
                selector: 'aboutTemplates10',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates10/aboutTemplates10.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates10/aboutTemplates10.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates10);
            exports_1("AboutTemplates10", AboutTemplates10);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates11/aboutTemplates11.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates11;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates11 = function (_super) {
                __extends(AboutTemplates11, _super);
                function AboutTemplates11(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates11;
            }(slideCommon_1.SlideCommon);
            AboutTemplates11 = __decorate([core_1.Component({
                selector: 'AboutTemplates11',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates11/aboutTemplates11.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates11/aboutTemplates11.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates11);
            exports_1("AboutTemplates11", AboutTemplates11);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates2/aboutTemplates2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates2 = function (_super) {
                __extends(AboutTemplates2, _super);
                function AboutTemplates2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates2;
            }(slideCommon_1.SlideCommon);
            AboutTemplates2 = __decorate([core_1.Component({
                selector: 'AboutTemplates2',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates2/aboutTemplates2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates2/aboutTemplates2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates2);
            exports_1("AboutTemplates2", AboutTemplates2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates3/aboutTemplates3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates3 = function (_super) {
                __extends(AboutTemplates3, _super);
                function AboutTemplates3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates3;
            }(slideCommon_1.SlideCommon);
            AboutTemplates3 = __decorate([core_1.Component({
                selector: 'AboutTemplates3',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates3/aboutTemplates3.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates3/aboutTemplates3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates3);
            exports_1("AboutTemplates3", AboutTemplates3);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates4/aboutTemplates4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates4 = function (_super) {
                __extends(AboutTemplates4, _super);
                function AboutTemplates4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates4;
            }(slideCommon_1.SlideCommon);
            AboutTemplates4 = __decorate([core_1.Component({
                selector: 'AboutTemplates4',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates4/aboutTemplates4.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates4/aboutTemplates4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates4);
            exports_1("AboutTemplates4", AboutTemplates4);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates5/aboutTemplates5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates5 = function (_super) {
                __extends(AboutTemplates5, _super);
                function AboutTemplates5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates5;
            }(slideCommon_1.SlideCommon);
            AboutTemplates5 = __decorate([core_1.Component({
                selector: 'AboutTemplates5',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates5/aboutTemplates5.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates5/aboutTemplates5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates5);
            exports_1("AboutTemplates5", AboutTemplates5);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates6/aboutTemplates6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates6 = function (_super) {
                __extends(AboutTemplates6, _super);
                function AboutTemplates6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates6;
            }(slideCommon_1.SlideCommon);
            AboutTemplates6 = __decorate([core_1.Component({
                selector: 'AboutTemplates6',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates6/aboutTemplates6.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates6/aboutTemplates6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates6);
            exports_1("AboutTemplates6", AboutTemplates6);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates7/aboutTemplates7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates7 = function (_super) {
                __extends(AboutTemplates7, _super);
                function AboutTemplates7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates7;
            }(slideCommon_1.SlideCommon);
            AboutTemplates7 = __decorate([core_1.Component({
                selector: 'AboutTemplates7',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates7/aboutTemplates7.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates7/aboutTemplates7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates7);
            exports_1("AboutTemplates7", AboutTemplates7);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates7Bis/aboutTemplates7Bis.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates7Bis;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates7Bis = function (_super) {
                __extends(AboutTemplates7Bis, _super);
                function AboutTemplates7Bis(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates7Bis;
            }(slideCommon_1.SlideCommon);
            AboutTemplates7Bis = __decorate([core_1.Component({
                selector: 'AboutTemplates7Bis',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates7Bis/aboutTemplates7Bis.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates7Bis/aboutTemplates7Bis.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates7Bis);
            exports_1("AboutTemplates7Bis", AboutTemplates7Bis);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates8/aboutTemplates8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates8 = function (_super) {
                __extends(AboutTemplates8, _super);
                function AboutTemplates8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates8;
            }(slideCommon_1.SlideCommon);
            AboutTemplates8 = __decorate([core_1.Component({
                selector: 'AboutTemplates8',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates8/aboutTemplates8.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates8/aboutTemplates8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates8);
            exports_1("AboutTemplates8", AboutTemplates8);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates8_2/aboutTemplates8_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates8_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates8_2 = function (_super) {
                __extends(AboutTemplates8_2, _super);
                function AboutTemplates8_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates8_2;
            }(slideCommon_1.SlideCommon);
            AboutTemplates8_2 = __decorate([core_1.Component({
                selector: 'AboutTemplates8_2',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates8_2/aboutTemplates8_2.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates8_2/aboutTemplates8_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates8_2);
            exports_1("AboutTemplates8_2", AboutTemplates8_2);
        }
    };
});
System.register("src/components/slides/mainConcepts/aboutTemplates9/aboutTemplates9.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AboutTemplates9;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AboutTemplates9 = function (_super) {
                __extends(AboutTemplates9, _super);
                function AboutTemplates9(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AboutTemplates9;
            }(slideCommon_1.SlideCommon);
            AboutTemplates9 = __decorate([core_1.Component({
                selector: 'AboutTemplates9',
                templateUrl: 'src/components/slides/mainConcepts/aboutTemplates9/aboutTemplates9.html',
                styleUrls: ['src/components/slides/mainConcepts/aboutTemplates9/aboutTemplates9.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AboutTemplates9);
            exports_1("AboutTemplates9", AboutTemplates9);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent/allIsComponent.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent = function (_super) {
                __extends(AllIsComponent, _super);
                function AllIsComponent(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent;
            }(slideCommon_1.SlideCommon);
            AllIsComponent = __decorate([core_1.Component({
                selector: 'AllIsComponent',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent/allIsComponent.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent/allIsComponent.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent);
            exports_1("AllIsComponent", AllIsComponent);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent2/allIsComponent2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent2 = function (_super) {
                __extends(AllIsComponent2, _super);
                function AllIsComponent2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent2;
            }(slideCommon_1.SlideCommon);
            AllIsComponent2 = __decorate([core_1.Component({
                selector: 'AllIsComponent2',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent2/allIsComponent2.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent2/allIsComponent2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent2);
            exports_1("AllIsComponent2", AllIsComponent2);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent3/allIsComponent3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent3 = function (_super) {
                __extends(AllIsComponent3, _super);
                function AllIsComponent3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent3;
            }(slideCommon_1.SlideCommon);
            AllIsComponent3 = __decorate([core_1.Component({
                selector: 'AllIsComponent3',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent3/allIsComponent3.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent3/allIsComponent3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent3);
            exports_1("AllIsComponent3", AllIsComponent3);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent3_2/allIsComponent3_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent3_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent3_2 = function (_super) {
                __extends(AllIsComponent3_2, _super);
                function AllIsComponent3_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent3_2;
            }(slideCommon_1.SlideCommon);
            AllIsComponent3_2 = __decorate([core_1.Component({
                selector: 'AllIsComponent3_2',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent3_2/allIsComponent3_2.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent3_2/allIsComponent3_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent3_2);
            exports_1("AllIsComponent3_2", AllIsComponent3_2);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent3_3/allIsComponent3_3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent3_3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent3_3 = function (_super) {
                __extends(AllIsComponent3_3, _super);
                function AllIsComponent3_3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent3_3;
            }(slideCommon_1.SlideCommon);
            AllIsComponent3_3 = __decorate([core_1.Component({
                selector: 'AllIsComponent3_3',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent3_3/allIsComponent3_3.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent3_3/allIsComponent3_3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent3_3);
            exports_1("AllIsComponent3_3", AllIsComponent3_3);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent3_4/allIsComponent3_4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent3_4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent3_4 = function (_super) {
                __extends(AllIsComponent3_4, _super);
                function AllIsComponent3_4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent3_4;
            }(slideCommon_1.SlideCommon);
            AllIsComponent3_4 = __decorate([core_1.Component({
                selector: 'AllIsComponent3_4',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent3_4/allIsComponent3_4.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent3_4/allIsComponent3_4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent3_4);
            exports_1("AllIsComponent3_4", AllIsComponent3_4);
        }
    };
});
System.register("src/components/slides/mainConcepts/allIsComponent4/allIsComponent4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, AllIsComponent4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            AllIsComponent4 = function (_super) {
                __extends(AllIsComponent4, _super);
                function AllIsComponent4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return AllIsComponent4;
            }(slideCommon_1.SlideCommon);
            AllIsComponent4 = __decorate([core_1.Component({
                selector: 'AllIsComponent4',
                templateUrl: 'src/components/slides/mainConcepts/allIsComponent4/allIsComponent4.html',
                styleUrls: ['src/components/slides/mainConcepts/allIsComponent4/allIsComponent4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], AllIsComponent4);
            exports_1("AllIsComponent4", AllIsComponent4);
        }
    };
});
System.register("src/components/slides/mainConcepts/customComponents/customComponents.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, CustomComponents;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            CustomComponents = function (_super) {
                __extends(CustomComponents, _super);
                function CustomComponents(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return CustomComponents;
            }(slideCommon_1.SlideCommon);
            CustomComponents = __decorate([core_1.Component({
                selector: 'CustomComponents',
                templateUrl: 'src/components/slides/mainConcepts/customComponents/customComponents.html',
                styleUrls: ['src/components/slides/mainConcepts/customComponents/customComponents.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], CustomComponents);
            exports_1("CustomComponents", CustomComponents);
        }
    };
});
System.register("src/components/slides/mainConcepts/customComponents2/customComponents2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, CustomComponents2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            CustomComponents2 = function (_super) {
                __extends(CustomComponents2, _super);
                function CustomComponents2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return CustomComponents2;
            }(slideCommon_1.SlideCommon);
            CustomComponents2 = __decorate([core_1.Component({
                selector: 'CustomComponents2',
                templateUrl: 'src/components/slides/mainConcepts/customComponents2/customComponents2.html',
                styleUrls: ['src/components/slides/mainConcepts/customComponents2/customComponents2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], CustomComponents2);
            exports_1("CustomComponents2", CustomComponents2);
        }
    };
});
System.register("src/components/slides/mainConcepts/globalUnderstanding/globalUnderstanding.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, GlobalUnderstanding;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            GlobalUnderstanding = function (_super) {
                __extends(GlobalUnderstanding, _super);
                function GlobalUnderstanding(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return GlobalUnderstanding;
            }(slideCommon_1.SlideCommon);
            GlobalUnderstanding = __decorate([core_1.Component({
                selector: 'GlobalUnderstanding',
                templateUrl: 'src/components/slides/mainConcepts/globalUnderstanding/globalUnderstanding.html',
                styleUrls: ['src/components/slides/mainConcepts/globalUnderstanding/globalUnderstanding.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], GlobalUnderstanding);
            exports_1("GlobalUnderstanding", GlobalUnderstanding);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI/moreDI.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI = function (_super) {
                __extends(MoreDI, _super);
                function MoreDI(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI;
            }(slideCommon_1.SlideCommon);
            MoreDI = __decorate([core_1.Component({
                selector: 'MoreDI',
                templateUrl: 'src/components/slides/mainConcepts/moreDI/moreDI.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI/moreDI.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI);
            exports_1("MoreDI", MoreDI);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI10/moreDI10.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI10;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI10 = function (_super) {
                __extends(MoreDI10, _super);
                function MoreDI10(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI10;
            }(slideCommon_1.SlideCommon);
            MoreDI10 = __decorate([core_1.Component({
                selector: 'MoreDI10',
                templateUrl: 'src/components/slides/mainConcepts/moreDI10/moreDI10.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI10/moreDI10.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI10);
            exports_1("MoreDI10", MoreDI10);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI2/moreDI2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI2 = function (_super) {
                __extends(MoreDI2, _super);
                function MoreDI2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI2;
            }(slideCommon_1.SlideCommon);
            MoreDI2 = __decorate([core_1.Component({
                selector: 'MoreDI2',
                templateUrl: 'src/components/slides/mainConcepts/moreDI2/moreDI2.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI2/moreDI2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI2);
            exports_1("MoreDI2", MoreDI2);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI3/moreDI3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI3 = function (_super) {
                __extends(MoreDI3, _super);
                function MoreDI3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI3;
            }(slideCommon_1.SlideCommon);
            MoreDI3 = __decorate([core_1.Component({
                selector: 'MoreDI3',
                templateUrl: 'src/components/slides/mainConcepts/moreDI3/moreDI3.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI3/moreDI3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI3);
            exports_1("MoreDI3", MoreDI3);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI4/moreDI4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI4 = function (_super) {
                __extends(MoreDI4, _super);
                function MoreDI4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI4;
            }(slideCommon_1.SlideCommon);
            MoreDI4 = __decorate([core_1.Component({
                selector: 'MoreDI4',
                templateUrl: 'src/components/slides/mainConcepts/moreDI4/moreDI4.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI4/moreDI4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI4);
            exports_1("MoreDI4", MoreDI4);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI5/moreDI5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI5 = function (_super) {
                __extends(MoreDI5, _super);
                function MoreDI5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI5;
            }(slideCommon_1.SlideCommon);
            MoreDI5 = __decorate([core_1.Component({
                selector: 'MoreDI5',
                templateUrl: 'src/components/slides/mainConcepts/moreDI5/moreDI5.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI5/moreDI5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI5);
            exports_1("MoreDI5", MoreDI5);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI6/moreDI6.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI6;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI6 = function (_super) {
                __extends(MoreDI6, _super);
                function MoreDI6(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI6;
            }(slideCommon_1.SlideCommon);
            MoreDI6 = __decorate([core_1.Component({
                selector: 'MoreDI6',
                templateUrl: 'src/components/slides/mainConcepts/moreDI6/moreDI6.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI6/moreDI6.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI6);
            exports_1("MoreDI6", MoreDI6);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI7/moreDI7.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI7;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI7 = function (_super) {
                __extends(MoreDI7, _super);
                function MoreDI7(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI7;
            }(slideCommon_1.SlideCommon);
            MoreDI7 = __decorate([core_1.Component({
                selector: 'MoreDI7',
                templateUrl: 'src/components/slides/mainConcepts/moreDI7/moreDI7.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI7/moreDI7.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI7);
            exports_1("MoreDI7", MoreDI7);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI8/moreDI8.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI8;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI8 = function (_super) {
                __extends(MoreDI8, _super);
                function MoreDI8(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI8;
            }(slideCommon_1.SlideCommon);
            MoreDI8 = __decorate([core_1.Component({
                selector: 'MoreDI8',
                templateUrl: 'src/components/slides/mainConcepts/moreDI8/moreDI8.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI8/moreDI8.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI8);
            exports_1("MoreDI8", MoreDI8);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDI9/moreDI9.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, MoreDI9;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MoreDI9 = function (_super) {
                __extends(MoreDI9, _super);
                function MoreDI9(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MoreDI9;
            }(slideCommon_1.SlideCommon);
            MoreDI9 = __decorate([core_1.Component({
                selector: 'MoreDI9',
                templateUrl: 'src/components/slides/mainConcepts/moreDI9/moreDI9.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDI9/moreDI9.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MoreDI9);
            exports_1("MoreDI9", MoreDI9);
        }
    };
});
System.register("src/components/slides/mainConcepts/moreDIpw/pwDI.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwDI;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwDI = function (_super) {
                __extends(PwDI, _super);
                function PwDI(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwDI;
            }(slideCommon_1.SlideCommon);
            PwDI = __decorate([core_1.Component({
                selector: 'PwDI',
                templateUrl: 'src/components/slides/mainConcepts/moreDIpw/pwDI.html',
                styleUrls: ['src/components/slides/mainConcepts/moreDIpw/pwDI.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwDI);
            exports_1("PwDI", PwDI);
        }
    };
});
System.register("src/components/slides/mainConcepts/pw1/pw1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Pw1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Pw1 = function (_super) {
                __extends(Pw1, _super);
                function Pw1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Pw1;
            }(slideCommon_1.SlideCommon);
            Pw1 = __decorate([core_1.Component({
                selector: 'Pw1',
                templateUrl: 'src/components/slides/mainConcepts/pw1/pw1.html',
                styleUrls: ['src/components/slides/mainConcepts/pw1/pw1.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Pw1);
            exports_1("Pw1", Pw1);
        }
    };
});
System.register("src/components/slides/mainConcepts/pw2/pw2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Pw2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Pw2 = function (_super) {
                __extends(Pw2, _super);
                function Pw2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Pw2;
            }(slideCommon_1.SlideCommon);
            Pw2 = __decorate([core_1.Component({
                selector: 'Pw2',
                templateUrl: 'src/components/slides/mainConcepts/pw2/pw2.html',
                styleUrls: ['src/components/slides/mainConcepts/pw2/pw2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Pw2);
            exports_1("Pw2", Pw2);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwAdvancedTemplates/pwAdvancedTemplates.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwAdvancedTemplates;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwAdvancedTemplates = function (_super) {
                __extends(PwAdvancedTemplates, _super);
                function PwAdvancedTemplates(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwAdvancedTemplates;
            }(slideCommon_1.SlideCommon);
            PwAdvancedTemplates = __decorate([core_1.Component({
                selector: 'PwAdvancedTemplates',
                templateUrl: 'src/components/slides/mainConcepts/pwAdvancedTemplates/pwAdvancedTemplates.html',
                styleUrls: ['src/components/slides/mainConcepts/pwAdvancedTemplates/pwAdvancedTemplates.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwAdvancedTemplates);
            exports_1("PwAdvancedTemplates", PwAdvancedTemplates);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwBasicTemplate/pwBasicTemplate.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwBasicTemplate;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwBasicTemplate = function (_super) {
                __extends(PwBasicTemplate, _super);
                function PwBasicTemplate(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwBasicTemplate;
            }(slideCommon_1.SlideCommon);
            PwBasicTemplate = __decorate([core_1.Component({
                selector: 'PwBasicTemplate',
                templateUrl: 'src/components/slides/mainConcepts/pwBasicTemplate/pwBasicTemplate.html',
                styleUrls: ['src/components/slides/mainConcepts/pwBasicTemplate/pwBasicTemplate.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwBasicTemplate);
            exports_1("PwBasicTemplate", PwBasicTemplate);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwForms/pwForms.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwForms;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwForms = function (_super) {
                __extends(PwForms, _super);
                function PwForms(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwForms;
            }(slideCommon_1.SlideCommon);
            PwForms = __decorate([core_1.Component({
                selector: 'PwForms',
                templateUrl: 'src/components/slides/mainConcepts/pwForms/pwForms.html',
                styleUrls: ['src/components/slides/mainConcepts/pwForms/pwForms.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwForms);
            exports_1("PwForms", PwForms);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwNewComponent/pwNewComponent.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwNewComponent;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwNewComponent = function (_super) {
                __extends(PwNewComponent, _super);
                function PwNewComponent(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwNewComponent;
            }(slideCommon_1.SlideCommon);
            PwNewComponent = __decorate([core_1.Component({
                selector: 'PwNewComponent',
                templateUrl: 'src/components/slides/mainConcepts/pwNewComponent/pwNewComponent.html',
                styleUrls: ['src/components/slides/mainConcepts/pwNewComponent/pwNewComponent.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwNewComponent);
            exports_1("PwNewComponent", PwNewComponent);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwPipes/pwPipes.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwPipes;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwPipes = function (_super) {
                __extends(PwPipes, _super);
                function PwPipes(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwPipes;
            }(slideCommon_1.SlideCommon);
            PwPipes = __decorate([core_1.Component({
                selector: 'PwPipes',
                templateUrl: 'src/components/slides/mainConcepts/pwPipes/pwPipes.html',
                styleUrls: ['src/components/slides/mainConcepts/pwPipes/pwPipes.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwPipes);
            exports_1("PwPipes", PwPipes);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwRouter/pwRouter.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwRouter;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwRouter = function (_super) {
                __extends(PwRouter, _super);
                function PwRouter(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwRouter;
            }(slideCommon_1.SlideCommon);
            PwRouter = __decorate([core_1.Component({
                selector: 'PwRouter',
                templateUrl: 'src/components/slides/mainConcepts/pwRouter/pwRouter.html',
                styleUrls: ['src/components/slides/mainConcepts/pwRouter/pwRouter.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwRouter);
            exports_1("PwRouter", PwRouter);
        }
    };
});
System.register("src/components/slides/mainConcepts/pwTemplates/pwTemplates.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PwTemplates;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PwTemplates = function (_super) {
                __extends(PwTemplates, _super);
                function PwTemplates(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PwTemplates;
            }(slideCommon_1.SlideCommon);
            PwTemplates = __decorate([core_1.Component({
                selector: 'PwTemplates',
                templateUrl: 'src/components/slides/mainConcepts/pwTemplates/pwTemplates.html',
                styleUrls: ['src/components/slides/mainConcepts/pwTemplates/pwTemplates.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PwTemplates);
            exports_1("PwTemplates", PwTemplates);
        }
    };
});
System.register("src/components/slides/mainConcepts/services/services.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Services;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Services = function (_super) {
                __extends(Services, _super);
                function Services(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Services;
            }(slideCommon_1.SlideCommon);
            Services = __decorate([core_1.Component({
                selector: 'Services',
                templateUrl: 'src/components/slides/mainConcepts/services/services.html',
                styleUrls: ['src/components/slides/mainConcepts/services/services.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Services);
            exports_1("Services", Services);
        }
    };
});
System.register("src/components/slides/mainConcepts/services1/services1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Services1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Services1 = function (_super) {
                __extends(Services1, _super);
                function Services1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Services1;
            }(slideCommon_1.SlideCommon);
            Services1 = __decorate([core_1.Component({
                selector: 'Services1',
                templateUrl: 'src/components/slides/mainConcepts/services1/services1.html',
                styleUrls: ['src/components/slides/mainConcepts/services1/services1.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Services1);
            exports_1("Services1", Services1);
        }
    };
});
System.register("src/components/slides/mainConcepts/services2/services2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Services2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Services2 = function (_super) {
                __extends(Services2, _super);
                function Services2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Services2;
            }(slideCommon_1.SlideCommon);
            Services2 = __decorate([core_1.Component({
                selector: 'Services2',
                templateUrl: 'src/components/slides/mainConcepts/services2/services2.html',
                styleUrls: ['src/components/slides/mainConcepts/services2/services2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Services2);
            exports_1("Services2", Services2);
        }
    };
});
System.register("src/components/slides/mainConcepts/services3/services3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Services3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Services3 = function (_super) {
                __extends(Services3, _super);
                function Services3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Services3;
            }(slideCommon_1.SlideCommon);
            Services3 = __decorate([core_1.Component({
                selector: 'Services3',
                templateUrl: 'src/components/slides/mainConcepts/services3/services3.html',
                styleUrls: ['src/components/slides/mainConcepts/services3/services3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Services3);
            exports_1("Services3", Services3);
        }
    };
});
System.register("src/components/slides/mainConcepts/services3backup/services3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Services3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Services3 = function (_super) {
                __extends(Services3, _super);
                function Services3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Services3;
            }(slideCommon_1.SlideCommon);
            Services3 = __decorate([core_1.Component({
                selector: 'Services3',
                templateUrl: 'src/components/slides/mainConcepts/services3/services3.html',
                styleUrls: ['src/components/slides/mainConcepts/services3/services3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Services3);
            exports_1("Services3", Services3);
        }
    };
});
System.register("src/components/slides/mainConcepts/services4/services4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, Services4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Services4 = function (_super) {
                __extends(Services4, _super);
                function Services4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Services4;
            }(slideCommon_1.SlideCommon);
            Services4 = __decorate([core_1.Component({
                selector: 'Services4',
                templateUrl: 'src/components/slides/mainConcepts/services4/services4.html',
                styleUrls: ['src/components/slides/mainConcepts/services4/services4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Services4);
            exports_1("Services4", Services4);
        }
    };
});
System.register("src/components/slides/mainConcepts/startDI/startDI.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartDI;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartDI = function (_super) {
                __extends(StartDI, _super);
                function StartDI(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartDI;
            }(slideCommon_1.SlideCommon);
            StartDI = __decorate([core_1.Component({
                selector: 'StartDI',
                templateUrl: 'src/components/slides/mainConcepts/startDI/startDI.html',
                styleUrls: ['src/components/slides/mainConcepts/startDI/startDI.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartDI);
            exports_1("StartDI", StartDI);
        }
    };
});
System.register("src/components/slides/mainConcepts/startDI2/startDI2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartDI2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartDI2 = function (_super) {
                __extends(StartDI2, _super);
                function StartDI2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartDI2;
            }(slideCommon_1.SlideCommon);
            StartDI2 = __decorate([core_1.Component({
                selector: 'StartDI2',
                templateUrl: 'src/components/slides/mainConcepts/startDI2/startDI2.html',
                styleUrls: ['src/components/slides/mainConcepts/startDI2/startDI2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartDI2);
            exports_1("StartDI2", StartDI2);
        }
    };
});
System.register("src/components/slides/mainConcepts/startDI2_2/startDI2_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartDI2_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartDI2_2 = function (_super) {
                __extends(StartDI2_2, _super);
                function StartDI2_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartDI2_2;
            }(slideCommon_1.SlideCommon);
            StartDI2_2 = __decorate([core_1.Component({
                selector: 'StartDI2_2',
                templateUrl: 'src/components/slides/mainConcepts/startDI2_2/startDI2_2.html',
                styleUrls: ['src/components/slides/mainConcepts/startDI2_2/startDI2_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartDI2_2);
            exports_1("StartDI2_2", StartDI2_2);
        }
    };
});
System.register("src/components/slides/mainConcepts/startDI3/startDI3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartDI3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartDI3 = function (_super) {
                __extends(StartDI3, _super);
                function StartDI3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartDI3;
            }(slideCommon_1.SlideCommon);
            StartDI3 = __decorate([core_1.Component({
                selector: 'StartDI3',
                templateUrl: 'src/components/slides/mainConcepts/startDI3/startDI3.html',
                styleUrls: ['src/components/slides/mainConcepts/startDI3/startDI3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartDI3);
            exports_1("StartDI3", StartDI3);
        }
    };
});
System.register("src/components/slides/mainConcepts/startDI3_2/startDI3_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartDI3_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartDI3_2 = function (_super) {
                __extends(StartDI3_2, _super);
                function StartDI3_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartDI3_2;
            }(slideCommon_1.SlideCommon);
            StartDI3_2 = __decorate([core_1.Component({
                selector: 'StartDI3_2',
                templateUrl: 'src/components/slides/mainConcepts/startDI3_2/startDI3_2.html',
                styleUrls: ['src/components/slides/mainConcepts/startDI3_2/startDI3_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartDI3_2);
            exports_1("StartDI3_2", StartDI3_2);
        }
    };
});
System.register("src/components/slides/mainConcepts/startDI_2/startDI_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, StartDI_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            StartDI_2 = function (_super) {
                __extends(StartDI_2, _super);
                function StartDI_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return StartDI_2;
            }(slideCommon_1.SlideCommon);
            StartDI_2 = __decorate([core_1.Component({
                selector: 'StartDI_2',
                templateUrl: 'src/components/slides/mainConcepts/startDI_2/startDI_2.html',
                styleUrls: ['src/components/slides/mainConcepts/startDI_2/startDI_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], StartDI_2);
            exports_1("StartDI_2", StartDI_2);
        }
    };
});
System.register("src/components/slides/mainTitle/mainTitle.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, MainTitle;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            MainTitle = function (_super) {
                __extends(MainTitle, _super);
                function MainTitle(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return MainTitle;
            }(slideCommon_1.SlideCommon);
            MainTitle = __decorate([core_1.Component({
                selector: 'main-title',
                templateUrl: 'src/components/slides/mainTitle/mainTitle.html',
                styleUrls: ['src/components/slides/mainTitle/mainTitle.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], MainTitle);
            exports_1("MainTitle", MainTitle);
        }
    };
});
System.register("src/components/slides/preamble/fwksCompare/fwksCompare.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, FwksCompare;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            FwksCompare = function (_super) {
                __extends(FwksCompare, _super);
                function FwksCompare(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return FwksCompare;
            }(slideCommon_1.SlideCommon);
            FwksCompare = __decorate([core_1.Component({
                selector: 'FwksCompare',
                templateUrl: 'src/components/slides/preamble/fwksCompare/fwksCompare.html',
                styleUrls: ['src/components/slides/preamble/fwksCompare/fwksCompare.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], FwksCompare);
            exports_1("FwksCompare", FwksCompare);
        }
    };
});
System.register("src/components/slides/preamble/fwksCompare2/fwksCompare2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, FwksCompare2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            FwksCompare2 = function (_super) {
                __extends(FwksCompare2, _super);
                function FwksCompare2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return FwksCompare2;
            }(slideCommon_1.SlideCommon);
            FwksCompare2 = __decorate([core_1.Component({
                selector: 'fwksCompare2',
                templateUrl: 'src/components/slides/preamble/fwksCompare2/fwksCompare2.html',
                styleUrls: ['src/components/slides/preamble/fwksCompare2/fwksCompare2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], FwksCompare2);
            exports_1("FwksCompare2", FwksCompare2);
        }
    };
});
System.register("src/components/slides/preamble/fwksCompare3/fwksCompare3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, FwksCompare3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            FwksCompare3 = function (_super) {
                __extends(FwksCompare3, _super);
                function FwksCompare3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return FwksCompare3;
            }(slideCommon_1.SlideCommon);
            FwksCompare3 = __decorate([core_1.Component({
                selector: 'fwksCompare3',
                templateUrl: 'src/components/slides/preamble/fwksCompare3/fwksCompare3.html',
                styleUrls: ['src/components/slides/preamble/fwksCompare3/fwksCompare3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], FwksCompare3);
            exports_1("FwksCompare3", FwksCompare3);
        }
    };
});
System.register("src/components/slides/preamble/fwksCompare4/fwksCompare4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, FwksCompare4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            FwksCompare4 = function (_super) {
                __extends(FwksCompare4, _super);
                function FwksCompare4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return FwksCompare4;
            }(slideCommon_1.SlideCommon);
            FwksCompare4 = __decorate([core_1.Component({
                selector: 'fwksCompare4',
                templateUrl: 'src/components/slides/preamble/fwksCompare4/fwksCompare4.html',
                styleUrls: ['src/components/slides/preamble/fwksCompare4/fwksCompare4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], FwksCompare4);
            exports_1("FwksCompare4", FwksCompare4);
        }
    };
});
System.register("src/components/slides/preamble/fwksCompare5/fwksCompare5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, FwksCompare5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            FwksCompare5 = function (_super) {
                __extends(FwksCompare5, _super);
                function FwksCompare5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return FwksCompare5;
            }(slideCommon_1.SlideCommon);
            FwksCompare5 = __decorate([core_1.Component({
                selector: 'FwksCompare5',
                templateUrl: 'src/components/slides/preamble/fwksCompare5/fwksCompare5.html',
                styleUrls: ['src/components/slides/preamble/fwksCompare5/fwksCompare5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], FwksCompare5);
            exports_1("FwksCompare5", FwksCompare5);
        }
    };
});
System.register("src/components/slides/preamble/ngCompare/ngCompare.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, NgCompare;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            NgCompare = function (_super) {
                __extends(NgCompare, _super);
                function NgCompare(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return NgCompare;
            }(slideCommon_1.SlideCommon);
            NgCompare = __decorate([core_1.Component({
                selector: 'NgCompare',
                templateUrl: 'src/components/slides/preamble/ngCompare/ngCompare.html',
                styleUrls: ['src/components/slides/preamble/ngCompare/ngCompare.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], NgCompare);
            exports_1("NgCompare", NgCompare);
        }
    };
});
System.register("src/components/slides/preamble/ngCompare2/ngCompare2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, NgCompare2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            NgCompare2 = function (_super) {
                __extends(NgCompare2, _super);
                function NgCompare2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return NgCompare2;
            }(slideCommon_1.SlideCommon);
            NgCompare2 = __decorate([core_1.Component({
                selector: 'NgCompare2',
                templateUrl: 'src/components/slides/preamble/ngCompare2/ngCompare2.html',
                styleUrls: ['src/components/slides/preamble/ngCompare2/ngCompare2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], NgCompare2);
            exports_1("NgCompare2", NgCompare2);
        }
    };
});
System.register("src/components/slides/preamble/ngCompare3/ngCompare3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, NgCompare3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            NgCompare3 = function (_super) {
                __extends(NgCompare3, _super);
                function NgCompare3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return NgCompare3;
            }(slideCommon_1.SlideCommon);
            NgCompare3 = __decorate([core_1.Component({
                selector: 'NgCompare3',
                templateUrl: 'src/components/slides/preamble/ngCompare3/ngCompare3.html',
                styleUrls: ['src/components/slides/preamble/ngCompare3/ngCompare3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], NgCompare3);
            exports_1("NgCompare3", NgCompare3);
        }
    };
});
System.register("src/components/slides/preamble/ngCompare4/ngCompare4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, NgCompare4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            NgCompare4 = function (_super) {
                __extends(NgCompare4, _super);
                function NgCompare4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return NgCompare4;
            }(slideCommon_1.SlideCommon);
            NgCompare4 = __decorate([core_1.Component({
                selector: 'NgCompare4',
                templateUrl: 'src/components/slides/preamble/ngCompare4/ngCompare4.html',
                styleUrls: ['src/components/slides/preamble/ngCompare4/ngCompare4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], NgCompare4);
            exports_1("NgCompare4", NgCompare4);
        }
    };
});
System.register("src/components/slides/preamble/pW1/pW1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, PW1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            PW1 = function (_super) {
                __extends(PW1, _super);
                function PW1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return PW1;
            }(slideCommon_1.SlideCommon);
            PW1 = __decorate([core_1.Component({
                selector: 'PW1',
                templateUrl: 'src/components/slides/preamble/pW1/pW1.html',
                styleUrls: ['src/components/slides/preamble/pW1/pW1.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], PW1);
            exports_1("PW1", PW1);
        }
    };
});
System.register("src/components/slides/preamble/spa1/spa1.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, Spa1;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Spa1 = function (_super) {
                __extends(Spa1, _super);
                function Spa1(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Spa1;
            }(slideCommon_1.SlideCommon);
            Spa1 = __decorate([core_1.Component({
                selector: 'Spa1',
                templateUrl: 'src/components/slides/preamble/spa1/spa1.html',
                styleUrls: ['src/components/slides/preamble/spa1/spa1.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Spa1);
            exports_1("Spa1", Spa1);
        }
    };
});
System.register("src/components/slides/preamble/spa2/spa2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, Spa2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Spa2 = function (_super) {
                __extends(Spa2, _super);
                function Spa2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Spa2;
            }(slideCommon_1.SlideCommon);
            Spa2 = __decorate([core_1.Component({
                selector: 'Spa2',
                templateUrl: 'src/components/slides/preamble/spa2/spa2.html',
                styleUrls: ['src/components/slides/preamble/spa2/spa2.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Spa2);
            exports_1("Spa2", Spa2);
        }
    };
});
System.register("src/components/slides/preamble/webComponents/webComponents.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, WebComponents;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents = function (_super) {
                __extends(WebComponents, _super);
                function WebComponents(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents;
            }(slideCommon_1.SlideCommon);
            WebComponents = __decorate([core_1.Component({
                selector: 'WebComponents',
                templateUrl: 'src/components/slides/preamble/webComponents/webComponents.html',
                styleUrls: ['src/components/slides/preamble/webComponents/webComponents.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents);
            exports_1("WebComponents", WebComponents);
        }
    };
});
System.register("src/components/slides/preamble/webComponents2/webComponents2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, WebComponents2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents2 = function (_super) {
                __extends(WebComponents2, _super);
                function WebComponents2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents2;
            }(slideCommon_1.SlideCommon);
            WebComponents2 = __decorate([core_1.Component({
                selector: 'WebComponents2',
                templateUrl: 'src/components/slides/preamble/webComponents2/webComponents2.html',
                styleUrls: ['src/components/slides/preamble/webComponents2/webComponents2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents2);
            exports_1("WebComponents2", WebComponents2);
        }
    };
});
System.register("src/components/slides/preamble/webComponents3/webComponents3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, WebComponents3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents3 = function (_super) {
                __extends(WebComponents3, _super);
                function WebComponents3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents3;
            }(slideCommon_1.SlideCommon);
            WebComponents3 = __decorate([core_1.Component({
                selector: 'webComponents3',
                templateUrl: 'src/components/slides/preamble/webComponents3/webComponents3.html',
                styleUrls: ['src/components/slides/preamble/webComponents3/webComponents3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents3);
            exports_1("WebComponents3", WebComponents3);
        }
    };
});
System.register("src/components/slides/preamble/webComponents4/webComponents4.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, WebComponents4;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents4 = function (_super) {
                __extends(WebComponents4, _super);
                function WebComponents4(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents4;
            }(slideCommon_1.SlideCommon);
            WebComponents4 = __decorate([core_1.Component({
                selector: 'webComponents4',
                templateUrl: 'src/components/slides/preamble/webComponents4/webComponents4.html',
                styleUrls: ['src/components/slides/preamble/webComponents4/webComponents4.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents4);
            exports_1("WebComponents4", WebComponents4);
        }
    };
});
System.register("src/components/slides/preamble/webComponents4_2/webComponents4_2.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, WebComponents4_2;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents4_2 = function (_super) {
                __extends(WebComponents4_2, _super);
                function WebComponents4_2(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents4_2;
            }(slideCommon_1.SlideCommon);
            WebComponents4_2 = __decorate([core_1.Component({
                selector: 'WebComponents4_2',
                templateUrl: 'src/components/slides/preamble/webComponents4_2/webComponents4_2.html',
                styleUrls: ['src/components/slides/preamble/webComponents4_2/webComponents4_2.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents4_2);
            exports_1("WebComponents4_2", WebComponents4_2);
        }
    };
});
System.register("src/components/slides/preamble/webComponents4_3/webComponents4_3.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, WebComponents4_3;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents4_3 = function (_super) {
                __extends(WebComponents4_3, _super);
                function WebComponents4_3(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents4_3;
            }(slideCommon_1.SlideCommon);
            WebComponents4_3 = __decorate([core_1.Component({
                selector: 'WebComponents4_3',
                templateUrl: 'src/components/slides/preamble/webComponents4_3/webComponents4_3.html',
                styleUrls: ['src/components/slides/preamble/webComponents4_3/webComponents4_3.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents4_3);
            exports_1("WebComponents4_3", WebComponents4_3);
        }
    };
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/async_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var ObservableStrategy = function () {
    function ObservableStrategy() {}
    ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {
      return async_1.ObservableWrapper.subscribe(async, updateLatestValue, function (e) {
        throw e;
      });
    };
    ObservableStrategy.prototype.dispose = function (subscription) {
      async_1.ObservableWrapper.dispose(subscription);
    };
    ObservableStrategy.prototype.onDestroy = function (subscription) {
      async_1.ObservableWrapper.dispose(subscription);
    };
    return ObservableStrategy;
  }();
  var PromiseStrategy = function () {
    function PromiseStrategy() {}
    PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {
      return async.then(updateLatestValue);
    };
    PromiseStrategy.prototype.dispose = function (subscription) {};
    PromiseStrategy.prototype.onDestroy = function (subscription) {};
    return PromiseStrategy;
  }();
  var _promiseStrategy = new PromiseStrategy();
  var _observableStrategy = new ObservableStrategy();
  var __unused;
  var AsyncPipe = function () {
    function AsyncPipe(_ref) {
      this._latestValue = null;
      this._latestReturnedValue = null;
      this._subscription = null;
      this._obj = null;
      this._strategy = null;
      this._ref = _ref;
    }
    AsyncPipe.prototype.ngOnDestroy = function () {
      if (lang_1.isPresent(this._subscription)) {
        this._dispose();
      }
    };
    AsyncPipe.prototype.transform = function (obj) {
      if (lang_1.isBlank(this._obj)) {
        if (lang_1.isPresent(obj)) {
          this._subscribe(obj);
        }
        this._latestReturnedValue = this._latestValue;
        return this._latestValue;
      }
      if (obj !== this._obj) {
        this._dispose();
        return this.transform(obj);
      }
      if (this._latestValue === this._latestReturnedValue) {
        return this._latestReturnedValue;
      } else {
        this._latestReturnedValue = this._latestValue;
        return core_1.WrappedValue.wrap(this._latestValue);
      }
    };
    AsyncPipe.prototype._subscribe = function (obj) {
      var _this = this;
      this._obj = obj;
      this._strategy = this._selectStrategy(obj);
      this._subscription = this._strategy.createSubscription(obj, function (value) {
        return _this._updateLatestValue(obj, value);
      });
    };
    AsyncPipe.prototype._selectStrategy = function (obj) {
      if (lang_1.isPromise(obj)) {
        return _promiseStrategy;
      } else if (async_1.ObservableWrapper.isObservable(obj)) {
        return _observableStrategy;
      } else {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(AsyncPipe, obj);
      }
    };
    AsyncPipe.prototype._dispose = function () {
      this._strategy.dispose(this._subscription);
      this._latestValue = null;
      this._latestReturnedValue = null;
      this._subscription = null;
      this._obj = null;
    };
    AsyncPipe.prototype._updateLatestValue = function (async, value) {
      if (async === this._obj) {
        this._latestValue = value;
        this._ref.markForCheck();
      }
    };
    AsyncPipe.decorators = [{
      type: core_1.Pipe,
      args: [{
        name: 'async',
        pure: false
      }]
    }, { type: core_1.Injectable }];
    AsyncPipe.ctorParameters = [{ type: core_1.ChangeDetectorRef }];
    return AsyncPipe;
  }();
  exports.AsyncPipe = AsyncPipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/uppercase_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var UpperCasePipe = function () {
    function UpperCasePipe() {}
    UpperCasePipe.prototype.transform = function (value) {
      if (lang_1.isBlank(value)) return value;
      if (!lang_1.isString(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(UpperCasePipe, value);
      }
      return value.toUpperCase();
    };
    UpperCasePipe.decorators = [{
      type: core_1.Pipe,
      args: [{ name: 'uppercase' }]
    }, { type: core_1.Injectable }];
    return UpperCasePipe;
  }();
  exports.UpperCasePipe = UpperCasePipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/lowercase_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var LowerCasePipe = function () {
    function LowerCasePipe() {}
    LowerCasePipe.prototype.transform = function (value) {
      if (lang_1.isBlank(value)) return value;
      if (!lang_1.isString(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(LowerCasePipe, value);
      }
      return value.toLowerCase();
    };
    LowerCasePipe.decorators = [{
      type: core_1.Pipe,
      args: [{ name: 'lowercase' }]
    }, { type: core_1.Injectable }];
    return LowerCasePipe;
  }();
  exports.LowerCasePipe = LowerCasePipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/json_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var JsonPipe = function () {
    function JsonPipe() {}
    JsonPipe.prototype.transform = function (value) {
      return lang_1.Json.stringify(value);
    };
    JsonPipe.decorators = [{
      type: core_1.Pipe,
      args: [{
        name: 'json',
        pure: false
      }]
    }, { type: core_1.Injectable }];
    return JsonPipe;
  }();
  exports.JsonPipe = JsonPipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/slice_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var SlicePipe = function () {
    function SlicePipe() {}
    SlicePipe.prototype.transform = function (value, start, end) {
      if (end === void 0) {
        end = null;
      }
      if (!this.supports(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(SlicePipe, value);
      }
      if (lang_1.isBlank(value)) return value;
      if (lang_1.isString(value)) {
        return lang_1.StringWrapper.slice(value, start, end);
      }
      return collection_1.ListWrapper.slice(value, start, end);
    };
    SlicePipe.prototype.supports = function (obj) {
      return lang_1.isString(obj) || lang_1.isArray(obj);
    };
    SlicePipe.decorators = [{
      type: core_1.Pipe,
      args: [{
        name: 'slice',
        pure: false
      }]
    }, { type: core_1.Injectable }];
    return SlicePipe;
  }();
  exports.SlicePipe = SlicePipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/date_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/intl.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var intl_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/intl.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var defaultLocale = 'en-US';
  var DatePipe = function () {
    function DatePipe() {}
    DatePipe.prototype.transform = function (value, pattern) {
      if (pattern === void 0) {
        pattern = 'mediumDate';
      }
      if (lang_1.isBlank(value)) return null;
      if (!this.supports(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(DatePipe, value);
      }
      if (lang_1.isNumber(value)) {
        value = lang_1.DateWrapper.fromMillis(value);
      }
      if (collection_1.StringMapWrapper.contains(DatePipe._ALIASES, pattern)) {
        pattern = collection_1.StringMapWrapper.get(DatePipe._ALIASES, pattern);
      }
      return intl_1.DateFormatter.format(value, defaultLocale, pattern);
    };
    DatePipe.prototype.supports = function (obj) {
      return lang_1.isDate(obj) || lang_1.isNumber(obj);
    };
    DatePipe._ALIASES = {
      'medium': 'yMMMdjms',
      'short': 'yMdjm',
      'fullDate': 'yMMMMEEEEd',
      'longDate': 'yMMMMd',
      'mediumDate': 'yMMMd',
      'shortDate': 'yMd',
      'mediumTime': 'jms',
      'shortTime': 'jm'
    };
    DatePipe.decorators = [{
      type: core_1.Pipe,
      args: [{
        name: 'date',
        pure: true
      }]
    }, { type: core_1.Injectable }];
    return DatePipe;
  }();
  exports.DatePipe = DatePipe;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/facade/intl.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    (function (NumberFormatStyle) {
        NumberFormatStyle[NumberFormatStyle["Decimal"] = 0] = "Decimal";
        NumberFormatStyle[NumberFormatStyle["Percent"] = 1] = "Percent";
        NumberFormatStyle[NumberFormatStyle["Currency"] = 2] = "Currency";
    })(exports.NumberFormatStyle || (exports.NumberFormatStyle = {}));
    var NumberFormatStyle = exports.NumberFormatStyle;
    var NumberFormatter = function () {
        function NumberFormatter() {}
        NumberFormatter.format = function (num, locale, style, _a) {
            var _b = _a === void 0 ? {} : _a,
                _c = _b.minimumIntegerDigits,
                minimumIntegerDigits = _c === void 0 ? 1 : _c,
                _d = _b.minimumFractionDigits,
                minimumFractionDigits = _d === void 0 ? 0 : _d,
                _e = _b.maximumFractionDigits,
                maximumFractionDigits = _e === void 0 ? 3 : _e,
                currency = _b.currency,
                _f = _b.currencyAsSymbol,
                currencyAsSymbol = _f === void 0 ? false : _f;
            var intlOptions = {
                minimumIntegerDigits: minimumIntegerDigits,
                minimumFractionDigits: minimumFractionDigits,
                maximumFractionDigits: maximumFractionDigits
            };
            intlOptions.style = NumberFormatStyle[style].toLowerCase();
            if (style == NumberFormatStyle.Currency) {
                intlOptions.currency = currency;
                intlOptions.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';
            }
            return new Intl.NumberFormat(locale, intlOptions).format(num);
        };
        return NumberFormatter;
    }();
    exports.NumberFormatter = NumberFormatter;
    function digitCondition(len) {
        return len == 2 ? '2-digit' : 'numeric';
    }
    function nameCondition(len) {
        return len < 4 ? 'short' : 'long';
    }
    function extractComponents(pattern) {
        var ret = {};
        var i = 0,
            j;
        while (i < pattern.length) {
            j = i;
            while (j < pattern.length && pattern[j] == pattern[i]) j++;
            var len = j - i;
            switch (pattern[i]) {
                case 'G':
                    ret.era = nameCondition(len);
                    break;
                case 'y':
                    ret.year = digitCondition(len);
                    break;
                case 'M':
                    if (len >= 3) ret.month = nameCondition(len);else ret.month = digitCondition(len);
                    break;
                case 'd':
                    ret.day = digitCondition(len);
                    break;
                case 'E':
                    ret.weekday = nameCondition(len);
                    break;
                case 'j':
                    ret.hour = digitCondition(len);
                    break;
                case 'h':
                    ret.hour = digitCondition(len);
                    ret.hour12 = true;
                    break;
                case 'H':
                    ret.hour = digitCondition(len);
                    ret.hour12 = false;
                    break;
                case 'm':
                    ret.minute = digitCondition(len);
                    break;
                case 's':
                    ret.second = digitCondition(len);
                    break;
                case 'z':
                    ret.timeZoneName = 'long';
                    break;
                case 'Z':
                    ret.timeZoneName = 'short';
                    break;
            }
            i = j;
        }
        return ret;
    }
    var dateFormatterCache = new Map();
    var DateFormatter = function () {
        function DateFormatter() {}
        DateFormatter.format = function (date, locale, pattern) {
            var key = locale + pattern;
            if (dateFormatterCache.has(key)) {
                return dateFormatterCache.get(key).format(date);
            }
            var formatter = new Intl.DateTimeFormat(locale, extractComponents(pattern));
            dateFormatterCache.set(key, formatter);
            return formatter.format(date);
        };
        return DateFormatter;
    }();
    exports.DateFormatter = DateFormatter;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/number_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/intl.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var intl_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/intl.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var defaultLocale = 'en-US';
  var _re = lang_1.RegExpWrapper.create('^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$');
  var NumberPipe = function () {
    function NumberPipe() {}
    NumberPipe._format = function (value, style, digits, currency, currencyAsSymbol) {
      if (currency === void 0) {
        currency = null;
      }
      if (currencyAsSymbol === void 0) {
        currencyAsSymbol = false;
      }
      if (lang_1.isBlank(value)) return null;
      if (!lang_1.isNumber(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(NumberPipe, value);
      }
      var minInt = 1,
          minFraction = 0,
          maxFraction = 3;
      if (lang_1.isPresent(digits)) {
        var parts = lang_1.RegExpWrapper.firstMatch(_re, digits);
        if (lang_1.isBlank(parts)) {
          throw new exceptions_1.BaseException(digits + " is not a valid digit info for number pipes");
        }
        if (lang_1.isPresent(parts[1])) {
          minInt = lang_1.NumberWrapper.parseIntAutoRadix(parts[1]);
        }
        if (lang_1.isPresent(parts[3])) {
          minFraction = lang_1.NumberWrapper.parseIntAutoRadix(parts[3]);
        }
        if (lang_1.isPresent(parts[5])) {
          maxFraction = lang_1.NumberWrapper.parseIntAutoRadix(parts[5]);
        }
      }
      return intl_1.NumberFormatter.format(value, defaultLocale, style, {
        minimumIntegerDigits: minInt,
        minimumFractionDigits: minFraction,
        maximumFractionDigits: maxFraction,
        currency: currency,
        currencyAsSymbol: currencyAsSymbol
      });
    };
    NumberPipe.decorators = [{ type: core_1.Injectable }];
    return NumberPipe;
  }();
  exports.NumberPipe = NumberPipe;
  var DecimalPipe = function (_super) {
    __extends(DecimalPipe, _super);
    function DecimalPipe() {
      _super.apply(this, arguments);
    }
    DecimalPipe.prototype.transform = function (value, digits) {
      if (digits === void 0) {
        digits = null;
      }
      return NumberPipe._format(value, intl_1.NumberFormatStyle.Decimal, digits);
    };
    DecimalPipe.decorators = [{
      type: core_1.Pipe,
      args: [{ name: 'number' }]
    }, { type: core_1.Injectable }];
    return DecimalPipe;
  }(NumberPipe);
  exports.DecimalPipe = DecimalPipe;
  var PercentPipe = function (_super) {
    __extends(PercentPipe, _super);
    function PercentPipe() {
      _super.apply(this, arguments);
    }
    PercentPipe.prototype.transform = function (value, digits) {
      if (digits === void 0) {
        digits = null;
      }
      return NumberPipe._format(value, intl_1.NumberFormatStyle.Percent, digits);
    };
    PercentPipe.decorators = [{
      type: core_1.Pipe,
      args: [{ name: 'percent' }]
    }, { type: core_1.Injectable }];
    return PercentPipe;
  }(NumberPipe);
  exports.PercentPipe = PercentPipe;
  var CurrencyPipe = function (_super) {
    __extends(CurrencyPipe, _super);
    function CurrencyPipe() {
      _super.apply(this, arguments);
    }
    CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {
      if (currencyCode === void 0) {
        currencyCode = 'USD';
      }
      if (symbolDisplay === void 0) {
        symbolDisplay = false;
      }
      if (digits === void 0) {
        digits = null;
      }
      return NumberPipe._format(value, intl_1.NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);
    };
    CurrencyPipe.decorators = [{
      type: core_1.Pipe,
      args: [{ name: 'currency' }]
    }, { type: core_1.Injectable }];
    return CurrencyPipe;
  }(NumberPipe);
  exports.CurrencyPipe = CurrencyPipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/replace_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var ReplacePipe = function () {
    function ReplacePipe() {}
    ReplacePipe.prototype.transform = function (value, pattern, replacement) {
      if (lang_1.isBlank(value)) {
        return value;
      }
      if (!this._supportedInput(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(ReplacePipe, value);
      }
      var input = value.toString();
      if (!this._supportedPattern(pattern)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(ReplacePipe, pattern);
      }
      if (!this._supportedReplacement(replacement)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(ReplacePipe, replacement);
      }
      if (lang_1.isFunction(replacement)) {
        var rgxPattern = lang_1.isString(pattern) ? lang_1.RegExpWrapper.create(pattern) : pattern;
        return lang_1.StringWrapper.replaceAllMapped(input, rgxPattern, replacement);
      }
      if (pattern instanceof RegExp) {
        return lang_1.StringWrapper.replaceAll(input, pattern, replacement);
      }
      return lang_1.StringWrapper.replace(input, pattern, replacement);
    };
    ReplacePipe.prototype._supportedInput = function (input) {
      return lang_1.isString(input) || lang_1.isNumber(input);
    };
    ReplacePipe.prototype._supportedPattern = function (pattern) {
      return lang_1.isString(pattern) || pattern instanceof RegExp;
    };
    ReplacePipe.prototype._supportedReplacement = function (replacement) {
      return lang_1.isString(replacement) || lang_1.isFunction(replacement);
    };
    ReplacePipe.decorators = [{
      type: core_1.Pipe,
      args: [{ name: 'replace' }]
    }, { type: core_1.Injectable }];
    return ReplacePipe;
  }();
  exports.ReplacePipe = ReplacePipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_plural_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var interpolationExp = lang_1.RegExpWrapper.create('#');
  var I18nPluralPipe = function () {
    function I18nPluralPipe() {}
    I18nPluralPipe.prototype.transform = function (value, pluralMap) {
      var key;
      var valueStr;
      if (!lang_1.isStringMap(pluralMap)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(I18nPluralPipe, pluralMap);
      }
      key = value === 0 || value === 1 ? "=" + value : 'other';
      valueStr = lang_1.isPresent(value) ? value.toString() : '';
      return lang_1.StringWrapper.replaceAll(pluralMap[key], interpolationExp, valueStr);
    };
    I18nPluralPipe.decorators = [{
      type: core_1.Pipe,
      args: [{
        name: 'i18nPlural',
        pure: true
      }]
    }, { type: core_1.Injectable }];
    return I18nPluralPipe;
  }();
  exports.I18nPluralPipe = I18nPluralPipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var InvalidPipeArgumentException = function (_super) {
    __extends(InvalidPipeArgumentException, _super);
    function InvalidPipeArgumentException(type, value) {
      _super.call(this, "Invalid argument '" + value + "' for pipe '" + lang_1.stringify(type) + "'");
    }
    return InvalidPipeArgumentException;
  }(exceptions_1.BaseException);
  exports.InvalidPipeArgumentException = InvalidPipeArgumentException;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_select_pipe.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var invalid_pipe_argument_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/invalid_pipe_argument_exception.js');
  var I18nSelectPipe = function () {
    function I18nSelectPipe() {}
    I18nSelectPipe.prototype.transform = function (value, mapping) {
      if (!lang_1.isStringMap(mapping)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(I18nSelectPipe, mapping);
      }
      return collection_1.StringMapWrapper.contains(mapping, value) ? mapping[value] : mapping['other'];
    };
    I18nSelectPipe.decorators = [{
      type: core_1.Pipe,
      args: [{
        name: 'i18nSelect',
        pure: true
      }]
    }, { type: core_1.Injectable }];
    return I18nSelectPipe;
  }();
  exports.I18nSelectPipe = I18nSelectPipe;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes/common_pipes.js', ['npm:@angular/common@2.0.0-rc.1/src/pipes/async_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/uppercase_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/lowercase_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/json_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/slice_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/date_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/number_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/replace_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_plural_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_select_pipe.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var async_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/async_pipe.js');
  var uppercase_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/uppercase_pipe.js');
  var lowercase_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/lowercase_pipe.js');
  var json_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/json_pipe.js');
  var slice_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/slice_pipe.js');
  var date_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/date_pipe.js');
  var number_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/number_pipe.js');
  var replace_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/replace_pipe.js');
  var i18n_plural_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_plural_pipe.js');
  var i18n_select_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_select_pipe.js');
  exports.COMMON_PIPES = [async_pipe_1.AsyncPipe, uppercase_pipe_1.UpperCasePipe, lowercase_pipe_1.LowerCasePipe, json_pipe_1.JsonPipe, slice_pipe_1.SlicePipe, number_pipe_1.DecimalPipe, number_pipe_1.PercentPipe, number_pipe_1.CurrencyPipe, date_pipe_1.DatePipe, replace_pipe_1.ReplacePipe, i18n_plural_pipe_1.I18nPluralPipe, i18n_select_pipe_1.I18nSelectPipe];
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/pipes.js', ['npm:@angular/common@2.0.0-rc.1/src/pipes/async_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/date_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/json_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/slice_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/lowercase_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/number_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/uppercase_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/replace_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_plural_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_select_pipe.js', 'npm:@angular/common@2.0.0-rc.1/src/pipes/common_pipes.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var async_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/async_pipe.js');
  exports.AsyncPipe = async_pipe_1.AsyncPipe;
  var date_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/date_pipe.js');
  exports.DatePipe = date_pipe_1.DatePipe;
  var json_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/json_pipe.js');
  exports.JsonPipe = json_pipe_1.JsonPipe;
  var slice_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/slice_pipe.js');
  exports.SlicePipe = slice_pipe_1.SlicePipe;
  var lowercase_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/lowercase_pipe.js');
  exports.LowerCasePipe = lowercase_pipe_1.LowerCasePipe;
  var number_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/number_pipe.js');
  exports.NumberPipe = number_pipe_1.NumberPipe;
  exports.DecimalPipe = number_pipe_1.DecimalPipe;
  exports.PercentPipe = number_pipe_1.PercentPipe;
  exports.CurrencyPipe = number_pipe_1.CurrencyPipe;
  var uppercase_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/uppercase_pipe.js');
  exports.UpperCasePipe = uppercase_pipe_1.UpperCasePipe;
  var replace_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/replace_pipe.js');
  exports.ReplacePipe = replace_pipe_1.ReplacePipe;
  var i18n_plural_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_plural_pipe.js');
  exports.I18nPluralPipe = i18n_plural_pipe_1.I18nPluralPipe;
  var i18n_select_pipe_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/i18n_select_pipe.js');
  exports.I18nSelectPipe = i18n_select_pipe_1.I18nSelectPipe;
  var common_pipes_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/pipes/common_pipes.js');
  exports.COMMON_PIPES = common_pipes_1.COMMON_PIPES;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_name.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var control_container_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js');
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  var shared_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  exports.controlNameBinding = {
    provide: ng_control_1.NgControl,
    useExisting: core_1.forwardRef(function () {
      return NgControlName;
    })
  };
  var NgControlName = function (_super) {
    __extends(NgControlName, _super);
    function NgControlName(_parent, _validators, _asyncValidators, valueAccessors) {
      _super.call(this);
      this._parent = _parent;
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this.update = new async_1.EventEmitter();
      this._added = false;
      this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);
    }
    NgControlName.prototype.ngOnChanges = function (changes) {
      if (!this._added) {
        this.formDirective.addControl(this);
        this._added = true;
      }
      if (shared_1.isPropertyUpdated(changes, this.viewModel)) {
        this.viewModel = this.model;
        this.formDirective.updateModel(this, this.model);
      }
    };
    NgControlName.prototype.ngOnDestroy = function () {
      this.formDirective.removeControl(this);
    };
    NgControlName.prototype.viewToModelUpdate = function (newValue) {
      this.viewModel = newValue;
      async_1.ObservableWrapper.callEmit(this.update, newValue);
    };
    Object.defineProperty(NgControlName.prototype, "path", {
      get: function () {
        return shared_1.controlPath(this.name, this._parent);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "formDirective", {
      get: function () {
        return this._parent.formDirective;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "validator", {
      get: function () {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "asyncValidator", {
      get: function () {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "control", {
      get: function () {
        return this.formDirective.getControl(this);
      },
      enumerable: true,
      configurable: true
    });
    NgControlName.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngControl]',
        bindings: [exports.controlNameBinding],
        inputs: ['name: ngControl', 'model: ngModel'],
        outputs: ['update: ngModelChange'],
        exportAs: 'ngForm'
      }]
    }];
    NgControlName.ctorParameters = [{
      type: control_container_1.ControlContainer,
      decorators: [{ type: core_1.Host }, { type: core_1.SkipSelf }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_ASYNC_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [control_value_accessor_1.NG_VALUE_ACCESSOR]
      }]
    }];
    return NgControlName;
  }(ng_control_1.NgControl);
  exports.NgControlName = NgControlName;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_control.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  var shared_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js');
  exports.formControlBinding = {
    provide: ng_control_1.NgControl,
    useExisting: core_1.forwardRef(function () {
      return NgFormControl;
    })
  };
  var NgFormControl = function (_super) {
    __extends(NgFormControl, _super);
    function NgFormControl(_validators, _asyncValidators, valueAccessors) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this.update = new async_1.EventEmitter();
      this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);
    }
    NgFormControl.prototype.ngOnChanges = function (changes) {
      if (this._isControlChanged(changes)) {
        shared_1.setUpControl(this.form, this);
        this.form.updateValueAndValidity({ emitEvent: false });
      }
      if (shared_1.isPropertyUpdated(changes, this.viewModel)) {
        this.form.updateValue(this.model);
        this.viewModel = this.model;
      }
    };
    Object.defineProperty(NgFormControl.prototype, "path", {
      get: function () {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormControl.prototype, "validator", {
      get: function () {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormControl.prototype, "asyncValidator", {
      get: function () {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormControl.prototype, "control", {
      get: function () {
        return this.form;
      },
      enumerable: true,
      configurable: true
    });
    NgFormControl.prototype.viewToModelUpdate = function (newValue) {
      this.viewModel = newValue;
      async_1.ObservableWrapper.callEmit(this.update, newValue);
    };
    NgFormControl.prototype._isControlChanged = function (changes) {
      return collection_1.StringMapWrapper.contains(changes, "form");
    };
    NgFormControl.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngFormControl]',
        bindings: [exports.formControlBinding],
        inputs: ['form: ngFormControl', 'model: ngModel'],
        outputs: ['update: ngModelChange'],
        exportAs: 'ngForm'
      }]
    }];
    NgFormControl.ctorParameters = [{
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_ASYNC_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [control_value_accessor_1.NG_VALUE_ACCESSOR]
      }]
    }];
    return NgFormControl;
  }(ng_control_1.NgControl);
  exports.NgFormControl = NgFormControl;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_model.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  var model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/model.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  var shared_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js');
  exports.formControlBinding = {
    provide: ng_control_1.NgControl,
    useExisting: core_1.forwardRef(function () {
      return NgModel;
    })
  };
  var NgModel = function (_super) {
    __extends(NgModel, _super);
    function NgModel(_validators, _asyncValidators, valueAccessors) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this._control = new model_1.Control();
      this._added = false;
      this.update = new async_1.EventEmitter();
      this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);
    }
    NgModel.prototype.ngOnChanges = function (changes) {
      if (!this._added) {
        shared_1.setUpControl(this._control, this);
        this._control.updateValueAndValidity({ emitEvent: false });
        this._added = true;
      }
      if (shared_1.isPropertyUpdated(changes, this.viewModel)) {
        this._control.updateValue(this.model);
        this.viewModel = this.model;
      }
    };
    Object.defineProperty(NgModel.prototype, "control", {
      get: function () {
        return this._control;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgModel.prototype, "path", {
      get: function () {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgModel.prototype, "validator", {
      get: function () {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgModel.prototype, "asyncValidator", {
      get: function () {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    NgModel.prototype.viewToModelUpdate = function (newValue) {
      this.viewModel = newValue;
      async_1.ObservableWrapper.callEmit(this.update, newValue);
    };
    NgModel.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngModel]:not([ngControl]):not([ngFormControl])',
        bindings: [exports.formControlBinding],
        inputs: ['model: ngModel'],
        outputs: ['update: ngModelChange'],
        exportAs: 'ngForm'
      }]
    }];
    NgModel.ctorParameters = [{
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_ASYNC_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [control_value_accessor_1.NG_VALUE_ACCESSOR]
      }]
    }];
    return NgModel;
  }(ng_control_1.NgControl);
  exports.NgModel = NgModel;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_group.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var control_container_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js');
  var shared_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  exports.controlGroupProvider = {
    provide: control_container_1.ControlContainer,
    useExisting: core_1.forwardRef(function () {
      return NgControlGroup;
    })
  };
  var NgControlGroup = function (_super) {
    __extends(NgControlGroup, _super);
    function NgControlGroup(parent, _validators, _asyncValidators) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this._parent = parent;
    }
    NgControlGroup.prototype.ngOnInit = function () {
      this.formDirective.addControlGroup(this);
    };
    NgControlGroup.prototype.ngOnDestroy = function () {
      this.formDirective.removeControlGroup(this);
    };
    Object.defineProperty(NgControlGroup.prototype, "control", {
      get: function () {
        return this.formDirective.getControlGroup(this);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "path", {
      get: function () {
        return shared_1.controlPath(this.name, this._parent);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "formDirective", {
      get: function () {
        return this._parent.formDirective;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "validator", {
      get: function () {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "asyncValidator", {
      get: function () {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    NgControlGroup.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngControlGroup]',
        providers: [exports.controlGroupProvider],
        inputs: ['name: ngControlGroup'],
        exportAs: 'ngForm'
      }]
    }];
    NgControlGroup.ctorParameters = [{
      type: control_container_1.ControlContainer,
      decorators: [{ type: core_1.Host }, { type: core_1.SkipSelf }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_ASYNC_VALIDATORS]
      }]
    }];
    return NgControlGroup;
  }(control_container_1.ControlContainer);
  exports.NgControlGroup = NgControlGroup;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_model.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var control_container_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js');
  var shared_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  exports.formDirectiveProvider = {
    provide: control_container_1.ControlContainer,
    useExisting: core_1.forwardRef(function () {
      return NgFormModel;
    })
  };
  var NgFormModel = function (_super) {
    __extends(NgFormModel, _super);
    function NgFormModel(_validators, _asyncValidators) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this.form = null;
      this.directives = [];
      this.ngSubmit = new async_1.EventEmitter();
    }
    NgFormModel.prototype.ngOnChanges = function (changes) {
      this._checkFormPresent();
      if (collection_1.StringMapWrapper.contains(changes, "form")) {
        var sync = shared_1.composeValidators(this._validators);
        this.form.validator = validators_1.Validators.compose([this.form.validator, sync]);
        var async = shared_1.composeAsyncValidators(this._asyncValidators);
        this.form.asyncValidator = validators_1.Validators.composeAsync([this.form.asyncValidator, async]);
        this.form.updateValueAndValidity({
          onlySelf: true,
          emitEvent: false
        });
      }
      this._updateDomValue();
    };
    Object.defineProperty(NgFormModel.prototype, "formDirective", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormModel.prototype, "control", {
      get: function () {
        return this.form;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormModel.prototype, "path", {
      get: function () {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    NgFormModel.prototype.addControl = function (dir) {
      var ctrl = this.form.find(dir.path);
      shared_1.setUpControl(ctrl, dir);
      ctrl.updateValueAndValidity({ emitEvent: false });
      this.directives.push(dir);
    };
    NgFormModel.prototype.getControl = function (dir) {
      return this.form.find(dir.path);
    };
    NgFormModel.prototype.removeControl = function (dir) {
      collection_1.ListWrapper.remove(this.directives, dir);
    };
    NgFormModel.prototype.addControlGroup = function (dir) {
      var ctrl = this.form.find(dir.path);
      shared_1.setUpControlGroup(ctrl, dir);
      ctrl.updateValueAndValidity({ emitEvent: false });
    };
    NgFormModel.prototype.removeControlGroup = function (dir) {};
    NgFormModel.prototype.getControlGroup = function (dir) {
      return this.form.find(dir.path);
    };
    NgFormModel.prototype.updateModel = function (dir, value) {
      var ctrl = this.form.find(dir.path);
      ctrl.updateValue(value);
    };
    NgFormModel.prototype.onSubmit = function () {
      async_1.ObservableWrapper.callEmit(this.ngSubmit, null);
      return false;
    };
    NgFormModel.prototype._updateDomValue = function () {
      var _this = this;
      this.directives.forEach(function (dir) {
        var ctrl = _this.form.find(dir.path);
        dir.valueAccessor.writeValue(ctrl.value);
      });
    };
    NgFormModel.prototype._checkFormPresent = function () {
      if (lang_1.isBlank(this.form)) {
        throw new exceptions_1.BaseException("ngFormModel expects a form. Please pass one in. Example: <form [ngFormModel]=\"myCoolForm\">");
      }
    };
    NgFormModel.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngFormModel]',
        bindings: [exports.formDirectiveProvider],
        inputs: ['form: ngFormModel'],
        host: { '(submit)': 'onSubmit()' },
        outputs: ['ngSubmit'],
        exportAs: 'ngForm'
      }]
    }];
    NgFormModel.ctorParameters = [{
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_ASYNC_VALIDATORS]
      }]
    }];
    return NgFormModel;
  }(control_container_1.ControlContainer);
  exports.NgFormModel = NgFormModel;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js", ["npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var abstract_control_directive_1 = $__require("npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js");
  var ControlContainer = function (_super) {
    __extends(ControlContainer, _super);
    function ControlContainer() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(ControlContainer.prototype, "formDirective", {
      get: function () {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ControlContainer.prototype, "path", {
      get: function () {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    return ControlContainer;
  }(abstract_control_directive_1.AbstractControlDirective);
  exports.ControlContainer = ControlContainer;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/forms/directives/normalize_validator.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    function normalizeValidator(validator) {
        if (validator.validate !== undefined) {
            return function (c) {
                return validator.validate(c);
            };
        } else {
            return validator;
        }
    }
    exports.normalizeValidator = normalizeValidator;
    function normalizeAsyncValidator(validator) {
        if (validator.validate !== undefined) {
            return function (c) {
                return Promise.resolve(validator.validate(c));
            };
        } else {
            return validator;
        }
    }
    exports.normalizeAsyncValidator = normalizeAsyncValidator;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/number_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/normalize_validator.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  var default_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js');
  var number_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/number_value_accessor.js');
  var checkbox_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js');
  var select_control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js');
  var radio_control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js');
  var normalize_validator_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/normalize_validator.js');
  function controlPath(name, parent) {
    var p = collection_1.ListWrapper.clone(parent.path);
    p.push(name);
    return p;
  }
  exports.controlPath = controlPath;
  function setUpControl(control, dir) {
    if (lang_1.isBlank(control)) _throwError(dir, "Cannot find control");
    if (lang_1.isBlank(dir.valueAccessor)) _throwError(dir, "No value accessor for");
    control.validator = validators_1.Validators.compose([control.validator, dir.validator]);
    control.asyncValidator = validators_1.Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
    dir.valueAccessor.writeValue(control.value);
    dir.valueAccessor.registerOnChange(function (newValue) {
      dir.viewToModelUpdate(newValue);
      control.updateValue(newValue, { emitModelToViewChange: false });
      control.markAsDirty();
    });
    control.registerOnChange(function (newValue) {
      return dir.valueAccessor.writeValue(newValue);
    });
    dir.valueAccessor.registerOnTouched(function () {
      return control.markAsTouched();
    });
  }
  exports.setUpControl = setUpControl;
  function setUpControlGroup(control, dir) {
    if (lang_1.isBlank(control)) _throwError(dir, "Cannot find control");
    control.validator = validators_1.Validators.compose([control.validator, dir.validator]);
    control.asyncValidator = validators_1.Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
  }
  exports.setUpControlGroup = setUpControlGroup;
  function _throwError(dir, message) {
    var path = dir.path.join(" -> ");
    throw new exceptions_1.BaseException(message + " '" + path + "'");
  }
  function composeValidators(validators) {
    return lang_1.isPresent(validators) ? validators_1.Validators.compose(validators.map(normalize_validator_1.normalizeValidator)) : null;
  }
  exports.composeValidators = composeValidators;
  function composeAsyncValidators(validators) {
    return lang_1.isPresent(validators) ? validators_1.Validators.composeAsync(validators.map(normalize_validator_1.normalizeAsyncValidator)) : null;
  }
  exports.composeAsyncValidators = composeAsyncValidators;
  function isPropertyUpdated(changes, viewModel) {
    if (!collection_1.StringMapWrapper.contains(changes, "model")) return false;
    var change = changes["model"];
    if (change.isFirstChange()) return true;
    return !lang_1.looseIdentical(viewModel, change.currentValue);
  }
  exports.isPropertyUpdated = isPropertyUpdated;
  function selectValueAccessor(dir, valueAccessors) {
    if (lang_1.isBlank(valueAccessors)) return null;
    var defaultAccessor;
    var builtinAccessor;
    var customAccessor;
    valueAccessors.forEach(function (v) {
      if (lang_1.hasConstructor(v, default_value_accessor_1.DefaultValueAccessor)) {
        defaultAccessor = v;
      } else if (lang_1.hasConstructor(v, checkbox_value_accessor_1.CheckboxControlValueAccessor) || lang_1.hasConstructor(v, number_value_accessor_1.NumberValueAccessor) || lang_1.hasConstructor(v, select_control_value_accessor_1.SelectControlValueAccessor) || lang_1.hasConstructor(v, radio_control_value_accessor_1.RadioControlValueAccessor)) {
        if (lang_1.isPresent(builtinAccessor)) _throwError(dir, "More than one built-in value accessor matches");
        builtinAccessor = v;
      } else {
        if (lang_1.isPresent(customAccessor)) _throwError(dir, "More than one custom value accessor matches");
        customAccessor = v;
      }
    });
    if (lang_1.isPresent(customAccessor)) return customAccessor;
    if (lang_1.isPresent(builtinAccessor)) return builtinAccessor;
    if (lang_1.isPresent(defaultAccessor)) return defaultAccessor;
    _throwError(dir, "No valid value accessor for");
    return null;
  }
  exports.selectValueAccessor = selectValueAccessor;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var control_container_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js');
  var model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/model.js');
  var shared_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/shared.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  exports.formDirectiveProvider = {
    provide: control_container_1.ControlContainer,
    useExisting: core_1.forwardRef(function () {
      return NgForm;
    })
  };
  var NgForm = function (_super) {
    __extends(NgForm, _super);
    function NgForm(validators, asyncValidators) {
      _super.call(this);
      this.ngSubmit = new async_1.EventEmitter();
      this.form = new model_1.ControlGroup({}, null, shared_1.composeValidators(validators), shared_1.composeAsyncValidators(asyncValidators));
    }
    Object.defineProperty(NgForm.prototype, "formDirective", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForm.prototype, "control", {
      get: function () {
        return this.form;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForm.prototype, "path", {
      get: function () {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForm.prototype, "controls", {
      get: function () {
        return this.form.controls;
      },
      enumerable: true,
      configurable: true
    });
    NgForm.prototype.addControl = function (dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function () {
        var container = _this._findContainer(dir.path);
        var ctrl = new model_1.Control();
        shared_1.setUpControl(ctrl, dir);
        container.addControl(dir.name, ctrl);
        ctrl.updateValueAndValidity({ emitEvent: false });
      });
    };
    NgForm.prototype.getControl = function (dir) {
      return this.form.find(dir.path);
    };
    NgForm.prototype.removeControl = function (dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function () {
        var container = _this._findContainer(dir.path);
        if (lang_1.isPresent(container)) {
          container.removeControl(dir.name);
          container.updateValueAndValidity({ emitEvent: false });
        }
      });
    };
    NgForm.prototype.addControlGroup = function (dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function () {
        var container = _this._findContainer(dir.path);
        var group = new model_1.ControlGroup({});
        shared_1.setUpControlGroup(group, dir);
        container.addControl(dir.name, group);
        group.updateValueAndValidity({ emitEvent: false });
      });
    };
    NgForm.prototype.removeControlGroup = function (dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function () {
        var container = _this._findContainer(dir.path);
        if (lang_1.isPresent(container)) {
          container.removeControl(dir.name);
          container.updateValueAndValidity({ emitEvent: false });
        }
      });
    };
    NgForm.prototype.getControlGroup = function (dir) {
      return this.form.find(dir.path);
    };
    NgForm.prototype.updateModel = function (dir, value) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function () {
        var ctrl = _this.form.find(dir.path);
        ctrl.updateValue(value);
      });
    };
    NgForm.prototype.onSubmit = function () {
      async_1.ObservableWrapper.callEmit(this.ngSubmit, null);
      return false;
    };
    NgForm.prototype._findContainer = function (path) {
      path.pop();
      return collection_1.ListWrapper.isEmpty(path) ? this.form : this.form.find(path);
    };
    NgForm.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: 'form:not([ngNoForm]):not([ngFormModel]),ngForm,[ngForm]',
        bindings: [exports.formDirectiveProvider],
        host: { '(submit)': 'onSubmit()' },
        outputs: ['ngSubmit'],
        exportAs: 'ngForm'
      }]
    }];
    NgForm.ctorParameters = [{
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_VALIDATORS]
      }]
    }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, { type: core_1.Self }, {
        type: core_1.Inject,
        args: [validators_1.NG_ASYNC_VALIDATORS]
      }]
    }];
    return NgForm;
  }(control_container_1.ControlContainer);
  exports.NgForm = NgForm;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  exports.DEFAULT_VALUE_ACCESSOR = {
    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () {
      return DefaultValueAccessor;
    }),
    multi: true
  };
  var DefaultValueAccessor = function () {
    function DefaultValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function (_) {};
      this.onTouched = function () {};
    }
    DefaultValueAccessor.prototype.writeValue = function (value) {
      var normalizedValue = lang_1.isBlank(value) ? '' : value;
      this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);
    };
    DefaultValueAccessor.prototype.registerOnChange = function (fn) {
      this.onChange = fn;
    };
    DefaultValueAccessor.prototype.registerOnTouched = function (fn) {
      this.onTouched = fn;
    };
    DefaultValueAccessor.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: 'input:not([type=checkbox])[ngControl],textarea[ngControl],input:not([type=checkbox])[ngFormControl],textarea[ngFormControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',
        host: {
          '(input)': 'onChange($event.target.value)',
          '(blur)': 'onTouched()'
        },
        bindings: [exports.DEFAULT_VALUE_ACCESSOR]
      }]
    }];
    DefaultValueAccessor.ctorParameters = [{ type: core_1.Renderer }, { type: core_1.ElementRef }];
    return DefaultValueAccessor;
  }();
  exports.DefaultValueAccessor = DefaultValueAccessor;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  exports.CHECKBOX_VALUE_ACCESSOR = {
    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () {
      return CheckboxControlValueAccessor;
    }),
    multi: true
  };
  var CheckboxControlValueAccessor = function () {
    function CheckboxControlValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function (_) {};
      this.onTouched = function () {};
    }
    CheckboxControlValueAccessor.prototype.writeValue = function (value) {
      this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);
    };
    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) {
      this.onChange = fn;
    };
    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) {
      this.onTouched = fn;
    };
    CheckboxControlValueAccessor.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: 'input[type=checkbox][ngControl],input[type=checkbox][ngFormControl],input[type=checkbox][ngModel]',
        host: {
          '(change)': 'onChange($event.target.checked)',
          '(blur)': 'onTouched()'
        },
        providers: [exports.CHECKBOX_VALUE_ACCESSOR]
      }]
    }];
    CheckboxControlValueAccessor.ctorParameters = [{ type: core_1.Renderer }, { type: core_1.ElementRef }];
    return CheckboxControlValueAccessor;
  }();
  exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/number_value_accessor.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  exports.NUMBER_VALUE_ACCESSOR = {
    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () {
      return NumberValueAccessor;
    }),
    multi: true
  };
  var NumberValueAccessor = function () {
    function NumberValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function (_) {};
      this.onTouched = function () {};
    }
    NumberValueAccessor.prototype.writeValue = function (value) {
      this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', value);
    };
    NumberValueAccessor.prototype.registerOnChange = function (fn) {
      this.onChange = function (value) {
        fn(value == '' ? null : lang_1.NumberWrapper.parseFloat(value));
      };
    };
    NumberValueAccessor.prototype.registerOnTouched = function (fn) {
      this.onTouched = fn;
    };
    NumberValueAccessor.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: 'input[type=number][ngControl],input[type=number][ngFormControl],input[type=number][ngModel]',
        host: {
          '(change)': 'onChange($event.target.value)',
          '(input)': 'onChange($event.target.value)',
          '(blur)': 'onTouched()'
        },
        bindings: [exports.NUMBER_VALUE_ACCESSOR]
      }]
    }];
    NumberValueAccessor.ctorParameters = [{ type: core_1.Renderer }, { type: core_1.ElementRef }];
    return NumberValueAccessor;
  }();
  exports.NumberValueAccessor = NumberValueAccessor;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_status.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var NgControlStatus = function () {
    function NgControlStatus(cd) {
      this._cd = cd;
    }
    Object.defineProperty(NgControlStatus.prototype, "ngClassUntouched", {
      get: function () {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.untouched : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassTouched", {
      get: function () {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.touched : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassPristine", {
      get: function () {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.pristine : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassDirty", {
      get: function () {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.dirty : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassValid", {
      get: function () {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.valid : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassInvalid", {
      get: function () {
        return lang_1.isPresent(this._cd.control) ? !this._cd.control.valid : false;
      },
      enumerable: true,
      configurable: true
    });
    NgControlStatus.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngControl],[ngModel],[ngFormControl]',
        host: {
          '[class.ng-untouched]': 'ngClassUntouched',
          '[class.ng-touched]': 'ngClassTouched',
          '[class.ng-pristine]': 'ngClassPristine',
          '[class.ng-dirty]': 'ngClassDirty',
          '[class.ng-valid]': 'ngClassValid',
          '[class.ng-invalid]': 'ngClassInvalid'
        }
      }]
    }];
    NgControlStatus.ctorParameters = [{
      type: ng_control_1.NgControl,
      decorators: [{ type: core_1.Self }]
    }];
    return NgControlStatus;
  }();
  exports.NgControlStatus = NgControlStatus;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  exports.SELECT_VALUE_ACCESSOR = {
    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () {
      return SelectControlValueAccessor;
    }),
    multi: true
  };
  function _buildValueString(id, value) {
    if (lang_1.isBlank(id)) return "" + value;
    if (!lang_1.isPrimitive(value)) value = "Object";
    return lang_1.StringWrapper.slice(id + ": " + value, 0, 50);
  }
  function _extractId(valueString) {
    return valueString.split(":")[0];
  }
  var SelectControlValueAccessor = function () {
    function SelectControlValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this._optionMap = new Map();
      this._idCounter = 0;
      this.onChange = function (_) {};
      this.onTouched = function () {};
    }
    SelectControlValueAccessor.prototype.writeValue = function (value) {
      this.value = value;
      var valueString = _buildValueString(this._getOptionId(value), value);
      this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);
    };
    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {
      var _this = this;
      this.onChange = function (valueString) {
        fn(_this._getOptionValue(valueString));
      };
    };
    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) {
      this.onTouched = fn;
    };
    SelectControlValueAccessor.prototype._registerOption = function () {
      return (this._idCounter++).toString();
    };
    SelectControlValueAccessor.prototype._getOptionId = function (value) {
      for (var _i = 0, _a = collection_1.MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {
        var id = _a[_i];
        if (lang_1.looseIdentical(this._optionMap.get(id), value)) return id;
      }
      return null;
    };
    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {
      var value = this._optionMap.get(_extractId(valueString));
      return lang_1.isPresent(value) ? value : valueString;
    };
    SelectControlValueAccessor.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: 'select[ngControl],select[ngFormControl],select[ngModel]',
        host: {
          '(change)': 'onChange($event.target.value)',
          '(blur)': 'onTouched()'
        },
        providers: [exports.SELECT_VALUE_ACCESSOR]
      }]
    }];
    SelectControlValueAccessor.ctorParameters = [{ type: core_1.Renderer }, { type: core_1.ElementRef }];
    return SelectControlValueAccessor;
  }();
  exports.SelectControlValueAccessor = SelectControlValueAccessor;
  var NgSelectOption = function () {
    function NgSelectOption(_element, _renderer, _select) {
      this._element = _element;
      this._renderer = _renderer;
      this._select = _select;
      if (lang_1.isPresent(this._select)) this.id = this._select._registerOption();
    }
    Object.defineProperty(NgSelectOption.prototype, "ngValue", {
      set: function (value) {
        if (this._select == null) return;
        this._select._optionMap.set(this.id, value);
        this._setElementValue(_buildValueString(this.id, value));
        this._select.writeValue(this._select.value);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgSelectOption.prototype, "value", {
      set: function (value) {
        this._setElementValue(value);
        if (lang_1.isPresent(this._select)) this._select.writeValue(this._select.value);
      },
      enumerable: true,
      configurable: true
    });
    NgSelectOption.prototype._setElementValue = function (value) {
      this._renderer.setElementProperty(this._element.nativeElement, 'value', value);
    };
    NgSelectOption.prototype.ngOnDestroy = function () {
      if (lang_1.isPresent(this._select)) {
        this._select._optionMap.delete(this.id);
        this._select.writeValue(this._select.value);
      }
    };
    NgSelectOption.decorators = [{
      type: core_1.Directive,
      args: [{ selector: 'option' }]
    }];
    NgSelectOption.ctorParameters = [{ type: core_1.ElementRef }, { type: core_1.Renderer }, {
      type: SelectControlValueAccessor,
      decorators: [{ type: core_1.Optional }, { type: core_1.Host }]
    }];
    NgSelectOption.propDecorators = {
      'ngValue': [{
        type: core_1.Input,
        args: ['ngValue']
      }],
      'value': [{
        type: core_1.Input,
        args: ['value']
      }]
    };
    return NgSelectOption;
  }();
  exports.NgSelectOption = NgSelectOption;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives.js', ['npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_name.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_control.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_group.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/number_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_status.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/validators.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var ng_control_name_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_name.js');
  var ng_form_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_control.js');
  var ng_model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_model.js');
  var ng_control_group_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_group.js');
  var ng_form_model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_model.js');
  var ng_form_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form.js');
  var default_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js');
  var checkbox_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js');
  var number_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/number_value_accessor.js');
  var radio_control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js');
  var ng_control_status_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_status.js');
  var select_control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/validators.js');
  var ng_control_name_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_name.js');
  exports.NgControlName = ng_control_name_2.NgControlName;
  var ng_form_control_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_control.js');
  exports.NgFormControl = ng_form_control_2.NgFormControl;
  var ng_model_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_model.js');
  exports.NgModel = ng_model_2.NgModel;
  var ng_control_group_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_group.js');
  exports.NgControlGroup = ng_control_group_2.NgControlGroup;
  var ng_form_model_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_model.js');
  exports.NgFormModel = ng_form_model_2.NgFormModel;
  var ng_form_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form.js');
  exports.NgForm = ng_form_2.NgForm;
  var default_value_accessor_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js');
  exports.DefaultValueAccessor = default_value_accessor_2.DefaultValueAccessor;
  var checkbox_value_accessor_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js');
  exports.CheckboxControlValueAccessor = checkbox_value_accessor_2.CheckboxControlValueAccessor;
  var radio_control_value_accessor_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js');
  exports.RadioControlValueAccessor = radio_control_value_accessor_2.RadioControlValueAccessor;
  exports.RadioButtonState = radio_control_value_accessor_2.RadioButtonState;
  var number_value_accessor_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/number_value_accessor.js');
  exports.NumberValueAccessor = number_value_accessor_2.NumberValueAccessor;
  var ng_control_status_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_status.js');
  exports.NgControlStatus = ng_control_status_2.NgControlStatus;
  var select_control_value_accessor_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js');
  exports.SelectControlValueAccessor = select_control_value_accessor_2.SelectControlValueAccessor;
  exports.NgSelectOption = select_control_value_accessor_2.NgSelectOption;
  var validators_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/validators.js');
  exports.RequiredValidator = validators_2.RequiredValidator;
  exports.MinLengthValidator = validators_2.MinLengthValidator;
  exports.MaxLengthValidator = validators_2.MaxLengthValidator;
  exports.PatternValidator = validators_2.PatternValidator;
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  exports.NgControl = ng_control_1.NgControl;
  exports.FORM_DIRECTIVES = [ng_control_name_1.NgControlName, ng_control_group_1.NgControlGroup, ng_form_control_1.NgFormControl, ng_model_1.NgModel, ng_form_model_1.NgFormModel, ng_form_1.NgForm, select_control_value_accessor_1.NgSelectOption, default_value_accessor_1.DefaultValueAccessor, number_value_accessor_1.NumberValueAccessor, checkbox_value_accessor_1.CheckboxControlValueAccessor, select_control_value_accessor_1.SelectControlValueAccessor, radio_control_value_accessor_1.RadioControlValueAccessor, ng_control_status_1.NgControlStatus, validators_1.RequiredValidator, validators_1.MinLengthValidator, validators_1.MaxLengthValidator, validators_1.PatternValidator];
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/promise.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
    var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
    var promise_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/promise.js');
    var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
    var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
    exports.NG_VALIDATORS = new core_1.OpaqueToken("NgValidators");
    exports.NG_ASYNC_VALIDATORS = new core_1.OpaqueToken("NgAsyncValidators");
    var Validators = function () {
      function Validators() {}
      Validators.required = function (control) {
        return lang_1.isBlank(control.value) || lang_1.isString(control.value) && control.value == "" ? { "required": true } : null;
      };
      Validators.minLength = function (minLength) {
        return function (control) {
          if (lang_1.isPresent(Validators.required(control))) return null;
          var v = control.value;
          return v.length < minLength ? { "minlength": {
              "requiredLength": minLength,
              "actualLength": v.length
            } } : null;
        };
      };
      Validators.maxLength = function (maxLength) {
        return function (control) {
          if (lang_1.isPresent(Validators.required(control))) return null;
          var v = control.value;
          return v.length > maxLength ? { "maxlength": {
              "requiredLength": maxLength,
              "actualLength": v.length
            } } : null;
        };
      };
      Validators.pattern = function (pattern) {
        return function (control) {
          if (lang_1.isPresent(Validators.required(control))) return null;
          var regex = new RegExp("^" + pattern + "$");
          var v = control.value;
          return regex.test(v) ? null : { "pattern": {
              "requiredPattern": "^" + pattern + "$",
              "actualValue": v
            } };
        };
      };
      Validators.nullValidator = function (c) {
        return null;
      };
      Validators.compose = function (validators) {
        if (lang_1.isBlank(validators)) return null;
        var presentValidators = validators.filter(lang_1.isPresent);
        if (presentValidators.length == 0) return null;
        return function (control) {
          return _mergeErrors(_executeValidators(control, presentValidators));
        };
      };
      Validators.composeAsync = function (validators) {
        if (lang_1.isBlank(validators)) return null;
        var presentValidators = validators.filter(lang_1.isPresent);
        if (presentValidators.length == 0) return null;
        return function (control) {
          var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);
          return promise_1.PromiseWrapper.all(promises).then(_mergeErrors);
        };
      };
      return Validators;
    }();
    exports.Validators = Validators;
    function _convertToPromise(obj) {
      return promise_1.PromiseWrapper.isPromise(obj) ? obj : async_1.ObservableWrapper.toPromise(obj);
    }
    function _executeValidators(control, validators) {
      return validators.map(function (v) {
        return v(control);
      });
    }
    function _executeAsyncValidators(control, validators) {
      return validators.map(function (v) {
        return v(control);
      });
    }
    function _mergeErrors(arrayOfErrors) {
      var res = arrayOfErrors.reduce(function (res, errors) {
        return lang_1.isPresent(errors) ? collection_1.StringMapWrapper.merge(res, errors) : res;
      }, {});
      return collection_1.StringMapWrapper.isEmpty(res) ? null : res;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/validators.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  var REQUIRED = validators_1.Validators.required;
  exports.REQUIRED_VALIDATOR = {
    provide: validators_1.NG_VALIDATORS,
    useValue: REQUIRED,
    multi: true
  };
  var RequiredValidator = function () {
    function RequiredValidator() {}
    RequiredValidator.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[required][ngControl],[required][ngFormControl],[required][ngModel]',
        providers: [exports.REQUIRED_VALIDATOR]
      }]
    }];
    return RequiredValidator;
  }();
  exports.RequiredValidator = RequiredValidator;
  exports.MIN_LENGTH_VALIDATOR = {
    provide: validators_1.NG_VALIDATORS,
    useExisting: core_1.forwardRef(function () {
      return MinLengthValidator;
    }),
    multi: true
  };
  var MinLengthValidator = function () {
    function MinLengthValidator(minLength) {
      this._validator = validators_1.Validators.minLength(lang_1.NumberWrapper.parseInt(minLength, 10));
    }
    MinLengthValidator.prototype.validate = function (c) {
      return this._validator(c);
    };
    MinLengthValidator.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[minlength][ngControl],[minlength][ngFormControl],[minlength][ngModel]',
        providers: [exports.MIN_LENGTH_VALIDATOR]
      }]
    }];
    MinLengthValidator.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Attribute,
        args: ["minlength"]
      }]
    }];
    return MinLengthValidator;
  }();
  exports.MinLengthValidator = MinLengthValidator;
  exports.MAX_LENGTH_VALIDATOR = {
    provide: validators_1.NG_VALIDATORS,
    useExisting: core_1.forwardRef(function () {
      return MaxLengthValidator;
    }),
    multi: true
  };
  var MaxLengthValidator = function () {
    function MaxLengthValidator(maxLength) {
      this._validator = validators_1.Validators.maxLength(lang_1.NumberWrapper.parseInt(maxLength, 10));
    }
    MaxLengthValidator.prototype.validate = function (c) {
      return this._validator(c);
    };
    MaxLengthValidator.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[maxlength][ngControl],[maxlength][ngFormControl],[maxlength][ngModel]',
        providers: [exports.MAX_LENGTH_VALIDATOR]
      }]
    }];
    MaxLengthValidator.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Attribute,
        args: ["maxlength"]
      }]
    }];
    return MaxLengthValidator;
  }();
  exports.MaxLengthValidator = MaxLengthValidator;
  exports.PATTERN_VALIDATOR = {
    provide: validators_1.NG_VALIDATORS,
    useExisting: core_1.forwardRef(function () {
      return PatternValidator;
    }),
    multi: true
  };
  var PatternValidator = function () {
    function PatternValidator(pattern) {
      this._validator = validators_1.Validators.pattern(pattern);
    }
    PatternValidator.prototype.validate = function (c) {
      return this._validator(c);
    };
    PatternValidator.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[pattern][ngControl],[pattern][ngFormControl],[pattern][ngModel]',
        providers: [exports.PATTERN_VALIDATOR]
      }]
    }];
    PatternValidator.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Attribute,
        args: ["pattern"]
      }]
    }];
    return PatternValidator;
  }();
  exports.PatternValidator = PatternValidator;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/model.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/promise.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var promise_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/promise.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  exports.VALID = "VALID";
  exports.INVALID = "INVALID";
  exports.PENDING = "PENDING";
  function isControl(control) {
    return control instanceof AbstractControl;
  }
  exports.isControl = isControl;
  function _find(control, path) {
    if (lang_1.isBlank(path)) return null;
    if (!(path instanceof Array)) {
      path = path.split("/");
    }
    if (path instanceof Array && collection_1.ListWrapper.isEmpty(path)) return null;
    return path.reduce(function (v, name) {
      if (v instanceof ControlGroup) {
        return lang_1.isPresent(v.controls[name]) ? v.controls[name] : null;
      } else if (v instanceof ControlArray) {
        var index = name;
        return lang_1.isPresent(v.at(index)) ? v.at(index) : null;
      } else {
        return null;
      }
    }, control);
  }
  function toObservable(r) {
    return promise_1.PromiseWrapper.isPromise(r) ? async_1.ObservableWrapper.fromPromise(r) : r;
  }
  var AbstractControl = function () {
    function AbstractControl(validator, asyncValidator) {
      this.validator = validator;
      this.asyncValidator = asyncValidator;
      this._pristine = true;
      this._touched = false;
    }
    Object.defineProperty(AbstractControl.prototype, "value", {
      get: function () {
        return this._value;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "status", {
      get: function () {
        return this._status;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "valid", {
      get: function () {
        return this._status === exports.VALID;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "errors", {
      get: function () {
        return this._errors;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "pristine", {
      get: function () {
        return this._pristine;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "dirty", {
      get: function () {
        return !this.pristine;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "touched", {
      get: function () {
        return this._touched;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "untouched", {
      get: function () {
        return !this._touched;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "valueChanges", {
      get: function () {
        return this._valueChanges;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "statusChanges", {
      get: function () {
        return this._statusChanges;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "pending", {
      get: function () {
        return this._status == exports.PENDING;
      },
      enumerable: true,
      configurable: true
    });
    AbstractControl.prototype.markAsTouched = function () {
      this._touched = true;
    };
    AbstractControl.prototype.markAsDirty = function (_a) {
      var onlySelf = (_a === void 0 ? {} : _a).onlySelf;
      onlySelf = lang_1.normalizeBool(onlySelf);
      this._pristine = false;
      if (lang_1.isPresent(this._parent) && !onlySelf) {
        this._parent.markAsDirty({ onlySelf: onlySelf });
      }
    };
    AbstractControl.prototype.markAsPending = function (_a) {
      var onlySelf = (_a === void 0 ? {} : _a).onlySelf;
      onlySelf = lang_1.normalizeBool(onlySelf);
      this._status = exports.PENDING;
      if (lang_1.isPresent(this._parent) && !onlySelf) {
        this._parent.markAsPending({ onlySelf: onlySelf });
      }
    };
    AbstractControl.prototype.setParent = function (parent) {
      this._parent = parent;
    };
    AbstractControl.prototype.updateValueAndValidity = function (_a) {
      var _b = _a === void 0 ? {} : _a,
          onlySelf = _b.onlySelf,
          emitEvent = _b.emitEvent;
      onlySelf = lang_1.normalizeBool(onlySelf);
      emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;
      this._updateValue();
      this._errors = this._runValidator();
      this._status = this._calculateStatus();
      if (this._status == exports.VALID || this._status == exports.PENDING) {
        this._runAsyncValidator(emitEvent);
      }
      if (emitEvent) {
        async_1.ObservableWrapper.callEmit(this._valueChanges, this._value);
        async_1.ObservableWrapper.callEmit(this._statusChanges, this._status);
      }
      if (lang_1.isPresent(this._parent) && !onlySelf) {
        this._parent.updateValueAndValidity({
          onlySelf: onlySelf,
          emitEvent: emitEvent
        });
      }
    };
    AbstractControl.prototype._runValidator = function () {
      return lang_1.isPresent(this.validator) ? this.validator(this) : null;
    };
    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {
      var _this = this;
      if (lang_1.isPresent(this.asyncValidator)) {
        this._status = exports.PENDING;
        this._cancelExistingSubscription();
        var obs = toObservable(this.asyncValidator(this));
        this._asyncValidationSubscription = async_1.ObservableWrapper.subscribe(obs, function (res) {
          return _this.setErrors(res, { emitEvent: emitEvent });
        });
      }
    };
    AbstractControl.prototype._cancelExistingSubscription = function () {
      if (lang_1.isPresent(this._asyncValidationSubscription)) {
        async_1.ObservableWrapper.dispose(this._asyncValidationSubscription);
      }
    };
    AbstractControl.prototype.setErrors = function (errors, _a) {
      var emitEvent = (_a === void 0 ? {} : _a).emitEvent;
      emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;
      this._errors = errors;
      this._status = this._calculateStatus();
      if (emitEvent) {
        async_1.ObservableWrapper.callEmit(this._statusChanges, this._status);
      }
      if (lang_1.isPresent(this._parent)) {
        this._parent._updateControlsErrors();
      }
    };
    AbstractControl.prototype.find = function (path) {
      return _find(this, path);
    };
    AbstractControl.prototype.getError = function (errorCode, path) {
      if (path === void 0) {
        path = null;
      }
      var control = lang_1.isPresent(path) && !collection_1.ListWrapper.isEmpty(path) ? this.find(path) : this;
      if (lang_1.isPresent(control) && lang_1.isPresent(control._errors)) {
        return collection_1.StringMapWrapper.get(control._errors, errorCode);
      } else {
        return null;
      }
    };
    AbstractControl.prototype.hasError = function (errorCode, path) {
      if (path === void 0) {
        path = null;
      }
      return lang_1.isPresent(this.getError(errorCode, path));
    };
    Object.defineProperty(AbstractControl.prototype, "root", {
      get: function () {
        var x = this;
        while (lang_1.isPresent(x._parent)) {
          x = x._parent;
        }
        return x;
      },
      enumerable: true,
      configurable: true
    });
    AbstractControl.prototype._updateControlsErrors = function () {
      this._status = this._calculateStatus();
      if (lang_1.isPresent(this._parent)) {
        this._parent._updateControlsErrors();
      }
    };
    AbstractControl.prototype._initObservables = function () {
      this._valueChanges = new async_1.EventEmitter();
      this._statusChanges = new async_1.EventEmitter();
    };
    AbstractControl.prototype._calculateStatus = function () {
      if (lang_1.isPresent(this._errors)) return exports.INVALID;
      if (this._anyControlsHaveStatus(exports.PENDING)) return exports.PENDING;
      if (this._anyControlsHaveStatus(exports.INVALID)) return exports.INVALID;
      return exports.VALID;
    };
    return AbstractControl;
  }();
  exports.AbstractControl = AbstractControl;
  var Control = function (_super) {
    __extends(Control, _super);
    function Control(value, validator, asyncValidator) {
      if (value === void 0) {
        value = null;
      }
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      _super.call(this, validator, asyncValidator);
      this._value = value;
      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: false
      });
      this._initObservables();
    }
    Control.prototype.updateValue = function (value, _a) {
      var _b = _a === void 0 ? {} : _a,
          onlySelf = _b.onlySelf,
          emitEvent = _b.emitEvent,
          emitModelToViewChange = _b.emitModelToViewChange;
      emitModelToViewChange = lang_1.isPresent(emitModelToViewChange) ? emitModelToViewChange : true;
      this._value = value;
      if (lang_1.isPresent(this._onChange) && emitModelToViewChange) this._onChange(this._value);
      this.updateValueAndValidity({
        onlySelf: onlySelf,
        emitEvent: emitEvent
      });
    };
    Control.prototype._updateValue = function () {};
    Control.prototype._anyControlsHaveStatus = function (status) {
      return false;
    };
    Control.prototype.registerOnChange = function (fn) {
      this._onChange = fn;
    };
    return Control;
  }(AbstractControl);
  exports.Control = Control;
  var ControlGroup = function (_super) {
    __extends(ControlGroup, _super);
    function ControlGroup(controls, optionals, validator, asyncValidator) {
      if (optionals === void 0) {
        optionals = null;
      }
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      _super.call(this, validator, asyncValidator);
      this.controls = controls;
      this._optionals = lang_1.isPresent(optionals) ? optionals : {};
      this._initObservables();
      this._setParentForControls();
      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: false
      });
    }
    ControlGroup.prototype.addControl = function (name, control) {
      this.controls[name] = control;
      control.setParent(this);
    };
    ControlGroup.prototype.removeControl = function (name) {
      collection_1.StringMapWrapper.delete(this.controls, name);
    };
    ControlGroup.prototype.include = function (controlName) {
      collection_1.StringMapWrapper.set(this._optionals, controlName, true);
      this.updateValueAndValidity();
    };
    ControlGroup.prototype.exclude = function (controlName) {
      collection_1.StringMapWrapper.set(this._optionals, controlName, false);
      this.updateValueAndValidity();
    };
    ControlGroup.prototype.contains = function (controlName) {
      var c = collection_1.StringMapWrapper.contains(this.controls, controlName);
      return c && this._included(controlName);
    };
    ControlGroup.prototype._setParentForControls = function () {
      var _this = this;
      collection_1.StringMapWrapper.forEach(this.controls, function (control, name) {
        control.setParent(_this);
      });
    };
    ControlGroup.prototype._updateValue = function () {
      this._value = this._reduceValue();
    };
    ControlGroup.prototype._anyControlsHaveStatus = function (status) {
      var _this = this;
      var res = false;
      collection_1.StringMapWrapper.forEach(this.controls, function (control, name) {
        res = res || _this.contains(name) && control.status == status;
      });
      return res;
    };
    ControlGroup.prototype._reduceValue = function () {
      return this._reduceChildren({}, function (acc, control, name) {
        acc[name] = control.value;
        return acc;
      });
    };
    ControlGroup.prototype._reduceChildren = function (initValue, fn) {
      var _this = this;
      var res = initValue;
      collection_1.StringMapWrapper.forEach(this.controls, function (control, name) {
        if (_this._included(name)) {
          res = fn(res, control, name);
        }
      });
      return res;
    };
    ControlGroup.prototype._included = function (controlName) {
      var isOptional = collection_1.StringMapWrapper.contains(this._optionals, controlName);
      return !isOptional || collection_1.StringMapWrapper.get(this._optionals, controlName);
    };
    return ControlGroup;
  }(AbstractControl);
  exports.ControlGroup = ControlGroup;
  var ControlArray = function (_super) {
    __extends(ControlArray, _super);
    function ControlArray(controls, validator, asyncValidator) {
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      _super.call(this, validator, asyncValidator);
      this.controls = controls;
      this._initObservables();
      this._setParentForControls();
      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: false
      });
    }
    ControlArray.prototype.at = function (index) {
      return this.controls[index];
    };
    ControlArray.prototype.push = function (control) {
      this.controls.push(control);
      control.setParent(this);
      this.updateValueAndValidity();
    };
    ControlArray.prototype.insert = function (index, control) {
      collection_1.ListWrapper.insert(this.controls, index, control);
      control.setParent(this);
      this.updateValueAndValidity();
    };
    ControlArray.prototype.removeAt = function (index) {
      collection_1.ListWrapper.removeAt(this.controls, index);
      this.updateValueAndValidity();
    };
    Object.defineProperty(ControlArray.prototype, "length", {
      get: function () {
        return this.controls.length;
      },
      enumerable: true,
      configurable: true
    });
    ControlArray.prototype._updateValue = function () {
      this._value = this.controls.map(function (control) {
        return control.value;
      });
    };
    ControlArray.prototype._anyControlsHaveStatus = function (status) {
      return this.controls.some(function (c) {
        return c.status == status;
      });
    };
    ControlArray.prototype._setParentForControls = function () {
      var _this = this;
      this.controls.forEach(function (control) {
        control.setParent(_this);
      });
    };
    return ControlArray;
  }(AbstractControl);
  exports.ControlArray = ControlArray;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/form_builder.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/model.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var modelModule = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/model.js');
  var FormBuilder = function () {
    function FormBuilder() {}
    FormBuilder.prototype.group = function (controlsConfig, extra) {
      if (extra === void 0) {
        extra = null;
      }
      var controls = this._reduceControls(controlsConfig);
      var optionals = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, "optionals") : null;
      var validator = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, "validator") : null;
      var asyncValidator = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, "asyncValidator") : null;
      return new modelModule.ControlGroup(controls, optionals, validator, asyncValidator);
    };
    FormBuilder.prototype.control = function (value, validator, asyncValidator) {
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      return new modelModule.Control(value, validator, asyncValidator);
    };
    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {
      var _this = this;
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      var controls = controlsConfig.map(function (c) {
        return _this._createControl(c);
      });
      return new modelModule.ControlArray(controls, validator, asyncValidator);
    };
    FormBuilder.prototype._reduceControls = function (controlsConfig) {
      var _this = this;
      var controls = {};
      collection_1.StringMapWrapper.forEach(controlsConfig, function (controlConfig, controlName) {
        controls[controlName] = _this._createControl(controlConfig);
      });
      return controls;
    };
    FormBuilder.prototype._createControl = function (controlConfig) {
      if (controlConfig instanceof modelModule.Control || controlConfig instanceof modelModule.ControlGroup || controlConfig instanceof modelModule.ControlArray) {
        return controlConfig;
      } else if (lang_1.isArray(controlConfig)) {
        var value = controlConfig[0];
        var validator = controlConfig.length > 1 ? controlConfig[1] : null;
        var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;
        return this.control(value, validator, asyncValidator);
      } else {
        return this.control(controlConfig);
      }
    };
    FormBuilder.decorators = [{ type: core_1.Injectable }];
    return FormBuilder;
  }();
  exports.FormBuilder = FormBuilder;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js", ["npm:@angular/core@2.0.0-rc.1.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require("npm:@angular/core@2.0.0-rc.1.js");
  /**
   * Used to provide a {@link ControlValueAccessor} for form controls.
   *
   * See {@link DefaultValueAccessor} for how to implement one.
   */
  exports.NG_VALUE_ACCESSOR =
  /*@ts2dart_const*/new core_1.OpaqueToken("NgValueAccessor");
  

  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var AbstractControlDirective = function () {
    function AbstractControlDirective() {}
    Object.defineProperty(AbstractControlDirective.prototype, "control", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "value", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.value : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "valid", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.valid : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "errors", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.errors : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "pristine", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.pristine : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "dirty", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.dirty : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "touched", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.touched : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "untouched", {
      get: function () {
        return lang_1.isPresent(this.control) ? this.control.untouched : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "path", {
      get: function () {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    return AbstractControlDirective;
  }();
  exports.AbstractControlDirective = AbstractControlDirective;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var abstract_control_directive_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js');
  var NgControl = function (_super) {
    __extends(NgControl, _super);
    function NgControl() {
      _super.apply(this, arguments);
      this.name = null;
      this.valueAccessor = null;
    }
    Object.defineProperty(NgControl.prototype, "validator", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControl.prototype, "asyncValidator", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return NgControl;
  }(abstract_control_directive_1.AbstractControlDirective);
  exports.NgControl = NgControl;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  exports.RADIO_VALUE_ACCESSOR = {
    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () {
      return RadioControlValueAccessor;
    }),
    multi: true
  };
  var RadioControlRegistry = function () {
    function RadioControlRegistry() {
      this._accessors = [];
    }
    RadioControlRegistry.prototype.add = function (control, accessor) {
      this._accessors.push([control, accessor]);
    };
    RadioControlRegistry.prototype.remove = function (accessor) {
      var indexToRemove = -1;
      for (var i = 0; i < this._accessors.length; ++i) {
        if (this._accessors[i][1] === accessor) {
          indexToRemove = i;
        }
      }
      collection_1.ListWrapper.removeAt(this._accessors, indexToRemove);
    };
    RadioControlRegistry.prototype.select = function (accessor) {
      this._accessors.forEach(function (c) {
        if (c[0].control.root === accessor._control.control.root && c[1] !== accessor) {
          c[1].fireUncheck();
        }
      });
    };
    RadioControlRegistry.decorators = [{ type: core_1.Injectable }];
    return RadioControlRegistry;
  }();
  exports.RadioControlRegistry = RadioControlRegistry;
  var RadioButtonState = function () {
    function RadioButtonState(checked, value) {
      this.checked = checked;
      this.value = value;
    }
    return RadioButtonState;
  }();
  exports.RadioButtonState = RadioButtonState;
  var RadioControlValueAccessor = function () {
    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this._registry = _registry;
      this._injector = _injector;
      this.onChange = function () {};
      this.onTouched = function () {};
    }
    RadioControlValueAccessor.prototype.ngOnInit = function () {
      this._control = this._injector.get(ng_control_1.NgControl);
      this._registry.add(this._control, this);
    };
    RadioControlValueAccessor.prototype.ngOnDestroy = function () {
      this._registry.remove(this);
    };
    RadioControlValueAccessor.prototype.writeValue = function (value) {
      this._state = value;
      if (lang_1.isPresent(value) && value.checked) {
        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', true);
      }
    };
    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {
      var _this = this;
      this._fn = fn;
      this.onChange = function () {
        fn(new RadioButtonState(true, _this._state.value));
        _this._registry.select(_this);
      };
    };
    RadioControlValueAccessor.prototype.fireUncheck = function () {
      this._fn(new RadioButtonState(false, this._state.value));
    };
    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) {
      this.onTouched = fn;
    };
    RadioControlValueAccessor.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: 'input[type=radio][ngControl],input[type=radio][ngFormControl],input[type=radio][ngModel]',
        host: {
          '(change)': 'onChange()',
          '(blur)': 'onTouched()'
        },
        providers: [exports.RADIO_VALUE_ACCESSOR]
      }]
    }];
    RadioControlValueAccessor.ctorParameters = [{ type: core_1.Renderer }, { type: core_1.ElementRef }, { type: RadioControlRegistry }, { type: core_1.Injector }];
    RadioControlValueAccessor.propDecorators = { 'name': [{ type: core_1.Input }] };
    return RadioControlValueAccessor;
  }();
  exports.RadioControlValueAccessor = RadioControlValueAccessor;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/forms.js', ['npm:@angular/common@2.0.0-rc.1/src/forms/model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_name.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_control.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_group.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_model.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_status.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/validators.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/validators.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/form_builder.js', 'npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/model.js');
  exports.AbstractControl = model_1.AbstractControl;
  exports.Control = model_1.Control;
  exports.ControlGroup = model_1.ControlGroup;
  exports.ControlArray = model_1.ControlArray;
  var abstract_control_directive_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/abstract_control_directive.js');
  exports.AbstractControlDirective = abstract_control_directive_1.AbstractControlDirective;
  var control_container_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_container.js');
  exports.ControlContainer = control_container_1.ControlContainer;
  var ng_control_name_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_name.js');
  exports.NgControlName = ng_control_name_1.NgControlName;
  var ng_form_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_control.js');
  exports.NgFormControl = ng_form_control_1.NgFormControl;
  var ng_model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_model.js');
  exports.NgModel = ng_model_1.NgModel;
  var ng_control_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control.js');
  exports.NgControl = ng_control_1.NgControl;
  var ng_control_group_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_group.js');
  exports.NgControlGroup = ng_control_group_1.NgControlGroup;
  var ng_form_model_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form_model.js');
  exports.NgFormModel = ng_form_model_1.NgFormModel;
  var ng_form_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_form.js');
  exports.NgForm = ng_form_1.NgForm;
  var control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/control_value_accessor.js');
  exports.NG_VALUE_ACCESSOR = control_value_accessor_1.NG_VALUE_ACCESSOR;
  var default_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/default_value_accessor.js');
  exports.DefaultValueAccessor = default_value_accessor_1.DefaultValueAccessor;
  var ng_control_status_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/ng_control_status.js');
  exports.NgControlStatus = ng_control_status_1.NgControlStatus;
  var checkbox_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/checkbox_value_accessor.js');
  exports.CheckboxControlValueAccessor = checkbox_value_accessor_1.CheckboxControlValueAccessor;
  var select_control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/select_control_value_accessor.js');
  exports.NgSelectOption = select_control_value_accessor_1.NgSelectOption;
  exports.SelectControlValueAccessor = select_control_value_accessor_1.SelectControlValueAccessor;
  var directives_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives.js');
  exports.FORM_DIRECTIVES = directives_1.FORM_DIRECTIVES;
  exports.RadioButtonState = directives_1.RadioButtonState;
  var validators_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/validators.js');
  exports.NG_VALIDATORS = validators_1.NG_VALIDATORS;
  exports.NG_ASYNC_VALIDATORS = validators_1.NG_ASYNC_VALIDATORS;
  exports.Validators = validators_1.Validators;
  var validators_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/validators.js');
  exports.RequiredValidator = validators_2.RequiredValidator;
  exports.MinLengthValidator = validators_2.MinLengthValidator;
  exports.MaxLengthValidator = validators_2.MaxLengthValidator;
  exports.PatternValidator = validators_2.PatternValidator;
  var form_builder_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/form_builder.js');
  exports.FormBuilder = form_builder_1.FormBuilder;
  var form_builder_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/form_builder.js');
  var radio_control_value_accessor_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms/directives/radio_control_value_accessor.js');
  exports.FORM_PROVIDERS = [form_builder_2.FormBuilder, radio_control_value_accessor_1.RadioControlRegistry];
  exports.FORM_BINDINGS = exports.FORM_PROVIDERS;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/directives/observable_list_diff.js", [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  "use strict";
  

  var define,
      global = this || self,
      GLOBAL = global;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_class.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var NgClass = function () {
    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {
      this._iterableDiffers = _iterableDiffers;
      this._keyValueDiffers = _keyValueDiffers;
      this._ngEl = _ngEl;
      this._renderer = _renderer;
      this._initialClasses = [];
    }
    Object.defineProperty(NgClass.prototype, "initialClasses", {
      set: function (v) {
        this._applyInitialClasses(true);
        this._initialClasses = lang_1.isPresent(v) && lang_1.isString(v) ? v.split(' ') : [];
        this._applyInitialClasses(false);
        this._applyClasses(this._rawClass, false);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgClass.prototype, "rawClass", {
      set: function (v) {
        this._cleanupClasses(this._rawClass);
        if (lang_1.isString(v)) {
          v = v.split(' ');
        }
        this._rawClass = v;
        this._iterableDiffer = null;
        this._keyValueDiffer = null;
        if (lang_1.isPresent(v)) {
          if (collection_1.isListLikeIterable(v)) {
            this._iterableDiffer = this._iterableDiffers.find(v).create(null);
          } else {
            this._keyValueDiffer = this._keyValueDiffers.find(v).create(null);
          }
        }
      },
      enumerable: true,
      configurable: true
    });
    NgClass.prototype.ngDoCheck = function () {
      if (lang_1.isPresent(this._iterableDiffer)) {
        var changes = this._iterableDiffer.diff(this._rawClass);
        if (lang_1.isPresent(changes)) {
          this._applyIterableChanges(changes);
        }
      }
      if (lang_1.isPresent(this._keyValueDiffer)) {
        var changes = this._keyValueDiffer.diff(this._rawClass);
        if (lang_1.isPresent(changes)) {
          this._applyKeyValueChanges(changes);
        }
      }
    };
    NgClass.prototype.ngOnDestroy = function () {
      this._cleanupClasses(this._rawClass);
    };
    NgClass.prototype._cleanupClasses = function (rawClassVal) {
      this._applyClasses(rawClassVal, true);
      this._applyInitialClasses(false);
    };
    NgClass.prototype._applyKeyValueChanges = function (changes) {
      var _this = this;
      changes.forEachAddedItem(function (record) {
        _this._toggleClass(record.key, record.currentValue);
      });
      changes.forEachChangedItem(function (record) {
        _this._toggleClass(record.key, record.currentValue);
      });
      changes.forEachRemovedItem(function (record) {
        if (record.previousValue) {
          _this._toggleClass(record.key, false);
        }
      });
    };
    NgClass.prototype._applyIterableChanges = function (changes) {
      var _this = this;
      changes.forEachAddedItem(function (record) {
        _this._toggleClass(record.item, true);
      });
      changes.forEachRemovedItem(function (record) {
        _this._toggleClass(record.item, false);
      });
    };
    NgClass.prototype._applyInitialClasses = function (isCleanup) {
      var _this = this;
      this._initialClasses.forEach(function (className) {
        return _this._toggleClass(className, !isCleanup);
      });
    };
    NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {
      var _this = this;
      if (lang_1.isPresent(rawClassVal)) {
        if (lang_1.isArray(rawClassVal)) {
          rawClassVal.forEach(function (className) {
            return _this._toggleClass(className, !isCleanup);
          });
        } else if (rawClassVal instanceof Set) {
          rawClassVal.forEach(function (className) {
            return _this._toggleClass(className, !isCleanup);
          });
        } else {
          collection_1.StringMapWrapper.forEach(rawClassVal, function (expVal, className) {
            if (lang_1.isPresent(expVal)) _this._toggleClass(className, !isCleanup);
          });
        }
      }
    };
    NgClass.prototype._toggleClass = function (className, enabled) {
      className = className.trim();
      if (className.length > 0) {
        if (className.indexOf(' ') > -1) {
          var classes = className.split(/\s+/g);
          for (var i = 0, len = classes.length; i < len; i++) {
            this._renderer.setElementClass(this._ngEl.nativeElement, classes[i], enabled);
          }
        } else {
          this._renderer.setElementClass(this._ngEl.nativeElement, className, enabled);
        }
      }
    };
    NgClass.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngClass]',
        inputs: ['rawClass: ngClass', 'initialClasses: class']
      }]
    }];
    NgClass.ctorParameters = [{ type: core_1.IterableDiffers }, { type: core_1.KeyValueDiffers }, { type: core_1.ElementRef }, { type: core_1.Renderer }];
    return NgClass;
  }();
  exports.NgClass = NgClass;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_for.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var NgForRow = function () {
    function NgForRow($implicit, index, count) {
      this.$implicit = $implicit;
      this.index = index;
      this.count = count;
    }
    Object.defineProperty(NgForRow.prototype, "first", {
      get: function () {
        return this.index === 0;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForRow.prototype, "last", {
      get: function () {
        return this.index === this.count - 1;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForRow.prototype, "even", {
      get: function () {
        return this.index % 2 === 0;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForRow.prototype, "odd", {
      get: function () {
        return !this.even;
      },
      enumerable: true,
      configurable: true
    });
    return NgForRow;
  }();
  exports.NgForRow = NgForRow;
  var NgFor = function () {
    function NgFor(_viewContainer, _templateRef, _iterableDiffers, _cdr) {
      this._viewContainer = _viewContainer;
      this._templateRef = _templateRef;
      this._iterableDiffers = _iterableDiffers;
      this._cdr = _cdr;
    }
    Object.defineProperty(NgFor.prototype, "ngForOf", {
      set: function (value) {
        this._ngForOf = value;
        if (lang_1.isBlank(this._differ) && lang_1.isPresent(value)) {
          try {
            this._differ = this._iterableDiffers.find(value).create(this._cdr, this._ngForTrackBy);
          } catch (e) {
            throw new exceptions_1.BaseException("Cannot find a differ supporting object '" + value + "' of type '" + lang_1.getTypeNameForDebugging(value) + "'. NgFor only supports binding to Iterables such as Arrays.");
          }
        }
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFor.prototype, "ngForTemplate", {
      set: function (value) {
        if (lang_1.isPresent(value)) {
          this._templateRef = value;
        }
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFor.prototype, "ngForTrackBy", {
      set: function (value) {
        this._ngForTrackBy = value;
      },
      enumerable: true,
      configurable: true
    });
    NgFor.prototype.ngDoCheck = function () {
      if (lang_1.isPresent(this._differ)) {
        var changes = this._differ.diff(this._ngForOf);
        if (lang_1.isPresent(changes)) this._applyChanges(changes);
      }
    };
    NgFor.prototype._applyChanges = function (changes) {
      var _this = this;
      var recordViewTuples = [];
      changes.forEachRemovedItem(function (removedRecord) {
        return recordViewTuples.push(new RecordViewTuple(removedRecord, null));
      });
      changes.forEachMovedItem(function (movedRecord) {
        return recordViewTuples.push(new RecordViewTuple(movedRecord, null));
      });
      var insertTuples = this._bulkRemove(recordViewTuples);
      changes.forEachAddedItem(function (addedRecord) {
        return insertTuples.push(new RecordViewTuple(addedRecord, null));
      });
      this._bulkInsert(insertTuples);
      for (var i = 0; i < insertTuples.length; i++) {
        this._perViewChange(insertTuples[i].view, insertTuples[i].record);
      }
      for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {
        var viewRef = this._viewContainer.get(i);
        viewRef.context.index = i;
        viewRef.context.count = ilen;
      }
      changes.forEachIdentityChange(function (record) {
        var viewRef = _this._viewContainer.get(record.currentIndex);
        viewRef.context.$implicit = record.item;
      });
    };
    NgFor.prototype._perViewChange = function (view, record) {
      view.context.$implicit = record.item;
    };
    NgFor.prototype._bulkRemove = function (tuples) {
      tuples.sort(function (a, b) {
        return a.record.previousIndex - b.record.previousIndex;
      });
      var movedTuples = [];
      for (var i = tuples.length - 1; i >= 0; i--) {
        var tuple = tuples[i];
        if (lang_1.isPresent(tuple.record.currentIndex)) {
          tuple.view = this._viewContainer.detach(tuple.record.previousIndex);
          movedTuples.push(tuple);
        } else {
          this._viewContainer.remove(tuple.record.previousIndex);
        }
      }
      return movedTuples;
    };
    NgFor.prototype._bulkInsert = function (tuples) {
      tuples.sort(function (a, b) {
        return a.record.currentIndex - b.record.currentIndex;
      });
      for (var i = 0; i < tuples.length; i++) {
        var tuple = tuples[i];
        if (lang_1.isPresent(tuple.view)) {
          this._viewContainer.insert(tuple.view, tuple.record.currentIndex);
        } else {
          tuple.view = this._viewContainer.createEmbeddedView(this._templateRef, new NgForRow(null, null, null), tuple.record.currentIndex);
        }
      }
      return tuples;
    };
    NgFor.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngFor][ngForOf]',
        inputs: ['ngForTrackBy', 'ngForOf', 'ngForTemplate']
      }]
    }];
    NgFor.ctorParameters = [{ type: core_1.ViewContainerRef }, { type: core_1.TemplateRef }, { type: core_1.IterableDiffers }, { type: core_1.ChangeDetectorRef }];
    return NgFor;
  }();
  exports.NgFor = NgFor;
  var RecordViewTuple = function () {
    function RecordViewTuple(record, view) {
      this.record = record;
      this.view = view;
    }
    return RecordViewTuple;
  }();
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_if.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var NgIf = function () {
    function NgIf(_viewContainer, _templateRef) {
      this._viewContainer = _viewContainer;
      this._templateRef = _templateRef;
      this._prevCondition = null;
    }
    Object.defineProperty(NgIf.prototype, "ngIf", {
      set: function (newCondition) {
        if (newCondition && (lang_1.isBlank(this._prevCondition) || !this._prevCondition)) {
          this._prevCondition = true;
          this._viewContainer.createEmbeddedView(this._templateRef);
        } else if (!newCondition && (lang_1.isBlank(this._prevCondition) || this._prevCondition)) {
          this._prevCondition = false;
          this._viewContainer.clear();
        }
      },
      enumerable: true,
      configurable: true
    });
    NgIf.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngIf]',
        inputs: ['ngIf']
      }]
    }];
    NgIf.ctorParameters = [{ type: core_1.ViewContainerRef }, { type: core_1.TemplateRef }];
    return NgIf;
  }();
  exports.NgIf = NgIf;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_template_outlet.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var NgTemplateOutlet = function () {
    function NgTemplateOutlet(_viewContainerRef) {
      this._viewContainerRef = _viewContainerRef;
    }
    Object.defineProperty(NgTemplateOutlet.prototype, "ngTemplateOutlet", {
      set: function (templateRef) {
        if (lang_1.isPresent(this._insertedViewRef)) {
          this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._insertedViewRef));
        }
        if (lang_1.isPresent(templateRef)) {
          this._insertedViewRef = this._viewContainerRef.createEmbeddedView(templateRef);
        }
      },
      enumerable: true,
      configurable: true
    });
    NgTemplateOutlet.decorators = [{
      type: core_1.Directive,
      args: [{ selector: '[ngTemplateOutlet]' }]
    }];
    NgTemplateOutlet.ctorParameters = [{ type: core_1.ViewContainerRef }];
    NgTemplateOutlet.propDecorators = { 'ngTemplateOutlet': [{ type: core_1.Input }] };
    return NgTemplateOutlet;
  }();
  exports.NgTemplateOutlet = NgTemplateOutlet;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_style.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var NgStyle = function () {
    function NgStyle(_differs, _ngEl, _renderer) {
      this._differs = _differs;
      this._ngEl = _ngEl;
      this._renderer = _renderer;
    }
    Object.defineProperty(NgStyle.prototype, "rawStyle", {
      set: function (v) {
        this._rawStyle = v;
        if (lang_1.isBlank(this._differ) && lang_1.isPresent(v)) {
          this._differ = this._differs.find(this._rawStyle).create(null);
        }
      },
      enumerable: true,
      configurable: true
    });
    NgStyle.prototype.ngDoCheck = function () {
      if (lang_1.isPresent(this._differ)) {
        var changes = this._differ.diff(this._rawStyle);
        if (lang_1.isPresent(changes)) {
          this._applyChanges(changes);
        }
      }
    };
    NgStyle.prototype._applyChanges = function (changes) {
      var _this = this;
      changes.forEachAddedItem(function (record) {
        _this._setStyle(record.key, record.currentValue);
      });
      changes.forEachChangedItem(function (record) {
        _this._setStyle(record.key, record.currentValue);
      });
      changes.forEachRemovedItem(function (record) {
        _this._setStyle(record.key, null);
      });
    };
    NgStyle.prototype._setStyle = function (name, val) {
      this._renderer.setElementStyle(this._ngEl.nativeElement, name, val);
    };
    NgStyle.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngStyle]',
        inputs: ['rawStyle: ngStyle']
      }]
    }];
    NgStyle.ctorParameters = [{ type: core_1.KeyValueDiffers }, { type: core_1.ElementRef }, { type: core_1.Renderer }];
    return NgStyle;
  }();
  exports.NgStyle = NgStyle;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var _WHEN_DEFAULT = new Object();
  var SwitchView = function () {
    function SwitchView(_viewContainerRef, _templateRef) {
      this._viewContainerRef = _viewContainerRef;
      this._templateRef = _templateRef;
    }
    SwitchView.prototype.create = function () {
      this._viewContainerRef.createEmbeddedView(this._templateRef);
    };
    SwitchView.prototype.destroy = function () {
      this._viewContainerRef.clear();
    };
    return SwitchView;
  }();
  exports.SwitchView = SwitchView;
  var NgSwitch = function () {
    function NgSwitch() {
      this._useDefault = false;
      this._valueViews = new collection_1.Map();
      this._activeViews = [];
    }
    Object.defineProperty(NgSwitch.prototype, "ngSwitch", {
      set: function (value) {
        this._emptyAllActiveViews();
        this._useDefault = false;
        var views = this._valueViews.get(value);
        if (lang_1.isBlank(views)) {
          this._useDefault = true;
          views = lang_1.normalizeBlank(this._valueViews.get(_WHEN_DEFAULT));
        }
        this._activateViews(views);
        this._switchValue = value;
      },
      enumerable: true,
      configurable: true
    });
    NgSwitch.prototype._onWhenValueChanged = function (oldWhen, newWhen, view) {
      this._deregisterView(oldWhen, view);
      this._registerView(newWhen, view);
      if (oldWhen === this._switchValue) {
        view.destroy();
        collection_1.ListWrapper.remove(this._activeViews, view);
      } else if (newWhen === this._switchValue) {
        if (this._useDefault) {
          this._useDefault = false;
          this._emptyAllActiveViews();
        }
        view.create();
        this._activeViews.push(view);
      }
      if (this._activeViews.length === 0 && !this._useDefault) {
        this._useDefault = true;
        this._activateViews(this._valueViews.get(_WHEN_DEFAULT));
      }
    };
    NgSwitch.prototype._emptyAllActiveViews = function () {
      var activeContainers = this._activeViews;
      for (var i = 0; i < activeContainers.length; i++) {
        activeContainers[i].destroy();
      }
      this._activeViews = [];
    };
    NgSwitch.prototype._activateViews = function (views) {
      if (lang_1.isPresent(views)) {
        for (var i = 0; i < views.length; i++) {
          views[i].create();
        }
        this._activeViews = views;
      }
    };
    NgSwitch.prototype._registerView = function (value, view) {
      var views = this._valueViews.get(value);
      if (lang_1.isBlank(views)) {
        views = [];
        this._valueViews.set(value, views);
      }
      views.push(view);
    };
    NgSwitch.prototype._deregisterView = function (value, view) {
      if (value === _WHEN_DEFAULT) return;
      var views = this._valueViews.get(value);
      if (views.length == 1) {
        this._valueViews.delete(value);
      } else {
        collection_1.ListWrapper.remove(views, view);
      }
    };
    NgSwitch.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngSwitch]',
        inputs: ['ngSwitch']
      }]
    }];
    return NgSwitch;
  }();
  exports.NgSwitch = NgSwitch;
  var NgSwitchWhen = function () {
    function NgSwitchWhen(viewContainer, templateRef, ngSwitch) {
      this._value = _WHEN_DEFAULT;
      this._switch = ngSwitch;
      this._view = new SwitchView(viewContainer, templateRef);
    }
    Object.defineProperty(NgSwitchWhen.prototype, "ngSwitchWhen", {
      set: function (value) {
        this._switch._onWhenValueChanged(this._value, value, this._view);
        this._value = value;
      },
      enumerable: true,
      configurable: true
    });
    NgSwitchWhen.decorators = [{
      type: core_1.Directive,
      args: [{
        selector: '[ngSwitchWhen]',
        inputs: ['ngSwitchWhen']
      }]
    }];
    NgSwitchWhen.ctorParameters = [{ type: core_1.ViewContainerRef }, { type: core_1.TemplateRef }, {
      type: NgSwitch,
      decorators: [{ type: core_1.Host }]
    }];
    return NgSwitchWhen;
  }();
  exports.NgSwitchWhen = NgSwitchWhen;
  var NgSwitchDefault = function () {
    function NgSwitchDefault(viewContainer, templateRef, sswitch) {
      sswitch._registerView(_WHEN_DEFAULT, new SwitchView(viewContainer, templateRef));
    }
    NgSwitchDefault.decorators = [{
      type: core_1.Directive,
      args: [{ selector: '[ngSwitchDefault]' }]
    }];
    NgSwitchDefault.ctorParameters = [{ type: core_1.ViewContainerRef }, { type: core_1.TemplateRef }, {
      type: NgSwitch,
      decorators: [{ type: core_1.Host }]
    }];
    return NgSwitchDefault;
  }();
  exports.NgSwitchDefault = NgSwitchDefault;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/ng_plural.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var ng_switch_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js');
  var _CATEGORY_DEFAULT = 'other';
  var NgLocalization = function () {
    function NgLocalization() {}
    return NgLocalization;
  }();
  exports.NgLocalization = NgLocalization;
  var NgPluralCase = function () {
    function NgPluralCase(value, template, viewContainer) {
      this.value = value;
      this._view = new ng_switch_1.SwitchView(viewContainer, template);
    }
    NgPluralCase.decorators = [{
      type: core_1.Directive,
      args: [{ selector: '[ngPluralCase]' }]
    }];
    NgPluralCase.ctorParameters = [{
      type: undefined,
      decorators: [{
        type: core_1.Attribute,
        args: ['ngPluralCase']
      }]
    }, { type: core_1.TemplateRef }, { type: core_1.ViewContainerRef }];
    return NgPluralCase;
  }();
  exports.NgPluralCase = NgPluralCase;
  var NgPlural = function () {
    function NgPlural(_localization) {
      this._localization = _localization;
      this._caseViews = new collection_1.Map();
      this.cases = null;
    }
    Object.defineProperty(NgPlural.prototype, "ngPlural", {
      set: function (value) {
        this._switchValue = value;
        this._updateView();
      },
      enumerable: true,
      configurable: true
    });
    NgPlural.prototype.ngAfterContentInit = function () {
      var _this = this;
      this.cases.forEach(function (pluralCase) {
        _this._caseViews.set(_this._formatValue(pluralCase), pluralCase._view);
      });
      this._updateView();
    };
    NgPlural.prototype._updateView = function () {
      this._clearViews();
      var view = this._caseViews.get(this._switchValue);
      if (!lang_1.isPresent(view)) view = this._getCategoryView(this._switchValue);
      this._activateView(view);
    };
    NgPlural.prototype._clearViews = function () {
      if (lang_1.isPresent(this._activeView)) this._activeView.destroy();
    };
    NgPlural.prototype._activateView = function (view) {
      if (!lang_1.isPresent(view)) return;
      this._activeView = view;
      this._activeView.create();
    };
    NgPlural.prototype._getCategoryView = function (value) {
      var category = this._localization.getPluralCategory(value);
      var categoryView = this._caseViews.get(category);
      return lang_1.isPresent(categoryView) ? categoryView : this._caseViews.get(_CATEGORY_DEFAULT);
    };
    NgPlural.prototype._isValueView = function (pluralCase) {
      return pluralCase.value[0] === "=";
    };
    NgPlural.prototype._formatValue = function (pluralCase) {
      return this._isValueView(pluralCase) ? this._stripValue(pluralCase.value) : pluralCase.value;
    };
    NgPlural.prototype._stripValue = function (value) {
      return lang_1.NumberWrapper.parseInt(value.substring(1), 10);
    };
    NgPlural.decorators = [{
      type: core_1.Directive,
      args: [{ selector: '[ngPlural]' }]
    }];
    NgPlural.ctorParameters = [{ type: NgLocalization }];
    NgPlural.propDecorators = {
      'cases': [{
        type: core_1.ContentChildren,
        args: [NgPluralCase]
      }],
      'ngPlural': [{ type: core_1.Input }]
    };
    return NgPlural;
  }();
  exports.NgPlural = NgPlural;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives/core_directives.js', ['npm:@angular/common@2.0.0-rc.1/src/directives/ng_class.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_for.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_if.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_template_outlet.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_style.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_plural.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var ng_class_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_class.js');
  var ng_for_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_for.js');
  var ng_if_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_if.js');
  var ng_template_outlet_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_template_outlet.js');
  var ng_style_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_style.js');
  var ng_switch_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js');
  var ng_plural_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_plural.js');
  exports.CORE_DIRECTIVES = [ng_class_1.NgClass, ng_for_1.NgFor, ng_if_1.NgIf, ng_template_outlet_1.NgTemplateOutlet, ng_style_1.NgStyle, ng_switch_1.NgSwitch, ng_switch_1.NgSwitchWhen, ng_switch_1.NgSwitchDefault, ng_plural_1.NgPlural, ng_plural_1.NgPluralCase];
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/directives.js', ['npm:@angular/common@2.0.0-rc.1/src/directives/ng_class.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_for.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_if.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_template_outlet.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_style.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/ng_plural.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/observable_list_diff.js', 'npm:@angular/common@2.0.0-rc.1/src/directives/core_directives.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  var ng_class_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_class.js');
  exports.NgClass = ng_class_1.NgClass;
  var ng_for_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_for.js');
  exports.NgFor = ng_for_1.NgFor;
  var ng_if_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_if.js');
  exports.NgIf = ng_if_1.NgIf;
  var ng_template_outlet_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_template_outlet.js');
  exports.NgTemplateOutlet = ng_template_outlet_1.NgTemplateOutlet;
  var ng_style_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_style.js');
  exports.NgStyle = ng_style_1.NgStyle;
  var ng_switch_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_switch.js');
  exports.NgSwitch = ng_switch_1.NgSwitch;
  exports.NgSwitchWhen = ng_switch_1.NgSwitchWhen;
  exports.NgSwitchDefault = ng_switch_1.NgSwitchDefault;
  var ng_plural_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/ng_plural.js');
  exports.NgPlural = ng_plural_1.NgPlural;
  exports.NgPluralCase = ng_plural_1.NgPluralCase;
  exports.NgLocalization = ng_plural_1.NgLocalization;
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/directives/observable_list_diff.js'));
  var core_directives_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives/core_directives.js');
  exports.CORE_DIRECTIVES = core_directives_1.CORE_DIRECTIVES;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/common_directives.js', ['npm:@angular/common@2.0.0-rc.1/src/forms.js', 'npm:@angular/common@2.0.0-rc.1/src/directives.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var forms_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/forms.js');
  var directives_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/directives.js');
  exports.COMMON_DIRECTIVES = [directives_1.CORE_DIRECTIVES, forms_1.FORM_DIRECTIVES];
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/location/hash_location_strategy.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location.js', 'npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var location_strategy_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js');
  var location_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/location.js');
  var platform_location_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js');
  var HashLocationStrategy = function (_super) {
    __extends(HashLocationStrategy, _super);
    function HashLocationStrategy(_platformLocation, _baseHref) {
      _super.call(this);
      this._platformLocation = _platformLocation;
      this._baseHref = '';
      if (lang_1.isPresent(_baseHref)) {
        this._baseHref = _baseHref;
      }
    }
    HashLocationStrategy.prototype.onPopState = function (fn) {
      this._platformLocation.onPopState(fn);
      this._platformLocation.onHashChange(fn);
    };
    HashLocationStrategy.prototype.getBaseHref = function () {
      return this._baseHref;
    };
    HashLocationStrategy.prototype.path = function () {
      var path = this._platformLocation.hash;
      if (!lang_1.isPresent(path)) path = '#';
      return path.length > 0 ? path.substring(1) : path;
    };
    HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {
      var url = location_1.Location.joinWithSlash(this._baseHref, internal);
      return url.length > 0 ? '#' + url : url;
    };
    HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {
      var url = this.prepareExternalUrl(path + location_1.Location.normalizeQueryParams(queryParams));
      if (url.length == 0) {
        url = this._platformLocation.pathname;
      }
      this._platformLocation.pushState(state, title, url);
    };
    HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {
      var url = this.prepareExternalUrl(path + location_1.Location.normalizeQueryParams(queryParams));
      if (url.length == 0) {
        url = this._platformLocation.pathname;
      }
      this._platformLocation.replaceState(state, title, url);
    };
    HashLocationStrategy.prototype.forward = function () {
      this._platformLocation.forward();
    };
    HashLocationStrategy.prototype.back = function () {
      this._platformLocation.back();
    };
    HashLocationStrategy.decorators = [{ type: core_1.Injectable }];
    HashLocationStrategy.ctorParameters = [{ type: platform_location_1.PlatformLocation }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, {
        type: core_1.Inject,
        args: [location_strategy_1.APP_BASE_HREF]
      }]
    }];
    return HashLocationStrategy;
  }(location_strategy_1.LocationStrategy);
  exports.HashLocationStrategy = HashLocationStrategy;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/facade/base_wrapped_exception.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
    * A base class for the WrappedException that can be used to identify
    * a WrappedException from ExceptionHandler without adding circular
    * dependency.
    */
    var BaseWrappedException = function (_super) {
        __extends(BaseWrappedException, _super);
        function BaseWrappedException(message) {
            _super.call(this, message);
        }
        Object.defineProperty(BaseWrappedException.prototype, "wrapperMessage", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "wrapperStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalException", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "context", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "message", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        return BaseWrappedException;
    }(Error);
    exports.BaseWrappedException = BaseWrappedException;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/facade/collection.js", ["npm:@angular/common@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/common@2.0.0-rc.1/src/facade/lang.js");
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = function () {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  }();
  var createMapFromMap = function () {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function (v, k) {
        map.set(k, v);
      });
      return map;
    };
  }();
  var _clearValues = function () {
    if (new exports.Map().keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!(k = keyIterator.next()).done) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function (v, k) {
          m.set(k, null);
        });
      };
    }
  }();
  var _arrayFromMap = function () {
    try {
      if (new exports.Map().values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function (v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  }();
  var MapWrapper = function () {
    function MapWrapper() {}
    MapWrapper.clone = function (m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function (stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function (m) {
      var r = {};
      m.forEach(function (v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function (pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function (m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function (m) {
      return m;
    };
    MapWrapper.keys = function (m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function (m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  }();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = function () {
    function StringMapWrapper() {}
    StringMapWrapper.create = function () {
      return {};
    };
    StringMapWrapper.contains = function (map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function (map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function (map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function (map) {
      return Object.keys(map);
    };
    StringMapWrapper.values = function (map) {
      return Object.keys(map).reduce(function (r, a) {
        r.push(map[a]);
        return r;
      }, []);
    };
    StringMapWrapper.isEmpty = function (map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function (map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function (map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function (m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function (m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  }();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = function () {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function (size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function (size) {
      return new Array(size);
    };
    ListWrapper.clone = function (array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function (array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function (array) {
      if (!array) return null;
      return array[0];
    };
    ListWrapper.last = function (array) {
      if (!array || array.length == 0) return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function (array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function (list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function (array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function (a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function (list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function (list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function (list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function (list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function (list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function (list) {
      return list.length == 0;
    };
    ListWrapper.fill = function (list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function (a, b) {
      if (a.length != b.length) return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    };
    ListWrapper.slice = function (l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function (l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function (l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function (l) {
      return l.toString();
    };
    ListWrapper.toJSON = function (l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function (list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    ListWrapper.flatten = function (list) {
      var target = [];
      _flattenArray(list, target);
      return target;
    };
    ListWrapper.addAll = function (list, source) {
      for (var i = 0; i < source.length; i++) {
        list.push(source[i]);
      }
    };
    return ListWrapper;
  }();
  exports.ListWrapper = ListWrapper;
  function _flattenArray(source, target) {
    if (lang_1.isPresent(source)) {
      for (var i = 0; i < source.length; i++) {
        var item = source[i];
        if (lang_1.isArray(item)) {
          _flattenArray(item, target);
        } else {
          target.push(item);
        }
      }
    }
    return target;
  }
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj)) return false;
    return lang_1.isArray(obj) || !(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj;
  }
  exports.isListLikeIterable = isListLikeIterable;
  function areIterablesEqual(a, b, comparator) {
    var iterator1 = a[lang_1.getSymbolIterator()]();
    var iterator2 = b[lang_1.getSymbolIterator()]();
    while (true) {
      var item1 = iterator1.next();
      var item2 = iterator2.next();
      if (item1.done && item2.done) return true;
      if (item1.done || item2.done) return false;
      if (!comparator(item1.value, item2.value)) return false;
    }
  }
  exports.areIterablesEqual = areIterablesEqual;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!(item = iterator.next()).done) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = function () {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  }();
  var SetWrapper = function () {
    function SetWrapper() {}
    SetWrapper.createFromList = function (lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function (s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function (m, k) {
      m.delete(k);
    };
    return SetWrapper;
  }();
  exports.SetWrapper = SetWrapper;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/facade/exception_handler.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var base_wrapped_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var collection_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/collection.js');
  var _ArrayLogger = function () {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function () {};
    ;
    return _ArrayLogger;
  }();
  var ExceptionHandler = function () {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException) throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function (exception) {
      return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function (exception) {
      try {
        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception.originalException;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  }();
  exports.ExceptionHandler = ExceptionHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exception_handler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var base_wrapped_exception_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var exception_handler_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exception_handler.js');
  var exception_handler_2 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exception_handler.js');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = function (_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = new Error(message).stack;
    }
    BaseException.prototype.toString = function () {
      return this.message;
    };
    return BaseException;
  }(Error);
  exports.BaseException = BaseException;
  var WrappedException = function (_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = new Error(_wrapperMessage).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function () {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function () {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function () {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function () {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function () {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function () {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function () {
      return this.message;
    };
    return WrappedException;
  }(base_wrapped_exception_1.BaseWrappedException);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * This class should not be used directly by an application developer. Instead, use
    * {@link Location}.
    *
    * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform
    * agnostic.
    * This means that we can have different implementation of `PlatformLocation` for the different
    * platforms
    * that angular supports. For example, the default `PlatformLocation` is {@link
    * BrowserPlatformLocation},
    * however when you run your app in a WebWorker you use {@link WebWorkerPlatformLocation}.
    *
    * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}
    * when
    * they need to interact with the DOM apis like pushState, popState, etc...
    *
    * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly
    * by
    * the {@link Router} in order to navigate between routes. Since all interactions between {@link
    * Router} /
    * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`
    * class
    * they are all platform independent.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    var PlatformLocation = function () {
        function PlatformLocation() {}
        Object.defineProperty(PlatformLocation.prototype, "pathname", {
            /* abstract */get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PlatformLocation.prototype, "search", {
            /* abstract */get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PlatformLocation.prototype, "hash", {
            /* abstract */get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        return PlatformLocation;
    }();
    exports.PlatformLocation = PlatformLocation;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/location/path_location_strategy.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/exceptions.js');
  var platform_location_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js');
  var location_strategy_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js');
  var location_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/location.js');
  var PathLocationStrategy = function (_super) {
    __extends(PathLocationStrategy, _super);
    function PathLocationStrategy(_platformLocation, href) {
      _super.call(this);
      this._platformLocation = _platformLocation;
      if (lang_1.isBlank(href)) {
        href = this._platformLocation.getBaseHrefFromDOM();
      }
      if (lang_1.isBlank(href)) {
        throw new exceptions_1.BaseException("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");
      }
      this._baseHref = href;
    }
    PathLocationStrategy.prototype.onPopState = function (fn) {
      this._platformLocation.onPopState(fn);
      this._platformLocation.onHashChange(fn);
    };
    PathLocationStrategy.prototype.getBaseHref = function () {
      return this._baseHref;
    };
    PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {
      return location_1.Location.joinWithSlash(this._baseHref, internal);
    };
    PathLocationStrategy.prototype.path = function () {
      return this._platformLocation.pathname + location_1.Location.normalizeQueryParams(this._platformLocation.search);
    };
    PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {
      var externalUrl = this.prepareExternalUrl(url + location_1.Location.normalizeQueryParams(queryParams));
      this._platformLocation.pushState(state, title, externalUrl);
    };
    PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {
      var externalUrl = this.prepareExternalUrl(url + location_1.Location.normalizeQueryParams(queryParams));
      this._platformLocation.replaceState(state, title, externalUrl);
    };
    PathLocationStrategy.prototype.forward = function () {
      this._platformLocation.forward();
    };
    PathLocationStrategy.prototype.back = function () {
      this._platformLocation.back();
    };
    PathLocationStrategy.decorators = [{ type: core_1.Injectable }];
    PathLocationStrategy.ctorParameters = [{ type: platform_location_1.PlatformLocation }, {
      type: undefined,
      decorators: [{ type: core_1.Optional }, {
        type: core_1.Inject,
        args: [location_strategy_1.APP_BASE_HREF]
      }]
    }];
    return PathLocationStrategy;
  }(location_strategy_1.LocationStrategy);
  exports.PathLocationStrategy = PathLocationStrategy;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1/src/facade/promise.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var PromiseCompleter = function () {
        function PromiseCompleter() {
            var _this = this;
            this.promise = new Promise(function (res, rej) {
                _this.resolve = res;
                _this.reject = rej;
            });
        }
        return PromiseCompleter;
    }();
    exports.PromiseCompleter = PromiseCompleter;
    var PromiseWrapper = function () {
        function PromiseWrapper() {}
        PromiseWrapper.resolve = function (obj) {
            return Promise.resolve(obj);
        };
        PromiseWrapper.reject = function (obj, _) {
            return Promise.reject(obj);
        };
        // Note: We can't rename this method into `catch`, as this is not a valid
        // method name in Dart.
        PromiseWrapper.catchError = function (promise, onError) {
            return promise.catch(onError);
        };
        PromiseWrapper.all = function (promises) {
            if (promises.length == 0) return Promise.resolve([]);
            return Promise.all(promises);
        };
        PromiseWrapper.then = function (promise, success, rejection) {
            return promise.then(success, rejection);
        };
        PromiseWrapper.wrap = function (computation) {
            return new Promise(function (res, rej) {
                try {
                    res(computation());
                } catch (e) {
                    rej(e);
                }
            });
        };
        PromiseWrapper.scheduleMicrotask = function (computation) {
            PromiseWrapper.then(PromiseWrapper.resolve(null), computation, function (_) {});
        };
        PromiseWrapper.isPromise = function (obj) {
            return obj instanceof Promise;
        };
        PromiseWrapper.completer = function () {
            return new PromiseCompleter();
        };
        return PromiseWrapper;
    }();
    exports.PromiseWrapper = PromiseWrapper;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/facade/async.js', ['npm:@angular/common@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/promise.js', 'npm:rxjs@5.0.0-beta.6/Subject.js', 'npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js', 'npm:rxjs@5.0.0-beta.6/operator/toPromise.js', 'npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/lang.js');
  var promise_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/promise.js');
  exports.PromiseWrapper = promise_1.PromiseWrapper;
  exports.PromiseCompleter = promise_1.PromiseCompleter;
  var Subject_1 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  var PromiseObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js');
  var toPromise_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/toPromise.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  exports.Observable = Observable_1.Observable;
  var Subject_2 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  exports.Subject = Subject_2.Subject;
  var TimerWrapper = function () {
    function TimerWrapper() {}
    TimerWrapper.setTimeout = function (fn, millis) {
      return lang_1.global.setTimeout(fn, millis);
    };
    TimerWrapper.clearTimeout = function (id) {
      lang_1.global.clearTimeout(id);
    };
    TimerWrapper.setInterval = function (fn, millis) {
      return lang_1.global.setInterval(fn, millis);
    };
    TimerWrapper.clearInterval = function (id) {
      lang_1.global.clearInterval(id);
    };
    return TimerWrapper;
  }();
  exports.TimerWrapper = TimerWrapper;
  var ObservableWrapper = function () {
    function ObservableWrapper() {}
    ObservableWrapper.subscribe = function (emitter, onNext, onError, onComplete) {
      if (onComplete === void 0) {
        onComplete = function () {};
      }
      onError = typeof onError === "function" && onError || lang_1.noop;
      onComplete = typeof onComplete === "function" && onComplete || lang_1.noop;
      return emitter.subscribe({
        next: onNext,
        error: onError,
        complete: onComplete
      });
    };
    ObservableWrapper.isObservable = function (obs) {
      return !!obs.subscribe;
    };
    ObservableWrapper.hasSubscribers = function (obs) {
      return obs.observers.length > 0;
    };
    ObservableWrapper.dispose = function (subscription) {
      subscription.unsubscribe();
    };
    ObservableWrapper.callNext = function (emitter, value) {
      emitter.next(value);
    };
    ObservableWrapper.callEmit = function (emitter, value) {
      emitter.emit(value);
    };
    ObservableWrapper.callError = function (emitter, error) {
      emitter.error(error);
    };
    ObservableWrapper.callComplete = function (emitter) {
      emitter.complete();
    };
    ObservableWrapper.fromPromise = function (promise) {
      return PromiseObservable_1.PromiseObservable.create(promise);
    };
    ObservableWrapper.toPromise = function (obj) {
      return toPromise_1.toPromise.call(obj);
    };
    return ObservableWrapper;
  }();
  exports.ObservableWrapper = ObservableWrapper;
  var EventEmitter = function (_super) {
    __extends(EventEmitter, _super);
    function EventEmitter(isAsync) {
      if (isAsync === void 0) {
        isAsync = true;
      }
      _super.call(this);
      this._isAsync = isAsync;
    }
    EventEmitter.prototype.emit = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.next = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {
      var schedulerFn;
      var errorFn = function (err) {
        return null;
      };
      var completeFn = function () {
        return null;
      };
      if (generatorOrNext && typeof generatorOrNext === 'object') {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext.next(value);
          });
        } : function (value) {
          generatorOrNext.next(value);
        };
        if (generatorOrNext.error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return generatorOrNext.error(err);
            });
          } : function (err) {
            generatorOrNext.error(err);
          };
        }
        if (generatorOrNext.complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return generatorOrNext.complete();
            });
          } : function () {
            generatorOrNext.complete();
          };
        }
      } else {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext(value);
          });
        } : function (value) {
          generatorOrNext(value);
        };
        if (error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return error(err);
            });
          } : function (err) {
            error(err);
          };
        }
        if (complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return complete();
            });
          } : function () {
            complete();
          };
        }
      }
      return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);
    };
    return EventEmitter;
  }(Subject_1.Subject);
  exports.EventEmitter = EventEmitter;
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js', ['npm:@angular/core@2.0.0-rc.1.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  /**
   * `LocationStrategy` is responsible for representing and reading route state
   * from the browser's URL. Angular provides two strategies:
   * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).
   *
   * This is used under the hood of the {@link Location} service.
   *
   * Applications should use the {@link Router} or {@link Location} services to
   * interact with application route state.
   *
   * For instance, {@link HashLocationStrategy} produces URLs like
   * `http://example.com#/foo`, and {@link PathLocationStrategy} produces
   * `http://example.com/foo` as an equivalent URL.
   *
   * See these two classes for more.
   */
  var LocationStrategy = function () {
    function LocationStrategy() {}
    return LocationStrategy;
  }();
  exports.LocationStrategy = LocationStrategy;
  /**
   * The `APP_BASE_HREF` token represents the base href to be used with the
   * {@link PathLocationStrategy}.
   *
   * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
   * representing the URL prefix that should be preserved when generating and recognizing
   * URLs.
   *
   * ### Example
   *
   * ```
   * import {Component} from '@angular/core';
   * import {ROUTER_DIRECTIVES, ROUTER_PROVIDERS, RouteConfig} from '@angular/router';
   * import {APP_BASE_HREF} from '@angular/common';
   *
   * @Component({directives: [ROUTER_DIRECTIVES]})
   * @RouteConfig([
   *  {...},
   * ])
   * class AppCmp {
   *   // ...
   * }
   *
   * bootstrap(AppCmp, [
   *   ROUTER_PROVIDERS,
   *   provide(APP_BASE_HREF, {useValue: '/my/app'})
   * ]);
   * ```
   */
  exports.APP_BASE_HREF = new core_1.OpaqueToken('appBaseHref');
  

  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/location/location.js', ['npm:@angular/core@2.0.0-rc.1.js', 'npm:@angular/common@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var core_1 = $__require('npm:@angular/core@2.0.0-rc.1.js');
  var async_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/facade/async.js');
  var location_strategy_1 = $__require('npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js');
  var Location = function () {
    function Location(platformStrategy) {
      var _this = this;
      this.platformStrategy = platformStrategy;
      this._subject = new async_1.EventEmitter();
      var browserBaseHref = this.platformStrategy.getBaseHref();
      this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));
      this.platformStrategy.onPopState(function (ev) {
        async_1.ObservableWrapper.callEmit(_this._subject, {
          'url': _this.path(),
          'pop': true,
          'type': ev.type
        });
      });
    }
    Location.prototype.path = function () {
      return this.normalize(this.platformStrategy.path());
    };
    Location.prototype.normalize = function (url) {
      return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));
    };
    Location.prototype.prepareExternalUrl = function (url) {
      if (url.length > 0 && !url.startsWith('/')) {
        url = '/' + url;
      }
      return this.platformStrategy.prepareExternalUrl(url);
    };
    Location.prototype.go = function (path, query) {
      if (query === void 0) {
        query = '';
      }
      this.platformStrategy.pushState(null, '', path, query);
    };
    Location.prototype.replaceState = function (path, query) {
      if (query === void 0) {
        query = '';
      }
      this.platformStrategy.replaceState(null, '', path, query);
    };
    Location.prototype.forward = function () {
      this.platformStrategy.forward();
    };
    Location.prototype.back = function () {
      this.platformStrategy.back();
    };
    Location.prototype.subscribe = function (onNext, onThrow, onReturn) {
      if (onThrow === void 0) {
        onThrow = null;
      }
      if (onReturn === void 0) {
        onReturn = null;
      }
      return async_1.ObservableWrapper.subscribe(this._subject, onNext, onThrow, onReturn);
    };
    Location.normalizeQueryParams = function (params) {
      return params.length > 0 && params.substring(0, 1) != '?' ? '?' + params : params;
    };
    Location.joinWithSlash = function (start, end) {
      if (start.length == 0) {
        return end;
      }
      if (end.length == 0) {
        return start;
      }
      var slashes = 0;
      if (start.endsWith('/')) {
        slashes++;
      }
      if (end.startsWith('/')) {
        slashes++;
      }
      if (slashes == 2) {
        return start + end.substring(1);
      }
      if (slashes == 1) {
        return start + end;
      }
      return start + '/' + end;
    };
    Location.stripTrailingSlash = function (url) {
      if (/\/$/g.test(url)) {
        url = url.substring(0, url.length - 1);
      }
      return url;
    };
    Location.decorators = [{ type: core_1.Injectable }];
    Location.ctorParameters = [{ type: location_strategy_1.LocationStrategy }];
    return Location;
  }();
  exports.Location = Location;
  function _stripBaseHref(baseHref, url) {
    if (baseHref.length > 0 && url.startsWith(baseHref)) {
      return url.substring(baseHref.length);
    }
    return url;
  }
  function _stripIndexHtml(url) {
    if (/\/index.html$/g.test(url)) {
      return url.substring(0, url.length - 11);
    }
    return url;
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/src/location.js', ['npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js', 'npm:@angular/common@2.0.0-rc.1/src/location/hash_location_strategy.js', 'npm:@angular/common@2.0.0-rc.1/src/location/path_location_strategy.js', 'npm:@angular/common@2.0.0-rc.1/src/location/location.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/location/platform_location.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/location/location_strategy.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/location/hash_location_strategy.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/location/path_location_strategy.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/location/location.js'));
  return module.exports;
});
System.registerDynamic('npm:@angular/common@2.0.0-rc.1/index.js', ['npm:@angular/common@2.0.0-rc.1/src/pipes.js', 'npm:@angular/common@2.0.0-rc.1/src/directives.js', 'npm:@angular/common@2.0.0-rc.1/src/forms.js', 'npm:@angular/common@2.0.0-rc.1/src/common_directives.js', 'npm:@angular/common@2.0.0-rc.1/src/location.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/pipes.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/directives.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/forms.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/common_directives.js'));
  __export($__require('npm:@angular/common@2.0.0-rc.1/src/location.js'));
  return module.exports;
});
System.registerDynamic("npm:@angular/common@2.0.0-rc.1.js", ["npm:@angular/common@2.0.0-rc.1/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@angular/common@2.0.0-rc.1/index.js");
  return module.exports;
});
System.register("src/components/editor/editor.js", ["npm:@angular/core@2.0.0-rc.1.js", "npm:@angular/common@2.0.0-rc.1.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, common_1, editorTab_1, constants_1, Editor;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (common_1_1) {
            common_1 = common_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            // The editor allows to manage a set of editortabs
            // Either to display one specific tab, either to 
            // retrieve the code of several tabs and submit it
            // to different services (plunker for example, or fiddle)
            Editor = function () {
                function Editor(prettyPrint, jquery, eltRef, cdr) {
                    var _this = this;
                    this.prettyPrint = prettyPrint;
                    this.jquery = jquery;
                    this.fiddle = false;
                    this.plunker = false;
                    this.ng2 = false;
                    this.localExec = false;
                    this.title = 'sample';
                    this.description = 'sample';
                    this.framework = 'library';
                    this.version = 'pure';
                    this.wrap = 'domReady';
                    this.fiddleUrl = 'http://jsfiddle.net/api/post/' + this.framework + '/' + this.version + '/';
                    this.plunkerUrl = 'http://plnkr.co/edit/';
                    this.plunkerData = [];
                    this.isViewInit = false;
                    this.tabs = [];
                    //Make one editortab visible and hide others
                    this.displayTab = function (index) {
                        _this.getTabs().forEach(function (currentEditor, currentIndex) {
                            currentEditor.visible = false;
                            if (currentIndex === index) {
                                currentEditor.visible = true;
                            }
                        });
                    };
                    // Concatenate and return the code by filetype
                    //For example, if your editor contains 2 tabs of
                    // filetype js and 2 tabs of filetype html,
                    // getcode('js') will concatenate the two js
                    // tabs and return it
                    this.getCode = function (filteType) {
                        var res = "";
                        _this.getTabs().forEach(function (tab, index) {
                            if (tab.fileType === filteType) {
                                res += tab.getCode();
                            }
                        });
                        return res;
                    };
                    // Returns an array of objects which will be used into
                    // hidden input fields (look at editor.html) and which are appropriated for the
                    // plunker service
                    this.getPlunkerData = function () {
                        //Clear array
                        _this.plunkerData.splice(0);
                        _this.plunkerData.push({ name: 'description', value: _this.description });
                        _this.getTabs().forEach(function (tab, index) {
                            _this.plunkerData.push({ name: 'files[' + tab.title + ']', value: tab.getCode() });
                        });
                        return _this.plunkerData;
                    };
                    //Submit the form available, which can be used for fiddle or plunker
                    // depending on the parameters you set
                    this.submit = function (e) {
                        e.preventDefault();
                        _this.formElement[0].submit();
                    };
                    // Will concat all js files in the editor and evaluate it
                    this.execJs = function () {
                        _this.getTabs().forEach(function (tab, index) {
                            if (tab.fileType === 'js') {
                                console.log('Eval ' + tab.title);
                                eval(tab.getCode());
                            }
                        });
                    };
                    this.elt = eltRef.nativeElement;
                    this.cdr = cdr;
                }
                //Get all EditorTabs components
                Editor.prototype.getTabs = function () {
                    var _this = this;
                    if (this.isViewInit) {
                        return this.tabs;
                    }
                    this.tabs.splice(0);
                    (this.viewTabs === undefined ? [] : this.viewTabs.toArray()).concat(this.contentTabs.toArray()).forEach(function (value, index) {
                        if (!_this.ng2 && index === 0) {
                            value.visible = true;
                        } else if (_this.ng2 && index === 2) {
                            value.visible = true;
                        } else {
                            value.visible = false;
                        }
                        _this.tabs.push(value);
                    });
                    return this.tabs;
                };
                // When the view is ready, call prettyprint and
                // call change detection on the editor and its tabs
                // to avoid some problems
                Editor.prototype.ngAfterViewInit = function () {
                    this.prettyPrint();
                    this.formElement = this.jquery(this.elt).find('form');
                    this.cdr.detectChanges();
                    this.isViewInit = true;
                    this.getTabs().forEach(function (tab, index) {
                        tab.cdr.detectChanges();
                    });
                };
                ;
                return Editor;
            }();
            __decorate([core_1.Input(), __metadata("design:type", Boolean)], Editor.prototype, "fiddle", void 0);
            __decorate([core_1.Input(), __metadata("design:type", Boolean)], Editor.prototype, "plunker", void 0);
            __decorate([core_1.Input(), __metadata("design:type", Boolean)], Editor.prototype, "ng2", void 0);
            __decorate([core_1.Input(), __metadata("design:type", Boolean)], Editor.prototype, "localExec", void 0);
            __decorate([core_1.Input(), __metadata("design:type", String)], Editor.prototype, "title", void 0);
            __decorate([core_1.Input(), __metadata("design:type", String)], Editor.prototype, "description", void 0);
            __decorate([core_1.Input(), __metadata("design:type", String)], Editor.prototype, "framework", void 0);
            __decorate([core_1.Input(), __metadata("design:type", String)], Editor.prototype, "version", void 0);
            __decorate([core_1.Input(), __metadata("design:type", String)], Editor.prototype, "wrap", void 0);
            __decorate([core_1.ViewChildren(editorTab_1.EditorTab), __metadata("design:type", core_1.QueryList)], Editor.prototype, "viewTabs", void 0);
            __decorate([core_1.ContentChildren(editorTab_1.EditorTab), __metadata("design:type", core_1.QueryList)], Editor.prototype, "contentTabs", void 0);
            Editor = __decorate([core_1.Component({
                selector: 'editor', inputs: ['localexec'],
                templateUrl: 'src/components/editor/editor.html',
                directives: [Editor, editorTab_1.EditorTab, common_1.NgIf],
                styleUrls: ['src/components/editor/editor.css']
            }), __param(0, core_1.Inject(constants_1.GPRETTIFYER)), __param(1, core_1.Inject(constants_1.JQUERY)), __metadata("design:paramtypes", [Object, Object, core_1.ElementRef, core_1.ChangeDetectorRef])], Editor);
            exports_1("Editor", Editor);
        }
    };
});
System.register("src/components/editorTab/editorTab.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, constants_1, EditorTab;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            // An editortab can be used alone (to display some code whith highlighted syntax)
            // or as child of the editor component, then it's a tab of the editor
            EditorTab = function () {
                // TODO: Mieux comprendre la nécessité de forwardRef et comment s'en affranchir:
                //  https://github.com/angular/angular/issues/2660
                function EditorTab(eltRef, cdr, jquery, prettyPrint) {
                    var _this = this;
                    this.cdr = cdr;
                    this.prettyPrint = prettyPrint;
                    this._alone = false;
                    // Is the current visible (used by the editor
                    // to hide inactive tabs)
                    this.visible = false;
                    //The active class is set on the visible editortab,
                    // whereas the inactive one is set on all other tabs
                    this.getCssClass = function () {
                        return _this.visible ? 'active' : 'inactive';
                    };
                    // Retrieve the code for the current editortab
                    this.getCode = function () {
                        return _this.elt.text();
                    };
                    this.elt = jquery(eltRef.nativeElement);
                }
                Object.defineProperty(EditorTab.prototype, "alone", {
                    get: function () {
                        return this._alone;
                    },
                    set: function (val) {
                        this._alone = val;
                        if (val === true) {
                            this.visible = true;
                        }
                    },
                    enumerable: true,
                    configurable: true
                });
                ;
                // When the view is "ready", call the prettyprint()
                // library which highlight the code
                EditorTab.prototype.ngAfterViewInit = function () {
                    if (this.alone) {
                        this.prettyPrint();
                    } else {
                        this.cdr.detectChanges();
                    }
                };
                ;
                return EditorTab;
            }();
            __decorate([core_1.Input(), __metadata("design:type", String)], EditorTab.prototype, "title", void 0);
            __decorate([core_1.Input(), __metadata("design:type", String)], EditorTab.prototype, "fileType", void 0);
            __decorate([core_1.Input(), __metadata("design:type", Boolean)], EditorTab.prototype, "_alone", void 0);
            __decorate([core_1.Input(), __metadata("design:type", Boolean), __metadata("design:paramtypes", [Boolean])], EditorTab.prototype, "alone", null);
            EditorTab = __decorate([core_1.Component({
                selector: 'editortab',
                templateUrl: 'src/components/editorTab/editorTab.html',
                styleUrls: ['src/components/editorTab/editorTab.css']
            }), __param(2, core_1.Inject(constants_1.JQUERY)), __param(3, core_1.Inject(constants_1.GPRETTIFYER)), __metadata("design:paramtypes", [core_1.ElementRef, core_1.ChangeDetectorRef, Object, Object])], EditorTab);
            exports_1("EditorTab", EditorTab);
        }
    };
});
System.register("src/components/slides/preamble/webComponents5/webComponents5.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/components/editor/editor.js", "src/components/editorTab/editorTab.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, editor_1, editorTab_1, constants_1, WebComponents5;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (editor_1_1) {
            editor_1 = editor_1_1;
        }, function (editorTab_1_1) {
            editorTab_1 = editorTab_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            WebComponents5 = function (_super) {
                __extends(WebComponents5, _super);
                function WebComponents5(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return WebComponents5;
            }(slideCommon_1.SlideCommon);
            WebComponents5 = __decorate([core_1.Component({
                selector: 'WebComponents5',
                templateUrl: 'src/components/slides/preamble/webComponents5/webComponents5.html',
                styleUrls: ['src/components/slides/preamble/webComponents5/webComponents5.css'],
                directives: [editor_1.Editor, editorTab_1.EditorTab]
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], WebComponents5);
            exports_1("WebComponents5", WebComponents5);
        }
    };
});
System.register("src/components/slides/toc/toc.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, Toc;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Toc = function (_super) {
                __extends(Toc, _super);
                function Toc(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Toc;
            }(slideCommon_1.SlideCommon);
            Toc = __decorate([core_1.Component({
                selector: 'toc',
                templateUrl: 'src/components/slides/toc/toc.html',
                styleUrls: ['src/components/slides/toc/toc.css']
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Toc);
            exports_1("Toc", Toc);
        }
    };
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/metadata/di.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/di/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var metadata_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/metadata.js');
  var forward_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js');
  var AttributeMetadata = function (_super) {
    __extends(AttributeMetadata, _super);
    function AttributeMetadata(attributeName) {
      _super.call(this);
      this.attributeName = attributeName;
    }
    Object.defineProperty(AttributeMetadata.prototype, "token", {
      get: function () {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    AttributeMetadata.prototype.toString = function () {
      return "@Attribute(" + lang_1.stringify(this.attributeName) + ")";
    };
    return AttributeMetadata;
  }(metadata_1.DependencyMetadata);
  exports.AttributeMetadata = AttributeMetadata;
  var QueryMetadata = function (_super) {
    __extends(QueryMetadata, _super);
    function QueryMetadata(_selector, _a) {
      var _b = _a === void 0 ? {} : _a,
          _c = _b.descendants,
          descendants = _c === void 0 ? false : _c,
          _d = _b.first,
          first = _d === void 0 ? false : _d,
          _e = _b.read,
          read = _e === void 0 ? null : _e;
      _super.call(this);
      this._selector = _selector;
      this.descendants = descendants;
      this.first = first;
      this.read = read;
    }
    Object.defineProperty(QueryMetadata.prototype, "isViewQuery", {
      get: function () {
        return false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryMetadata.prototype, "selector", {
      get: function () {
        return forward_ref_1.resolveForwardRef(this._selector);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryMetadata.prototype, "isVarBindingQuery", {
      get: function () {
        return lang_1.isString(this.selector);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryMetadata.prototype, "varBindings", {
      get: function () {
        return this.selector.split(',');
      },
      enumerable: true,
      configurable: true
    });
    QueryMetadata.prototype.toString = function () {
      return "@Query(" + lang_1.stringify(this.selector) + ")";
    };
    return QueryMetadata;
  }(metadata_1.DependencyMetadata);
  exports.QueryMetadata = QueryMetadata;
  var ContentChildrenMetadata = function (_super) {
    __extends(ContentChildrenMetadata, _super);
    function ContentChildrenMetadata(_selector, _a) {
      var _b = _a === void 0 ? {} : _a,
          _c = _b.descendants,
          descendants = _c === void 0 ? false : _c,
          _d = _b.read,
          read = _d === void 0 ? null : _d;
      _super.call(this, _selector, {
        descendants: descendants,
        read: read
      });
    }
    return ContentChildrenMetadata;
  }(QueryMetadata);
  exports.ContentChildrenMetadata = ContentChildrenMetadata;
  var ContentChildMetadata = function (_super) {
    __extends(ContentChildMetadata, _super);
    function ContentChildMetadata(_selector, _a) {
      var _b = (_a === void 0 ? {} : _a).read,
          read = _b === void 0 ? null : _b;
      _super.call(this, _selector, {
        descendants: true,
        first: true,
        read: read
      });
    }
    return ContentChildMetadata;
  }(QueryMetadata);
  exports.ContentChildMetadata = ContentChildMetadata;
  var ViewQueryMetadata = function (_super) {
    __extends(ViewQueryMetadata, _super);
    function ViewQueryMetadata(_selector, _a) {
      var _b = _a === void 0 ? {} : _a,
          _c = _b.descendants,
          descendants = _c === void 0 ? false : _c,
          _d = _b.first,
          first = _d === void 0 ? false : _d,
          _e = _b.read,
          read = _e === void 0 ? null : _e;
      _super.call(this, _selector, {
        descendants: descendants,
        first: first,
        read: read
      });
    }
    Object.defineProperty(ViewQueryMetadata.prototype, "isViewQuery", {
      get: function () {
        return true;
      },
      enumerable: true,
      configurable: true
    });
    ViewQueryMetadata.prototype.toString = function () {
      return "@ViewQuery(" + lang_1.stringify(this.selector) + ")";
    };
    return ViewQueryMetadata;
  }(QueryMetadata);
  exports.ViewQueryMetadata = ViewQueryMetadata;
  var ViewChildrenMetadata = function (_super) {
    __extends(ViewChildrenMetadata, _super);
    function ViewChildrenMetadata(_selector, _a) {
      var _b = (_a === void 0 ? {} : _a).read,
          read = _b === void 0 ? null : _b;
      _super.call(this, _selector, {
        descendants: true,
        read: read
      });
    }
    return ViewChildrenMetadata;
  }(ViewQueryMetadata);
  exports.ViewChildrenMetadata = ViewChildrenMetadata;
  var ViewChildMetadata = function (_super) {
    __extends(ViewChildMetadata, _super);
    function ViewChildMetadata(_selector, _a) {
      var _b = (_a === void 0 ? {} : _a).read,
          read = _b === void 0 ? null : _b;
      _super.call(this, _selector, {
        descendants: true,
        first: true,
        read: read
      });
    }
    return ViewChildMetadata;
  }(ViewQueryMetadata);
  exports.ViewChildMetadata = ViewChildMetadata;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/metadata/directives.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/di/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var metadata_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/metadata.js');
  var constants_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js');
  var DirectiveMetadata = function (_super) {
    __extends(DirectiveMetadata, _super);
    function DirectiveMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          selector = _b.selector,
          inputs = _b.inputs,
          outputs = _b.outputs,
          properties = _b.properties,
          events = _b.events,
          host = _b.host,
          bindings = _b.bindings,
          providers = _b.providers,
          exportAs = _b.exportAs,
          queries = _b.queries;
      _super.call(this);
      this.selector = selector;
      this._inputs = inputs;
      this._properties = properties;
      this._outputs = outputs;
      this._events = events;
      this.host = host;
      this.exportAs = exportAs;
      this.queries = queries;
      this._providers = providers;
      this._bindings = bindings;
    }
    Object.defineProperty(DirectiveMetadata.prototype, "inputs", {
      get: function () {
        return lang_1.isPresent(this._properties) && this._properties.length > 0 ? this._properties : this._inputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "properties", {
      get: function () {
        return this.inputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "outputs", {
      get: function () {
        return lang_1.isPresent(this._events) && this._events.length > 0 ? this._events : this._outputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "events", {
      get: function () {
        return this.outputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "providers", {
      get: function () {
        return lang_1.isPresent(this._bindings) && this._bindings.length > 0 ? this._bindings : this._providers;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "bindings", {
      get: function () {
        return this.providers;
      },
      enumerable: true,
      configurable: true
    });
    return DirectiveMetadata;
  }(metadata_1.InjectableMetadata);
  exports.DirectiveMetadata = DirectiveMetadata;
  var ComponentMetadata = function (_super) {
    __extends(ComponentMetadata, _super);
    function ComponentMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          selector = _b.selector,
          inputs = _b.inputs,
          outputs = _b.outputs,
          properties = _b.properties,
          events = _b.events,
          host = _b.host,
          exportAs = _b.exportAs,
          moduleId = _b.moduleId,
          bindings = _b.bindings,
          providers = _b.providers,
          viewBindings = _b.viewBindings,
          viewProviders = _b.viewProviders,
          _c = _b.changeDetection,
          changeDetection = _c === void 0 ? constants_1.ChangeDetectionStrategy.Default : _c,
          queries = _b.queries,
          templateUrl = _b.templateUrl,
          template = _b.template,
          styleUrls = _b.styleUrls,
          styles = _b.styles,
          directives = _b.directives,
          pipes = _b.pipes,
          encapsulation = _b.encapsulation;
      _super.call(this, {
        selector: selector,
        inputs: inputs,
        outputs: outputs,
        properties: properties,
        events: events,
        host: host,
        exportAs: exportAs,
        bindings: bindings,
        providers: providers,
        queries: queries
      });
      this.changeDetection = changeDetection;
      this._viewProviders = viewProviders;
      this._viewBindings = viewBindings;
      this.templateUrl = templateUrl;
      this.template = template;
      this.styleUrls = styleUrls;
      this.styles = styles;
      this.directives = directives;
      this.pipes = pipes;
      this.encapsulation = encapsulation;
      this.moduleId = moduleId;
    }
    Object.defineProperty(ComponentMetadata.prototype, "viewProviders", {
      get: function () {
        return lang_1.isPresent(this._viewBindings) && this._viewBindings.length > 0 ? this._viewBindings : this._viewProviders;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentMetadata.prototype, "viewBindings", {
      get: function () {
        return this.viewProviders;
      },
      enumerable: true,
      configurable: true
    });
    return ComponentMetadata;
  }(DirectiveMetadata);
  exports.ComponentMetadata = ComponentMetadata;
  var PipeMetadata = function (_super) {
    __extends(PipeMetadata, _super);
    function PipeMetadata(_a) {
      var name = _a.name,
          pure = _a.pure;
      _super.call(this);
      this.name = name;
      this._pure = pure;
    }
    Object.defineProperty(PipeMetadata.prototype, "pure", {
      get: function () {
        return lang_1.isPresent(this._pure) ? this._pure : true;
      },
      enumerable: true,
      configurable: true
    });
    return PipeMetadata;
  }(metadata_1.InjectableMetadata);
  exports.PipeMetadata = PipeMetadata;
  var InputMetadata = function () {
    function InputMetadata(bindingPropertyName) {
      this.bindingPropertyName = bindingPropertyName;
    }
    return InputMetadata;
  }();
  exports.InputMetadata = InputMetadata;
  var OutputMetadata = function () {
    function OutputMetadata(bindingPropertyName) {
      this.bindingPropertyName = bindingPropertyName;
    }
    return OutputMetadata;
  }();
  exports.OutputMetadata = OutputMetadata;
  var HostBindingMetadata = function () {
    function HostBindingMetadata(hostPropertyName) {
      this.hostPropertyName = hostPropertyName;
    }
    return HostBindingMetadata;
  }();
  exports.HostBindingMetadata = HostBindingMetadata;
  var HostListenerMetadata = function () {
    function HostListenerMetadata(eventName, args) {
      this.eventName = eventName;
      this.args = args;
    }
    return HostListenerMetadata;
  }();
  exports.HostListenerMetadata = HostListenerMetadata;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/metadata.js', ['npm:@angular/core@2.0.0-rc.1/src/metadata/di.js', 'npm:@angular/core@2.0.0-rc.1/src/metadata/directives.js', 'npm:@angular/core@2.0.0-rc.1/src/metadata/view.js', 'npm:@angular/core@2.0.0-rc.1/src/util/decorators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var di_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/di.js');
  exports.QueryMetadata = di_1.QueryMetadata;
  exports.ContentChildrenMetadata = di_1.ContentChildrenMetadata;
  exports.ContentChildMetadata = di_1.ContentChildMetadata;
  exports.ViewChildrenMetadata = di_1.ViewChildrenMetadata;
  exports.ViewQueryMetadata = di_1.ViewQueryMetadata;
  exports.ViewChildMetadata = di_1.ViewChildMetadata;
  exports.AttributeMetadata = di_1.AttributeMetadata;
  var directives_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/directives.js');
  exports.ComponentMetadata = directives_1.ComponentMetadata;
  exports.DirectiveMetadata = directives_1.DirectiveMetadata;
  exports.PipeMetadata = directives_1.PipeMetadata;
  exports.InputMetadata = directives_1.InputMetadata;
  exports.OutputMetadata = directives_1.OutputMetadata;
  exports.HostBindingMetadata = directives_1.HostBindingMetadata;
  exports.HostListenerMetadata = directives_1.HostListenerMetadata;
  var view_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/view.js');
  exports.ViewMetadata = view_1.ViewMetadata;
  exports.ViewEncapsulation = view_1.ViewEncapsulation;
  var di_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/di.js');
  var directives_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/directives.js');
  var view_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/view.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/util/decorators.js');
  exports.Component = decorators_1.makeDecorator(directives_2.ComponentMetadata, function (fn) {
    return fn.View = View;
  });
  exports.Directive = decorators_1.makeDecorator(directives_2.DirectiveMetadata);
  var View = decorators_1.makeDecorator(view_2.ViewMetadata, function (fn) {
    return fn.View = View;
  });
  exports.Attribute = decorators_1.makeParamDecorator(di_2.AttributeMetadata);
  exports.Query = decorators_1.makeParamDecorator(di_2.QueryMetadata);
  exports.ContentChildren = decorators_1.makePropDecorator(di_2.ContentChildrenMetadata);
  exports.ContentChild = decorators_1.makePropDecorator(di_2.ContentChildMetadata);
  exports.ViewChildren = decorators_1.makePropDecorator(di_2.ViewChildrenMetadata);
  exports.ViewChild = decorators_1.makePropDecorator(di_2.ViewChildMetadata);
  exports.ViewQuery = decorators_1.makeParamDecorator(di_2.ViewQueryMetadata);
  exports.Pipe = decorators_1.makeDecorator(directives_2.PipeMetadata);
  exports.Input = decorators_1.makePropDecorator(directives_2.InputMetadata);
  exports.Output = decorators_1.makePropDecorator(directives_2.OutputMetadata);
  exports.HostBinding = decorators_1.makePropDecorator(directives_2.HostBindingMetadata);
  exports.HostListener = decorators_1.makePropDecorator(directives_2.HostListenerMetadata);
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/util.js", ["npm:@angular/core@2.0.0-rc.1/src/util/decorators.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var decorators_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/util/decorators.js");
  exports.Class = decorators_1.Class;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/zone.js", ["npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var ng_zone_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js");
  exports.NgZone = ng_zone_1.NgZone;
  exports.NgZoneError = ng_zone_1.NgZoneError;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/render.js", ["npm:@angular/core@2.0.0-rc.1/src/render/api.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var api_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/render/api.js");
  exports.RootRenderer = api_1.RootRenderer;
  exports.Renderer = api_1.Renderer;
  exports.RenderComponentType = api_1.RenderComponentType;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/query_list.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/async.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
  var QueryList = function () {
    function QueryList() {
      this._dirty = true;
      this._results = [];
      this._emitter = new async_1.EventEmitter();
    }
    Object.defineProperty(QueryList.prototype, "changes", {
      get: function () {
        return this._emitter;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryList.prototype, "length", {
      get: function () {
        return this._results.length;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryList.prototype, "first", {
      get: function () {
        return collection_1.ListWrapper.first(this._results);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryList.prototype, "last", {
      get: function () {
        return collection_1.ListWrapper.last(this._results);
      },
      enumerable: true,
      configurable: true
    });
    QueryList.prototype.map = function (fn) {
      return this._results.map(fn);
    };
    QueryList.prototype.filter = function (fn) {
      return this._results.filter(fn);
    };
    QueryList.prototype.reduce = function (fn, init) {
      return this._results.reduce(fn, init);
    };
    QueryList.prototype.forEach = function (fn) {
      this._results.forEach(fn);
    };
    QueryList.prototype.toArray = function () {
      return collection_1.ListWrapper.clone(this._results);
    };
    QueryList.prototype[lang_1.getSymbolIterator()] = function () {
      return this._results[lang_1.getSymbolIterator()]();
    };
    QueryList.prototype.toString = function () {
      return this._results.toString();
    };
    QueryList.prototype.reset = function (res) {
      this._results = collection_1.ListWrapper.flatten(res);
      this._dirty = false;
    };
    QueryList.prototype.notifyOnChanges = function () {
      this._emitter.emit(this);
    };
    QueryList.prototype.setDirty = function () {
      this._dirty = true;
    };
    Object.defineProperty(QueryList.prototype, "dirty", {
      get: function () {
        return this._dirty;
      },
      enumerable: true,
      configurable: true
    });
    return QueryList;
  }();
  exports.QueryList = QueryList;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker.js', ['npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/query_list.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/dynamic_component_loader.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/element_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/template_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_container_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/component_factory.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var component_resolver_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js');
  exports.ComponentResolver = component_resolver_1.ComponentResolver;
  var query_list_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/query_list.js');
  exports.QueryList = query_list_1.QueryList;
  var dynamic_component_loader_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/dynamic_component_loader.js');
  exports.DynamicComponentLoader = dynamic_component_loader_1.DynamicComponentLoader;
  var element_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/element_ref.js');
  exports.ElementRef = element_ref_1.ElementRef;
  var template_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/template_ref.js');
  exports.TemplateRef = template_ref_1.TemplateRef;
  var view_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_ref.js');
  exports.EmbeddedViewRef = view_ref_1.EmbeddedViewRef;
  exports.ViewRef = view_ref_1.ViewRef;
  var view_container_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_container_ref.js');
  exports.ViewContainerRef = view_container_ref_1.ViewContainerRef;
  var component_factory_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_factory.js');
  exports.ComponentRef = component_factory_1.ComponentRef;
  exports.ComponentFactory = component_factory_1.ComponentFactory;
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js');
  exports.ExpressionChangedAfterItHasBeenCheckedException = exceptions_1.ExpressionChangedAfterItHasBeenCheckedException;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/change_detection.js", ["npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var change_detection_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js");
  exports.ChangeDetectionStrategy = change_detection_1.ChangeDetectionStrategy;
  exports.ChangeDetectorRef = change_detection_1.ChangeDetectorRef;
  exports.WrappedValue = change_detection_1.WrappedValue;
  exports.SimpleChange = change_detection_1.SimpleChange;
  exports.DefaultIterableDiffer = change_detection_1.DefaultIterableDiffer;
  exports.IterableDiffers = change_detection_1.IterableDiffers;
  exports.KeyValueDiffers = change_detection_1.KeyValueDiffers;
  exports.CollectionChangeRecord = change_detection_1.CollectionChangeRecord;
  exports.KeyValueChangeRecord = change_detection_1.KeyValueChangeRecord;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/platform_directives_and_pipes.js", ["npm:@angular/core@2.0.0-rc.1/src/di.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var di_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/di.js");
  exports.PLATFORM_DIRECTIVES = new di_1.OpaqueToken("Platform Directives");
  exports.PLATFORM_PIPES = new di_1.OpaqueToken("Platform Pipes");
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/platform_common_providers.js', ['npm:@angular/core@2.0.0-rc.1/src/console.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js', 'npm:@angular/core@2.0.0-rc.1/src/testability/testability.js', 'npm:@angular/core@2.0.0-rc.1/src/application_ref.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var console_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/console.js');
  var reflection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js');
  var reflector_reader_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js');
  var testability_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/testability/testability.js');
  var application_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_ref.js');
  function _reflector() {
    return reflection_1.reflector;
  }
  var __unused;
  exports.PLATFORM_COMMON_PROVIDERS = [application_ref_1.PLATFORM_CORE_PROVIDERS, {
    provide: reflection_1.Reflector,
    useFactory: _reflector,
    deps: []
  }, {
    provide: reflector_reader_1.ReflectorReader,
    useExisting: reflection_1.Reflector
  }, testability_1.TestabilityRegistry, console_1.Console];
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone_impl.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * Stores error information; delivered via [NgZone.onError] stream.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    var NgZoneError = function () {
        function NgZoneError(error, stackTrace) {
            this.error = error;
            this.stackTrace = stackTrace;
        }
        return NgZoneError;
    }();
    exports.NgZoneError = NgZoneError;
    var NgZoneImpl = function () {
        function NgZoneImpl(_a) {
            var _this = this;
            var trace = _a.trace,
                onEnter = _a.onEnter,
                onLeave = _a.onLeave,
                setMicrotask = _a.setMicrotask,
                setMacrotask = _a.setMacrotask,
                onError = _a.onError;
            this.onEnter = onEnter;
            this.onLeave = onLeave;
            this.setMicrotask = setMicrotask;
            this.setMacrotask = setMacrotask;
            this.onError = onError;
            if (Zone) {
                this.outer = this.inner = Zone.current;
                if (Zone['wtfZoneSpec']) {
                    this.inner = this.inner.fork(Zone['wtfZoneSpec']);
                }
                if (trace && Zone['longStackTraceZoneSpec']) {
                    this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);
                }
                this.inner = this.inner.fork({
                    name: 'angular',
                    properties: { 'isAngularZone': true },
                    onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {
                        try {
                            _this.onEnter();
                            return delegate.invokeTask(target, task, applyThis, applyArgs);
                        } finally {
                            _this.onLeave();
                        }
                    },
                    onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {
                        try {
                            _this.onEnter();
                            return delegate.invoke(target, callback, applyThis, applyArgs, source);
                        } finally {
                            _this.onLeave();
                        }
                    },
                    onHasTask: function (delegate, current, target, hasTaskState) {
                        delegate.hasTask(target, hasTaskState);
                        if (current == target) {
                            // We are only interested in hasTask events which originate from our zone
                            // (A child hasTask event is not interesting to us)
                            if (hasTaskState.change == 'microTask') {
                                _this.setMicrotask(hasTaskState.microTask);
                            } else if (hasTaskState.change == 'macroTask') {
                                _this.setMacrotask(hasTaskState.macroTask);
                            }
                        }
                    },
                    onHandleError: function (delegate, current, target, error) {
                        delegate.handleError(target, error);
                        _this.onError(new NgZoneError(error, error.stack));
                        return false;
                    }
                });
            } else {
                throw new Error('Angular requires Zone.js polyfill.');
            }
        }
        NgZoneImpl.isInAngularZone = function () {
            return Zone.current.get('isAngularZone') === true;
        };
        NgZoneImpl.prototype.runInner = function (fn) {
            return this.inner.run(fn);
        };
        ;
        NgZoneImpl.prototype.runInnerGuarded = function (fn) {
            return this.inner.runGuarded(fn);
        };
        ;
        NgZoneImpl.prototype.runOuter = function (fn) {
            return this.outer.run(fn);
        };
        ;
        return NgZoneImpl;
    }();
    exports.NgZoneImpl = NgZoneImpl;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone_impl.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
    var ng_zone_impl_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone_impl.js');
    var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
    var ng_zone_impl_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone_impl.js');
    exports.NgZoneError = ng_zone_impl_2.NgZoneError;
    var NgZone = function () {
      function NgZone(_a) {
        var _this = this;
        var _b = _a.enableLongStackTrace,
            enableLongStackTrace = _b === void 0 ? false : _b;
        this._hasPendingMicrotasks = false;
        this._hasPendingMacrotasks = false;
        this._isStable = true;
        this._nesting = 0;
        this._onUnstable = new async_1.EventEmitter(false);
        this._onMicrotaskEmpty = new async_1.EventEmitter(false);
        this._onStable = new async_1.EventEmitter(false);
        this._onErrorEvents = new async_1.EventEmitter(false);
        this._zoneImpl = new ng_zone_impl_1.NgZoneImpl({
          trace: enableLongStackTrace,
          onEnter: function () {
            _this._nesting++;
            if (_this._isStable) {
              _this._isStable = false;
              _this._onUnstable.emit(null);
            }
          },
          onLeave: function () {
            _this._nesting--;
            _this._checkStable();
          },
          setMicrotask: function (hasMicrotasks) {
            _this._hasPendingMicrotasks = hasMicrotasks;
            _this._checkStable();
          },
          setMacrotask: function (hasMacrotasks) {
            _this._hasPendingMacrotasks = hasMacrotasks;
          },
          onError: function (error) {
            return _this._onErrorEvents.emit(error);
          }
        });
      }
      NgZone.isInAngularZone = function () {
        return ng_zone_impl_1.NgZoneImpl.isInAngularZone();
      };
      NgZone.assertInAngularZone = function () {
        if (!ng_zone_impl_1.NgZoneImpl.isInAngularZone()) {
          throw new exceptions_1.BaseException('Expected to be in Angular Zone, but it is not!');
        }
      };
      NgZone.assertNotInAngularZone = function () {
        if (ng_zone_impl_1.NgZoneImpl.isInAngularZone()) {
          throw new exceptions_1.BaseException('Expected to not be in Angular Zone, but it is!');
        }
      };
      NgZone.prototype._checkStable = function () {
        var _this = this;
        if (this._nesting == 0) {
          if (!this._hasPendingMicrotasks && !this._isStable) {
            try {
              this._nesting++;
              this._onMicrotaskEmpty.emit(null);
            } finally {
              this._nesting--;
              if (!this._hasPendingMicrotasks) {
                try {
                  this.runOutsideAngular(function () {
                    return _this._onStable.emit(null);
                  });
                } finally {
                  this._isStable = true;
                }
              }
            }
          }
        }
      };
      ;
      Object.defineProperty(NgZone.prototype, "onUnstable", {
        get: function () {
          return this._onUnstable;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "onMicrotaskEmpty", {
        get: function () {
          return this._onMicrotaskEmpty;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "onStable", {
        get: function () {
          return this._onStable;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "onError", {
        get: function () {
          return this._onErrorEvents;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "hasPendingMicrotasks", {
        get: function () {
          return this._hasPendingMicrotasks;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "hasPendingMacrotasks", {
        get: function () {
          return this._hasPendingMacrotasks;
        },
        enumerable: true,
        configurable: true
      });
      NgZone.prototype.run = function (fn) {
        return this._zoneImpl.runInner(fn);
      };
      NgZone.prototype.runGuarded = function (fn) {
        return this._zoneImpl.runInnerGuarded(fn);
      };
      NgZone.prototype.runOutsideAngular = function (fn) {
        return this._zoneImpl.runOuter(fn);
      };
      return NgZone;
    }();
    exports.NgZone = NgZone;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/testability/testability.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/core@2.0.0-rc.1/src/di/decorators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var ng_zone_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js');
  var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js');
  var Testability = function () {
    function Testability(_ngZone) {
      this._ngZone = _ngZone;
      this._pendingCount = 0;
      this._isZoneStable = true;
      this._didWork = false;
      this._callbacks = [];
      this._watchAngularEvents();
    }
    Testability.prototype._watchAngularEvents = function () {
      var _this = this;
      async_1.ObservableWrapper.subscribe(this._ngZone.onUnstable, function (_) {
        _this._didWork = true;
        _this._isZoneStable = false;
      });
      this._ngZone.runOutsideAngular(function () {
        async_1.ObservableWrapper.subscribe(_this._ngZone.onStable, function (_) {
          ng_zone_1.NgZone.assertNotInAngularZone();
          lang_1.scheduleMicroTask(function () {
            _this._isZoneStable = true;
            _this._runCallbacksIfReady();
          });
        });
      });
    };
    Testability.prototype.increasePendingRequestCount = function () {
      this._pendingCount += 1;
      this._didWork = true;
      return this._pendingCount;
    };
    Testability.prototype.decreasePendingRequestCount = function () {
      this._pendingCount -= 1;
      if (this._pendingCount < 0) {
        throw new exceptions_1.BaseException('pending async requests below zero');
      }
      this._runCallbacksIfReady();
      return this._pendingCount;
    };
    Testability.prototype.isStable = function () {
      return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;
    };
    Testability.prototype._runCallbacksIfReady = function () {
      var _this = this;
      if (this.isStable()) {
        lang_1.scheduleMicroTask(function () {
          while (_this._callbacks.length !== 0) {
            _this._callbacks.pop()(_this._didWork);
          }
          _this._didWork = false;
        });
      } else {
        this._didWork = true;
      }
    };
    Testability.prototype.whenStable = function (callback) {
      this._callbacks.push(callback);
      this._runCallbacksIfReady();
    };
    Testability.prototype.getPendingRequestCount = function () {
      return this._pendingCount;
    };
    Testability.prototype.findBindings = function (using, provider, exactMatch) {
      return [];
    };
    Testability.prototype.findProviders = function (using, provider, exactMatch) {
      return [];
    };
    Testability.decorators = [{ type: decorators_1.Injectable }];
    Testability.ctorParameters = [{ type: ng_zone_1.NgZone }];
    return Testability;
  }();
  exports.Testability = Testability;
  var TestabilityRegistry = function () {
    function TestabilityRegistry() {
      this._applications = new collection_1.Map();
      _testabilityGetter.addToWindow(this);
    }
    TestabilityRegistry.prototype.registerApplication = function (token, testability) {
      this._applications.set(token, testability);
    };
    TestabilityRegistry.prototype.getTestability = function (elem) {
      return this._applications.get(elem);
    };
    TestabilityRegistry.prototype.getAllTestabilities = function () {
      return collection_1.MapWrapper.values(this._applications);
    };
    TestabilityRegistry.prototype.getAllRootElements = function () {
      return collection_1.MapWrapper.keys(this._applications);
    };
    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {
      if (findInAncestors === void 0) {
        findInAncestors = true;
      }
      return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);
    };
    TestabilityRegistry.decorators = [{ type: decorators_1.Injectable }];
    TestabilityRegistry.ctorParameters = [];
    return TestabilityRegistry;
  }();
  exports.TestabilityRegistry = TestabilityRegistry;
  var _NoopGetTestability = function () {
    function _NoopGetTestability() {}
    _NoopGetTestability.prototype.addToWindow = function (registry) {};
    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {
      return null;
    };
    return _NoopGetTestability;
  }();
  function setTestabilityGetter(getter) {
    _testabilityGetter = getter;
  }
  exports.setTestabilityGetter = setTestabilityGetter;
  var _testabilityGetter = new _NoopGetTestability();
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/application_ref.js', ['npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/di.js', 'npm:@angular/core@2.0.0-rc.1/src/application_tokens.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/testability/testability.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/console.js', 'npm:@angular/core@2.0.0-rc.1/src/profile/profile.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var ng_zone_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/zone/ng_zone.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var di_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di.js');
  var application_tokens_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_tokens.js');
  var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var testability_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/testability/testability.js');
  var component_resolver_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var console_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/console.js');
  var profile_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/profile/profile.js');
  function createNgZone() {
    return new ng_zone_1.NgZone({ enableLongStackTrace: lang_1.assertionsEnabled() });
  }
  exports.createNgZone = createNgZone;
  var _platform;
  var _inPlatformCreate = false;
  function createPlatform(injector) {
    if (_inPlatformCreate) {
      throw new exceptions_1.BaseException('Already creating a platform...');
    }
    if (lang_1.isPresent(_platform) && !_platform.disposed) {
      throw new exceptions_1.BaseException("There can be only one platform. Destroy the previous one to create a new one.");
    }
    lang_1.lockMode();
    _inPlatformCreate = true;
    try {
      _platform = injector.get(PlatformRef);
    } finally {
      _inPlatformCreate = false;
    }
    return _platform;
  }
  exports.createPlatform = createPlatform;
  function assertPlatform(requiredToken) {
    var platform = getPlatform();
    if (lang_1.isBlank(platform)) {
      throw new exceptions_1.BaseException('Not platform exists!');
    }
    if (lang_1.isPresent(platform) && lang_1.isBlank(platform.injector.get(requiredToken, null))) {
      throw new exceptions_1.BaseException('A platform with a different configuration has been created. Please destroy it first.');
    }
    return platform;
  }
  exports.assertPlatform = assertPlatform;
  function disposePlatform() {
    if (lang_1.isPresent(_platform) && !_platform.disposed) {
      _platform.dispose();
    }
  }
  exports.disposePlatform = disposePlatform;
  function getPlatform() {
    return lang_1.isPresent(_platform) && !_platform.disposed ? _platform : null;
  }
  exports.getPlatform = getPlatform;
  function coreBootstrap(injector, componentFactory) {
    var appRef = injector.get(ApplicationRef);
    return appRef.bootstrap(componentFactory);
  }
  exports.coreBootstrap = coreBootstrap;
  function coreLoadAndBootstrap(injector, componentType) {
    var appRef = injector.get(ApplicationRef);
    return appRef.run(function () {
      var componentResolver = injector.get(component_resolver_1.ComponentResolver);
      return async_1.PromiseWrapper.all([componentResolver.resolveComponent(componentType), appRef.waitForAsyncInitializers()]).then(function (arr) {
        return appRef.bootstrap(arr[0]);
      });
    });
  }
  exports.coreLoadAndBootstrap = coreLoadAndBootstrap;
  var PlatformRef = function () {
    function PlatformRef() {}
    Object.defineProperty(PlatformRef.prototype, "injector", {
      get: function () {
        throw exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(PlatformRef.prototype, "disposed", {
      get: function () {
        throw exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return PlatformRef;
  }();
  exports.PlatformRef = PlatformRef;
  var PlatformRef_ = function (_super) {
    __extends(PlatformRef_, _super);
    function PlatformRef_(_injector) {
      _super.call(this);
      this._injector = _injector;
      this._applications = [];
      this._disposeListeners = [];
      this._disposed = false;
      if (!_inPlatformCreate) {
        throw new exceptions_1.BaseException('Platforms have to be created via `createPlatform`!');
      }
      var inits = _injector.get(application_tokens_1.PLATFORM_INITIALIZER, null);
      if (lang_1.isPresent(inits)) inits.forEach(function (init) {
        return init();
      });
    }
    PlatformRef_.prototype.registerDisposeListener = function (dispose) {
      this._disposeListeners.push(dispose);
    };
    Object.defineProperty(PlatformRef_.prototype, "injector", {
      get: function () {
        return this._injector;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(PlatformRef_.prototype, "disposed", {
      get: function () {
        return this._disposed;
      },
      enumerable: true,
      configurable: true
    });
    PlatformRef_.prototype.addApplication = function (appRef) {
      this._applications.push(appRef);
    };
    PlatformRef_.prototype.dispose = function () {
      collection_1.ListWrapper.clone(this._applications).forEach(function (app) {
        return app.dispose();
      });
      this._disposeListeners.forEach(function (dispose) {
        return dispose();
      });
      this._disposed = true;
    };
    PlatformRef_.prototype._applicationDisposed = function (app) {
      collection_1.ListWrapper.remove(this._applications, app);
    };
    PlatformRef_.decorators = [{ type: di_1.Injectable }];
    PlatformRef_.ctorParameters = [{ type: di_1.Injector }];
    return PlatformRef_;
  }(PlatformRef);
  exports.PlatformRef_ = PlatformRef_;
  var ApplicationRef = function () {
    function ApplicationRef() {}
    Object.defineProperty(ApplicationRef.prototype, "injector", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ApplicationRef.prototype, "zone", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ApplicationRef.prototype, "componentTypes", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return ApplicationRef;
  }();
  exports.ApplicationRef = ApplicationRef;
  var ApplicationRef_ = function (_super) {
    __extends(ApplicationRef_, _super);
    function ApplicationRef_(_platform, _zone, _injector) {
      var _this = this;
      _super.call(this);
      this._platform = _platform;
      this._zone = _zone;
      this._injector = _injector;
      this._bootstrapListeners = [];
      this._disposeListeners = [];
      this._rootComponents = [];
      this._rootComponentTypes = [];
      this._changeDetectorRefs = [];
      this._runningTick = false;
      this._enforceNoNewChanges = false;
      var zone = _injector.get(ng_zone_1.NgZone);
      this._enforceNoNewChanges = lang_1.assertionsEnabled();
      zone.run(function () {
        _this._exceptionHandler = _injector.get(exceptions_1.ExceptionHandler);
      });
      this._asyncInitDonePromise = this.run(function () {
        var inits = _injector.get(application_tokens_1.APP_INITIALIZER, null);
        var asyncInitResults = [];
        var asyncInitDonePromise;
        if (lang_1.isPresent(inits)) {
          for (var i = 0; i < inits.length; i++) {
            var initResult = inits[i]();
            if (lang_1.isPromise(initResult)) {
              asyncInitResults.push(initResult);
            }
          }
        }
        if (asyncInitResults.length > 0) {
          asyncInitDonePromise = async_1.PromiseWrapper.all(asyncInitResults).then(function (_) {
            return _this._asyncInitDone = true;
          });
          _this._asyncInitDone = false;
        } else {
          _this._asyncInitDone = true;
          asyncInitDonePromise = async_1.PromiseWrapper.resolve(true);
        }
        return asyncInitDonePromise;
      });
      async_1.ObservableWrapper.subscribe(zone.onError, function (error) {
        _this._exceptionHandler.call(error.error, error.stackTrace);
      });
      async_1.ObservableWrapper.subscribe(this._zone.onMicrotaskEmpty, function (_) {
        _this._zone.run(function () {
          _this.tick();
        });
      });
    }
    ApplicationRef_.prototype.registerBootstrapListener = function (listener) {
      this._bootstrapListeners.push(listener);
    };
    ApplicationRef_.prototype.registerDisposeListener = function (dispose) {
      this._disposeListeners.push(dispose);
    };
    ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {
      this._changeDetectorRefs.push(changeDetector);
    };
    ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {
      collection_1.ListWrapper.remove(this._changeDetectorRefs, changeDetector);
    };
    ApplicationRef_.prototype.waitForAsyncInitializers = function () {
      return this._asyncInitDonePromise;
    };
    ApplicationRef_.prototype.run = function (callback) {
      var _this = this;
      var zone = this.injector.get(ng_zone_1.NgZone);
      var result;
      var completer = async_1.PromiseWrapper.completer();
      zone.run(function () {
        try {
          result = callback();
          if (lang_1.isPromise(result)) {
            async_1.PromiseWrapper.then(result, function (ref) {
              completer.resolve(ref);
            }, function (err, stackTrace) {
              completer.reject(err, stackTrace);
              _this._exceptionHandler.call(err, stackTrace);
            });
          }
        } catch (e) {
          _this._exceptionHandler.call(e, e.stack);
          throw e;
        }
      });
      return lang_1.isPromise(result) ? completer.promise : result;
    };
    ApplicationRef_.prototype.bootstrap = function (componentFactory) {
      var _this = this;
      if (!this._asyncInitDone) {
        throw new exceptions_1.BaseException('Cannot bootstrap as there are still asynchronous initializers running. Wait for them using waitForAsyncInitializers().');
      }
      return this.run(function () {
        _this._rootComponentTypes.push(componentFactory.componentType);
        var compRef = componentFactory.create(_this._injector, [], componentFactory.selector);
        compRef.onDestroy(function () {
          _this._unloadComponent(compRef);
        });
        var testability = compRef.injector.get(testability_1.Testability, null);
        if (lang_1.isPresent(testability)) {
          compRef.injector.get(testability_1.TestabilityRegistry).registerApplication(compRef.location.nativeElement, testability);
        }
        _this._loadComponent(compRef);
        var c = _this._injector.get(console_1.Console);
        if (lang_1.assertionsEnabled()) {
          c.log("Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.");
        }
        return compRef;
      });
    };
    ApplicationRef_.prototype._loadComponent = function (componentRef) {
      this._changeDetectorRefs.push(componentRef.changeDetectorRef);
      this.tick();
      this._rootComponents.push(componentRef);
      this._bootstrapListeners.forEach(function (listener) {
        return listener(componentRef);
      });
    };
    ApplicationRef_.prototype._unloadComponent = function (componentRef) {
      if (!collection_1.ListWrapper.contains(this._rootComponents, componentRef)) {
        return;
      }
      this.unregisterChangeDetector(componentRef.changeDetectorRef);
      collection_1.ListWrapper.remove(this._rootComponents, componentRef);
    };
    Object.defineProperty(ApplicationRef_.prototype, "injector", {
      get: function () {
        return this._injector;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ApplicationRef_.prototype, "zone", {
      get: function () {
        return this._zone;
      },
      enumerable: true,
      configurable: true
    });
    ApplicationRef_.prototype.tick = function () {
      if (this._runningTick) {
        throw new exceptions_1.BaseException("ApplicationRef.tick is called recursively");
      }
      var s = ApplicationRef_._tickScope();
      try {
        this._runningTick = true;
        this._changeDetectorRefs.forEach(function (detector) {
          return detector.detectChanges();
        });
        if (this._enforceNoNewChanges) {
          this._changeDetectorRefs.forEach(function (detector) {
            return detector.checkNoChanges();
          });
        }
      } finally {
        this._runningTick = false;
        profile_1.wtfLeave(s);
      }
    };
    ApplicationRef_.prototype.dispose = function () {
      collection_1.ListWrapper.clone(this._rootComponents).forEach(function (ref) {
        return ref.destroy();
      });
      this._disposeListeners.forEach(function (dispose) {
        return dispose();
      });
      this._platform._applicationDisposed(this);
    };
    Object.defineProperty(ApplicationRef_.prototype, "componentTypes", {
      get: function () {
        return this._rootComponentTypes;
      },
      enumerable: true,
      configurable: true
    });
    ApplicationRef_._tickScope = profile_1.wtfCreateScope('ApplicationRef#tick()');
    ApplicationRef_.decorators = [{ type: di_1.Injectable }];
    ApplicationRef_.ctorParameters = [{ type: PlatformRef_ }, { type: ng_zone_1.NgZone }, { type: di_1.Injector }];
    return ApplicationRef_;
  }(ApplicationRef);
  exports.ApplicationRef_ = ApplicationRef_;
  exports.PLATFORM_CORE_PROVIDERS = [PlatformRef_, {
    provide: PlatformRef,
    useExisting: PlatformRef_
  }];
  exports.APPLICATION_CORE_PROVIDERS = [{
    provide: ng_zone_1.NgZone,
    useFactory: createNgZone,
    deps: []
  }, ApplicationRef_, {
    provide: ApplicationRef,
    useExisting: ApplicationRef_
  }];
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/dynamic_component_loader.js', ['npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_injector.js', 'npm:@angular/core@2.0.0-rc.1/src/di/decorators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var component_resolver_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var reflective_injector_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_injector.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js');
  var DynamicComponentLoader = function () {
    function DynamicComponentLoader() {}
    return DynamicComponentLoader;
  }();
  exports.DynamicComponentLoader = DynamicComponentLoader;
  var DynamicComponentLoader_ = function (_super) {
    __extends(DynamicComponentLoader_, _super);
    function DynamicComponentLoader_(_compiler) {
      _super.call(this);
      this._compiler = _compiler;
    }
    DynamicComponentLoader_.prototype.loadAsRoot = function (type, overrideSelectorOrNode, injector, onDispose, projectableNodes) {
      return this._compiler.resolveComponent(type).then(function (componentFactory) {
        var componentRef = componentFactory.create(injector, projectableNodes, lang_1.isPresent(overrideSelectorOrNode) ? overrideSelectorOrNode : componentFactory.selector);
        if (lang_1.isPresent(onDispose)) {
          componentRef.onDestroy(onDispose);
        }
        return componentRef;
      });
    };
    DynamicComponentLoader_.prototype.loadNextToLocation = function (type, location, providers, projectableNodes) {
      if (providers === void 0) {
        providers = null;
      }
      if (projectableNodes === void 0) {
        projectableNodes = null;
      }
      return this._compiler.resolveComponent(type).then(function (componentFactory) {
        var contextInjector = location.parentInjector;
        var childInjector = lang_1.isPresent(providers) && providers.length > 0 ? reflective_injector_1.ReflectiveInjector.fromResolvedProviders(providers, contextInjector) : contextInjector;
        return location.createComponent(componentFactory, location.length, childInjector, projectableNodes);
      });
    };
    DynamicComponentLoader_.decorators = [{ type: decorators_1.Injectable }];
    DynamicComponentLoader_.ctorParameters = [{ type: component_resolver_1.ComponentResolver }];
    return DynamicComponentLoader_;
  }(DynamicComponentLoader);
  exports.DynamicComponentLoader_ = DynamicComponentLoader_;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/application_common_providers.js', ['npm:@angular/core@2.0.0-rc.1/src/application_tokens.js', 'npm:@angular/core@2.0.0-rc.1/src/application_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/dynamic_component_loader.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var application_tokens_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_tokens.js');
  var application_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_ref.js');
  var change_detection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js');
  var view_utils_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js');
  var component_resolver_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js');
  var dynamic_component_loader_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/dynamic_component_loader.js');
  var __unused;
  exports.APPLICATION_COMMON_PROVIDERS = [application_ref_1.APPLICATION_CORE_PROVIDERS, {
    provide: component_resolver_1.ComponentResolver,
    useClass: component_resolver_1.ReflectorComponentResolver
  }, application_tokens_1.APP_ID_RANDOM_PROVIDER, view_utils_1.ViewUtils, {
    provide: change_detection_1.IterableDiffers,
    useValue: change_detection_1.defaultIterableDiffers
  }, {
    provide: change_detection_1.KeyValueDiffers,
    useValue: change_detection_1.defaultKeyValueDiffers
  }, {
    provide: dynamic_component_loader_1.DynamicComponentLoader,
    useClass: dynamic_component_loader_1.DynamicComponentLoader_
  }];
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/metadata/lifecycle_hooks.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    (function (LifecycleHooks) {
        LifecycleHooks[LifecycleHooks["OnInit"] = 0] = "OnInit";
        LifecycleHooks[LifecycleHooks["OnDestroy"] = 1] = "OnDestroy";
        LifecycleHooks[LifecycleHooks["DoCheck"] = 2] = "DoCheck";
        LifecycleHooks[LifecycleHooks["OnChanges"] = 3] = "OnChanges";
        LifecycleHooks[LifecycleHooks["AfterContentInit"] = 4] = "AfterContentInit";
        LifecycleHooks[LifecycleHooks["AfterContentChecked"] = 5] = "AfterContentChecked";
        LifecycleHooks[LifecycleHooks["AfterViewInit"] = 6] = "AfterViewInit";
        LifecycleHooks[LifecycleHooks["AfterViewChecked"] = 7] = "AfterViewChecked";
    })(exports.LifecycleHooks || (exports.LifecycleHooks = {}));
    var LifecycleHooks = exports.LifecycleHooks;
    /**
     * @internal
     */
    exports.LIFECYCLE_HOOKS_VALUES = [LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges, LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit, LifecycleHooks.AfterViewChecked];
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/component_factory.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var view_utils_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js');
  var ComponentRef = function () {
    function ComponentRef() {}
    Object.defineProperty(ComponentRef.prototype, "location", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentRef.prototype, "injector", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentRef.prototype, "instance", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentRef.prototype, "hostView", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentRef.prototype, "changeDetectorRef", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentRef.prototype, "componentType", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return ComponentRef;
  }();
  exports.ComponentRef = ComponentRef;
  var ComponentRef_ = function (_super) {
    __extends(ComponentRef_, _super);
    function ComponentRef_(_hostElement, _componentType) {
      _super.call(this);
      this._hostElement = _hostElement;
      this._componentType = _componentType;
    }
    Object.defineProperty(ComponentRef_.prototype, "location", {
      get: function () {
        return this._hostElement.elementRef;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentRef_.prototype, "injector", {
      get: function () {
        return this._hostElement.injector;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentRef_.prototype, "instance", {
      get: function () {
        return this._hostElement.component;
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentRef_.prototype, "hostView", {
      get: function () {
        return this._hostElement.parentView.ref;
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentRef_.prototype, "changeDetectorRef", {
      get: function () {
        return this._hostElement.parentView.ref;
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentRef_.prototype, "componentType", {
      get: function () {
        return this._componentType;
      },
      enumerable: true,
      configurable: true
    });
    ComponentRef_.prototype.destroy = function () {
      this._hostElement.parentView.destroy();
    };
    ComponentRef_.prototype.onDestroy = function (callback) {
      this.hostView.onDestroy(callback);
    };
    return ComponentRef_;
  }(ComponentRef);
  exports.ComponentRef_ = ComponentRef_;
  var EMPTY_CONTEXT = new Object();
  var ComponentFactory = function () {
    function ComponentFactory(selector, _viewFactory, _componentType) {
      this.selector = selector;
      this._viewFactory = _viewFactory;
      this._componentType = _componentType;
    }
    Object.defineProperty(ComponentFactory.prototype, "componentType", {
      get: function () {
        return this._componentType;
      },
      enumerable: true,
      configurable: true
    });
    ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {
      if (projectableNodes === void 0) {
        projectableNodes = null;
      }
      if (rootSelectorOrNode === void 0) {
        rootSelectorOrNode = null;
      }
      var vu = injector.get(view_utils_1.ViewUtils);
      if (lang_1.isBlank(projectableNodes)) {
        projectableNodes = [];
      }
      var hostView = this._viewFactory(vu, injector, null);
      var hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);
      return new ComponentRef_(hostElement, this._componentType);
    };
    return ComponentFactory;
  }();
  exports.ComponentFactory = ComponentFactory;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/component_factory.js', 'npm:@angular/core@2.0.0-rc.1/src/di/decorators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
  var reflection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js');
  var component_factory_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_factory.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js');
  var ComponentResolver = function () {
    function ComponentResolver() {}
    return ComponentResolver;
  }();
  exports.ComponentResolver = ComponentResolver;
  function _isComponentFactory(type) {
    return type instanceof component_factory_1.ComponentFactory;
  }
  var ReflectorComponentResolver = function (_super) {
    __extends(ReflectorComponentResolver, _super);
    function ReflectorComponentResolver() {
      _super.apply(this, arguments);
    }
    ReflectorComponentResolver.prototype.resolveComponent = function (componentType) {
      var metadatas = reflection_1.reflector.annotations(componentType);
      var componentFactory = metadatas.find(_isComponentFactory);
      if (lang_1.isBlank(componentFactory)) {
        throw new exceptions_1.BaseException("No precompiled component " + lang_1.stringify(componentType) + " found");
      }
      return async_1.PromiseWrapper.resolve(componentFactory);
    };
    ReflectorComponentResolver.prototype.clearCache = function () {};
    ReflectorComponentResolver.decorators = [{ type: decorators_1.Injectable }];
    return ReflectorComponentResolver;
  }(ComponentResolver);
  exports.ReflectorComponentResolver = ReflectorComponentResolver;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/facade/promise.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var PromiseCompleter = function () {
        function PromiseCompleter() {
            var _this = this;
            this.promise = new Promise(function (res, rej) {
                _this.resolve = res;
                _this.reject = rej;
            });
        }
        return PromiseCompleter;
    }();
    exports.PromiseCompleter = PromiseCompleter;
    var PromiseWrapper = function () {
        function PromiseWrapper() {}
        PromiseWrapper.resolve = function (obj) {
            return Promise.resolve(obj);
        };
        PromiseWrapper.reject = function (obj, _) {
            return Promise.reject(obj);
        };
        // Note: We can't rename this method into `catch`, as this is not a valid
        // method name in Dart.
        PromiseWrapper.catchError = function (promise, onError) {
            return promise.catch(onError);
        };
        PromiseWrapper.all = function (promises) {
            if (promises.length == 0) return Promise.resolve([]);
            return Promise.all(promises);
        };
        PromiseWrapper.then = function (promise, success, rejection) {
            return promise.then(success, rejection);
        };
        PromiseWrapper.wrap = function (computation) {
            return new Promise(function (res, rej) {
                try {
                    res(computation());
                } catch (e) {
                    rej(e);
                }
            });
        };
        PromiseWrapper.scheduleMicrotask = function (computation) {
            PromiseWrapper.then(PromiseWrapper.resolve(null), computation, function (_) {});
        };
        PromiseWrapper.isPromise = function (obj) {
            return obj instanceof Promise;
        };
        PromiseWrapper.completer = function () {
            return new PromiseCompleter();
        };
        return PromiseWrapper;
    }();
    exports.PromiseWrapper = PromiseWrapper;
    

    return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/SubjectSubscription.js", ["npm:rxjs@5.0.0-beta.6/Subscription.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Subscription_1 = $__require("npm:rxjs@5.0.0-beta.6/Subscription.js");
  var SubjectSubscription = function (_super) {
    __extends(SubjectSubscription, _super);
    function SubjectSubscription(subject, observer) {
      _super.call(this);
      this.subject = subject;
      this.observer = observer;
      this.isUnsubscribed = false;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
      if (this.isUnsubscribed) {
        return;
      }
      this.isUnsubscribed = true;
      var subject = this.subject;
      var observers = subject.observers;
      this.subject = null;
      if (!observers || observers.length === 0 || subject.isUnsubscribed) {
        return;
      }
      var subscriberIndex = observers.indexOf(this.observer);
      if (subscriberIndex !== -1) {
        observers.splice(subscriberIndex, 1);
      }
    };
    return SubjectSubscription;
  }(Subscription_1.Subscription);
  exports.SubjectSubscription = SubjectSubscription;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/throwError.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function throwError(e) {
    throw e;
  }
  exports.throwError = throwError;
  

  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/util/ObjectUnsubscribedError.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
     * An error thrown when an action is invalid because the object has been
     * unsubscribed.
     *
     * @see {@link Subject}
     * @see {@link BehaviorSubject}
     *
     * @class ObjectUnsubscribedError
     */
    var ObjectUnsubscribedError = function (_super) {
        __extends(ObjectUnsubscribedError, _super);
        function ObjectUnsubscribedError() {
            _super.call(this, 'object unsubscribed');
            this.name = 'ObjectUnsubscribedError';
        }
        return ObjectUnsubscribedError;
    }(Error);
    exports.ObjectUnsubscribedError = ObjectUnsubscribedError;
    

    return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/Subject.js', ['npm:rxjs@5.0.0-beta.6/Observable.js', 'npm:rxjs@5.0.0-beta.6/Subscriber.js', 'npm:rxjs@5.0.0-beta.6/Subscription.js', 'npm:rxjs@5.0.0-beta.6/SubjectSubscription.js', 'npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js', 'npm:rxjs@5.0.0-beta.6/util/throwError.js', 'npm:rxjs@5.0.0-beta.6/util/ObjectUnsubscribedError.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var Subscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscriber.js');
  var Subscription_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscription.js');
  var SubjectSubscription_1 = $__require('npm:rxjs@5.0.0-beta.6/SubjectSubscription.js');
  var rxSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js');
  var throwError_1 = $__require('npm:rxjs@5.0.0-beta.6/util/throwError.js');
  var ObjectUnsubscribedError_1 = $__require('npm:rxjs@5.0.0-beta.6/util/ObjectUnsubscribedError.js');
  var Subject = function (_super) {
    __extends(Subject, _super);
    function Subject(destination, source) {
      _super.call(this);
      this.destination = destination;
      this.source = source;
      this.observers = [];
      this.isUnsubscribed = false;
      this.isStopped = false;
      this.hasErrored = false;
      this.dispatching = false;
      this.hasCompleted = false;
      this.source = source;
    }
    Subject.prototype.lift = function (operator) {
      var subject = new Subject(this.destination || this, this);
      subject.operator = operator;
      return subject;
    };
    Subject.prototype.add = function (subscription) {
      return Subscription_1.Subscription.prototype.add.call(this, subscription);
    };
    Subject.prototype.remove = function (subscription) {
      Subscription_1.Subscription.prototype.remove.call(this, subscription);
    };
    Subject.prototype.unsubscribe = function () {
      Subscription_1.Subscription.prototype.unsubscribe.call(this);
    };
    Subject.prototype._subscribe = function (subscriber) {
      if (this.source) {
        return this.source.subscribe(subscriber);
      } else {
        if (subscriber.isUnsubscribed) {
          return;
        } else if (this.hasErrored) {
          return subscriber.error(this.errorValue);
        } else if (this.hasCompleted) {
          return subscriber.complete();
        }
        this.throwIfUnsubscribed();
        var subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        this.observers.push(subscriber);
        return subscription;
      }
    };
    Subject.prototype._unsubscribe = function () {
      this.source = null;
      this.isStopped = true;
      this.observers = null;
      this.destination = null;
    };
    Subject.prototype.next = function (value) {
      this.throwIfUnsubscribed();
      if (this.isStopped) {
        return;
      }
      this.dispatching = true;
      this._next(value);
      this.dispatching = false;
      if (this.hasErrored) {
        this._error(this.errorValue);
      } else if (this.hasCompleted) {
        this._complete();
      }
    };
    Subject.prototype.error = function (err) {
      this.throwIfUnsubscribed();
      if (this.isStopped) {
        return;
      }
      this.isStopped = true;
      this.hasErrored = true;
      this.errorValue = err;
      if (this.dispatching) {
        return;
      }
      this._error(err);
    };
    Subject.prototype.complete = function () {
      this.throwIfUnsubscribed();
      if (this.isStopped) {
        return;
      }
      this.isStopped = true;
      this.hasCompleted = true;
      if (this.dispatching) {
        return;
      }
      this._complete();
    };
    Subject.prototype.asObservable = function () {
      var observable = new SubjectObservable(this);
      return observable;
    };
    Subject.prototype._next = function (value) {
      if (this.destination) {
        this.destination.next(value);
      } else {
        this._finalNext(value);
      }
    };
    Subject.prototype._finalNext = function (value) {
      var index = -1;
      var observers = this.observers.slice(0);
      var len = observers.length;
      while (++index < len) {
        observers[index].next(value);
      }
    };
    Subject.prototype._error = function (err) {
      if (this.destination) {
        this.destination.error(err);
      } else {
        this._finalError(err);
      }
    };
    Subject.prototype._finalError = function (err) {
      var index = -1;
      var observers = this.observers;
      this.observers = null;
      this.isUnsubscribed = true;
      if (observers) {
        var len = observers.length;
        while (++index < len) {
          observers[index].error(err);
        }
      }
      this.isUnsubscribed = false;
      this.unsubscribe();
    };
    Subject.prototype._complete = function () {
      if (this.destination) {
        this.destination.complete();
      } else {
        this._finalComplete();
      }
    };
    Subject.prototype._finalComplete = function () {
      var index = -1;
      var observers = this.observers;
      this.observers = null;
      this.isUnsubscribed = true;
      if (observers) {
        var len = observers.length;
        while (++index < len) {
          observers[index].complete();
        }
      }
      this.isUnsubscribed = false;
      this.unsubscribe();
    };
    Subject.prototype.throwIfUnsubscribed = function () {
      if (this.isUnsubscribed) {
        throwError_1.throwError(new ObjectUnsubscribedError_1.ObjectUnsubscribedError());
      }
    };
    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {
      return new Subscriber_1.Subscriber(this);
    };
    Subject.create = function (destination, source) {
      return new Subject(destination, source);
    };
    return Subject;
  }(Observable_1.Observable);
  exports.Subject = Subject;
  var SubjectObservable = function (_super) {
    __extends(SubjectObservable, _super);
    function SubjectObservable(source) {
      _super.call(this);
      this.source = source;
    }
    return SubjectObservable;
  }(Observable_1.Observable);
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js', ['npm:rxjs@5.0.0-beta.6/util/root.js', 'npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  var PromiseObservable = function (_super) {
    __extends(PromiseObservable, _super);
    function PromiseObservable(promise, scheduler) {
      if (scheduler === void 0) {
        scheduler = null;
      }
      _super.call(this);
      this.promise = promise;
      this.scheduler = scheduler;
    }
    PromiseObservable.create = function (promise, scheduler) {
      if (scheduler === void 0) {
        scheduler = null;
      }
      return new PromiseObservable(promise, scheduler);
    };
    PromiseObservable.prototype._subscribe = function (subscriber) {
      var _this = this;
      var promise = this.promise;
      var scheduler = this.scheduler;
      if (scheduler == null) {
        if (this._isScalar) {
          if (!subscriber.isUnsubscribed) {
            subscriber.next(this.value);
            subscriber.complete();
          }
        } else {
          promise.then(function (value) {
            _this.value = value;
            _this._isScalar = true;
            if (!subscriber.isUnsubscribed) {
              subscriber.next(value);
              subscriber.complete();
            }
          }, function (err) {
            if (!subscriber.isUnsubscribed) {
              subscriber.error(err);
            }
          }).then(null, function (err) {
            root_1.root.setTimeout(function () {
              throw err;
            });
          });
        }
      } else {
        if (this._isScalar) {
          if (!subscriber.isUnsubscribed) {
            return scheduler.schedule(dispatchNext, 0, {
              value: this.value,
              subscriber: subscriber
            });
          }
        } else {
          promise.then(function (value) {
            _this.value = value;
            _this._isScalar = true;
            if (!subscriber.isUnsubscribed) {
              subscriber.add(scheduler.schedule(dispatchNext, 0, {
                value: value,
                subscriber: subscriber
              }));
            }
          }, function (err) {
            if (!subscriber.isUnsubscribed) {
              subscriber.add(scheduler.schedule(dispatchError, 0, {
                err: err,
                subscriber: subscriber
              }));
            }
          }).then(null, function (err) {
            root_1.root.setTimeout(function () {
              throw err;
            });
          });
        }
      }
    };
    return PromiseObservable;
  }(Observable_1.Observable);
  exports.PromiseObservable = PromiseObservable;
  function dispatchNext(arg) {
    var value = arg.value,
        subscriber = arg.subscriber;
    if (!subscriber.isUnsubscribed) {
      subscriber.next(value);
      subscriber.complete();
    }
  }
  function dispatchError(arg) {
    var err = arg.err,
        subscriber = arg.subscriber;
    if (!subscriber.isUnsubscribed) {
      subscriber.error(err);
    }
  }
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/operator/toPromise.js', ['npm:rxjs@5.0.0-beta.6/util/root.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  function toPromise(PromiseCtor) {
    var _this = this;
    if (!PromiseCtor) {
      if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
        PromiseCtor = root_1.root.Rx.config.Promise;
      } else if (root_1.root.Promise) {
        PromiseCtor = root_1.root.Promise;
      }
    }
    if (!PromiseCtor) {
      throw new Error('no Promise impl found');
    }
    return new PromiseCtor(function (resolve, reject) {
      var value;
      _this.subscribe(function (x) {
        return value = x;
      }, function (err) {
        return reject(err);
      }, function () {
        return resolve(value);
      });
    });
  }
  exports.toPromise = toPromise;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/symbol/observable.js', ['npm:rxjs@5.0.0-beta.6/util/root.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var Symbol = root_1.root.Symbol;
  if (typeof Symbol === 'function') {
    if (Symbol.observable) {
      exports.$$observable = Symbol.observable;
    } else {
      if (typeof Symbol.for === 'function') {
        exports.$$observable = Symbol.for('observable');
      } else {
        exports.$$observable = Symbol('observable');
      }
      Symbol.observable = exports.$$observable;
    }
  } else {
    exports.$$observable = '@@observable';
  }
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/isArray.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  exports.isArray = Array.isArray || function (x) {
    return x && typeof x.length === 'number';
  };
  

  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/isObject.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    function isObject(x) {
        return x != null && typeof x === 'object';
    }
    exports.isObject = isObject;
    

    return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/isFunction.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    function isFunction(x) {
        return typeof x === 'function';
    }
    exports.isFunction = isFunction;
    

    return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/tryCatch.js", ["npm:rxjs@5.0.0-beta.6/util/errorObject.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var errorObject_1 = $__require("npm:rxjs@5.0.0-beta.6/util/errorObject.js");
  var tryCatchTarget;
  function tryCatcher() {
    try {
      return tryCatchTarget.apply(this, arguments);
    } catch (e) {
      errorObject_1.errorObject.e = e;
      return errorObject_1.errorObject;
    }
  }
  function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
  }
  exports.tryCatch = tryCatch;
  ;
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/errorObject.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  // typeof any so that it we don't have to cast when comparing a result to the error object

  var define,
      global = this || self,
      GLOBAL = global;
  exports.errorObject = { e: {} };
  

  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/util/UnsubscriptionError.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
     * An error thrown when one or more errors have occurred during the
     * `unsubscribe` of a {@link Subscription}.
     */
    var UnsubscriptionError = function (_super) {
        __extends(UnsubscriptionError, _super);
        function UnsubscriptionError(errors) {
            _super.call(this);
            this.errors = errors;
            this.name = 'UnsubscriptionError';
            this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) {
                return i + 1 + ") " + err.toString();
            }).join('\n') : '';
        }
        return UnsubscriptionError;
    }(Error);
    exports.UnsubscriptionError = UnsubscriptionError;
    

    return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/Subscription.js', ['npm:rxjs@5.0.0-beta.6/util/isArray.js', 'npm:rxjs@5.0.0-beta.6/util/isObject.js', 'npm:rxjs@5.0.0-beta.6/util/isFunction.js', 'npm:rxjs@5.0.0-beta.6/util/tryCatch.js', 'npm:rxjs@5.0.0-beta.6/util/errorObject.js', 'npm:rxjs@5.0.0-beta.6/util/UnsubscriptionError.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var isArray_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isArray.js');
    var isObject_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isObject.js');
    var isFunction_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isFunction.js');
    var tryCatch_1 = $__require('npm:rxjs@5.0.0-beta.6/util/tryCatch.js');
    var errorObject_1 = $__require('npm:rxjs@5.0.0-beta.6/util/errorObject.js');
    var UnsubscriptionError_1 = $__require('npm:rxjs@5.0.0-beta.6/util/UnsubscriptionError.js');
    var Subscription = function () {
      function Subscription(unsubscribe) {
        this.isUnsubscribed = false;
        if (unsubscribe) {
          this._unsubscribe = unsubscribe;
        }
      }
      Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.isUnsubscribed) {
          return;
        }
        this.isUnsubscribed = true;
        var _a = this,
            _unsubscribe = _a._unsubscribe,
            _subscriptions = _a._subscriptions;
        this._subscriptions = null;
        if (isFunction_1.isFunction(_unsubscribe)) {
          var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
          if (trial === errorObject_1.errorObject) {
            hasErrors = true;
            (errors = errors || []).push(errorObject_1.errorObject.e);
          }
        }
        if (isArray_1.isArray(_subscriptions)) {
          var index = -1;
          var len = _subscriptions.length;
          while (++index < len) {
            var sub = _subscriptions[index];
            if (isObject_1.isObject(sub)) {
              var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
              if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                errors = errors || [];
                var err = errorObject_1.errorObject.e;
                if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                  errors = errors.concat(err.errors);
                } else {
                  errors.push(err);
                }
              }
            }
          }
        }
        if (hasErrors) {
          throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
      };
      Subscription.prototype.add = function (teardown) {
        if (!teardown || teardown === this || teardown === Subscription.EMPTY) {
          return;
        }
        var sub = teardown;
        switch (typeof teardown) {
          case 'function':
            sub = new Subscription(teardown);
          case 'object':
            if (sub.isUnsubscribed || typeof sub.unsubscribe !== 'function') {
              break;
            } else if (this.isUnsubscribed) {
              sub.unsubscribe();
            } else {
              (this._subscriptions || (this._subscriptions = [])).push(sub);
            }
            break;
          default:
            throw new Error('Unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        return sub;
      };
      Subscription.prototype.remove = function (subscription) {
        if (subscription == null || subscription === this || subscription === Subscription.EMPTY) {
          return;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions) {
          var subscriptionIndex = subscriptions.indexOf(subscription);
          if (subscriptionIndex !== -1) {
            subscriptions.splice(subscriptionIndex, 1);
          }
        }
      };
      Subscription.EMPTY = function (empty) {
        empty.isUnsubscribed = true;
        return empty;
      }(new Subscription());
      return Subscription;
    }();
    exports.Subscription = Subscription;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic("npm:rxjs@5.0.0-beta.6/Observer.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    exports.empty = {
        isUnsubscribed: true,
        next: function (value) {},
        error: function (err) {
            throw err;
        },
        complete: function () {}
    };
    

    return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/Subscriber.js', ['npm:rxjs@5.0.0-beta.6/util/isFunction.js', 'npm:rxjs@5.0.0-beta.6/Subscription.js', 'npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js', 'npm:rxjs@5.0.0-beta.6/Observer.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var isFunction_1 = $__require('npm:rxjs@5.0.0-beta.6/util/isFunction.js');
  var Subscription_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscription.js');
  var rxSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js');
  var Observer_1 = $__require('npm:rxjs@5.0.0-beta.6/Observer.js');
  var Subscriber = function (_super) {
    __extends(Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
      _super.call(this);
      this.syncErrorValue = null;
      this.syncErrorThrown = false;
      this.syncErrorThrowable = false;
      this.isStopped = false;
      switch (arguments.length) {
        case 0:
          this.destination = Observer_1.empty;
          break;
        case 1:
          if (!destinationOrNext) {
            this.destination = Observer_1.empty;
            break;
          }
          if (typeof destinationOrNext === 'object') {
            if (destinationOrNext instanceof Subscriber) {
              this.destination = destinationOrNext;
              this.destination.add(this);
            } else {
              this.syncErrorThrowable = true;
              this.destination = new SafeSubscriber(this, destinationOrNext);
            }
            break;
          }
        default:
          this.syncErrorThrowable = true;
          this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
          break;
      }
    }
    Subscriber.create = function (next, error, complete) {
      var subscriber = new Subscriber(next, error, complete);
      subscriber.syncErrorThrowable = false;
      return subscriber;
    };
    Subscriber.prototype.next = function (value) {
      if (!this.isStopped) {
        this._next(value);
      }
    };
    Subscriber.prototype.error = function (err) {
      if (!this.isStopped) {
        this.isStopped = true;
        this._error(err);
      }
    };
    Subscriber.prototype.complete = function () {
      if (!this.isStopped) {
        this.isStopped = true;
        this._complete();
      }
    };
    Subscriber.prototype.unsubscribe = function () {
      if (this.isUnsubscribed) {
        return;
      }
      this.isStopped = true;
      _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
      this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
      this.destination.error(err);
      this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
      this.destination.complete();
      this.unsubscribe();
    };
    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () {
      return this;
    };
    return Subscriber;
  }(Subscription_1.Subscription);
  exports.Subscriber = Subscriber;
  var SafeSubscriber = function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parent, observerOrNext, error, complete) {
      _super.call(this);
      this._parent = _parent;
      var next;
      var context = this;
      if (isFunction_1.isFunction(observerOrNext)) {
        next = observerOrNext;
      } else if (observerOrNext) {
        context = observerOrNext;
        next = observerOrNext.next;
        error = observerOrNext.error;
        complete = observerOrNext.complete;
        if (isFunction_1.isFunction(context.unsubscribe)) {
          this.add(context.unsubscribe.bind(context));
        }
        context.unsubscribe = this.unsubscribe.bind(this);
      }
      this._context = context;
      this._next = next;
      this._error = error;
      this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
      if (!this.isStopped && this._next) {
        var _parent = this._parent;
        if (!_parent.syncErrorThrowable) {
          this.__tryOrUnsub(this._next, value);
        } else if (this.__tryOrSetError(_parent, this._next, value)) {
          this.unsubscribe();
        }
      }
    };
    SafeSubscriber.prototype.error = function (err) {
      if (!this.isStopped) {
        var _parent = this._parent;
        if (this._error) {
          if (!_parent.syncErrorThrowable) {
            this.__tryOrUnsub(this._error, err);
            this.unsubscribe();
          } else {
            this.__tryOrSetError(_parent, this._error, err);
            this.unsubscribe();
          }
        } else if (!_parent.syncErrorThrowable) {
          this.unsubscribe();
          throw err;
        } else {
          _parent.syncErrorValue = err;
          _parent.syncErrorThrown = true;
          this.unsubscribe();
        }
      }
    };
    SafeSubscriber.prototype.complete = function () {
      if (!this.isStopped) {
        var _parent = this._parent;
        if (this._complete) {
          if (!_parent.syncErrorThrowable) {
            this.__tryOrUnsub(this._complete);
            this.unsubscribe();
          } else {
            this.__tryOrSetError(_parent, this._complete);
            this.unsubscribe();
          }
        } else {
          this.unsubscribe();
        }
      }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
      try {
        fn.call(this._context, value);
      } catch (err) {
        this.unsubscribe();
        throw err;
      }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
      try {
        fn.call(this._context, value);
      } catch (err) {
        parent.syncErrorValue = err;
        parent.syncErrorThrown = true;
        return true;
      }
      return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
      var _parent = this._parent;
      this._context = null;
      this._parent = null;
      _parent.unsubscribe();
    };
    return SafeSubscriber;
  }(Subscriber);
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/util/root.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var objectTypes = {
        'boolean': false,
        'function': true,
        'object': true,
        'number': false,
        'string': false,
        'undefined': false
    };
    exports.root = objectTypes[typeof self] && self || objectTypes[typeof window] && window;
    /* tslint:disable:no-unused-variable */
    var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
    var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
    var freeGlobal = objectTypes[typeof global] && global;
    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
        exports.root = freeGlobal;
    }
    

    return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js', ['npm:rxjs@5.0.0-beta.6/util/root.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var Symbol = root_1.root.Symbol;
  exports.$$rxSubscriber = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('rxSubscriber') : '@@rxSubscriber';
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/util/toSubscriber.js', ['npm:rxjs@5.0.0-beta.6/Subscriber.js', 'npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var Subscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/Subscriber.js');
  var rxSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/rxSubscriber.js');
  function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver && typeof nextOrObserver === 'object') {
      if (nextOrObserver instanceof Subscriber_1.Subscriber) {
        return nextOrObserver;
      } else if (typeof nextOrObserver[rxSubscriber_1.$$rxSubscriber] === 'function') {
        return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();
      }
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
  }
  exports.toSubscriber = toSubscriber;
  return module.exports;
});
System.registerDynamic('npm:rxjs@5.0.0-beta.6/Observable.js', ['npm:rxjs@5.0.0-beta.6/util/root.js', 'npm:rxjs@5.0.0-beta.6/symbol/observable.js', 'npm:rxjs@5.0.0-beta.6/util/toSubscriber.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var root_1 = $__require('npm:rxjs@5.0.0-beta.6/util/root.js');
  var observable_1 = $__require('npm:rxjs@5.0.0-beta.6/symbol/observable.js');
  var toSubscriber_1 = $__require('npm:rxjs@5.0.0-beta.6/util/toSubscriber.js');
  var Observable = function () {
    function Observable(subscribe) {
      this._isScalar = false;
      if (subscribe) {
        this._subscribe = subscribe;
      }
    }
    Observable.prototype.lift = function (operator) {
      var observable = new Observable();
      observable.source = this;
      observable.operator = operator;
      return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
      var operator = this.operator;
      var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
      sink.add(operator ? operator.call(sink, this) : this._subscribe(sink));
      if (sink.syncErrorThrowable) {
        sink.syncErrorThrowable = false;
        if (sink.syncErrorThrown) {
          throw sink.syncErrorValue;
        }
      }
      return sink;
    };
    Observable.prototype.forEach = function (next, PromiseCtor) {
      var _this = this;
      if (!PromiseCtor) {
        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
          PromiseCtor = root_1.root.Rx.config.Promise;
        } else if (root_1.root.Promise) {
          PromiseCtor = root_1.root.Promise;
        }
      }
      if (!PromiseCtor) {
        throw new Error('no Promise impl found');
      }
      return new PromiseCtor(function (resolve, reject) {
        var subscription = _this.subscribe(function (value) {
          if (subscription) {
            try {
              next(value);
            } catch (err) {
              reject(err);
              subscription.unsubscribe();
            }
          } else {
            next(value);
          }
        }, reject, resolve);
      });
    };
    Observable.prototype._subscribe = function (subscriber) {
      return this.source.subscribe(subscriber);
    };
    Observable.prototype[observable_1.$$observable] = function () {
      return this;
    };
    Observable.create = function (subscribe) {
      return new Observable(subscribe);
    };
    return Observable;
  }();
  exports.Observable = Observable;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/facade/async.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/promise.js', 'npm:rxjs@5.0.0-beta.6/Subject.js', 'npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js', 'npm:rxjs@5.0.0-beta.6/operator/toPromise.js', 'npm:rxjs@5.0.0-beta.6/Observable.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var promise_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/promise.js');
  exports.PromiseWrapper = promise_1.PromiseWrapper;
  exports.PromiseCompleter = promise_1.PromiseCompleter;
  var Subject_1 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  var PromiseObservable_1 = $__require('npm:rxjs@5.0.0-beta.6/observable/PromiseObservable.js');
  var toPromise_1 = $__require('npm:rxjs@5.0.0-beta.6/operator/toPromise.js');
  var Observable_1 = $__require('npm:rxjs@5.0.0-beta.6/Observable.js');
  exports.Observable = Observable_1.Observable;
  var Subject_2 = $__require('npm:rxjs@5.0.0-beta.6/Subject.js');
  exports.Subject = Subject_2.Subject;
  var TimerWrapper = function () {
    function TimerWrapper() {}
    TimerWrapper.setTimeout = function (fn, millis) {
      return lang_1.global.setTimeout(fn, millis);
    };
    TimerWrapper.clearTimeout = function (id) {
      lang_1.global.clearTimeout(id);
    };
    TimerWrapper.setInterval = function (fn, millis) {
      return lang_1.global.setInterval(fn, millis);
    };
    TimerWrapper.clearInterval = function (id) {
      lang_1.global.clearInterval(id);
    };
    return TimerWrapper;
  }();
  exports.TimerWrapper = TimerWrapper;
  var ObservableWrapper = function () {
    function ObservableWrapper() {}
    ObservableWrapper.subscribe = function (emitter, onNext, onError, onComplete) {
      if (onComplete === void 0) {
        onComplete = function () {};
      }
      onError = typeof onError === "function" && onError || lang_1.noop;
      onComplete = typeof onComplete === "function" && onComplete || lang_1.noop;
      return emitter.subscribe({
        next: onNext,
        error: onError,
        complete: onComplete
      });
    };
    ObservableWrapper.isObservable = function (obs) {
      return !!obs.subscribe;
    };
    ObservableWrapper.hasSubscribers = function (obs) {
      return obs.observers.length > 0;
    };
    ObservableWrapper.dispose = function (subscription) {
      subscription.unsubscribe();
    };
    ObservableWrapper.callNext = function (emitter, value) {
      emitter.next(value);
    };
    ObservableWrapper.callEmit = function (emitter, value) {
      emitter.emit(value);
    };
    ObservableWrapper.callError = function (emitter, error) {
      emitter.error(error);
    };
    ObservableWrapper.callComplete = function (emitter) {
      emitter.complete();
    };
    ObservableWrapper.fromPromise = function (promise) {
      return PromiseObservable_1.PromiseObservable.create(promise);
    };
    ObservableWrapper.toPromise = function (obj) {
      return toPromise_1.toPromise.call(obj);
    };
    return ObservableWrapper;
  }();
  exports.ObservableWrapper = ObservableWrapper;
  var EventEmitter = function (_super) {
    __extends(EventEmitter, _super);
    function EventEmitter(isAsync) {
      if (isAsync === void 0) {
        isAsync = true;
      }
      _super.call(this);
      this._isAsync = isAsync;
    }
    EventEmitter.prototype.emit = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.next = function (value) {
      _super.prototype.next.call(this, value);
    };
    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {
      var schedulerFn;
      var errorFn = function (err) {
        return null;
      };
      var completeFn = function () {
        return null;
      };
      if (generatorOrNext && typeof generatorOrNext === 'object') {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext.next(value);
          });
        } : function (value) {
          generatorOrNext.next(value);
        };
        if (generatorOrNext.error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return generatorOrNext.error(err);
            });
          } : function (err) {
            generatorOrNext.error(err);
          };
        }
        if (generatorOrNext.complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return generatorOrNext.complete();
            });
          } : function () {
            generatorOrNext.complete();
          };
        }
      } else {
        schedulerFn = this._isAsync ? function (value) {
          setTimeout(function () {
            return generatorOrNext(value);
          });
        } : function (value) {
          generatorOrNext(value);
        };
        if (error) {
          errorFn = this._isAsync ? function (err) {
            setTimeout(function () {
              return error(err);
            });
          } : function (err) {
            error(err);
          };
        }
        if (complete) {
          completeFn = this._isAsync ? function () {
            setTimeout(function () {
              return complete();
            });
          } : function () {
            complete();
          };
        }
      }
      return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);
    };
    return EventEmitter;
  }(Subject_1.Subject);
  exports.EventEmitter = EventEmitter;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/view_ref.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var constants_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js');
  var ViewRef = function () {
    function ViewRef() {}
    Object.defineProperty(ViewRef.prototype, "destroyed", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return ViewRef;
  }();
  exports.ViewRef = ViewRef;
  var EmbeddedViewRef = function (_super) {
    __extends(EmbeddedViewRef, _super);
    function EmbeddedViewRef() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(EmbeddedViewRef.prototype, "context", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(EmbeddedViewRef.prototype, "rootNodes", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return EmbeddedViewRef;
  }(ViewRef);
  exports.EmbeddedViewRef = EmbeddedViewRef;
  var ViewRef_ = function () {
    function ViewRef_(_view) {
      this._view = _view;
      this._view = _view;
    }
    Object.defineProperty(ViewRef_.prototype, "internalView", {
      get: function () {
        return this._view;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewRef_.prototype, "rootNodes", {
      get: function () {
        return this._view.flatRootNodes;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewRef_.prototype, "context", {
      get: function () {
        return this._view.context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewRef_.prototype, "destroyed", {
      get: function () {
        return this._view.destroyed;
      },
      enumerable: true,
      configurable: true
    });
    ViewRef_.prototype.markForCheck = function () {
      this._view.markPathToRootAsCheckOnce();
    };
    ViewRef_.prototype.detach = function () {
      this._view.cdMode = constants_1.ChangeDetectionStrategy.Detached;
    };
    ViewRef_.prototype.detectChanges = function () {
      this._view.detectChanges(false);
    };
    ViewRef_.prototype.checkNoChanges = function () {
      this._view.detectChanges(true);
    };
    ViewRef_.prototype.reattach = function () {
      this._view.cdMode = constants_1.ChangeDetectionStrategy.CheckAlways;
      this.markForCheck();
    };
    ViewRef_.prototype.onDestroy = function (callback) {
      this._view.disposables.push(callback);
    };
    ViewRef_.prototype.destroy = function () {
      this._view.destroy();
    };
    return ViewRef_;
  }();
  exports.ViewRef_ = ViewRef_;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/linker/element_injector.js", ["npm:@angular/core@2.0.0-rc.1/src/di/injector.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var injector_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/di/injector.js");
  var _UNDEFINED = new Object();
  var ElementInjector = function (_super) {
    __extends(ElementInjector, _super);
    function ElementInjector(_view, _nodeIndex) {
      _super.call(this);
      this._view = _view;
      this._nodeIndex = _nodeIndex;
    }
    ElementInjector.prototype.get = function (token, notFoundValue) {
      if (notFoundValue === void 0) {
        notFoundValue = injector_1.THROW_IF_NOT_FOUND;
      }
      var result = _UNDEFINED;
      if (result === _UNDEFINED) {
        result = this._view.injectorGet(token, this._nodeIndex, _UNDEFINED);
      }
      if (result === _UNDEFINED) {
        result = this._view.parentInjector.get(token, notFoundValue);
      }
      return result;
    };
    return ElementInjector;
  }(injector_1.Injector);
  exports.ElementInjector = ElementInjector;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/view.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/element.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js', 'npm:@angular/core@2.0.0-rc.1/src/profile/profile.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/debug_context.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/element_injector.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var element_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/element.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
  var view_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_ref.js');
  var view_type_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js');
  var view_utils_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js');
  var change_detection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js');
  var profile_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/profile/profile.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js');
  var debug_context_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/debug_context.js');
  var element_injector_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/element_injector.js');
  var _scope_check = profile_1.wtfCreateScope("AppView#check(ascii id)");
  var AppView = function () {
    function AppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode) {
      this.clazz = clazz;
      this.componentType = componentType;
      this.type = type;
      this.viewUtils = viewUtils;
      this.parentInjector = parentInjector;
      this.declarationAppElement = declarationAppElement;
      this.cdMode = cdMode;
      this.contentChildren = [];
      this.viewChildren = [];
      this.viewContainerElement = null;
      this.cdState = change_detection_1.ChangeDetectorState.NeverChecked;
      this.destroyed = false;
      this.ref = new view_ref_1.ViewRef_(this);
      if (type === view_type_1.ViewType.COMPONENT || type === view_type_1.ViewType.HOST) {
        this.renderer = viewUtils.renderComponent(componentType);
      } else {
        this.renderer = declarationAppElement.parentView.renderer;
      }
    }
    AppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {
      this.context = context;
      var projectableNodes;
      switch (this.type) {
        case view_type_1.ViewType.COMPONENT:
          projectableNodes = view_utils_1.ensureSlotCount(givenProjectableNodes, this.componentType.slotCount);
          break;
        case view_type_1.ViewType.EMBEDDED:
          projectableNodes = this.declarationAppElement.parentView.projectableNodes;
          break;
        case view_type_1.ViewType.HOST:
          projectableNodes = givenProjectableNodes;
          break;
      }
      this._hasExternalHostElement = lang_1.isPresent(rootSelectorOrNode);
      this.projectableNodes = projectableNodes;
      return this.createInternal(rootSelectorOrNode);
    };
    AppView.prototype.createInternal = function (rootSelectorOrNode) {
      return null;
    };
    AppView.prototype.init = function (rootNodesOrAppElements, allNodes, disposables, subscriptions) {
      this.rootNodesOrAppElements = rootNodesOrAppElements;
      this.allNodes = allNodes;
      this.disposables = disposables;
      this.subscriptions = subscriptions;
      if (this.type === view_type_1.ViewType.COMPONENT) {
        this.declarationAppElement.parentView.viewChildren.push(this);
        this.dirtyParentQueriesInternal();
      }
    };
    AppView.prototype.selectOrCreateHostElement = function (elementName, rootSelectorOrNode, debugInfo) {
      var hostElement;
      if (lang_1.isPresent(rootSelectorOrNode)) {
        hostElement = this.renderer.selectRootElement(rootSelectorOrNode, debugInfo);
      } else {
        hostElement = this.renderer.createElement(null, elementName, debugInfo);
      }
      return hostElement;
    };
    AppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {
      return this.injectorGetInternal(token, nodeIndex, notFoundResult);
    };
    AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {
      return notFoundResult;
    };
    AppView.prototype.injector = function (nodeIndex) {
      if (lang_1.isPresent(nodeIndex)) {
        return new element_injector_1.ElementInjector(this, nodeIndex);
      } else {
        return this.parentInjector;
      }
    };
    AppView.prototype.destroy = function () {
      if (this._hasExternalHostElement) {
        this.renderer.detachView(this.flatRootNodes);
      } else if (lang_1.isPresent(this.viewContainerElement)) {
        this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));
      }
      this._destroyRecurse();
    };
    AppView.prototype._destroyRecurse = function () {
      if (this.destroyed) {
        return;
      }
      var children = this.contentChildren;
      for (var i = 0; i < children.length; i++) {
        children[i]._destroyRecurse();
      }
      children = this.viewChildren;
      for (var i = 0; i < children.length; i++) {
        children[i]._destroyRecurse();
      }
      this.destroyLocal();
      this.destroyed = true;
    };
    AppView.prototype.destroyLocal = function () {
      var hostElement = this.type === view_type_1.ViewType.COMPONENT ? this.declarationAppElement.nativeElement : null;
      for (var i = 0; i < this.disposables.length; i++) {
        this.disposables[i]();
      }
      for (var i = 0; i < this.subscriptions.length; i++) {
        async_1.ObservableWrapper.dispose(this.subscriptions[i]);
      }
      this.destroyInternal();
      if (this._hasExternalHostElement) {
        this.renderer.detachView(this.flatRootNodes);
      } else if (lang_1.isPresent(this.viewContainerElement)) {
        this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));
      } else {
        this.dirtyParentQueriesInternal();
      }
      this.renderer.destroyView(hostElement, this.allNodes);
    };
    AppView.prototype.destroyInternal = function () {};
    Object.defineProperty(AppView.prototype, "changeDetectorRef", {
      get: function () {
        return this.ref;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AppView.prototype, "parent", {
      get: function () {
        return lang_1.isPresent(this.declarationAppElement) ? this.declarationAppElement.parentView : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AppView.prototype, "flatRootNodes", {
      get: function () {
        return view_utils_1.flattenNestedViewRenderNodes(this.rootNodesOrAppElements);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AppView.prototype, "lastRootNode", {
      get: function () {
        var lastNode = this.rootNodesOrAppElements.length > 0 ? this.rootNodesOrAppElements[this.rootNodesOrAppElements.length - 1] : null;
        return _findLastRenderNode(lastNode);
      },
      enumerable: true,
      configurable: true
    });
    AppView.prototype.dirtyParentQueriesInternal = function () {};
    AppView.prototype.detectChanges = function (throwOnChange) {
      var s = _scope_check(this.clazz);
      if (this.cdMode === change_detection_1.ChangeDetectionStrategy.Detached || this.cdMode === change_detection_1.ChangeDetectionStrategy.Checked || this.cdState === change_detection_1.ChangeDetectorState.Errored) return;
      if (this.destroyed) {
        this.throwDestroyedError('detectChanges');
      }
      this.detectChangesInternal(throwOnChange);
      if (this.cdMode === change_detection_1.ChangeDetectionStrategy.CheckOnce) this.cdMode = change_detection_1.ChangeDetectionStrategy.Checked;
      this.cdState = change_detection_1.ChangeDetectorState.CheckedBefore;
      profile_1.wtfLeave(s);
    };
    AppView.prototype.detectChangesInternal = function (throwOnChange) {
      this.detectContentChildrenChanges(throwOnChange);
      this.detectViewChildrenChanges(throwOnChange);
    };
    AppView.prototype.detectContentChildrenChanges = function (throwOnChange) {
      for (var i = 0; i < this.contentChildren.length; ++i) {
        this.contentChildren[i].detectChanges(throwOnChange);
      }
    };
    AppView.prototype.detectViewChildrenChanges = function (throwOnChange) {
      for (var i = 0; i < this.viewChildren.length; ++i) {
        this.viewChildren[i].detectChanges(throwOnChange);
      }
    };
    AppView.prototype.addToContentChildren = function (renderAppElement) {
      renderAppElement.parentView.contentChildren.push(this);
      this.viewContainerElement = renderAppElement;
      this.dirtyParentQueriesInternal();
    };
    AppView.prototype.removeFromContentChildren = function (renderAppElement) {
      collection_1.ListWrapper.remove(renderAppElement.parentView.contentChildren, this);
      this.dirtyParentQueriesInternal();
      this.viewContainerElement = null;
    };
    AppView.prototype.markAsCheckOnce = function () {
      this.cdMode = change_detection_1.ChangeDetectionStrategy.CheckOnce;
    };
    AppView.prototype.markPathToRootAsCheckOnce = function () {
      var c = this;
      while (lang_1.isPresent(c) && c.cdMode !== change_detection_1.ChangeDetectionStrategy.Detached) {
        if (c.cdMode === change_detection_1.ChangeDetectionStrategy.Checked) {
          c.cdMode = change_detection_1.ChangeDetectionStrategy.CheckOnce;
        }
        var parentEl = c.type === view_type_1.ViewType.COMPONENT ? c.declarationAppElement : c.viewContainerElement;
        c = lang_1.isPresent(parentEl) ? parentEl.parentView : null;
      }
    };
    AppView.prototype.eventHandler = function (cb) {
      return cb;
    };
    AppView.prototype.throwDestroyedError = function (details) {
      throw new exceptions_1.ViewDestroyedException(details);
    };
    return AppView;
  }();
  exports.AppView = AppView;
  var DebugAppView = function (_super) {
    __extends(DebugAppView, _super);
    function DebugAppView(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode, staticNodeDebugInfos) {
      _super.call(this, clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode);
      this.staticNodeDebugInfos = staticNodeDebugInfos;
      this._currentDebugContext = null;
    }
    DebugAppView.prototype.create = function (context, givenProjectableNodes, rootSelectorOrNode) {
      this._resetDebug();
      try {
        return _super.prototype.create.call(this, context, givenProjectableNodes, rootSelectorOrNode);
      } catch (e) {
        this._rethrowWithContext(e, e.stack);
        throw e;
      }
    };
    DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {
      this._resetDebug();
      try {
        return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);
      } catch (e) {
        this._rethrowWithContext(e, e.stack);
        throw e;
      }
    };
    DebugAppView.prototype.destroyLocal = function () {
      this._resetDebug();
      try {
        _super.prototype.destroyLocal.call(this);
      } catch (e) {
        this._rethrowWithContext(e, e.stack);
        throw e;
      }
    };
    DebugAppView.prototype.detectChanges = function (throwOnChange) {
      this._resetDebug();
      try {
        _super.prototype.detectChanges.call(this, throwOnChange);
      } catch (e) {
        this._rethrowWithContext(e, e.stack);
        throw e;
      }
    };
    DebugAppView.prototype._resetDebug = function () {
      this._currentDebugContext = null;
    };
    DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {
      return this._currentDebugContext = new debug_context_1.DebugContext(this, nodeIndex, rowNum, colNum);
    };
    DebugAppView.prototype._rethrowWithContext = function (e, stack) {
      if (!(e instanceof exceptions_1.ViewWrappedException)) {
        if (!(e instanceof exceptions_1.ExpressionChangedAfterItHasBeenCheckedException)) {
          this.cdState = change_detection_1.ChangeDetectorState.Errored;
        }
        if (lang_1.isPresent(this._currentDebugContext)) {
          throw new exceptions_1.ViewWrappedException(e, stack, this._currentDebugContext);
        }
      }
    };
    DebugAppView.prototype.eventHandler = function (cb) {
      var _this = this;
      var superHandler = _super.prototype.eventHandler.call(this, cb);
      return function (event) {
        _this._resetDebug();
        try {
          return superHandler(event);
        } catch (e) {
          _this._rethrowWithContext(e, e.stack);
          throw e;
        }
      };
    };
    return DebugAppView;
  }(AppView);
  exports.DebugAppView = DebugAppView;
  function _findLastRenderNode(node) {
    var lastNode;
    if (node instanceof element_1.AppElement) {
      var appEl = node;
      lastNode = appEl.nativeElement;
      if (lang_1.isPresent(appEl.nestedViews)) {
        for (var i = appEl.nestedViews.length - 1; i >= 0; i--) {
          var nestedView = appEl.nestedViews[i];
          if (nestedView.rootNodesOrAppElements.length > 0) {
            lastNode = _findLastRenderNode(nestedView.rootNodesOrAppElements[nestedView.rootNodesOrAppElements.length - 1]);
          }
        }
      }
    } else {
      lastNode = node;
    }
    return lastNode;
  }
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/security.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property
    * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly
    * handled.
    *
    * See DomSanitizationService for more details on security in Angular applications.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    (function (SecurityContext) {
        SecurityContext[SecurityContext["NONE"] = 0] = "NONE";
        SecurityContext[SecurityContext["HTML"] = 1] = "HTML";
        SecurityContext[SecurityContext["STYLE"] = 2] = "STYLE";
        SecurityContext[SecurityContext["SCRIPT"] = 3] = "SCRIPT";
        SecurityContext[SecurityContext["URL"] = 4] = "URL";
        SecurityContext[SecurityContext["RESOURCE_URL"] = 5] = "RESOURCE_URL";
    })(exports.SecurityContext || (exports.SecurityContext = {}));
    var SecurityContext = exports.SecurityContext;
    /**
     * SanitizationService is used by the views to sanitize potentially dangerous values. This is a
     * private API, use code should only refer to DomSanitizationService.
     */
    var SanitizationService = function () {
        function SanitizationService() {}
        return SanitizationService;
    }();
    exports.SanitizationService = SanitizationService;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/linker/element_ref.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * A wrapper around a native element inside of a View.
    *
    * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM
    * element.
    */
    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,
    // i.e. users have to ask for what they need. With that, we can build better analysis tools
    // and could do better codegen in the future.

    var define,
        global = this || self,
        GLOBAL = global;
    var ElementRef = function () {
        function ElementRef(nativeElement) {
            this.nativeElement = nativeElement;
        }
        return ElementRef;
    }();
    exports.ElementRef = ElementRef;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/profile/wtf_impl.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var trace;
  var events;
  function detectWTF() {
    var wtf = lang_1.global['wtf'];
    if (wtf) {
      trace = wtf['trace'];
      if (trace) {
        events = trace['events'];
        return true;
      }
    }
    return false;
  }
  exports.detectWTF = detectWTF;
  function createScope(signature, flags) {
    if (flags === void 0) {
      flags = null;
    }
    return events.createScope(signature, flags);
  }
  exports.createScope = createScope;
  function leave(scope, returnValue) {
    trace.leaveScope(scope, returnValue);
    return returnValue;
  }
  exports.leave = leave;
  function startTimeRange(rangeType, action) {
    return trace.beginTimeRange(rangeType, action);
  }
  exports.startTimeRange = startTimeRange;
  function endTimeRange(range) {
    trace.endTimeRange(range);
  }
  exports.endTimeRange = endTimeRange;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/profile/profile.js", ["npm:@angular/core@2.0.0-rc.1/src/profile/wtf_impl.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var impl = $__require("npm:@angular/core@2.0.0-rc.1/src/profile/wtf_impl.js");
  exports.wtfEnabled = impl.detectWTF();
  function noopScope(arg0, arg1) {
    return null;
  }
  exports.wtfCreateScope = exports.wtfEnabled ? impl.createScope : function (signature, flags) {
    return noopScope;
  };
  exports.wtfLeave = exports.wtfEnabled ? impl.leave : function (s, r) {
    return r;
  };
  exports.wtfStartTimeRange = exports.wtfEnabled ? impl.startTimeRange : function (rangeType, action) {
    return null;
  };
  exports.wtfEndTimeRange = exports.wtfEnabled ? impl.endTimeRange : function (r) {
    return null;
  };
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/view_container_ref.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/profile/profile.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var profile_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/profile/profile.js');
  var ViewContainerRef = function () {
    function ViewContainerRef() {}
    Object.defineProperty(ViewContainerRef.prototype, "element", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewContainerRef.prototype, "injector", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewContainerRef.prototype, "parentInjector", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewContainerRef.prototype, "length", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return ViewContainerRef;
  }();
  exports.ViewContainerRef = ViewContainerRef;
  var ViewContainerRef_ = function () {
    function ViewContainerRef_(_element) {
      this._element = _element;
      this._createComponentInContainerScope = profile_1.wtfCreateScope('ViewContainerRef#createComponent()');
      this._insertScope = profile_1.wtfCreateScope('ViewContainerRef#insert()');
      this._removeScope = profile_1.wtfCreateScope('ViewContainerRef#remove()');
      this._detachScope = profile_1.wtfCreateScope('ViewContainerRef#detach()');
    }
    ViewContainerRef_.prototype.get = function (index) {
      return this._element.nestedViews[index].ref;
    };
    Object.defineProperty(ViewContainerRef_.prototype, "length", {
      get: function () {
        var views = this._element.nestedViews;
        return lang_1.isPresent(views) ? views.length : 0;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewContainerRef_.prototype, "element", {
      get: function () {
        return this._element.elementRef;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewContainerRef_.prototype, "injector", {
      get: function () {
        return this._element.injector;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewContainerRef_.prototype, "parentInjector", {
      get: function () {
        return this._element.parentInjector;
      },
      enumerable: true,
      configurable: true
    });
    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {
      if (context === void 0) {
        context = null;
      }
      if (index === void 0) {
        index = -1;
      }
      var viewRef = templateRef.createEmbeddedView(context);
      this.insert(viewRef, index);
      return viewRef;
    };
    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {
      if (index === void 0) {
        index = -1;
      }
      if (injector === void 0) {
        injector = null;
      }
      if (projectableNodes === void 0) {
        projectableNodes = null;
      }
      var s = this._createComponentInContainerScope();
      var contextInjector = lang_1.isPresent(injector) ? injector : this._element.parentInjector;
      var componentRef = componentFactory.create(contextInjector, projectableNodes);
      this.insert(componentRef.hostView, index);
      return profile_1.wtfLeave(s, componentRef);
    };
    ViewContainerRef_.prototype.insert = function (viewRef, index) {
      if (index === void 0) {
        index = -1;
      }
      var s = this._insertScope();
      if (index == -1) index = this.length;
      var viewRef_ = viewRef;
      this._element.attachView(viewRef_.internalView, index);
      return profile_1.wtfLeave(s, viewRef_);
    };
    ViewContainerRef_.prototype.indexOf = function (viewRef) {
      return collection_1.ListWrapper.indexOf(this._element.nestedViews, viewRef.internalView);
    };
    ViewContainerRef_.prototype.remove = function (index) {
      if (index === void 0) {
        index = -1;
      }
      var s = this._removeScope();
      if (index == -1) index = this.length - 1;
      var view = this._element.detachView(index);
      view.destroy();
      profile_1.wtfLeave(s);
    };
    ViewContainerRef_.prototype.detach = function (index) {
      if (index === void 0) {
        index = -1;
      }
      var s = this._detachScope();
      if (index == -1) index = this.length - 1;
      var view = this._element.detachView(index);
      return profile_1.wtfLeave(s, view.ref);
    };
    ViewContainerRef_.prototype.clear = function () {
      for (var i = this.length - 1; i >= 0; i--) {
        this.remove(i);
      }
    };
    return ViewContainerRef_;
  }();
  exports.ViewContainerRef_ = ViewContainerRef_;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/element.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/element_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_container_ref.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var view_type_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js');
  var element_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/element_ref.js');
  var view_container_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_container_ref.js');
  var AppElement = function () {
    function AppElement(index, parentIndex, parentView, nativeElement) {
      this.index = index;
      this.parentIndex = parentIndex;
      this.parentView = parentView;
      this.nativeElement = nativeElement;
      this.nestedViews = null;
      this.componentView = null;
    }
    Object.defineProperty(AppElement.prototype, "elementRef", {
      get: function () {
        return new element_ref_1.ElementRef(this.nativeElement);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AppElement.prototype, "vcRef", {
      get: function () {
        return new view_container_ref_1.ViewContainerRef_(this);
      },
      enumerable: true,
      configurable: true
    });
    AppElement.prototype.initComponent = function (component, componentConstructorViewQueries, view) {
      this.component = component;
      this.componentConstructorViewQueries = componentConstructorViewQueries;
      this.componentView = view;
    };
    Object.defineProperty(AppElement.prototype, "parentInjector", {
      get: function () {
        return this.parentView.injector(this.parentIndex);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AppElement.prototype, "injector", {
      get: function () {
        return this.parentView.injector(this.index);
      },
      enumerable: true,
      configurable: true
    });
    AppElement.prototype.mapNestedViews = function (nestedViewClass, callback) {
      var result = [];
      if (lang_1.isPresent(this.nestedViews)) {
        this.nestedViews.forEach(function (nestedView) {
          if (nestedView.clazz === nestedViewClass) {
            result.push(callback(nestedView));
          }
        });
      }
      return result;
    };
    AppElement.prototype.attachView = function (view, viewIndex) {
      if (view.type === view_type_1.ViewType.COMPONENT) {
        throw new exceptions_1.BaseException("Component views can't be moved!");
      }
      var nestedViews = this.nestedViews;
      if (nestedViews == null) {
        nestedViews = [];
        this.nestedViews = nestedViews;
      }
      collection_1.ListWrapper.insert(nestedViews, viewIndex, view);
      var refRenderNode;
      if (viewIndex > 0) {
        var prevView = nestedViews[viewIndex - 1];
        refRenderNode = prevView.lastRootNode;
      } else {
        refRenderNode = this.nativeElement;
      }
      if (lang_1.isPresent(refRenderNode)) {
        view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);
      }
      view.addToContentChildren(this);
    };
    AppElement.prototype.detachView = function (viewIndex) {
      var view = collection_1.ListWrapper.removeAt(this.nestedViews, viewIndex);
      if (view.type === view_type_1.ViewType.COMPONENT) {
        throw new exceptions_1.BaseException("Component views can't be moved!");
      }
      view.renderer.detachView(view.flatRootNodes);
      view.removeFromContentChildren(this);
      return view;
    };
    return AppElement;
  }();
  exports.AppElement = AppElement;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js");
  var ExpressionChangedAfterItHasBeenCheckedException = function (_super) {
    __extends(ExpressionChangedAfterItHasBeenCheckedException, _super);
    function ExpressionChangedAfterItHasBeenCheckedException(oldValue, currValue, context) {
      _super.call(this, "Expression has changed after it was checked. " + ("Previous value: '" + oldValue + "'. Current value: '" + currValue + "'"));
    }
    return ExpressionChangedAfterItHasBeenCheckedException;
  }(exceptions_1.BaseException);
  exports.ExpressionChangedAfterItHasBeenCheckedException = ExpressionChangedAfterItHasBeenCheckedException;
  var ViewWrappedException = function (_super) {
    __extends(ViewWrappedException, _super);
    function ViewWrappedException(originalException, originalStack, context) {
      _super.call(this, "Error in " + context.source, originalException, originalStack, context);
    }
    return ViewWrappedException;
  }(exceptions_1.WrappedException);
  exports.ViewWrappedException = ViewWrappedException;
  var ViewDestroyedException = function (_super) {
    __extends(ViewDestroyedException, _super);
    function ViewDestroyedException(details) {
      _super.call(this, "Attempt to use a destroyed view: " + details);
    }
    return ViewDestroyedException;
  }(exceptions_1.BaseException);
  exports.ViewDestroyedException = ViewDestroyedException;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/iterable_differs.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/di.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var di_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di.js');
  var IterableDiffers = function () {
    function IterableDiffers(factories) {
      this.factories = factories;
    }
    IterableDiffers.create = function (factories, parent) {
      if (lang_1.isPresent(parent)) {
        var copied = collection_1.ListWrapper.clone(parent.factories);
        factories = factories.concat(copied);
        return new IterableDiffers(factories);
      } else {
        return new IterableDiffers(factories);
      }
    };
    IterableDiffers.extend = function (factories) {
      return new di_1.Provider(IterableDiffers, {
        useFactory: function (parent) {
          if (lang_1.isBlank(parent)) {
            throw new exceptions_1.BaseException('Cannot extend IterableDiffers without a parent injector');
          }
          return IterableDiffers.create(factories, parent);
        },
        deps: [[IterableDiffers, new di_1.SkipSelfMetadata(), new di_1.OptionalMetadata()]]
      });
    };
    IterableDiffers.prototype.find = function (iterable) {
      var factory = this.factories.find(function (f) {
        return f.supports(iterable);
      });
      if (lang_1.isPresent(factory)) {
        return factory;
      } else {
        throw new exceptions_1.BaseException("Cannot find a differ supporting object '" + iterable + "' of type '" + lang_1.getTypeNameForDebugging(iterable) + "'");
      }
    };
    return IterableDiffers;
  }();
  exports.IterableDiffers = IterableDiffers;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_iterable_differ.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var DefaultIterableDifferFactory = function () {
    function DefaultIterableDifferFactory() {}
    DefaultIterableDifferFactory.prototype.supports = function (obj) {
      return collection_1.isListLikeIterable(obj);
    };
    DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {
      return new DefaultIterableDiffer(trackByFn);
    };
    return DefaultIterableDifferFactory;
  }();
  exports.DefaultIterableDifferFactory = DefaultIterableDifferFactory;
  var trackByIdentity = function (index, item) {
    return item;
  };
  var DefaultIterableDiffer = function () {
    function DefaultIterableDiffer(_trackByFn) {
      this._trackByFn = _trackByFn;
      this._length = null;
      this._collection = null;
      this._linkedRecords = null;
      this._unlinkedRecords = null;
      this._previousItHead = null;
      this._itHead = null;
      this._itTail = null;
      this._additionsHead = null;
      this._additionsTail = null;
      this._movesHead = null;
      this._movesTail = null;
      this._removalsHead = null;
      this._removalsTail = null;
      this._identityChangesHead = null;
      this._identityChangesTail = null;
      this._trackByFn = lang_1.isPresent(this._trackByFn) ? this._trackByFn : trackByIdentity;
    }
    Object.defineProperty(DefaultIterableDiffer.prototype, "collection", {
      get: function () {
        return this._collection;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DefaultIterableDiffer.prototype, "length", {
      get: function () {
        return this._length;
      },
      enumerable: true,
      configurable: true
    });
    DefaultIterableDiffer.prototype.forEachItem = function (fn) {
      var record;
      for (record = this._itHead; record !== null; record = record._next) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {
      var record;
      for (record = this._previousItHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {
      var record;
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {
      var record;
      for (record = this._movesHead; record !== null; record = record._nextMoved) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {
      var record;
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {
      var record;
      for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.diff = function (collection) {
      if (lang_1.isBlank(collection)) collection = [];
      if (!collection_1.isListLikeIterable(collection)) {
        throw new exceptions_1.BaseException("Error trying to diff '" + collection + "'");
      }
      if (this.check(collection)) {
        return this;
      } else {
        return null;
      }
    };
    DefaultIterableDiffer.prototype.onDestroy = function () {};
    DefaultIterableDiffer.prototype.check = function (collection) {
      var _this = this;
      this._reset();
      var record = this._itHead;
      var mayBeDirty = false;
      var index;
      var item;
      var itemTrackBy;
      if (lang_1.isArray(collection)) {
        var list = collection;
        this._length = collection.length;
        for (index = 0; index < this._length; index++) {
          item = list[index];
          itemTrackBy = this._trackByFn(index, item);
          if (record === null || !lang_1.looseIdentical(record.trackById, itemTrackBy)) {
            record = this._mismatch(record, item, itemTrackBy, index);
            mayBeDirty = true;
          } else {
            if (mayBeDirty) {
              record = this._verifyReinsertion(record, item, itemTrackBy, index);
            }
            if (!lang_1.looseIdentical(record.item, item)) this._addIdentityChange(record, item);
          }
          record = record._next;
        }
      } else {
        index = 0;
        collection_1.iterateListLike(collection, function (item) {
          itemTrackBy = _this._trackByFn(index, item);
          if (record === null || !lang_1.looseIdentical(record.trackById, itemTrackBy)) {
            record = _this._mismatch(record, item, itemTrackBy, index);
            mayBeDirty = true;
          } else {
            if (mayBeDirty) {
              record = _this._verifyReinsertion(record, item, itemTrackBy, index);
            }
            if (!lang_1.looseIdentical(record.item, item)) _this._addIdentityChange(record, item);
          }
          record = record._next;
          index++;
        });
        this._length = index;
      }
      this._truncate(record);
      this._collection = collection;
      return this.isDirty;
    };
    Object.defineProperty(DefaultIterableDiffer.prototype, "isDirty", {
      get: function () {
        return this._additionsHead !== null || this._movesHead !== null || this._removalsHead !== null || this._identityChangesHead !== null;
      },
      enumerable: true,
      configurable: true
    });
    DefaultIterableDiffer.prototype._reset = function () {
      if (this.isDirty) {
        var record;
        var nextRecord;
        for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }
        for (record = this._additionsHead; record !== null; record = record._nextAdded) {
          record.previousIndex = record.currentIndex;
        }
        this._additionsHead = this._additionsTail = null;
        for (record = this._movesHead; record !== null; record = nextRecord) {
          record.previousIndex = record.currentIndex;
          nextRecord = record._nextMoved;
        }
        this._movesHead = this._movesTail = null;
        this._removalsHead = this._removalsTail = null;
        this._identityChangesHead = this._identityChangesTail = null;
      }
    };
    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {
      var previousRecord;
      if (record === null) {
        previousRecord = this._itTail;
      } else {
        previousRecord = record._prev;
        this._remove(record);
      }
      record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);
      if (record !== null) {
        if (!lang_1.looseIdentical(record.item, item)) this._addIdentityChange(record, item);
        this._moveAfter(record, previousRecord, index);
      } else {
        record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);
        if (record !== null) {
          if (!lang_1.looseIdentical(record.item, item)) this._addIdentityChange(record, item);
          this._reinsertAfter(record, previousRecord, index);
        } else {
          record = this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);
        }
      }
      return record;
    };
    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {
      var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);
      if (reinsertRecord !== null) {
        record = this._reinsertAfter(reinsertRecord, record._prev, index);
      } else if (record.currentIndex != index) {
        record.currentIndex = index;
        this._addToMoves(record, index);
      }
      return record;
    };
    DefaultIterableDiffer.prototype._truncate = function (record) {
      while (record !== null) {
        var nextRecord = record._next;
        this._addToRemovals(this._unlink(record));
        record = nextRecord;
      }
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.clear();
      }
      if (this._additionsTail !== null) {
        this._additionsTail._nextAdded = null;
      }
      if (this._movesTail !== null) {
        this._movesTail._nextMoved = null;
      }
      if (this._itTail !== null) {
        this._itTail._next = null;
      }
      if (this._removalsTail !== null) {
        this._removalsTail._nextRemoved = null;
      }
      if (this._identityChangesTail !== null) {
        this._identityChangesTail._nextIdentityChange = null;
      }
    };
    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.remove(record);
      }
      var prev = record._prevRemoved;
      var next = record._nextRemoved;
      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }
      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }
      this._insertAfter(record, prevRecord, index);
      this._addToMoves(record, index);
      return record;
    };
    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {
      this._unlink(record);
      this._insertAfter(record, prevRecord, index);
      this._addToMoves(record, index);
      return record;
    };
    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {
      this._insertAfter(record, prevRecord, index);
      if (this._additionsTail === null) {
        this._additionsTail = this._additionsHead = record;
      } else {
        this._additionsTail = this._additionsTail._nextAdded = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {
      var next = prevRecord === null ? this._itHead : prevRecord._next;
      record._next = next;
      record._prev = prevRecord;
      if (next === null) {
        this._itTail = record;
      } else {
        next._prev = record;
      }
      if (prevRecord === null) {
        this._itHead = record;
      } else {
        prevRecord._next = record;
      }
      if (this._linkedRecords === null) {
        this._linkedRecords = new _DuplicateMap();
      }
      this._linkedRecords.put(record);
      record.currentIndex = index;
      return record;
    };
    DefaultIterableDiffer.prototype._remove = function (record) {
      return this._addToRemovals(this._unlink(record));
    };
    DefaultIterableDiffer.prototype._unlink = function (record) {
      if (this._linkedRecords !== null) {
        this._linkedRecords.remove(record);
      }
      var prev = record._prev;
      var next = record._next;
      if (prev === null) {
        this._itHead = next;
      } else {
        prev._next = next;
      }
      if (next === null) {
        this._itTail = prev;
      } else {
        next._prev = prev;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {
      if (record.previousIndex === toIndex) {
        return record;
      }
      if (this._movesTail === null) {
        this._movesTail = this._movesHead = record;
      } else {
        this._movesTail = this._movesTail._nextMoved = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._addToRemovals = function (record) {
      if (this._unlinkedRecords === null) {
        this._unlinkedRecords = new _DuplicateMap();
      }
      this._unlinkedRecords.put(record);
      record.currentIndex = null;
      record._nextRemoved = null;
      if (this._removalsTail === null) {
        this._removalsTail = this._removalsHead = record;
        record._prevRemoved = null;
      } else {
        record._prevRemoved = this._removalsTail;
        this._removalsTail = this._removalsTail._nextRemoved = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {
      record.item = item;
      if (this._identityChangesTail === null) {
        this._identityChangesTail = this._identityChangesHead = record;
      } else {
        this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype.toString = function () {
      var list = [];
      this.forEachItem(function (record) {
        return list.push(record);
      });
      var previous = [];
      this.forEachPreviousItem(function (record) {
        return previous.push(record);
      });
      var additions = [];
      this.forEachAddedItem(function (record) {
        return additions.push(record);
      });
      var moves = [];
      this.forEachMovedItem(function (record) {
        return moves.push(record);
      });
      var removals = [];
      this.forEachRemovedItem(function (record) {
        return removals.push(record);
      });
      var identityChanges = [];
      this.forEachIdentityChange(function (record) {
        return identityChanges.push(record);
      });
      return "collection: " + list.join(', ') + "\n" + "previous: " + previous.join(', ') + "\n" + "additions: " + additions.join(', ') + "\n" + "moves: " + moves.join(', ') + "\n" + "removals: " + removals.join(', ') + "\n" + "identityChanges: " + identityChanges.join(', ') + "\n";
    };
    return DefaultIterableDiffer;
  }();
  exports.DefaultIterableDiffer = DefaultIterableDiffer;
  var CollectionChangeRecord = function () {
    function CollectionChangeRecord(item, trackById) {
      this.item = item;
      this.trackById = trackById;
      this.currentIndex = null;
      this.previousIndex = null;
      this._nextPrevious = null;
      this._prev = null;
      this._next = null;
      this._prevDup = null;
      this._nextDup = null;
      this._prevRemoved = null;
      this._nextRemoved = null;
      this._nextAdded = null;
      this._nextMoved = null;
      this._nextIdentityChange = null;
    }
    CollectionChangeRecord.prototype.toString = function () {
      return this.previousIndex === this.currentIndex ? lang_1.stringify(this.item) : lang_1.stringify(this.item) + '[' + lang_1.stringify(this.previousIndex) + '->' + lang_1.stringify(this.currentIndex) + ']';
    };
    return CollectionChangeRecord;
  }();
  exports.CollectionChangeRecord = CollectionChangeRecord;
  var _DuplicateItemRecordList = function () {
    function _DuplicateItemRecordList() {
      this._head = null;
      this._tail = null;
    }
    _DuplicateItemRecordList.prototype.add = function (record) {
      if (this._head === null) {
        this._head = this._tail = record;
        record._nextDup = null;
        record._prevDup = null;
      } else {
        this._tail._nextDup = record;
        record._prevDup = this._tail;
        record._nextDup = null;
        this._tail = record;
      }
    };
    _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {
      var record;
      for (record = this._head; record !== null; record = record._nextDup) {
        if ((afterIndex === null || afterIndex < record.currentIndex) && lang_1.looseIdentical(record.trackById, trackById)) {
          return record;
        }
      }
      return null;
    };
    _DuplicateItemRecordList.prototype.remove = function (record) {
      var prev = record._prevDup;
      var next = record._nextDup;
      if (prev === null) {
        this._head = next;
      } else {
        prev._nextDup = next;
      }
      if (next === null) {
        this._tail = prev;
      } else {
        next._prevDup = prev;
      }
      return this._head === null;
    };
    return _DuplicateItemRecordList;
  }();
  var _DuplicateMap = function () {
    function _DuplicateMap() {
      this.map = new Map();
    }
    _DuplicateMap.prototype.put = function (record) {
      var key = lang_1.getMapKey(record.trackById);
      var duplicates = this.map.get(key);
      if (!lang_1.isPresent(duplicates)) {
        duplicates = new _DuplicateItemRecordList();
        this.map.set(key, duplicates);
      }
      duplicates.add(record);
    };
    _DuplicateMap.prototype.get = function (trackById, afterIndex) {
      if (afterIndex === void 0) {
        afterIndex = null;
      }
      var key = lang_1.getMapKey(trackById);
      var recordList = this.map.get(key);
      return lang_1.isBlank(recordList) ? null : recordList.get(trackById, afterIndex);
    };
    _DuplicateMap.prototype.remove = function (record) {
      var key = lang_1.getMapKey(record.trackById);
      var recordList = this.map.get(key);
      if (recordList.remove(record)) {
        this.map.delete(key);
      }
      return record;
    };
    Object.defineProperty(_DuplicateMap.prototype, "isEmpty", {
      get: function () {
        return this.map.size === 0;
      },
      enumerable: true,
      configurable: true
    });
    _DuplicateMap.prototype.clear = function () {
      this.map.clear();
    };
    _DuplicateMap.prototype.toString = function () {
      return '_DuplicateMap(' + lang_1.stringify(this.map) + ')';
    };
    return _DuplicateMap;
  }();
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/keyvalue_differs.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/di.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var di_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di.js');
  var KeyValueDiffers = function () {
    function KeyValueDiffers(factories) {
      this.factories = factories;
    }
    KeyValueDiffers.create = function (factories, parent) {
      if (lang_1.isPresent(parent)) {
        var copied = collection_1.ListWrapper.clone(parent.factories);
        factories = factories.concat(copied);
        return new KeyValueDiffers(factories);
      } else {
        return new KeyValueDiffers(factories);
      }
    };
    KeyValueDiffers.extend = function (factories) {
      return new di_1.Provider(KeyValueDiffers, {
        useFactory: function (parent) {
          if (lang_1.isBlank(parent)) {
            throw new exceptions_1.BaseException('Cannot extend KeyValueDiffers without a parent injector');
          }
          return KeyValueDiffers.create(factories, parent);
        },
        deps: [[KeyValueDiffers, new di_1.SkipSelfMetadata(), new di_1.OptionalMetadata()]]
      });
    };
    KeyValueDiffers.prototype.find = function (kv) {
      var factory = this.factories.find(function (f) {
        return f.supports(kv);
      });
      if (lang_1.isPresent(factory)) {
        return factory;
      } else {
        throw new exceptions_1.BaseException("Cannot find a differ supporting object '" + kv + "'");
      }
    };
    return KeyValueDiffers;
  }();
  exports.KeyValueDiffers = KeyValueDiffers;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_keyvalue_differ.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var DefaultKeyValueDifferFactory = function () {
    function DefaultKeyValueDifferFactory() {}
    DefaultKeyValueDifferFactory.prototype.supports = function (obj) {
      return obj instanceof Map || lang_1.isJsObject(obj);
    };
    DefaultKeyValueDifferFactory.prototype.create = function (cdRef) {
      return new DefaultKeyValueDiffer();
    };
    return DefaultKeyValueDifferFactory;
  }();
  exports.DefaultKeyValueDifferFactory = DefaultKeyValueDifferFactory;
  var DefaultKeyValueDiffer = function () {
    function DefaultKeyValueDiffer() {
      this._records = new Map();
      this._mapHead = null;
      this._previousMapHead = null;
      this._changesHead = null;
      this._changesTail = null;
      this._additionsHead = null;
      this._additionsTail = null;
      this._removalsHead = null;
      this._removalsTail = null;
    }
    Object.defineProperty(DefaultKeyValueDiffer.prototype, "isDirty", {
      get: function () {
        return this._additionsHead !== null || this._changesHead !== null || this._removalsHead !== null;
      },
      enumerable: true,
      configurable: true
    });
    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {
      var record;
      for (record = this._mapHead; record !== null; record = record._next) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {
      var record;
      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {
      var record;
      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {
      var record;
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {
      var record;
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.diff = function (map) {
      if (lang_1.isBlank(map)) map = collection_1.MapWrapper.createFromPairs([]);
      if (!(map instanceof Map || lang_1.isJsObject(map))) {
        throw new exceptions_1.BaseException("Error trying to diff '" + map + "'");
      }
      if (this.check(map)) {
        return this;
      } else {
        return null;
      }
    };
    DefaultKeyValueDiffer.prototype.onDestroy = function () {};
    DefaultKeyValueDiffer.prototype.check = function (map) {
      var _this = this;
      this._reset();
      var records = this._records;
      var oldSeqRecord = this._mapHead;
      var lastOldSeqRecord = null;
      var lastNewSeqRecord = null;
      var seqChanged = false;
      this._forEach(map, function (value, key) {
        var newSeqRecord;
        if (oldSeqRecord !== null && key === oldSeqRecord.key) {
          newSeqRecord = oldSeqRecord;
          if (!lang_1.looseIdentical(value, oldSeqRecord.currentValue)) {
            oldSeqRecord.previousValue = oldSeqRecord.currentValue;
            oldSeqRecord.currentValue = value;
            _this._addToChanges(oldSeqRecord);
          }
        } else {
          seqChanged = true;
          if (oldSeqRecord !== null) {
            oldSeqRecord._next = null;
            _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);
            _this._addToRemovals(oldSeqRecord);
          }
          if (records.has(key)) {
            newSeqRecord = records.get(key);
          } else {
            newSeqRecord = new KeyValueChangeRecord(key);
            records.set(key, newSeqRecord);
            newSeqRecord.currentValue = value;
            _this._addToAdditions(newSeqRecord);
          }
        }
        if (seqChanged) {
          if (_this._isInRemovals(newSeqRecord)) {
            _this._removeFromRemovals(newSeqRecord);
          }
          if (lastNewSeqRecord == null) {
            _this._mapHead = newSeqRecord;
          } else {
            lastNewSeqRecord._next = newSeqRecord;
          }
        }
        lastOldSeqRecord = oldSeqRecord;
        lastNewSeqRecord = newSeqRecord;
        oldSeqRecord = oldSeqRecord === null ? null : oldSeqRecord._next;
      });
      this._truncate(lastOldSeqRecord, oldSeqRecord);
      return this.isDirty;
    };
    DefaultKeyValueDiffer.prototype._reset = function () {
      if (this.isDirty) {
        var record;
        for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }
        for (record = this._changesHead; record !== null; record = record._nextChanged) {
          record.previousValue = record.currentValue;
        }
        for (record = this._additionsHead; record != null; record = record._nextAdded) {
          record.previousValue = record.currentValue;
        }
        this._changesHead = this._changesTail = null;
        this._additionsHead = this._additionsTail = null;
        this._removalsHead = this._removalsTail = null;
      }
    };
    DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {
      while (record !== null) {
        if (lastRecord === null) {
          this._mapHead = null;
        } else {
          lastRecord._next = null;
        }
        var nextRecord = record._next;
        this._addToRemovals(record);
        lastRecord = record;
        record = nextRecord;
      }
      for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {
        rec.previousValue = rec.currentValue;
        rec.currentValue = null;
        this._records.delete(rec.key);
      }
    };
    DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {
      return record === this._removalsHead || record._nextRemoved !== null || record._prevRemoved !== null;
    };
    DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {
      if (this._removalsHead === null) {
        this._removalsHead = this._removalsTail = record;
      } else {
        this._removalsTail._nextRemoved = record;
        record._prevRemoved = this._removalsTail;
        this._removalsTail = record;
      }
    };
    DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {
      var next = record._next;
      if (prev === null) {
        this._mapHead = next;
      } else {
        prev._next = next;
      }
    };
    DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {
      var prev = record._prevRemoved;
      var next = record._nextRemoved;
      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }
      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }
      record._prevRemoved = record._nextRemoved = null;
    };
    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {
      if (this._additionsHead === null) {
        this._additionsHead = this._additionsTail = record;
      } else {
        this._additionsTail._nextAdded = record;
        this._additionsTail = record;
      }
    };
    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {
      if (this._changesHead === null) {
        this._changesHead = this._changesTail = record;
      } else {
        this._changesTail._nextChanged = record;
        this._changesTail = record;
      }
    };
    DefaultKeyValueDiffer.prototype.toString = function () {
      var items = [];
      var previous = [];
      var changes = [];
      var additions = [];
      var removals = [];
      var record;
      for (record = this._mapHead; record !== null; record = record._next) {
        items.push(lang_1.stringify(record));
      }
      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        previous.push(lang_1.stringify(record));
      }
      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        changes.push(lang_1.stringify(record));
      }
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        additions.push(lang_1.stringify(record));
      }
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        removals.push(lang_1.stringify(record));
      }
      return "map: " + items.join(', ') + "\n" + "previous: " + previous.join(', ') + "\n" + "additions: " + additions.join(', ') + "\n" + "changes: " + changes.join(', ') + "\n" + "removals: " + removals.join(', ') + "\n";
    };
    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {
      if (obj instanceof Map) {
        obj.forEach(fn);
      } else {
        collection_1.StringMapWrapper.forEach(obj, fn);
      }
    };
    return DefaultKeyValueDiffer;
  }();
  exports.DefaultKeyValueDiffer = DefaultKeyValueDiffer;
  var KeyValueChangeRecord = function () {
    function KeyValueChangeRecord(key) {
      this.key = key;
      this.previousValue = null;
      this.currentValue = null;
      this._nextPrevious = null;
      this._next = null;
      this._nextAdded = null;
      this._nextRemoved = null;
      this._prevRemoved = null;
      this._nextChanged = null;
    }
    KeyValueChangeRecord.prototype.toString = function () {
      return lang_1.looseIdentical(this.previousValue, this.currentValue) ? lang_1.stringify(this.key) : lang_1.stringify(this.key) + '[' + lang_1.stringify(this.previousValue) + '->' + lang_1.stringify(this.currentValue) + ']';
    };
    return KeyValueChangeRecord;
  }();
  exports.KeyValueChangeRecord = KeyValueChangeRecord;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/lang.js");
  (function (ChangeDetectorState) {
    ChangeDetectorState[ChangeDetectorState["NeverChecked"] = 0] = "NeverChecked";
    ChangeDetectorState[ChangeDetectorState["CheckedBefore"] = 1] = "CheckedBefore";
    ChangeDetectorState[ChangeDetectorState["Errored"] = 2] = "Errored";
  })(exports.ChangeDetectorState || (exports.ChangeDetectorState = {}));
  var ChangeDetectorState = exports.ChangeDetectorState;
  (function (ChangeDetectionStrategy) {
    ChangeDetectionStrategy[ChangeDetectionStrategy["CheckOnce"] = 0] = "CheckOnce";
    ChangeDetectionStrategy[ChangeDetectionStrategy["Checked"] = 1] = "Checked";
    ChangeDetectionStrategy[ChangeDetectionStrategy["CheckAlways"] = 2] = "CheckAlways";
    ChangeDetectionStrategy[ChangeDetectionStrategy["Detached"] = 3] = "Detached";
    ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"] = 4] = "OnPush";
    ChangeDetectionStrategy[ChangeDetectionStrategy["Default"] = 5] = "Default";
  })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));
  var ChangeDetectionStrategy = exports.ChangeDetectionStrategy;
  exports.CHANGE_DETECTION_STRATEGY_VALUES = [ChangeDetectionStrategy.CheckOnce, ChangeDetectionStrategy.Checked, ChangeDetectionStrategy.CheckAlways, ChangeDetectionStrategy.Detached, ChangeDetectionStrategy.OnPush, ChangeDetectionStrategy.Default];
  exports.CHANGE_DETECTOR_STATE_VALUES = [ChangeDetectorState.NeverChecked, ChangeDetectorState.CheckedBefore, ChangeDetectorState.Errored];
  function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {
    return lang_1.isBlank(changeDetectionStrategy) || changeDetectionStrategy === ChangeDetectionStrategy.Default;
  }
  exports.isDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detector_ref.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var ChangeDetectorRef = function () {
        function ChangeDetectorRef() {}
        return ChangeDetectorRef;
    }();
    exports.ChangeDetectorRef = ChangeDetectorRef;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js', ['npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/iterable_differs.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_iterable_differ.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/keyvalue_differs.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_keyvalue_differ.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detector_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var iterable_differs_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/iterable_differs.js');
  var default_iterable_differ_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_iterable_differ.js');
  var keyvalue_differs_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/keyvalue_differs.js');
  var default_keyvalue_differ_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_keyvalue_differ.js');
  var default_keyvalue_differ_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_keyvalue_differ.js');
  exports.DefaultKeyValueDifferFactory = default_keyvalue_differ_2.DefaultKeyValueDifferFactory;
  exports.KeyValueChangeRecord = default_keyvalue_differ_2.KeyValueChangeRecord;
  var default_iterable_differ_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_iterable_differ.js');
  exports.DefaultIterableDifferFactory = default_iterable_differ_2.DefaultIterableDifferFactory;
  exports.CollectionChangeRecord = default_iterable_differ_2.CollectionChangeRecord;
  var constants_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js');
  exports.ChangeDetectionStrategy = constants_1.ChangeDetectionStrategy;
  exports.CHANGE_DETECTION_STRATEGY_VALUES = constants_1.CHANGE_DETECTION_STRATEGY_VALUES;
  exports.ChangeDetectorState = constants_1.ChangeDetectorState;
  exports.CHANGE_DETECTOR_STATE_VALUES = constants_1.CHANGE_DETECTOR_STATE_VALUES;
  exports.isDefaultChangeDetectionStrategy = constants_1.isDefaultChangeDetectionStrategy;
  var change_detector_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detector_ref.js');
  exports.ChangeDetectorRef = change_detector_ref_1.ChangeDetectorRef;
  var iterable_differs_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/iterable_differs.js');
  exports.IterableDiffers = iterable_differs_2.IterableDiffers;
  var keyvalue_differs_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/keyvalue_differs.js');
  exports.KeyValueDiffers = keyvalue_differs_2.KeyValueDiffers;
  var default_iterable_differ_3 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/differs/default_iterable_differ.js');
  exports.DefaultIterableDiffer = default_iterable_differ_3.DefaultIterableDiffer;
  var change_detection_util_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js');
  exports.WrappedValue = change_detection_util_1.WrappedValue;
  exports.ValueUnwrapper = change_detection_util_1.ValueUnwrapper;
  exports.SimpleChange = change_detection_util_1.SimpleChange;
  exports.devModeEqual = change_detection_util_1.devModeEqual;
  exports.looseIdentical = change_detection_util_1.looseIdentical;
  exports.uninitialized = change_detection_util_1.uninitialized;
  exports.keyValDiff = [new default_keyvalue_differ_1.DefaultKeyValueDifferFactory()];
  exports.iterableDiff = [new default_iterable_differ_1.DefaultIterableDifferFactory()];
  exports.defaultIterableDiffers = new iterable_differs_1.IterableDiffers(exports.iterableDiff);
  exports.defaultKeyValueDiffers = new keyvalue_differs_1.KeyValueDiffers(exports.keyValDiff);
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/di/injector.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var exceptions_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js");
  var _THROW_IF_NOT_FOUND = new Object();
  exports.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;
  var Injector = function () {
    function Injector() {}
    Injector.prototype.get = function (token, notFoundValue) {
      return exceptions_1.unimplemented();
    };
    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;
    return Injector;
  }();
  exports.Injector = Injector;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/reflective_injector.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js', 'npm:@angular/core@2.0.0-rc.1/src/di/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/di/injector.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
    var reflective_provider_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js');
    var reflective_exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js');
    var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
    var reflective_key_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js');
    var metadata_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/metadata.js');
    var injector_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/injector.js');
    var __unused;
    var _MAX_CONSTRUCTION_COUNTER = 10;
    var UNDEFINED = new Object();
    var ReflectiveProtoInjectorInlineStrategy = function () {
      function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {
        this.provider0 = null;
        this.provider1 = null;
        this.provider2 = null;
        this.provider3 = null;
        this.provider4 = null;
        this.provider5 = null;
        this.provider6 = null;
        this.provider7 = null;
        this.provider8 = null;
        this.provider9 = null;
        this.keyId0 = null;
        this.keyId1 = null;
        this.keyId2 = null;
        this.keyId3 = null;
        this.keyId4 = null;
        this.keyId5 = null;
        this.keyId6 = null;
        this.keyId7 = null;
        this.keyId8 = null;
        this.keyId9 = null;
        var length = providers.length;
        if (length > 0) {
          this.provider0 = providers[0];
          this.keyId0 = providers[0].key.id;
        }
        if (length > 1) {
          this.provider1 = providers[1];
          this.keyId1 = providers[1].key.id;
        }
        if (length > 2) {
          this.provider2 = providers[2];
          this.keyId2 = providers[2].key.id;
        }
        if (length > 3) {
          this.provider3 = providers[3];
          this.keyId3 = providers[3].key.id;
        }
        if (length > 4) {
          this.provider4 = providers[4];
          this.keyId4 = providers[4].key.id;
        }
        if (length > 5) {
          this.provider5 = providers[5];
          this.keyId5 = providers[5].key.id;
        }
        if (length > 6) {
          this.provider6 = providers[6];
          this.keyId6 = providers[6].key.id;
        }
        if (length > 7) {
          this.provider7 = providers[7];
          this.keyId7 = providers[7].key.id;
        }
        if (length > 8) {
          this.provider8 = providers[8];
          this.keyId8 = providers[8].key.id;
        }
        if (length > 9) {
          this.provider9 = providers[9];
          this.keyId9 = providers[9].key.id;
        }
      }
      ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {
        if (index == 0) return this.provider0;
        if (index == 1) return this.provider1;
        if (index == 2) return this.provider2;
        if (index == 3) return this.provider3;
        if (index == 4) return this.provider4;
        if (index == 5) return this.provider5;
        if (index == 6) return this.provider6;
        if (index == 7) return this.provider7;
        if (index == 8) return this.provider8;
        if (index == 9) return this.provider9;
        throw new reflective_exceptions_1.OutOfBoundsError(index);
      };
      ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {
        return new ReflectiveInjectorInlineStrategy(injector, this);
      };
      return ReflectiveProtoInjectorInlineStrategy;
    }();
    exports.ReflectiveProtoInjectorInlineStrategy = ReflectiveProtoInjectorInlineStrategy;
    var ReflectiveProtoInjectorDynamicStrategy = function () {
      function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {
        this.providers = providers;
        var len = providers.length;
        this.keyIds = collection_1.ListWrapper.createFixedSize(len);
        for (var i = 0; i < len; i++) {
          this.keyIds[i] = providers[i].key.id;
        }
      }
      ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {
        if (index < 0 || index >= this.providers.length) {
          throw new reflective_exceptions_1.OutOfBoundsError(index);
        }
        return this.providers[index];
      };
      ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {
        return new ReflectiveInjectorDynamicStrategy(this, ei);
      };
      return ReflectiveProtoInjectorDynamicStrategy;
    }();
    exports.ReflectiveProtoInjectorDynamicStrategy = ReflectiveProtoInjectorDynamicStrategy;
    var ReflectiveProtoInjector = function () {
      function ReflectiveProtoInjector(providers) {
        this.numberOfProviders = providers.length;
        this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ? new ReflectiveProtoInjectorDynamicStrategy(this, providers) : new ReflectiveProtoInjectorInlineStrategy(this, providers);
      }
      ReflectiveProtoInjector.fromResolvedProviders = function (providers) {
        return new ReflectiveProtoInjector(providers);
      };
      ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {
        return this._strategy.getProviderAtIndex(index);
      };
      return ReflectiveProtoInjector;
    }();
    exports.ReflectiveProtoInjector = ReflectiveProtoInjector;
    var ReflectiveInjectorInlineStrategy = function () {
      function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {
        this.injector = injector;
        this.protoStrategy = protoStrategy;
        this.obj0 = UNDEFINED;
        this.obj1 = UNDEFINED;
        this.obj2 = UNDEFINED;
        this.obj3 = UNDEFINED;
        this.obj4 = UNDEFINED;
        this.obj5 = UNDEFINED;
        this.obj6 = UNDEFINED;
        this.obj7 = UNDEFINED;
        this.obj8 = UNDEFINED;
        this.obj9 = UNDEFINED;
      }
      ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () {
        this.injector._constructionCounter = 0;
      };
      ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {
        return this.injector._new(provider);
      };
      ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {
        var p = this.protoStrategy;
        var inj = this.injector;
        if (p.keyId0 === keyId) {
          if (this.obj0 === UNDEFINED) {
            this.obj0 = inj._new(p.provider0);
          }
          return this.obj0;
        }
        if (p.keyId1 === keyId) {
          if (this.obj1 === UNDEFINED) {
            this.obj1 = inj._new(p.provider1);
          }
          return this.obj1;
        }
        if (p.keyId2 === keyId) {
          if (this.obj2 === UNDEFINED) {
            this.obj2 = inj._new(p.provider2);
          }
          return this.obj2;
        }
        if (p.keyId3 === keyId) {
          if (this.obj3 === UNDEFINED) {
            this.obj3 = inj._new(p.provider3);
          }
          return this.obj3;
        }
        if (p.keyId4 === keyId) {
          if (this.obj4 === UNDEFINED) {
            this.obj4 = inj._new(p.provider4);
          }
          return this.obj4;
        }
        if (p.keyId5 === keyId) {
          if (this.obj5 === UNDEFINED) {
            this.obj5 = inj._new(p.provider5);
          }
          return this.obj5;
        }
        if (p.keyId6 === keyId) {
          if (this.obj6 === UNDEFINED) {
            this.obj6 = inj._new(p.provider6);
          }
          return this.obj6;
        }
        if (p.keyId7 === keyId) {
          if (this.obj7 === UNDEFINED) {
            this.obj7 = inj._new(p.provider7);
          }
          return this.obj7;
        }
        if (p.keyId8 === keyId) {
          if (this.obj8 === UNDEFINED) {
            this.obj8 = inj._new(p.provider8);
          }
          return this.obj8;
        }
        if (p.keyId9 === keyId) {
          if (this.obj9 === UNDEFINED) {
            this.obj9 = inj._new(p.provider9);
          }
          return this.obj9;
        }
        return UNDEFINED;
      };
      ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {
        if (index == 0) return this.obj0;
        if (index == 1) return this.obj1;
        if (index == 2) return this.obj2;
        if (index == 3) return this.obj3;
        if (index == 4) return this.obj4;
        if (index == 5) return this.obj5;
        if (index == 6) return this.obj6;
        if (index == 7) return this.obj7;
        if (index == 8) return this.obj8;
        if (index == 9) return this.obj9;
        throw new reflective_exceptions_1.OutOfBoundsError(index);
      };
      ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () {
        return _MAX_CONSTRUCTION_COUNTER;
      };
      return ReflectiveInjectorInlineStrategy;
    }();
    exports.ReflectiveInjectorInlineStrategy = ReflectiveInjectorInlineStrategy;
    var ReflectiveInjectorDynamicStrategy = function () {
      function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {
        this.protoStrategy = protoStrategy;
        this.injector = injector;
        this.objs = collection_1.ListWrapper.createFixedSize(protoStrategy.providers.length);
        collection_1.ListWrapper.fill(this.objs, UNDEFINED);
      }
      ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () {
        this.injector._constructionCounter = 0;
      };
      ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {
        return this.injector._new(provider);
      };
      ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {
        var p = this.protoStrategy;
        for (var i = 0; i < p.keyIds.length; i++) {
          if (p.keyIds[i] === keyId) {
            if (this.objs[i] === UNDEFINED) {
              this.objs[i] = this.injector._new(p.providers[i]);
            }
            return this.objs[i];
          }
        }
        return UNDEFINED;
      };
      ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {
        if (index < 0 || index >= this.objs.length) {
          throw new reflective_exceptions_1.OutOfBoundsError(index);
        }
        return this.objs[index];
      };
      ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () {
        return this.objs.length;
      };
      return ReflectiveInjectorDynamicStrategy;
    }();
    exports.ReflectiveInjectorDynamicStrategy = ReflectiveInjectorDynamicStrategy;
    var ReflectiveInjector = function () {
      function ReflectiveInjector() {}
      ReflectiveInjector.resolve = function (providers) {
        return reflective_provider_1.resolveReflectiveProviders(providers);
      };
      ReflectiveInjector.resolveAndCreate = function (providers, parent) {
        if (parent === void 0) {
          parent = null;
        }
        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);
        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);
      };
      ReflectiveInjector.fromResolvedProviders = function (providers, parent) {
        if (parent === void 0) {
          parent = null;
        }
        return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);
      };
      ReflectiveInjector.fromResolvedBindings = function (providers) {
        return ReflectiveInjector.fromResolvedProviders(providers);
      };
      Object.defineProperty(ReflectiveInjector.prototype, "parent", {
        get: function () {
          return exceptions_1.unimplemented();
        },
        enumerable: true,
        configurable: true
      });
      ReflectiveInjector.prototype.debugContext = function () {
        return null;
      };
      ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) {
        return exceptions_1.unimplemented();
      };
      ReflectiveInjector.prototype.createChildFromResolved = function (providers) {
        return exceptions_1.unimplemented();
      };
      ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) {
        return exceptions_1.unimplemented();
      };
      ReflectiveInjector.prototype.instantiateResolved = function (provider) {
        return exceptions_1.unimplemented();
      };
      return ReflectiveInjector;
    }();
    exports.ReflectiveInjector = ReflectiveInjector;
    var ReflectiveInjector_ = function () {
      function ReflectiveInjector_(_proto, _parent, _debugContext) {
        if (_parent === void 0) {
          _parent = null;
        }
        if (_debugContext === void 0) {
          _debugContext = null;
        }
        this._debugContext = _debugContext;
        this._constructionCounter = 0;
        this._proto = _proto;
        this._parent = _parent;
        this._strategy = _proto._strategy.createInjectorStrategy(this);
      }
      ReflectiveInjector_.prototype.debugContext = function () {
        return this._debugContext();
      };
      ReflectiveInjector_.prototype.get = function (token, notFoundValue) {
        if (notFoundValue === void 0) {
          notFoundValue = injector_1.THROW_IF_NOT_FOUND;
        }
        return this._getByKey(reflective_key_1.ReflectiveKey.get(token), null, null, notFoundValue);
      };
      ReflectiveInjector_.prototype.getAt = function (index) {
        return this._strategy.getObjAtIndex(index);
      };
      Object.defineProperty(ReflectiveInjector_.prototype, "parent", {
        get: function () {
          return this._parent;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(ReflectiveInjector_.prototype, "internalStrategy", {
        get: function () {
          return this._strategy;
        },
        enumerable: true,
        configurable: true
      });
      ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {
        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);
        return this.createChildFromResolved(ResolvedReflectiveProviders);
      };
      ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {
        var proto = new ReflectiveProtoInjector(providers);
        var inj = new ReflectiveInjector_(proto);
        inj._parent = this;
        return inj;
      };
      ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {
        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);
      };
      ReflectiveInjector_.prototype.instantiateResolved = function (provider) {
        return this._instantiateProvider(provider);
      };
      ReflectiveInjector_.prototype._new = function (provider) {
        if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {
          throw new reflective_exceptions_1.CyclicDependencyError(this, provider.key);
        }
        return this._instantiateProvider(provider);
      };
      ReflectiveInjector_.prototype._instantiateProvider = function (provider) {
        if (provider.multiProvider) {
          var res = collection_1.ListWrapper.createFixedSize(provider.resolvedFactories.length);
          for (var i = 0; i < provider.resolvedFactories.length; ++i) {
            res[i] = this._instantiate(provider, provider.resolvedFactories[i]);
          }
          return res;
        } else {
          return this._instantiate(provider, provider.resolvedFactories[0]);
        }
      };
      ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {
        var factory = ResolvedReflectiveFactory.factory;
        var deps = ResolvedReflectiveFactory.dependencies;
        var length = deps.length;
        var d0;
        var d1;
        var d2;
        var d3;
        var d4;
        var d5;
        var d6;
        var d7;
        var d8;
        var d9;
        var d10;
        var d11;
        var d12;
        var d13;
        var d14;
        var d15;
        var d16;
        var d17;
        var d18;
        var d19;
        try {
          d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;
          d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;
          d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;
          d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;
          d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;
          d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;
          d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;
          d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;
          d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;
          d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;
          d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;
          d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;
          d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;
          d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;
          d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;
          d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;
          d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;
          d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;
          d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;
          d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;
        } catch (e) {
          if (e instanceof reflective_exceptions_1.AbstractProviderError || e instanceof reflective_exceptions_1.InstantiationError) {
            e.addKey(this, provider.key);
          }
          throw e;
        }
        var obj;
        try {
          switch (length) {
            case 0:
              obj = factory();
              break;
            case 1:
              obj = factory(d0);
              break;
            case 2:
              obj = factory(d0, d1);
              break;
            case 3:
              obj = factory(d0, d1, d2);
              break;
            case 4:
              obj = factory(d0, d1, d2, d3);
              break;
            case 5:
              obj = factory(d0, d1, d2, d3, d4);
              break;
            case 6:
              obj = factory(d0, d1, d2, d3, d4, d5);
              break;
            case 7:
              obj = factory(d0, d1, d2, d3, d4, d5, d6);
              break;
            case 8:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);
              break;
            case 9:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);
              break;
            case 10:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);
              break;
            case 11:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);
              break;
            case 12:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);
              break;
            case 13:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);
              break;
            case 14:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);
              break;
            case 15:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);
              break;
            case 16:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);
              break;
            case 17:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);
              break;
            case 18:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);
              break;
            case 19:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);
              break;
            case 20:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);
              break;
            default:
              throw new exceptions_1.BaseException("Cannot instantiate '" + provider.key.displayName + "' because it has more than 20 dependencies");
          }
        } catch (e) {
          throw new reflective_exceptions_1.InstantiationError(this, e, e.stack, provider.key);
        }
        return obj;
      };
      ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {
        return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : injector_1.THROW_IF_NOT_FOUND);
      };
      ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {
        if (key === INJECTOR_KEY) {
          return this;
        }
        if (upperBoundVisibility instanceof metadata_1.SelfMetadata) {
          return this._getByKeySelf(key, notFoundValue);
        } else {
          return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);
        }
      };
      ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {
        if (notFoundValue !== injector_1.THROW_IF_NOT_FOUND) {
          return notFoundValue;
        } else {
          throw new reflective_exceptions_1.NoProviderError(this, key);
        }
      };
      ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {
        var obj = this._strategy.getObjByKeyId(key.id);
        return obj !== UNDEFINED ? obj : this._throwOrNull(key, notFoundValue);
      };
      ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {
        var inj;
        if (lowerBoundVisibility instanceof metadata_1.SkipSelfMetadata) {
          inj = this._parent;
        } else {
          inj = this;
        }
        while (inj instanceof ReflectiveInjector_) {
          var inj_ = inj;
          var obj = inj_._strategy.getObjByKeyId(key.id);
          if (obj !== UNDEFINED) return obj;
          inj = inj_._parent;
        }
        if (inj !== null) {
          return inj.get(key.token, notFoundValue);
        } else {
          return this._throwOrNull(key, notFoundValue);
        }
      };
      Object.defineProperty(ReflectiveInjector_.prototype, "displayName", {
        get: function () {
          return "ReflectiveInjector(providers: [" + _mapProviders(this, function (b) {
            return " \"" + b.key.displayName + "\" ";
          }).join(", ") + "])";
        },
        enumerable: true,
        configurable: true
      });
      ReflectiveInjector_.prototype.toString = function () {
        return this.displayName;
      };
      return ReflectiveInjector_;
    }();
    exports.ReflectiveInjector_ = ReflectiveInjector_;
    var INJECTOR_KEY = reflective_key_1.ReflectiveKey.get(injector_1.Injector);
    function _mapProviders(injector, fn) {
      var res = [];
      for (var i = 0; i < injector._proto.numberOfProviders; ++i) {
        res.push(fn(injector._proto.getProviderAtIndex(i)));
      }
      return res;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * Provides read-only access to reflection data about symbols. Used internally by Angular
    * to power dependency injection and compilation.
    */

    var define,
        global = this || self,
        GLOBAL = global;
    var ReflectorReader = function () {
        function ReflectorReader() {}
        return ReflectorReader;
    }();
    exports.ReflectorReader = ReflectorReader;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/reflection/reflector.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var reflector_reader_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js');
  var ReflectionInfo = function () {
    function ReflectionInfo(annotations, parameters, factory, interfaces, propMetadata) {
      this.annotations = annotations;
      this.parameters = parameters;
      this.factory = factory;
      this.interfaces = interfaces;
      this.propMetadata = propMetadata;
    }
    return ReflectionInfo;
  }();
  exports.ReflectionInfo = ReflectionInfo;
  var Reflector = function (_super) {
    __extends(Reflector, _super);
    function Reflector(reflectionCapabilities) {
      _super.call(this);
      this._injectableInfo = new collection_1.Map();
      this._getters = new collection_1.Map();
      this._setters = new collection_1.Map();
      this._methods = new collection_1.Map();
      this._usedKeys = null;
      this.reflectionCapabilities = reflectionCapabilities;
    }
    Reflector.prototype.isReflectionEnabled = function () {
      return this.reflectionCapabilities.isReflectionEnabled();
    };
    Reflector.prototype.trackUsage = function () {
      this._usedKeys = new collection_1.Set();
    };
    Reflector.prototype.listUnusedKeys = function () {
      var _this = this;
      if (this._usedKeys == null) {
        throw new exceptions_1.BaseException('Usage tracking is disabled');
      }
      var allTypes = collection_1.MapWrapper.keys(this._injectableInfo);
      return allTypes.filter(function (key) {
        return !collection_1.SetWrapper.has(_this._usedKeys, key);
      });
    };
    Reflector.prototype.registerFunction = function (func, funcInfo) {
      this._injectableInfo.set(func, funcInfo);
    };
    Reflector.prototype.registerType = function (type, typeInfo) {
      this._injectableInfo.set(type, typeInfo);
    };
    Reflector.prototype.registerGetters = function (getters) {
      _mergeMaps(this._getters, getters);
    };
    Reflector.prototype.registerSetters = function (setters) {
      _mergeMaps(this._setters, setters);
    };
    Reflector.prototype.registerMethods = function (methods) {
      _mergeMaps(this._methods, methods);
    };
    Reflector.prototype.factory = function (type) {
      if (this._containsReflectionInfo(type)) {
        var res = this._getReflectionInfo(type).factory;
        return lang_1.isPresent(res) ? res : null;
      } else {
        return this.reflectionCapabilities.factory(type);
      }
    };
    Reflector.prototype.parameters = function (typeOrFunc) {
      if (this._injectableInfo.has(typeOrFunc)) {
        var res = this._getReflectionInfo(typeOrFunc).parameters;
        return lang_1.isPresent(res) ? res : [];
      } else {
        return this.reflectionCapabilities.parameters(typeOrFunc);
      }
    };
    Reflector.prototype.annotations = function (typeOrFunc) {
      if (this._injectableInfo.has(typeOrFunc)) {
        var res = this._getReflectionInfo(typeOrFunc).annotations;
        return lang_1.isPresent(res) ? res : [];
      } else {
        return this.reflectionCapabilities.annotations(typeOrFunc);
      }
    };
    Reflector.prototype.propMetadata = function (typeOrFunc) {
      if (this._injectableInfo.has(typeOrFunc)) {
        var res = this._getReflectionInfo(typeOrFunc).propMetadata;
        return lang_1.isPresent(res) ? res : {};
      } else {
        return this.reflectionCapabilities.propMetadata(typeOrFunc);
      }
    };
    Reflector.prototype.interfaces = function (type) {
      if (this._injectableInfo.has(type)) {
        var res = this._getReflectionInfo(type).interfaces;
        return lang_1.isPresent(res) ? res : [];
      } else {
        return this.reflectionCapabilities.interfaces(type);
      }
    };
    Reflector.prototype.getter = function (name) {
      if (this._getters.has(name)) {
        return this._getters.get(name);
      } else {
        return this.reflectionCapabilities.getter(name);
      }
    };
    Reflector.prototype.setter = function (name) {
      if (this._setters.has(name)) {
        return this._setters.get(name);
      } else {
        return this.reflectionCapabilities.setter(name);
      }
    };
    Reflector.prototype.method = function (name) {
      if (this._methods.has(name)) {
        return this._methods.get(name);
      } else {
        return this.reflectionCapabilities.method(name);
      }
    };
    Reflector.prototype._getReflectionInfo = function (typeOrFunc) {
      if (lang_1.isPresent(this._usedKeys)) {
        this._usedKeys.add(typeOrFunc);
      }
      return this._injectableInfo.get(typeOrFunc);
    };
    Reflector.prototype._containsReflectionInfo = function (typeOrFunc) {
      return this._injectableInfo.has(typeOrFunc);
    };
    Reflector.prototype.importUri = function (type) {
      return this.reflectionCapabilities.importUri(type);
    };
    return Reflector;
  }(reflector_reader_1.ReflectorReader);
  exports.Reflector = Reflector;
  function _mergeMaps(target, config) {
    collection_1.StringMapWrapper.forEach(config, function (v, k) {
      return target.set(k, v);
    });
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js', ['npm:@angular/core@2.0.0-rc.1/src/reflection/reflector.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflection_capabilities.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var reflector_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflector.js');
  var reflector_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflector.js');
  exports.Reflector = reflector_2.Reflector;
  exports.ReflectionInfo = reflector_2.ReflectionInfo;
  var reflection_capabilities_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection_capabilities.js');
  exports.reflector = new reflector_1.Reflector(new reflection_capabilities_1.ReflectionCapabilities());
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js', 'npm:@angular/core@2.0.0-rc.1/src/di/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/di/provider.js', 'npm:@angular/core@2.0.0-rc.1/src/di/provider_util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var reflection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js');
  var reflective_key_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js');
  var metadata_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/metadata.js');
  var reflective_exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js');
  var forward_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js');
  var provider_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/provider.js');
  var provider_util_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/provider_util.js');
  var ReflectiveDependency = function () {
    function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {
      this.key = key;
      this.optional = optional;
      this.lowerBoundVisibility = lowerBoundVisibility;
      this.upperBoundVisibility = upperBoundVisibility;
      this.properties = properties;
    }
    ReflectiveDependency.fromKey = function (key) {
      return new ReflectiveDependency(key, false, null, null, []);
    };
    return ReflectiveDependency;
  }();
  exports.ReflectiveDependency = ReflectiveDependency;
  var _EMPTY_LIST = [];
  var ResolvedReflectiveProvider_ = function () {
    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {
      this.key = key;
      this.resolvedFactories = resolvedFactories;
      this.multiProvider = multiProvider;
    }
    Object.defineProperty(ResolvedReflectiveProvider_.prototype, "resolvedFactory", {
      get: function () {
        return this.resolvedFactories[0];
      },
      enumerable: true,
      configurable: true
    });
    return ResolvedReflectiveProvider_;
  }();
  exports.ResolvedReflectiveProvider_ = ResolvedReflectiveProvider_;
  var ResolvedReflectiveFactory = function () {
    function ResolvedReflectiveFactory(factory, dependencies) {
      this.factory = factory;
      this.dependencies = dependencies;
    }
    return ResolvedReflectiveFactory;
  }();
  exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;
  function resolveReflectiveFactory(provider) {
    var factoryFn;
    var resolvedDeps;
    if (lang_1.isPresent(provider.useClass)) {
      var useClass = forward_ref_1.resolveForwardRef(provider.useClass);
      factoryFn = reflection_1.reflector.factory(useClass);
      resolvedDeps = _dependenciesFor(useClass);
    } else if (lang_1.isPresent(provider.useExisting)) {
      factoryFn = function (aliasInstance) {
        return aliasInstance;
      };
      resolvedDeps = [ReflectiveDependency.fromKey(reflective_key_1.ReflectiveKey.get(provider.useExisting))];
    } else if (lang_1.isPresent(provider.useFactory)) {
      factoryFn = provider.useFactory;
      resolvedDeps = constructDependencies(provider.useFactory, provider.dependencies);
    } else {
      factoryFn = function () {
        return provider.useValue;
      };
      resolvedDeps = _EMPTY_LIST;
    }
    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);
  }
  exports.resolveReflectiveFactory = resolveReflectiveFactory;
  function resolveReflectiveProvider(provider) {
    return new ResolvedReflectiveProvider_(reflective_key_1.ReflectiveKey.get(provider.token), [resolveReflectiveFactory(provider)], provider.multi);
  }
  exports.resolveReflectiveProvider = resolveReflectiveProvider;
  function resolveReflectiveProviders(providers) {
    var normalized = _normalizeProviders(providers, []);
    var resolved = normalized.map(resolveReflectiveProvider);
    return collection_1.MapWrapper.values(mergeResolvedReflectiveProviders(resolved, new Map()));
  }
  exports.resolveReflectiveProviders = resolveReflectiveProviders;
  function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {
    for (var i = 0; i < providers.length; i++) {
      var provider = providers[i];
      var existing = normalizedProvidersMap.get(provider.key.id);
      if (lang_1.isPresent(existing)) {
        if (provider.multiProvider !== existing.multiProvider) {
          throw new reflective_exceptions_1.MixingMultiProvidersWithRegularProvidersError(existing, provider);
        }
        if (provider.multiProvider) {
          for (var j = 0; j < provider.resolvedFactories.length; j++) {
            existing.resolvedFactories.push(provider.resolvedFactories[j]);
          }
        } else {
          normalizedProvidersMap.set(provider.key.id, provider);
        }
      } else {
        var resolvedProvider;
        if (provider.multiProvider) {
          resolvedProvider = new ResolvedReflectiveProvider_(provider.key, collection_1.ListWrapper.clone(provider.resolvedFactories), provider.multiProvider);
        } else {
          resolvedProvider = provider;
        }
        normalizedProvidersMap.set(provider.key.id, resolvedProvider);
      }
    }
    return normalizedProvidersMap;
  }
  exports.mergeResolvedReflectiveProviders = mergeResolvedReflectiveProviders;
  function _normalizeProviders(providers, res) {
    providers.forEach(function (b) {
      if (b instanceof lang_1.Type) {
        res.push(provider_1.provide(b, { useClass: b }));
      } else if (b instanceof provider_1.Provider) {
        res.push(b);
      } else if (provider_util_1.isProviderLiteral(b)) {
        res.push(provider_util_1.createProvider(b));
      } else if (b instanceof Array) {
        _normalizeProviders(b, res);
      } else if (b instanceof provider_1.ProviderBuilder) {
        throw new reflective_exceptions_1.InvalidProviderError(b.token);
      } else {
        throw new reflective_exceptions_1.InvalidProviderError(b);
      }
    });
    return res;
  }
  function constructDependencies(typeOrFunc, dependencies) {
    if (lang_1.isBlank(dependencies)) {
      return _dependenciesFor(typeOrFunc);
    } else {
      var params = dependencies.map(function (t) {
        return [t];
      });
      return dependencies.map(function (t) {
        return _extractToken(typeOrFunc, t, params);
      });
    }
  }
  exports.constructDependencies = constructDependencies;
  function _dependenciesFor(typeOrFunc) {
    var params = reflection_1.reflector.parameters(typeOrFunc);
    if (lang_1.isBlank(params)) return [];
    if (params.some(lang_1.isBlank)) {
      throw new reflective_exceptions_1.NoAnnotationError(typeOrFunc, params);
    }
    return params.map(function (p) {
      return _extractToken(typeOrFunc, p, params);
    });
  }
  function _extractToken(typeOrFunc, metadata, params) {
    var depProps = [];
    var token = null;
    var optional = false;
    if (!lang_1.isArray(metadata)) {
      if (metadata instanceof metadata_1.InjectMetadata) {
        return _createDependency(metadata.token, optional, null, null, depProps);
      } else {
        return _createDependency(metadata, optional, null, null, depProps);
      }
    }
    var lowerBoundVisibility = null;
    var upperBoundVisibility = null;
    for (var i = 0; i < metadata.length; ++i) {
      var paramMetadata = metadata[i];
      if (paramMetadata instanceof lang_1.Type) {
        token = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.InjectMetadata) {
        token = paramMetadata.token;
      } else if (paramMetadata instanceof metadata_1.OptionalMetadata) {
        optional = true;
      } else if (paramMetadata instanceof metadata_1.SelfMetadata) {
        upperBoundVisibility = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.HostMetadata) {
        upperBoundVisibility = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.SkipSelfMetadata) {
        lowerBoundVisibility = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.DependencyMetadata) {
        if (lang_1.isPresent(paramMetadata.token)) {
          token = paramMetadata.token;
        }
        depProps.push(paramMetadata);
      }
    }
    token = forward_ref_1.resolveForwardRef(token);
    if (lang_1.isPresent(token)) {
      return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);
    } else {
      throw new reflective_exceptions_1.NoAnnotationError(typeOrFunc, params);
    }
  }
  function _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps) {
    return new ReflectiveDependency(reflective_key_1.ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  function forwardRef(forwardRefFn) {
    forwardRefFn.__forward_ref__ = forwardRef;
    forwardRefFn.toString = function () {
      return lang_1.stringify(this());
    };
    return forwardRefFn;
  }
  exports.forwardRef = forwardRef;
  function resolveForwardRef(type) {
    if (lang_1.isFunction(type) && type.hasOwnProperty('__forward_ref__') && type.__forward_ref__ === forwardRef) {
      return type();
    } else {
      return type;
    }
  }
  exports.resolveForwardRef = resolveForwardRef;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var forward_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js');
  var ReflectiveKey = function () {
    function ReflectiveKey(token, id) {
      this.token = token;
      this.id = id;
      if (lang_1.isBlank(token)) {
        throw new exceptions_1.BaseException('Token must be defined!');
      }
    }
    Object.defineProperty(ReflectiveKey.prototype, "displayName", {
      get: function () {
        return lang_1.stringify(this.token);
      },
      enumerable: true,
      configurable: true
    });
    ReflectiveKey.get = function (token) {
      return _globalKeyRegistry.get(forward_ref_1.resolveForwardRef(token));
    };
    Object.defineProperty(ReflectiveKey, "numberOfKeys", {
      get: function () {
        return _globalKeyRegistry.numberOfKeys;
      },
      enumerable: true,
      configurable: true
    });
    return ReflectiveKey;
  }();
  exports.ReflectiveKey = ReflectiveKey;
  var KeyRegistry = function () {
    function KeyRegistry() {
      this._allKeys = new Map();
    }
    KeyRegistry.prototype.get = function (token) {
      if (token instanceof ReflectiveKey) return token;
      if (this._allKeys.has(token)) {
        return this._allKeys.get(token);
      }
      var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);
      this._allKeys.set(token, newKey);
      return newKey;
    };
    Object.defineProperty(KeyRegistry.prototype, "numberOfKeys", {
      get: function () {
        return this._allKeys.size;
      },
      enumerable: true,
      configurable: true
    });
    return KeyRegistry;
  }();
  exports.KeyRegistry = KeyRegistry;
  var _globalKeyRegistry = new KeyRegistry();
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  function findFirstClosedCycle(keys) {
    var res = [];
    for (var i = 0; i < keys.length; ++i) {
      if (collection_1.ListWrapper.contains(res, keys[i])) {
        res.push(keys[i]);
        return res;
      } else {
        res.push(keys[i]);
      }
    }
    return res;
  }
  function constructResolvingPath(keys) {
    if (keys.length > 1) {
      var reversed = findFirstClosedCycle(collection_1.ListWrapper.reversed(keys));
      var tokenStrs = reversed.map(function (k) {
        return lang_1.stringify(k.token);
      });
      return " (" + tokenStrs.join(' -> ') + ")";
    } else {
      return "";
    }
  }
  var AbstractProviderError = function (_super) {
    __extends(AbstractProviderError, _super);
    function AbstractProviderError(injector, key, constructResolvingMessage) {
      _super.call(this, "DI Exception");
      this.keys = [key];
      this.injectors = [injector];
      this.constructResolvingMessage = constructResolvingMessage;
      this.message = this.constructResolvingMessage(this.keys);
    }
    AbstractProviderError.prototype.addKey = function (injector, key) {
      this.injectors.push(injector);
      this.keys.push(key);
      this.message = this.constructResolvingMessage(this.keys);
    };
    Object.defineProperty(AbstractProviderError.prototype, "context", {
      get: function () {
        return this.injectors[this.injectors.length - 1].debugContext();
      },
      enumerable: true,
      configurable: true
    });
    return AbstractProviderError;
  }(exceptions_1.BaseException);
  exports.AbstractProviderError = AbstractProviderError;
  var NoProviderError = function (_super) {
    __extends(NoProviderError, _super);
    function NoProviderError(injector, key) {
      _super.call(this, injector, key, function (keys) {
        var first = lang_1.stringify(collection_1.ListWrapper.first(keys).token);
        return "No provider for " + first + "!" + constructResolvingPath(keys);
      });
    }
    return NoProviderError;
  }(AbstractProviderError);
  exports.NoProviderError = NoProviderError;
  var CyclicDependencyError = function (_super) {
    __extends(CyclicDependencyError, _super);
    function CyclicDependencyError(injector, key) {
      _super.call(this, injector, key, function (keys) {
        return "Cannot instantiate cyclic dependency!" + constructResolvingPath(keys);
      });
    }
    return CyclicDependencyError;
  }(AbstractProviderError);
  exports.CyclicDependencyError = CyclicDependencyError;
  var InstantiationError = function (_super) {
    __extends(InstantiationError, _super);
    function InstantiationError(injector, originalException, originalStack, key) {
      _super.call(this, "DI Exception", originalException, originalStack, null);
      this.keys = [key];
      this.injectors = [injector];
    }
    InstantiationError.prototype.addKey = function (injector, key) {
      this.injectors.push(injector);
      this.keys.push(key);
    };
    Object.defineProperty(InstantiationError.prototype, "wrapperMessage", {
      get: function () {
        var first = lang_1.stringify(collection_1.ListWrapper.first(this.keys).token);
        return "Error during instantiation of " + first + "!" + constructResolvingPath(this.keys) + ".";
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(InstantiationError.prototype, "causeKey", {
      get: function () {
        return this.keys[0];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(InstantiationError.prototype, "context", {
      get: function () {
        return this.injectors[this.injectors.length - 1].debugContext();
      },
      enumerable: true,
      configurable: true
    });
    return InstantiationError;
  }(exceptions_1.WrappedException);
  exports.InstantiationError = InstantiationError;
  var InvalidProviderError = function (_super) {
    __extends(InvalidProviderError, _super);
    function InvalidProviderError(provider) {
      _super.call(this, "Invalid provider - only instances of Provider and Type are allowed, got: " + provider.toString());
    }
    return InvalidProviderError;
  }(exceptions_1.BaseException);
  exports.InvalidProviderError = InvalidProviderError;
  var NoAnnotationError = function (_super) {
    __extends(NoAnnotationError, _super);
    function NoAnnotationError(typeOrFunc, params) {
      _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));
    }
    NoAnnotationError._genMessage = function (typeOrFunc, params) {
      var signature = [];
      for (var i = 0, ii = params.length; i < ii; i++) {
        var parameter = params[i];
        if (lang_1.isBlank(parameter) || parameter.length == 0) {
          signature.push('?');
        } else {
          signature.push(parameter.map(lang_1.stringify).join(' '));
        }
      }
      return "Cannot resolve all parameters for '" + lang_1.stringify(typeOrFunc) + "'(" + signature.join(', ') + "). " + "Make sure that all the parameters are decorated with Inject or have valid type annotations and that '" + lang_1.stringify(typeOrFunc) + "' is decorated with Injectable.";
    };
    return NoAnnotationError;
  }(exceptions_1.BaseException);
  exports.NoAnnotationError = NoAnnotationError;
  var OutOfBoundsError = function (_super) {
    __extends(OutOfBoundsError, _super);
    function OutOfBoundsError(index) {
      _super.call(this, "Index " + index + " is out-of-bounds.");
    }
    return OutOfBoundsError;
  }(exceptions_1.BaseException);
  exports.OutOfBoundsError = OutOfBoundsError;
  var MixingMultiProvidersWithRegularProvidersError = function (_super) {
    __extends(MixingMultiProvidersWithRegularProvidersError, _super);
    function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {
      _super.call(this, "Cannot mix multi providers and regular providers, got: " + provider1.toString() + " " + provider2.toString());
    }
    return MixingMultiProvidersWithRegularProvidersError;
  }(exceptions_1.BaseException);
  exports.MixingMultiProvidersWithRegularProvidersError = MixingMultiProvidersWithRegularProvidersError;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/di/opaque_token.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /**
    * Creates a token that can be used in a DI Provider.
    *
    * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))
    *
    * ```typescript
    * var t = new OpaqueToken("value");
    *
    * var injector = Injector.resolveAndCreate([
    *   provide(t, {useValue: "bindingValue"})
    * ]);
    *
    * expect(injector.get(t)).toEqual("bindingValue");
    * ```
    *
    * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions
    * caused by multiple providers using the same string as two different tokens.
    *
    * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better
    * error messages.
    * @ts2dart_const
    */

    var define,
        global = this || self,
        GLOBAL = global;
    var OpaqueToken = function () {
        function OpaqueToken(_desc) {
            this._desc = _desc;
        }
        OpaqueToken.prototype.toString = function () {
            return "Token " + this._desc;
        };
        return OpaqueToken;
    }();
    exports.OpaqueToken = OpaqueToken;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di.js', ['npm:@angular/core@2.0.0-rc.1/src/di/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/di/decorators.js', 'npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/di/injector.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_injector.js', 'npm:@angular/core@2.0.0-rc.1/src/di/provider.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/di/opaque_token.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  var metadata_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/metadata.js');
  exports.InjectMetadata = metadata_1.InjectMetadata;
  exports.OptionalMetadata = metadata_1.OptionalMetadata;
  exports.InjectableMetadata = metadata_1.InjectableMetadata;
  exports.SelfMetadata = metadata_1.SelfMetadata;
  exports.HostMetadata = metadata_1.HostMetadata;
  exports.SkipSelfMetadata = metadata_1.SkipSelfMetadata;
  exports.DependencyMetadata = metadata_1.DependencyMetadata;
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js'));
  var forward_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/forward_ref.js');
  exports.forwardRef = forward_ref_1.forwardRef;
  exports.resolveForwardRef = forward_ref_1.resolveForwardRef;
  var injector_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/injector.js');
  exports.Injector = injector_1.Injector;
  var reflective_injector_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_injector.js');
  exports.ReflectiveInjector = reflective_injector_1.ReflectiveInjector;
  var provider_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/provider.js');
  exports.Binding = provider_1.Binding;
  exports.ProviderBuilder = provider_1.ProviderBuilder;
  exports.bind = provider_1.bind;
  exports.Provider = provider_1.Provider;
  exports.provide = provider_1.provide;
  var reflective_provider_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js');
  exports.ResolvedReflectiveFactory = reflective_provider_1.ResolvedReflectiveFactory;
  exports.ReflectiveDependency = reflective_provider_1.ReflectiveDependency;
  var reflective_key_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_key.js');
  exports.ReflectiveKey = reflective_key_1.ReflectiveKey;
  var reflective_exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_exceptions.js');
  exports.NoProviderError = reflective_exceptions_1.NoProviderError;
  exports.AbstractProviderError = reflective_exceptions_1.AbstractProviderError;
  exports.CyclicDependencyError = reflective_exceptions_1.CyclicDependencyError;
  exports.InstantiationError = reflective_exceptions_1.InstantiationError;
  exports.InvalidProviderError = reflective_exceptions_1.InvalidProviderError;
  exports.NoAnnotationError = reflective_exceptions_1.NoAnnotationError;
  exports.OutOfBoundsError = reflective_exceptions_1.OutOfBoundsError;
  var opaque_token_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/opaque_token.js');
  exports.OpaqueToken = opaque_token_1.OpaqueToken;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/application_tokens.js', ['npm:@angular/core@2.0.0-rc.1/src/di.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var di_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  exports.APP_ID = new di_1.OpaqueToken('AppId');
  function _appIdRandomProviderFactory() {
    return "" + _randomChar() + _randomChar() + _randomChar();
  }
  exports.APP_ID_RANDOM_PROVIDER = {
    provide: exports.APP_ID,
    useFactory: _appIdRandomProviderFactory,
    deps: []
  };
  function _randomChar() {
    return lang_1.StringWrapper.fromCharCode(97 + lang_1.Math.floor(lang_1.Math.random() * 25));
  }
  exports.PLATFORM_INITIALIZER = new di_1.OpaqueToken("Platform Initializer");
  exports.APP_INITIALIZER = new di_1.OpaqueToken("Application Initializer");
  exports.PACKAGE_ROOT_URL = new di_1.OpaqueToken("Application Packages Root URL");
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js', ['npm:@angular/core@2.0.0-rc.1/src/security.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/element.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js', 'npm:@angular/core@2.0.0-rc.1/src/render/api.js', 'npm:@angular/core@2.0.0-rc.1/src/application_tokens.js', 'npm:@angular/core@2.0.0-rc.1/src/di/decorators.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var security_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/security.js');
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var element_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/element.js');
  var exceptions_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/exceptions.js');
  var change_detection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection.js');
  var api_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/render/api.js');
  var application_tokens_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_tokens.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js');
  var change_detection_util_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js');
  var ViewUtils = function () {
    function ViewUtils(_renderer, _appId, sanitizer) {
      this._renderer = _renderer;
      this._appId = _appId;
      this._nextCompTypeId = 0;
      this.sanitizer = sanitizer;
    }
    ViewUtils.prototype.createRenderComponentType = function (templateUrl, slotCount, encapsulation, styles) {
      return new api_1.RenderComponentType(this._appId + "-" + this._nextCompTypeId++, templateUrl, slotCount, encapsulation, styles);
    };
    ViewUtils.prototype.renderComponent = function (renderComponentType) {
      return this._renderer.renderComponent(renderComponentType);
    };
    ViewUtils.decorators = [{ type: decorators_1.Injectable }];
    ViewUtils.ctorParameters = [{ type: api_1.RootRenderer }, {
      type: undefined,
      decorators: [{
        type: decorators_1.Inject,
        args: [application_tokens_1.APP_ID]
      }]
    }, { type: security_1.SanitizationService }];
    return ViewUtils;
  }();
  exports.ViewUtils = ViewUtils;
  function flattenNestedViewRenderNodes(nodes) {
    return _flattenNestedViewRenderNodes(nodes, []);
  }
  exports.flattenNestedViewRenderNodes = flattenNestedViewRenderNodes;
  function _flattenNestedViewRenderNodes(nodes, renderNodes) {
    for (var i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      if (node instanceof element_1.AppElement) {
        var appEl = node;
        renderNodes.push(appEl.nativeElement);
        if (lang_1.isPresent(appEl.nestedViews)) {
          for (var k = 0; k < appEl.nestedViews.length; k++) {
            _flattenNestedViewRenderNodes(appEl.nestedViews[k].rootNodesOrAppElements, renderNodes);
          }
        }
      } else {
        renderNodes.push(node);
      }
    }
    return renderNodes;
  }
  var EMPTY_ARR = [];
  function ensureSlotCount(projectableNodes, expectedSlotCount) {
    var res;
    if (lang_1.isBlank(projectableNodes)) {
      res = EMPTY_ARR;
    } else if (projectableNodes.length < expectedSlotCount) {
      var givenSlotCount = projectableNodes.length;
      res = collection_1.ListWrapper.createFixedSize(expectedSlotCount);
      for (var i = 0; i < expectedSlotCount; i++) {
        res[i] = i < givenSlotCount ? projectableNodes[i] : EMPTY_ARR;
      }
    } else {
      res = projectableNodes;
    }
    return res;
  }
  exports.ensureSlotCount = ensureSlotCount;
  exports.MAX_INTERPOLATION_VALUES = 9;
  function interpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {
    switch (valueCount) {
      case 1:
        return c0 + _toStringWithNull(a1) + c1;
      case 2:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;
      case 3:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3;
      case 4:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4;
      case 5:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;
      case 6:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;
      case 7:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7;
      case 8:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;
      case 9:
        return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) + c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;
      default:
        throw new exceptions_1.BaseException("Does not support more than 9 expressions");
    }
  }
  exports.interpolate = interpolate;
  function _toStringWithNull(v) {
    return v != null ? v.toString() : '';
  }
  function checkBinding(throwOnChange, oldValue, newValue) {
    if (throwOnChange) {
      if (!change_detection_1.devModeEqual(oldValue, newValue)) {
        throw new exceptions_2.ExpressionChangedAfterItHasBeenCheckedException(oldValue, newValue, null);
      }
      return false;
    } else {
      return !lang_1.looseIdentical(oldValue, newValue);
    }
  }
  exports.checkBinding = checkBinding;
  function arrayLooseIdentical(a, b) {
    if (a.length != b.length) return false;
    for (var i = 0; i < a.length; ++i) {
      if (!lang_1.looseIdentical(a[i], b[i])) return false;
    }
    return true;
  }
  exports.arrayLooseIdentical = arrayLooseIdentical;
  function mapLooseIdentical(m1, m2) {
    var k1 = collection_1.StringMapWrapper.keys(m1);
    var k2 = collection_1.StringMapWrapper.keys(m2);
    if (k1.length != k2.length) {
      return false;
    }
    var key;
    for (var i = 0; i < k1.length; i++) {
      key = k1[i];
      if (!lang_1.looseIdentical(m1[key], m2[key])) {
        return false;
      }
    }
    return true;
  }
  exports.mapLooseIdentical = mapLooseIdentical;
  function castByValue(input, value) {
    return input;
  }
  exports.castByValue = castByValue;
  exports.EMPTY_ARRAY = [];
  exports.EMPTY_MAP = {};
  function pureProxy1(fn) {
    var result;
    var v0;
    v0 = change_detection_util_1.uninitialized;
    return function (p0) {
      if (!lang_1.looseIdentical(v0, p0)) {
        v0 = p0;
        result = fn(p0);
      }
      return result;
    };
  }
  exports.pureProxy1 = pureProxy1;
  function pureProxy2(fn) {
    var result;
    var v0, v1;
    v0 = v1 = change_detection_util_1.uninitialized;
    return function (p0, p1) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1)) {
        v0 = p0;
        v1 = p1;
        result = fn(p0, p1);
      }
      return result;
    };
  }
  exports.pureProxy2 = pureProxy2;
  function pureProxy3(fn) {
    var result;
    var v0, v1, v2;
    v0 = v1 = v2 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        result = fn(p0, p1, p2);
      }
      return result;
    };
  }
  exports.pureProxy3 = pureProxy3;
  function pureProxy4(fn) {
    var result;
    var v0, v1, v2, v3;
    v0 = v1 = v2 = v3 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        result = fn(p0, p1, p2, p3);
      }
      return result;
    };
  }
  exports.pureProxy4 = pureProxy4;
  function pureProxy5(fn) {
    var result;
    var v0, v1, v2, v3, v4;
    v0 = v1 = v2 = v3 = v4 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3, p4) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3) || !lang_1.looseIdentical(v4, p4)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        v4 = p4;
        result = fn(p0, p1, p2, p3, p4);
      }
      return result;
    };
  }
  exports.pureProxy5 = pureProxy5;
  function pureProxy6(fn) {
    var result;
    var v0, v1, v2, v3, v4, v5;
    v0 = v1 = v2 = v3 = v4 = v5 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3, p4, p5) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3) || !lang_1.looseIdentical(v4, p4) || !lang_1.looseIdentical(v5, p5)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        v4 = p4;
        v5 = p5;
        result = fn(p0, p1, p2, p3, p4, p5);
      }
      return result;
    };
  }
  exports.pureProxy6 = pureProxy6;
  function pureProxy7(fn) {
    var result;
    var v0, v1, v2, v3, v4, v5, v6;
    v0 = v1 = v2 = v3 = v4 = v5 = v6 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3, p4, p5, p6) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3) || !lang_1.looseIdentical(v4, p4) || !lang_1.looseIdentical(v5, p5) || !lang_1.looseIdentical(v6, p6)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        v4 = p4;
        v5 = p5;
        v6 = p6;
        result = fn(p0, p1, p2, p3, p4, p5, p6);
      }
      return result;
    };
  }
  exports.pureProxy7 = pureProxy7;
  function pureProxy8(fn) {
    var result;
    var v0, v1, v2, v3, v4, v5, v6, v7;
    v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3, p4, p5, p6, p7) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3) || !lang_1.looseIdentical(v4, p4) || !lang_1.looseIdentical(v5, p5) || !lang_1.looseIdentical(v6, p6) || !lang_1.looseIdentical(v7, p7)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        v4 = p4;
        v5 = p5;
        v6 = p6;
        v7 = p7;
        result = fn(p0, p1, p2, p3, p4, p5, p6, p7);
      }
      return result;
    };
  }
  exports.pureProxy8 = pureProxy8;
  function pureProxy9(fn) {
    var result;
    var v0, v1, v2, v3, v4, v5, v6, v7, v8;
    v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3) || !lang_1.looseIdentical(v4, p4) || !lang_1.looseIdentical(v5, p5) || !lang_1.looseIdentical(v6, p6) || !lang_1.looseIdentical(v7, p7) || !lang_1.looseIdentical(v8, p8)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        v4 = p4;
        v5 = p5;
        v6 = p6;
        v7 = p7;
        v8 = p8;
        result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);
      }
      return result;
    };
  }
  exports.pureProxy9 = pureProxy9;
  function pureProxy10(fn) {
    var result;
    var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;
    v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = change_detection_util_1.uninitialized;
    return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
      if (!lang_1.looseIdentical(v0, p0) || !lang_1.looseIdentical(v1, p1) || !lang_1.looseIdentical(v2, p2) || !lang_1.looseIdentical(v3, p3) || !lang_1.looseIdentical(v4, p4) || !lang_1.looseIdentical(v5, p5) || !lang_1.looseIdentical(v6, p6) || !lang_1.looseIdentical(v7, p7) || !lang_1.looseIdentical(v8, p8) || !lang_1.looseIdentical(v9, p9)) {
        v0 = p0;
        v1 = p1;
        v2 = p2;
        v3 = p3;
        v4 = p4;
        v5 = p5;
        v6 = p6;
        v7 = p7;
        v8 = p8;
        v9 = p9;
        result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
      }
      return result;
    };
  }
  exports.pureProxy10 = pureProxy10;
  return module.exports;
});
System.registerDynamic('npm:process@0.11.3/browser.js', [], true, function ($__require, exports, module) {
    var define,
        global = this || self,
        GLOBAL = global;
    // shim for using process in browser

    var process = module.exports = {};
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        if (!draining || !currentQueue) {
            return;
        }
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = setTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        clearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            setTimeout(drainQueue, 0);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
    return module.exports;
});
System.registerDynamic("npm:process@0.11.3.js", ["npm:process@0.11.3/browser.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:process@0.11.3/browser.js");
  return module.exports;
});
System.registerDynamic('github:jspm/nodelibs-process@0.1.2/index.js', ['npm:process@0.11.3.js'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = System._nodeRequire ? process : $__require('npm:process@0.11.3.js');
  return module.exports;
});
System.registerDynamic("github:jspm/nodelibs-process@0.1.2.js", ["github:jspm/nodelibs-process@0.1.2/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jspm/nodelibs-process@0.1.2/index.js");
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/metadata/view.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    (function (ViewEncapsulation) {
      ViewEncapsulation[ViewEncapsulation["Emulated"] = 0] = "Emulated";
      ViewEncapsulation[ViewEncapsulation["Native"] = 1] = "Native";
      ViewEncapsulation[ViewEncapsulation["None"] = 2] = "None";
    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));
    var ViewEncapsulation = exports.ViewEncapsulation;
    exports.VIEW_ENCAPSULATION_VALUES = [ViewEncapsulation.Emulated, ViewEncapsulation.Native, ViewEncapsulation.None];
    var ViewMetadata = function () {
      function ViewMetadata(_a) {
        var _b = _a === void 0 ? {} : _a,
            templateUrl = _b.templateUrl,
            template = _b.template,
            directives = _b.directives,
            pipes = _b.pipes,
            encapsulation = _b.encapsulation,
            styles = _b.styles,
            styleUrls = _b.styleUrls;
        this.templateUrl = templateUrl;
        this.template = template;
        this.styleUrls = styleUrls;
        this.styles = styles;
        this.directives = directives;
        this.pipes = pipes;
        this.encapsulation = encapsulation;
      }
      return ViewMetadata;
    }();
    exports.ViewMetadata = ViewMetadata;
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    (function (ViewType) {
        // A view that contains the host element with bound component directive.
        // Contains a COMPONENT view
        ViewType[ViewType["HOST"] = 0] = "HOST";
        // The view of the component
        // Can contain 0 to n EMBEDDED views
        ViewType[ViewType["COMPONENT"] = 1] = "COMPONENT";
        // A view that is embedded into another View via a <template> element
        // inside of a COMPONENT view
        ViewType[ViewType["EMBEDDED"] = 2] = "EMBEDDED";
    })(exports.ViewType || (exports.ViewType = {}));
    var ViewType = exports.ViewType;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/linker/debug_context.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var view_type_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js');
  var StaticNodeDebugInfo = function () {
    function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {
      this.providerTokens = providerTokens;
      this.componentToken = componentToken;
      this.refTokens = refTokens;
    }
    return StaticNodeDebugInfo;
  }();
  exports.StaticNodeDebugInfo = StaticNodeDebugInfo;
  var DebugContext = function () {
    function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {
      this._view = _view;
      this._nodeIndex = _nodeIndex;
      this._tplRow = _tplRow;
      this._tplCol = _tplCol;
    }
    Object.defineProperty(DebugContext.prototype, "_staticNodeInfo", {
      get: function () {
        return lang_1.isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "context", {
      get: function () {
        return this._view.context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "component", {
      get: function () {
        var staticNodeInfo = this._staticNodeInfo;
        if (lang_1.isPresent(staticNodeInfo) && lang_1.isPresent(staticNodeInfo.componentToken)) {
          return this.injector.get(staticNodeInfo.componentToken);
        }
        return null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "componentRenderElement", {
      get: function () {
        var componentView = this._view;
        while (lang_1.isPresent(componentView.declarationAppElement) && componentView.type !== view_type_1.ViewType.COMPONENT) {
          componentView = componentView.declarationAppElement.parentView;
        }
        return lang_1.isPresent(componentView.declarationAppElement) ? componentView.declarationAppElement.nativeElement : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "injector", {
      get: function () {
        return this._view.injector(this._nodeIndex);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "renderNode", {
      get: function () {
        if (lang_1.isPresent(this._nodeIndex) && lang_1.isPresent(this._view.allNodes)) {
          return this._view.allNodes[this._nodeIndex];
        } else {
          return null;
        }
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "providerTokens", {
      get: function () {
        var staticNodeInfo = this._staticNodeInfo;
        return lang_1.isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "source", {
      get: function () {
        return this._view.componentType.templateUrl + ":" + this._tplRow + ":" + this._tplCol;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugContext.prototype, "references", {
      get: function () {
        var _this = this;
        var varValues = {};
        var staticNodeInfo = this._staticNodeInfo;
        if (lang_1.isPresent(staticNodeInfo)) {
          var refs = staticNodeInfo.refTokens;
          collection_1.StringMapWrapper.forEach(refs, function (refToken, refName) {
            var varValue;
            if (lang_1.isBlank(refToken)) {
              varValue = lang_1.isPresent(_this._view.allNodes) ? _this._view.allNodes[_this._nodeIndex] : null;
            } else {
              varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);
            }
            varValues[refName] = varValue;
          });
        }
        return varValues;
      },
      enumerable: true,
      configurable: true
    });
    return DebugContext;
  }();
  exports.DebugContext = DebugContext;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var lang_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  exports.looseIdentical = lang_2.looseIdentical;
  exports.uninitialized = new Object();
  function devModeEqual(a, b) {
    if (collection_1.isListLikeIterable(a) && collection_1.isListLikeIterable(b)) {
      return collection_1.areIterablesEqual(a, b, devModeEqual);
    } else if (!collection_1.isListLikeIterable(a) && !lang_1.isPrimitive(a) && !collection_1.isListLikeIterable(b) && !lang_1.isPrimitive(b)) {
      return true;
    } else {
      return lang_1.looseIdentical(a, b);
    }
  }
  exports.devModeEqual = devModeEqual;
  var WrappedValue = function () {
    function WrappedValue(wrapped) {
      this.wrapped = wrapped;
    }
    WrappedValue.wrap = function (value) {
      return new WrappedValue(value);
    };
    return WrappedValue;
  }();
  exports.WrappedValue = WrappedValue;
  var ValueUnwrapper = function () {
    function ValueUnwrapper() {
      this.hasWrappedValue = false;
    }
    ValueUnwrapper.prototype.unwrap = function (value) {
      if (value instanceof WrappedValue) {
        this.hasWrappedValue = true;
        return value.wrapped;
      }
      return value;
    };
    ValueUnwrapper.prototype.reset = function () {
      this.hasWrappedValue = false;
    };
    return ValueUnwrapper;
  }();
  exports.ValueUnwrapper = ValueUnwrapper;
  var SimpleChange = function () {
    function SimpleChange(previousValue, currentValue) {
      this.previousValue = previousValue;
      this.currentValue = currentValue;
    }
    SimpleChange.prototype.isFirstChange = function () {
      return this.previousValue === exports.uninitialized;
    };
    return SimpleChange;
  }();
  exports.SimpleChange = SimpleChange;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/render/api.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var exceptions_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js");
  var RenderComponentType = function () {
    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles) {
      this.id = id;
      this.templateUrl = templateUrl;
      this.slotCount = slotCount;
      this.encapsulation = encapsulation;
      this.styles = styles;
    }
    return RenderComponentType;
  }();
  exports.RenderComponentType = RenderComponentType;
  var RenderDebugInfo = function () {
    function RenderDebugInfo() {}
    Object.defineProperty(RenderDebugInfo.prototype, "injector", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderDebugInfo.prototype, "component", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderDebugInfo.prototype, "providerTokens", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderDebugInfo.prototype, "references", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderDebugInfo.prototype, "context", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RenderDebugInfo.prototype, "source", {
      get: function () {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return RenderDebugInfo;
  }();
  exports.RenderDebugInfo = RenderDebugInfo;
  var Renderer = function () {
    function Renderer() {}
    return Renderer;
  }();
  exports.Renderer = Renderer;
  var RootRenderer = function () {
    function RootRenderer() {}
    return RootRenderer;
  }();
  exports.RootRenderer = RootRenderer;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/linker/template_ref.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/lang.js");
  var EMPTY_CONTEXT = new Object();
  var TemplateRef = function () {
    function TemplateRef() {}
    Object.defineProperty(TemplateRef.prototype, "elementRef", {
      get: function () {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    return TemplateRef;
  }();
  exports.TemplateRef = TemplateRef;
  var TemplateRef_ = function (_super) {
    __extends(TemplateRef_, _super);
    function TemplateRef_(_appElement, _viewFactory) {
      _super.call(this);
      this._appElement = _appElement;
      this._viewFactory = _viewFactory;
    }
    TemplateRef_.prototype.createEmbeddedView = function (context) {
      var view = this._viewFactory(this._appElement.parentView.viewUtils, this._appElement.parentInjector, this._appElement);
      if (lang_1.isBlank(context)) {
        context = EMPTY_CONTEXT;
      }
      view.create(context, null, null);
      return view.ref;
    };
    Object.defineProperty(TemplateRef_.prototype, "elementRef", {
      get: function () {
        return this._appElement.elementRef;
      },
      enumerable: true,
      configurable: true
    });
    return TemplateRef_;
  }(TemplateRef);
  exports.TemplateRef_ = TemplateRef_;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/profile/wtf_init.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /**
  * This is here because DART requires it. It is noop in JS.
  */

  var define,
      global = this || self,
      GLOBAL = global;
  function wtfInit() {}
  exports.wtfInit = wtfInit;
  

  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection_capabilities.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var ReflectionCapabilities = function () {
    function ReflectionCapabilities(reflect) {
      this._reflect = lang_1.isPresent(reflect) ? reflect : lang_1.global.Reflect;
    }
    ReflectionCapabilities.prototype.isReflectionEnabled = function () {
      return true;
    };
    ReflectionCapabilities.prototype.factory = function (t) {
      switch (t.length) {
        case 0:
          return function () {
            return new t();
          };
        case 1:
          return function (a1) {
            return new t(a1);
          };
        case 2:
          return function (a1, a2) {
            return new t(a1, a2);
          };
        case 3:
          return function (a1, a2, a3) {
            return new t(a1, a2, a3);
          };
        case 4:
          return function (a1, a2, a3, a4) {
            return new t(a1, a2, a3, a4);
          };
        case 5:
          return function (a1, a2, a3, a4, a5) {
            return new t(a1, a2, a3, a4, a5);
          };
        case 6:
          return function (a1, a2, a3, a4, a5, a6) {
            return new t(a1, a2, a3, a4, a5, a6);
          };
        case 7:
          return function (a1, a2, a3, a4, a5, a6, a7) {
            return new t(a1, a2, a3, a4, a5, a6, a7);
          };
        case 8:
          return function (a1, a2, a3, a4, a5, a6, a7, a8) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8);
          };
        case 9:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9);
          };
        case 10:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
          };
        case 11:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
          };
        case 12:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
          };
        case 13:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
          };
        case 14:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
          };
        case 15:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
          };
        case 16:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
          };
        case 17:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
          };
        case 18:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
          };
        case 19:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
          };
        case 20:
          return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
          };
      }
      ;
      throw new Error("Cannot create a factory for '" + lang_1.stringify(t) + "' because its constructor has more than 20 arguments");
    };
    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {
      var result;
      if (typeof paramTypes === 'undefined') {
        result = new Array(paramAnnotations.length);
      } else {
        result = new Array(paramTypes.length);
      }
      for (var i = 0; i < result.length; i++) {
        if (typeof paramTypes === 'undefined') {
          result[i] = [];
        } else if (paramTypes[i] != Object) {
          result[i] = [paramTypes[i]];
        } else {
          result[i] = [];
        }
        if (lang_1.isPresent(paramAnnotations) && lang_1.isPresent(paramAnnotations[i])) {
          result[i] = result[i].concat(paramAnnotations[i]);
        }
      }
      return result;
    };
    ReflectionCapabilities.prototype.parameters = function (typeOrFunc) {
      if (lang_1.isPresent(typeOrFunc.parameters)) {
        return typeOrFunc.parameters;
      }
      if (lang_1.isPresent(typeOrFunc.ctorParameters)) {
        var ctorParameters = typeOrFunc.ctorParameters;
        var paramTypes_1 = ctorParameters.map(function (ctorParam) {
          return ctorParam && ctorParam.type;
        });
        var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {
          return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);
        });
        return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var paramAnnotations = this._reflect.getMetadata('parameters', typeOrFunc);
        var paramTypes = this._reflect.getMetadata('design:paramtypes', typeOrFunc);
        if (lang_1.isPresent(paramTypes) || lang_1.isPresent(paramAnnotations)) {
          return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);
        }
      }
      var parameters = new Array(typeOrFunc.length);
      parameters.fill(undefined);
      return parameters;
    };
    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {
      if (lang_1.isPresent(typeOrFunc.annotations)) {
        var annotations = typeOrFunc.annotations;
        if (lang_1.isFunction(annotations) && annotations.annotations) {
          annotations = annotations.annotations;
        }
        return annotations;
      }
      if (lang_1.isPresent(typeOrFunc.decorators)) {
        return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var annotations = this._reflect.getMetadata('annotations', typeOrFunc);
        if (lang_1.isPresent(annotations)) return annotations;
      }
      return [];
    };
    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {
      if (lang_1.isPresent(typeOrFunc.propMetadata)) {
        var propMetadata = typeOrFunc.propMetadata;
        if (lang_1.isFunction(propMetadata) && propMetadata.propMetadata) {
          propMetadata = propMetadata.propMetadata;
        }
        return propMetadata;
      }
      if (lang_1.isPresent(typeOrFunc.propDecorators)) {
        var propDecorators_1 = typeOrFunc.propDecorators;
        var propMetadata_1 = {};
        Object.keys(propDecorators_1).forEach(function (prop) {
          propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);
        });
        return propMetadata_1;
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);
        if (lang_1.isPresent(propMetadata)) return propMetadata;
      }
      return {};
    };
    ReflectionCapabilities.prototype.interfaces = function (type) {
      throw new exceptions_1.BaseException("JavaScript does not support interfaces");
    };
    ReflectionCapabilities.prototype.getter = function (name) {
      return new Function('o', 'return o.' + name + ';');
    };
    ReflectionCapabilities.prototype.setter = function (name) {
      return new Function('o', 'v', 'return o.' + name + ' = v;');
    };
    ReflectionCapabilities.prototype.method = function (name) {
      var functionBody = "if (!o." + name + ") throw new Error('\"" + name + "\" is undefined');\n        return o." + name + ".apply(o, args);";
      return new Function('o', 'args', functionBody);
    };
    ReflectionCapabilities.prototype.importUri = function (type) {
      return "./" + lang_1.stringify(type);
    };
    return ReflectionCapabilities;
  }();
  exports.ReflectionCapabilities = ReflectionCapabilities;
  function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {
    if (!decoratorInvocations) {
      return [];
    }
    return decoratorInvocations.map(function (decoratorInvocation) {
      var decoratorType = decoratorInvocation.type;
      var annotationCls = decoratorType.annotationCls;
      var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];
      var annotation = Object.create(annotationCls.prototype);
      annotationCls.apply(annotation, annotationArgs);
      return annotation;
    });
  }
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/debug/debug_node.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var EventListener = function () {
    function EventListener(name, callback) {
      this.name = name;
      this.callback = callback;
    }
    ;
    return EventListener;
  }();
  exports.EventListener = EventListener;
  var DebugNode = function () {
    function DebugNode(nativeNode, parent, _debugInfo) {
      this._debugInfo = _debugInfo;
      this.nativeNode = nativeNode;
      if (lang_1.isPresent(parent) && parent instanceof DebugElement) {
        parent.addChild(this);
      } else {
        this.parent = null;
      }
      this.listeners = [];
    }
    Object.defineProperty(DebugNode.prototype, "injector", {
      get: function () {
        return lang_1.isPresent(this._debugInfo) ? this._debugInfo.injector : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugNode.prototype, "componentInstance", {
      get: function () {
        return lang_1.isPresent(this._debugInfo) ? this._debugInfo.component : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugNode.prototype, "context", {
      get: function () {
        return lang_1.isPresent(this._debugInfo) ? this._debugInfo.context : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugNode.prototype, "references", {
      get: function () {
        return lang_1.isPresent(this._debugInfo) ? this._debugInfo.references : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugNode.prototype, "providerTokens", {
      get: function () {
        return lang_1.isPresent(this._debugInfo) ? this._debugInfo.providerTokens : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugNode.prototype, "source", {
      get: function () {
        return lang_1.isPresent(this._debugInfo) ? this._debugInfo.source : null;
      },
      enumerable: true,
      configurable: true
    });
    DebugNode.prototype.inject = function (token) {
      return this.injector.get(token);
    };
    return DebugNode;
  }();
  exports.DebugNode = DebugNode;
  var DebugElement = function (_super) {
    __extends(DebugElement, _super);
    function DebugElement(nativeNode, parent, _debugInfo) {
      _super.call(this, nativeNode, parent, _debugInfo);
      this.properties = {};
      this.attributes = {};
      this.childNodes = [];
      this.nativeElement = nativeNode;
    }
    DebugElement.prototype.addChild = function (child) {
      if (lang_1.isPresent(child)) {
        this.childNodes.push(child);
        child.parent = this;
      }
    };
    DebugElement.prototype.removeChild = function (child) {
      var childIndex = this.childNodes.indexOf(child);
      if (childIndex !== -1) {
        child.parent = null;
        this.childNodes.splice(childIndex, 1);
      }
    };
    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {
      var siblingIndex = this.childNodes.indexOf(child);
      if (siblingIndex !== -1) {
        var previousChildren = this.childNodes.slice(0, siblingIndex + 1);
        var nextChildren = this.childNodes.slice(siblingIndex + 1);
        this.childNodes = collection_1.ListWrapper.concat(collection_1.ListWrapper.concat(previousChildren, newChildren), nextChildren);
        for (var i = 0; i < newChildren.length; ++i) {
          var newChild = newChildren[i];
          if (lang_1.isPresent(newChild.parent)) {
            newChild.parent.removeChild(newChild);
          }
          newChild.parent = this;
        }
      }
    };
    DebugElement.prototype.query = function (predicate) {
      var results = this.queryAll(predicate);
      return results.length > 0 ? results[0] : null;
    };
    DebugElement.prototype.queryAll = function (predicate) {
      var matches = [];
      _queryElementChildren(this, predicate, matches);
      return matches;
    };
    DebugElement.prototype.queryAllNodes = function (predicate) {
      var matches = [];
      _queryNodeChildren(this, predicate, matches);
      return matches;
    };
    Object.defineProperty(DebugElement.prototype, "children", {
      get: function () {
        var children = [];
        this.childNodes.forEach(function (node) {
          if (node instanceof DebugElement) {
            children.push(node);
          }
        });
        return children;
      },
      enumerable: true,
      configurable: true
    });
    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {
      this.listeners.forEach(function (listener) {
        if (listener.name == eventName) {
          listener.callback(eventObj);
        }
      });
    };
    return DebugElement;
  }(DebugNode);
  exports.DebugElement = DebugElement;
  function asNativeElements(debugEls) {
    return debugEls.map(function (el) {
      return el.nativeElement;
    });
  }
  exports.asNativeElements = asNativeElements;
  function _queryElementChildren(element, predicate, matches) {
    element.childNodes.forEach(function (node) {
      if (node instanceof DebugElement) {
        if (predicate(node)) {
          matches.push(node);
        }
        _queryElementChildren(node, predicate, matches);
      }
    });
  }
  function _queryNodeChildren(parentNode, predicate, matches) {
    if (parentNode instanceof DebugElement) {
      parentNode.childNodes.forEach(function (node) {
        if (predicate(node)) {
          matches.push(node);
        }
        if (node instanceof DebugElement) {
          _queryNodeChildren(node, predicate, matches);
        }
      });
    }
  }
  var _nativeNodeToDebugNode = new Map();
  function getDebugNode(nativeNode) {
    return _nativeNodeToDebugNode.get(nativeNode);
  }
  exports.getDebugNode = getDebugNode;
  function getAllDebugNodes() {
    return collection_1.MapWrapper.values(_nativeNodeToDebugNode);
  }
  exports.getAllDebugNodes = getAllDebugNodes;
  function indexDebugNode(node) {
    _nativeNodeToDebugNode.set(node.nativeNode, node);
  }
  exports.indexDebugNode = indexDebugNode;
  function removeDebugNodeFromIndex(node) {
    _nativeNodeToDebugNode.delete(node.nativeNode);
  }
  exports.removeDebugNodeFromIndex = removeDebugNodeFromIndex;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/debug/debug_renderer.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/debug/debug_node.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var debug_node_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/debug/debug_node.js');
  var DebugDomRootRenderer = function () {
    function DebugDomRootRenderer(_delegate) {
      this._delegate = _delegate;
    }
    DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {
      return new DebugDomRenderer(this._delegate.renderComponent(componentProto));
    };
    return DebugDomRootRenderer;
  }();
  exports.DebugDomRootRenderer = DebugDomRootRenderer;
  var DebugDomRenderer = function () {
    function DebugDomRenderer(_delegate) {
      this._delegate = _delegate;
    }
    DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {
      var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);
      var debugEl = new debug_node_1.DebugElement(nativeEl, null, debugInfo);
      debug_node_1.indexDebugNode(debugEl);
      return nativeEl;
    };
    DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {
      var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);
      var debugEl = new debug_node_1.DebugElement(nativeEl, debug_node_1.getDebugNode(parentElement), debugInfo);
      debugEl.name = name;
      debug_node_1.indexDebugNode(debugEl);
      return nativeEl;
    };
    DebugDomRenderer.prototype.createViewRoot = function (hostElement) {
      return this._delegate.createViewRoot(hostElement);
    };
    DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {
      var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);
      var debugEl = new debug_node_1.DebugNode(comment, debug_node_1.getDebugNode(parentElement), debugInfo);
      debug_node_1.indexDebugNode(debugEl);
      return comment;
    };
    DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {
      var text = this._delegate.createText(parentElement, value, debugInfo);
      var debugEl = new debug_node_1.DebugNode(text, debug_node_1.getDebugNode(parentElement), debugInfo);
      debug_node_1.indexDebugNode(debugEl);
      return text;
    };
    DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {
      var debugParent = debug_node_1.getDebugNode(parentElement);
      if (lang_1.isPresent(debugParent) && debugParent instanceof debug_node_1.DebugElement) {
        var debugElement_1 = debugParent;
        nodes.forEach(function (node) {
          debugElement_1.addChild(debug_node_1.getDebugNode(node));
        });
      }
      this._delegate.projectNodes(parentElement, nodes);
    };
    DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {
      var debugNode = debug_node_1.getDebugNode(node);
      if (lang_1.isPresent(debugNode)) {
        var debugParent = debugNode.parent;
        if (viewRootNodes.length > 0 && lang_1.isPresent(debugParent)) {
          var debugViewRootNodes = [];
          viewRootNodes.forEach(function (rootNode) {
            return debugViewRootNodes.push(debug_node_1.getDebugNode(rootNode));
          });
          debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);
        }
      }
      this._delegate.attachViewAfter(node, viewRootNodes);
    };
    DebugDomRenderer.prototype.detachView = function (viewRootNodes) {
      viewRootNodes.forEach(function (node) {
        var debugNode = debug_node_1.getDebugNode(node);
        if (lang_1.isPresent(debugNode) && lang_1.isPresent(debugNode.parent)) {
          debugNode.parent.removeChild(debugNode);
        }
      });
      this._delegate.detachView(viewRootNodes);
    };
    DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {
      viewAllNodes.forEach(function (node) {
        debug_node_1.removeDebugNodeFromIndex(debug_node_1.getDebugNode(node));
      });
      this._delegate.destroyView(hostElement, viewAllNodes);
    };
    DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {
      var debugEl = debug_node_1.getDebugNode(renderElement);
      if (lang_1.isPresent(debugEl)) {
        debugEl.listeners.push(new debug_node_1.EventListener(name, callback));
      }
      return this._delegate.listen(renderElement, name, callback);
    };
    DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {
      return this._delegate.listenGlobal(target, name, callback);
    };
    DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {
      var debugEl = debug_node_1.getDebugNode(renderElement);
      if (lang_1.isPresent(debugEl) && debugEl instanceof debug_node_1.DebugElement) {
        debugEl.properties[propertyName] = propertyValue;
      }
      this._delegate.setElementProperty(renderElement, propertyName, propertyValue);
    };
    DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {
      var debugEl = debug_node_1.getDebugNode(renderElement);
      if (lang_1.isPresent(debugEl) && debugEl instanceof debug_node_1.DebugElement) {
        debugEl.attributes[attributeName] = attributeValue;
      }
      this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);
    };
    DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {
      this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);
    };
    DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {
      this._delegate.setElementClass(renderElement, className, isAdd);
    };
    DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {
      this._delegate.setElementStyle(renderElement, styleName, styleValue);
    };
    DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {
      this._delegate.invokeElementMethod(renderElement, methodName, args);
    };
    DebugDomRenderer.prototype.setText = function (renderNode, text) {
      this._delegate.setText(renderNode, text);
    };
    return DebugDomRenderer;
  }();
  exports.DebugDomRenderer = DebugDomRenderer;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/facade/base_wrapped_exception.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    /**
    * A base class for the WrappedException that can be used to identify
    * a WrappedException from ExceptionHandler without adding circular
    * dependency.
    */
    var BaseWrappedException = function (_super) {
        __extends(BaseWrappedException, _super);
        function BaseWrappedException(message) {
            _super.call(this, message);
        }
        Object.defineProperty(BaseWrappedException.prototype, "wrapperMessage", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "wrapperStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalException", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "originalStack", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "context", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseWrappedException.prototype, "message", {
            get: function () {
                return '';
            },
            enumerable: true,
            configurable: true
        });
        return BaseWrappedException;
    }(Error);
    exports.BaseWrappedException = BaseWrappedException;
    

    return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/facade/collection.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/lang.js");
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = function () {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  }();
  var createMapFromMap = function () {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function (v, k) {
        map.set(k, v);
      });
      return map;
    };
  }();
  var _clearValues = function () {
    if (new exports.Map().keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!(k = keyIterator.next()).done) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function (v, k) {
          m.set(k, null);
        });
      };
    }
  }();
  var _arrayFromMap = function () {
    try {
      if (new exports.Map().values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function (v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  }();
  var MapWrapper = function () {
    function MapWrapper() {}
    MapWrapper.clone = function (m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function (stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function (m) {
      var r = {};
      m.forEach(function (v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function (pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function (m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function (m) {
      return m;
    };
    MapWrapper.keys = function (m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function (m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  }();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = function () {
    function StringMapWrapper() {}
    StringMapWrapper.create = function () {
      return {};
    };
    StringMapWrapper.contains = function (map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function (map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function (map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function (map) {
      return Object.keys(map);
    };
    StringMapWrapper.values = function (map) {
      return Object.keys(map).reduce(function (r, a) {
        r.push(map[a]);
        return r;
      }, []);
    };
    StringMapWrapper.isEmpty = function (map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function (map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function (map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function (m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function (m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  }();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = function () {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function (size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function (size) {
      return new Array(size);
    };
    ListWrapper.clone = function (array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function (array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function (array) {
      if (!array) return null;
      return array[0];
    };
    ListWrapper.last = function (array) {
      if (!array || array.length == 0) return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function (array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function (list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function (array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function (a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function (list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function (list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function (list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function (list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function (list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function (list) {
      return list.length == 0;
    };
    ListWrapper.fill = function (list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function (a, b) {
      if (a.length != b.length) return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    };
    ListWrapper.slice = function (l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function (l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function (l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function (l) {
      return l.toString();
    };
    ListWrapper.toJSON = function (l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function (list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    ListWrapper.flatten = function (list) {
      var target = [];
      _flattenArray(list, target);
      return target;
    };
    ListWrapper.addAll = function (list, source) {
      for (var i = 0; i < source.length; i++) {
        list.push(source[i]);
      }
    };
    return ListWrapper;
  }();
  exports.ListWrapper = ListWrapper;
  function _flattenArray(source, target) {
    if (lang_1.isPresent(source)) {
      for (var i = 0; i < source.length; i++) {
        var item = source[i];
        if (lang_1.isArray(item)) {
          _flattenArray(item, target);
        } else {
          target.push(item);
        }
      }
    }
    return target;
  }
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj)) return false;
    return lang_1.isArray(obj) || !(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj;
  }
  exports.isListLikeIterable = isListLikeIterable;
  function areIterablesEqual(a, b, comparator) {
    var iterator1 = a[lang_1.getSymbolIterator()]();
    var iterator2 = b[lang_1.getSymbolIterator()]();
    while (true) {
      var item1 = iterator1.next();
      var item2 = iterator2.next();
      if (item1.done && item2.done) return true;
      if (item1.done || item2.done) return false;
      if (!comparator(item1.value, item2.value)) return false;
    }
  }
  exports.areIterablesEqual = areIterablesEqual;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!(item = iterator.next()).done) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = function () {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  }();
  var SetWrapper = function () {
    function SetWrapper() {}
    SetWrapper.createFromList = function (lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function (s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function (m, k) {
      m.delete(k);
    };
    return SetWrapper;
  }();
  exports.SetWrapper = SetWrapper;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/facade/exception_handler.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/collection.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var base_wrapped_exception_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var collection_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/collection.js');
  var _ArrayLogger = function () {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function (s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function () {};
    ;
    return _ArrayLogger;
  }();
  var ExceptionHandler = function () {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException) throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function (exception) {
      return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function (exception) {
      try {
        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception.originalException;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function (exception) {
      if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException)) return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  }();
  exports.ExceptionHandler = ExceptionHandler;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/base_wrapped_exception.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exception_handler.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var base_wrapped_exception_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/base_wrapped_exception.js');
  var exception_handler_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exception_handler.js');
  var exception_handler_2 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exception_handler.js');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = function (_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = new Error(message).stack;
    }
    BaseException.prototype.toString = function () {
      return this.message;
    };
    return BaseException;
  }(Error);
  exports.BaseException = BaseException;
  var WrappedException = function (_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = new Error(_wrapperMessage).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function () {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function () {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function () {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function () {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function () {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function () {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function () {
      return this.message;
    };
    return WrappedException;
  }(base_wrapped_exception_1.BaseWrappedException);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/provider.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var __extends = this && this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  var Provider = function () {
    function Provider(token, _a) {
      var useClass = _a.useClass,
          useValue = _a.useValue,
          useExisting = _a.useExisting,
          useFactory = _a.useFactory,
          deps = _a.deps,
          multi = _a.multi;
      this.token = token;
      this.useClass = useClass;
      this.useValue = useValue;
      this.useExisting = useExisting;
      this.useFactory = useFactory;
      this.dependencies = deps;
      this._multi = multi;
    }
    Object.defineProperty(Provider.prototype, "multi", {
      get: function () {
        return lang_1.normalizeBool(this._multi);
      },
      enumerable: true,
      configurable: true
    });
    return Provider;
  }();
  exports.Provider = Provider;
  var Binding = function (_super) {
    __extends(Binding, _super);
    function Binding(token, _a) {
      var toClass = _a.toClass,
          toValue = _a.toValue,
          toAlias = _a.toAlias,
          toFactory = _a.toFactory,
          deps = _a.deps,
          multi = _a.multi;
      _super.call(this, token, {
        useClass: toClass,
        useValue: toValue,
        useExisting: toAlias,
        useFactory: toFactory,
        deps: deps,
        multi: multi
      });
    }
    Object.defineProperty(Binding.prototype, "toClass", {
      get: function () {
        return this.useClass;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Binding.prototype, "toAlias", {
      get: function () {
        return this.useExisting;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Binding.prototype, "toFactory", {
      get: function () {
        return this.useFactory;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Binding.prototype, "toValue", {
      get: function () {
        return this.useValue;
      },
      enumerable: true,
      configurable: true
    });
    return Binding;
  }(Provider);
  exports.Binding = Binding;
  function bind(token) {
    return new ProviderBuilder(token);
  }
  exports.bind = bind;
  var ProviderBuilder = function () {
    function ProviderBuilder(token) {
      this.token = token;
    }
    ProviderBuilder.prototype.toClass = function (type) {
      if (!lang_1.isType(type)) {
        throw new exceptions_1.BaseException("Trying to create a class provider but \"" + lang_1.stringify(type) + "\" is not a class!");
      }
      return new Provider(this.token, { useClass: type });
    };
    ProviderBuilder.prototype.toValue = function (value) {
      return new Provider(this.token, { useValue: value });
    };
    ProviderBuilder.prototype.toAlias = function (aliasToken) {
      if (lang_1.isBlank(aliasToken)) {
        throw new exceptions_1.BaseException("Can not alias " + lang_1.stringify(this.token) + " to a blank value!");
      }
      return new Provider(this.token, { useExisting: aliasToken });
    };
    ProviderBuilder.prototype.toFactory = function (factory, dependencies) {
      if (!lang_1.isFunction(factory)) {
        throw new exceptions_1.BaseException("Trying to create a factory provider but \"" + lang_1.stringify(factory) + "\" is not a function!");
      }
      return new Provider(this.token, {
        useFactory: factory,
        deps: dependencies
      });
    };
    return ProviderBuilder;
  }();
  exports.ProviderBuilder = ProviderBuilder;
  function provide(token, _a) {
    var useClass = _a.useClass,
        useValue = _a.useValue,
        useExisting = _a.useExisting,
        useFactory = _a.useFactory,
        deps = _a.deps,
        multi = _a.multi;
    return new Provider(token, {
      useClass: useClass,
      useValue: useValue,
      useExisting: useExisting,
      useFactory: useFactory,
      deps: deps,
      multi: multi
    });
  }
  exports.provide = provide;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/provider_util.js', ['npm:@angular/core@2.0.0-rc.1/src/di/provider.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var provider_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/provider.js');
  function isProviderLiteral(obj) {
    return obj && typeof obj == 'object' && obj.provide;
  }
  exports.isProviderLiteral = isProviderLiteral;
  function createProvider(obj) {
    return new provider_1.Provider(obj.provide, obj);
  }
  exports.createProvider = createProvider;
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1/src/di/metadata.js", ["npm:@angular/core@2.0.0-rc.1/src/facade/lang.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require("npm:@angular/core@2.0.0-rc.1/src/facade/lang.js");
  var InjectMetadata = function () {
    function InjectMetadata(token) {
      this.token = token;
    }
    InjectMetadata.prototype.toString = function () {
      return "@Inject(" + lang_1.stringify(this.token) + ")";
    };
    return InjectMetadata;
  }();
  exports.InjectMetadata = InjectMetadata;
  var OptionalMetadata = function () {
    function OptionalMetadata() {}
    OptionalMetadata.prototype.toString = function () {
      return "@Optional()";
    };
    return OptionalMetadata;
  }();
  exports.OptionalMetadata = OptionalMetadata;
  var DependencyMetadata = function () {
    function DependencyMetadata() {}
    Object.defineProperty(DependencyMetadata.prototype, "token", {
      get: function () {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    return DependencyMetadata;
  }();
  exports.DependencyMetadata = DependencyMetadata;
  var InjectableMetadata = function () {
    function InjectableMetadata() {}
    return InjectableMetadata;
  }();
  exports.InjectableMetadata = InjectableMetadata;
  var SelfMetadata = function () {
    function SelfMetadata() {}
    SelfMetadata.prototype.toString = function () {
      return "@Self()";
    };
    return SelfMetadata;
  }();
  exports.SelfMetadata = SelfMetadata;
  var SkipSelfMetadata = function () {
    function SkipSelfMetadata() {}
    SkipSelfMetadata.prototype.toString = function () {
      return "@SkipSelf()";
    };
    return SkipSelfMetadata;
  }();
  exports.SkipSelfMetadata = SkipSelfMetadata;
  var HostMetadata = function () {
    function HostMetadata() {}
    HostMetadata.prototype.toString = function () {
      return "@Host()";
    };
    return HostMetadata;
  }();
  exports.HostMetadata = HostMetadata;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var globalScope;
    if (typeof window === 'undefined') {
        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
            globalScope = self;
        } else {
            globalScope = global;
        }
    } else {
        globalScope = window;
    }
    function scheduleMicroTask(fn) {
        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);
    }
    exports.scheduleMicroTask = scheduleMicroTask;
    exports.IS_DART = false;
    // Need to declare a new variable for global here since TypeScript
    // exports the original value of the symbol.
    var _global = globalScope;
    exports.global = _global;
    exports.Type = Function;
    function getTypeNameForDebugging(type) {
        if (type['name']) {
            return type['name'];
        }
        return typeof type;
    }
    exports.getTypeNameForDebugging = getTypeNameForDebugging;
    exports.Math = _global.Math;
    exports.Date = _global.Date;
    var _devMode = true;
    var _modeLocked = false;
    function lockMode() {
        _modeLocked = true;
    }
    exports.lockMode = lockMode;
    /**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     */
    function enableProdMode() {
        if (_modeLocked) {
            // Cannot use BaseException as that ends up importing from facade/lang.
            throw 'Cannot enable prod mode after platform setup.';
        }
        _devMode = false;
    }
    exports.enableProdMode = enableProdMode;
    function assertionsEnabled() {
        return _devMode;
    }
    exports.assertionsEnabled = assertionsEnabled;
    // TODO: remove calls to assert in production environment
    // Note: Can't just export this and import in in other files
    // as `assert` is a reserved keyword in Dart
    _global.assert = function assert(condition) {
        // TODO: to be fixed properly via #2830, noop for now
    };
    function isPresent(obj) {
        return obj !== undefined && obj !== null;
    }
    exports.isPresent = isPresent;
    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    exports.isBlank = isBlank;
    function isBoolean(obj) {
        return typeof obj === "boolean";
    }
    exports.isBoolean = isBoolean;
    function isNumber(obj) {
        return typeof obj === "number";
    }
    exports.isNumber = isNumber;
    function isString(obj) {
        return typeof obj === "string";
    }
    exports.isString = isString;
    function isFunction(obj) {
        return typeof obj === "function";
    }
    exports.isFunction = isFunction;
    function isType(obj) {
        return isFunction(obj);
    }
    exports.isType = isType;
    function isStringMap(obj) {
        return typeof obj === 'object' && obj !== null;
    }
    exports.isStringMap = isStringMap;
    var STRING_MAP_PROTO = Object.getPrototypeOf({});
    function isStrictStringMap(obj) {
        return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;
    }
    exports.isStrictStringMap = isStrictStringMap;
    function isPromise(obj) {
        return obj instanceof _global.Promise;
    }
    exports.isPromise = isPromise;
    function isArray(obj) {
        return Array.isArray(obj);
    }
    exports.isArray = isArray;
    function isDate(obj) {
        return obj instanceof exports.Date && !isNaN(obj.valueOf());
    }
    exports.isDate = isDate;
    function noop() {}
    exports.noop = noop;
    function stringify(token) {
        if (typeof token === 'string') {
            return token;
        }
        if (token === undefined || token === null) {
            return '' + token;
        }
        if (token.name) {
            return token.name;
        }
        if (token.overriddenName) {
            return token.overriddenName;
        }
        var res = token.toString();
        var newLineIndex = res.indexOf("\n");
        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);
    }
    exports.stringify = stringify;
    // serialize / deserialize enum exist only for consistency with dart API
    // enums in typescript don't need to be serialized
    function serializeEnum(val) {
        return val;
    }
    exports.serializeEnum = serializeEnum;
    function deserializeEnum(val, values) {
        return val;
    }
    exports.deserializeEnum = deserializeEnum;
    function resolveEnumToken(enumValue, val) {
        return enumValue[val];
    }
    exports.resolveEnumToken = resolveEnumToken;
    var StringWrapper = function () {
        function StringWrapper() {}
        StringWrapper.fromCharCode = function (code) {
            return String.fromCharCode(code);
        };
        StringWrapper.charCodeAt = function (s, index) {
            return s.charCodeAt(index);
        };
        StringWrapper.split = function (s, regExp) {
            return s.split(regExp);
        };
        StringWrapper.equals = function (s, s2) {
            return s === s2;
        };
        StringWrapper.stripLeft = function (s, charVal) {
            if (s && s.length) {
                var pos = 0;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] != charVal) break;
                    pos++;
                }
                s = s.substring(pos);
            }
            return s;
        };
        StringWrapper.stripRight = function (s, charVal) {
            if (s && s.length) {
                var pos = s.length;
                for (var i = s.length - 1; i >= 0; i--) {
                    if (s[i] != charVal) break;
                    pos--;
                }
                s = s.substring(0, pos);
            }
            return s;
        };
        StringWrapper.replace = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.replaceAll = function (s, from, replace) {
            return s.replace(from, replace);
        };
        StringWrapper.slice = function (s, from, to) {
            if (from === void 0) {
                from = 0;
            }
            if (to === void 0) {
                to = null;
            }
            return s.slice(from, to === null ? undefined : to);
        };
        StringWrapper.replaceAllMapped = function (s, from, cb) {
            return s.replace(from, function () {
                var matches = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    matches[_i - 0] = arguments[_i];
                }
                // Remove offset & string from the result array
                matches.splice(-2, 2);
                // The callback receives match, p1, ..., pn
                return cb(matches);
            });
        };
        StringWrapper.contains = function (s, substr) {
            return s.indexOf(substr) != -1;
        };
        StringWrapper.compare = function (a, b) {
            if (a < b) {
                return -1;
            } else if (a > b) {
                return 1;
            } else {
                return 0;
            }
        };
        return StringWrapper;
    }();
    exports.StringWrapper = StringWrapper;
    var StringJoiner = function () {
        function StringJoiner(parts) {
            if (parts === void 0) {
                parts = [];
            }
            this.parts = parts;
        }
        StringJoiner.prototype.add = function (part) {
            this.parts.push(part);
        };
        StringJoiner.prototype.toString = function () {
            return this.parts.join("");
        };
        return StringJoiner;
    }();
    exports.StringJoiner = StringJoiner;
    var NumberParseError = function (_super) {
        __extends(NumberParseError, _super);
        function NumberParseError(message) {
            _super.call(this);
            this.message = message;
        }
        NumberParseError.prototype.toString = function () {
            return this.message;
        };
        return NumberParseError;
    }(Error);
    exports.NumberParseError = NumberParseError;
    var NumberWrapper = function () {
        function NumberWrapper() {}
        NumberWrapper.toFixed = function (n, fractionDigits) {
            return n.toFixed(fractionDigits);
        };
        NumberWrapper.equal = function (a, b) {
            return a === b;
        };
        NumberWrapper.parseIntAutoRadix = function (text) {
            var result = parseInt(text);
            if (isNaN(result)) {
                throw new NumberParseError("Invalid integer literal when parsing " + text);
            }
            return result;
        };
        NumberWrapper.parseInt = function (text, radix) {
            if (radix == 10) {
                if (/^(\-|\+)?[0-9]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else if (radix == 16) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
                    return parseInt(text, radix);
                }
            } else {
                var result = parseInt(text, radix);
                if (!isNaN(result)) {
                    return result;
                }
            }
            throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
        };
        // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.
        NumberWrapper.parseFloat = function (text) {
            return parseFloat(text);
        };
        Object.defineProperty(NumberWrapper, "NaN", {
            get: function () {
                return NaN;
            },
            enumerable: true,
            configurable: true
        });
        NumberWrapper.isNaN = function (value) {
            return isNaN(value);
        };
        NumberWrapper.isInteger = function (value) {
            return Number.isInteger(value);
        };
        return NumberWrapper;
    }();
    exports.NumberWrapper = NumberWrapper;
    exports.RegExp = _global.RegExp;
    var RegExpWrapper = function () {
        function RegExpWrapper() {}
        RegExpWrapper.create = function (regExpStr, flags) {
            if (flags === void 0) {
                flags = '';
            }
            flags = flags.replace(/g/g, '');
            return new _global.RegExp(regExpStr, flags + 'g');
        };
        RegExpWrapper.firstMatch = function (regExp, input) {
            // Reset multimatch regex state
            regExp.lastIndex = 0;
            return regExp.exec(input);
        };
        RegExpWrapper.test = function (regExp, input) {
            regExp.lastIndex = 0;
            return regExp.test(input);
        };
        RegExpWrapper.matcher = function (regExp, input) {
            // Reset regex state for the case
            // someone did not loop over all matches
            // last time.
            regExp.lastIndex = 0;
            return { re: regExp, input: input };
        };
        RegExpWrapper.replaceAll = function (regExp, input, replace) {
            var c = regExp.exec(input);
            var res = '';
            regExp.lastIndex = 0;
            var prev = 0;
            while (c) {
                res += input.substring(prev, c.index);
                res += replace(c);
                prev = c.index + c[0].length;
                regExp.lastIndex = prev;
                c = regExp.exec(input);
            }
            res += input.substring(prev);
            return res;
        };
        return RegExpWrapper;
    }();
    exports.RegExpWrapper = RegExpWrapper;
    var RegExpMatcherWrapper = function () {
        function RegExpMatcherWrapper() {}
        RegExpMatcherWrapper.next = function (matcher) {
            return matcher.re.exec(matcher.input);
        };
        return RegExpMatcherWrapper;
    }();
    exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
    var FunctionWrapper = function () {
        function FunctionWrapper() {}
        FunctionWrapper.apply = function (fn, posArgs) {
            return fn.apply(null, posArgs);
        };
        return FunctionWrapper;
    }();
    exports.FunctionWrapper = FunctionWrapper;
    // JS has NaN !== NaN
    function looseIdentical(a, b) {
        return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
    }
    exports.looseIdentical = looseIdentical;
    // JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)
    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
    function getMapKey(value) {
        return value;
    }
    exports.getMapKey = getMapKey;
    function normalizeBlank(obj) {
        return isBlank(obj) ? null : obj;
    }
    exports.normalizeBlank = normalizeBlank;
    function normalizeBool(obj) {
        return isBlank(obj) ? false : obj;
    }
    exports.normalizeBool = normalizeBool;
    function isJsObject(o) {
        return o !== null && (typeof o === "function" || typeof o === "object");
    }
    exports.isJsObject = isJsObject;
    function print(obj) {
        console.log(obj);
    }
    exports.print = print;
    function warn(obj) {
        console.warn(obj);
    }
    exports.warn = warn;
    // Can't be all uppercase as our transpiler would think it is a special directive...
    var Json = function () {
        function Json() {}
        Json.parse = function (s) {
            return _global.JSON.parse(s);
        };
        Json.stringify = function (data) {
            // Dart doesn't take 3 arguments
            return _global.JSON.stringify(data, null, 2);
        };
        return Json;
    }();
    exports.Json = Json;
    var DateWrapper = function () {
        function DateWrapper() {}
        DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {
            if (month === void 0) {
                month = 1;
            }
            if (day === void 0) {
                day = 1;
            }
            if (hour === void 0) {
                hour = 0;
            }
            if (minutes === void 0) {
                minutes = 0;
            }
            if (seconds === void 0) {
                seconds = 0;
            }
            if (milliseconds === void 0) {
                milliseconds = 0;
            }
            return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
        };
        DateWrapper.fromISOString = function (str) {
            return new exports.Date(str);
        };
        DateWrapper.fromMillis = function (ms) {
            return new exports.Date(ms);
        };
        DateWrapper.toMillis = function (date) {
            return date.getTime();
        };
        DateWrapper.now = function () {
            return new exports.Date();
        };
        DateWrapper.toJson = function (date) {
            return date.toJSON();
        };
        return DateWrapper;
    }();
    exports.DateWrapper = DateWrapper;
    function setValueOnPath(global, path, value) {
        var parts = path.split('.');
        var obj = global;
        while (parts.length > 1) {
            var name = parts.shift();
            if (obj.hasOwnProperty(name) && isPresent(obj[name])) {
                obj = obj[name];
            } else {
                obj = obj[name] = {};
            }
        }
        if (obj === undefined || obj === null) {
            obj = {};
        }
        obj[parts.shift()] = value;
    }
    exports.setValueOnPath = setValueOnPath;
    var _symbolIterator = null;
    function getSymbolIterator() {
        if (isBlank(_symbolIterator)) {
            if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {
                _symbolIterator = Symbol.iterator;
            } else {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
                        _symbolIterator = key;
                    }
                }
            }
        }
        return _symbolIterator;
    }
    exports.getSymbolIterator = getSymbolIterator;
    function evalExpression(sourceUrl, expr, declarations, vars) {
        var fnBody = declarations + "\nreturn " + expr + "\n//# sourceURL=" + sourceUrl;
        var fnArgNames = [];
        var fnArgValues = [];
        for (var argName in vars) {
            fnArgNames.push(argName);
            fnArgValues.push(vars[argName]);
        }
        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);
    }
    exports.evalExpression = evalExpression;
    function isPrimitive(obj) {
        return !isJsObject(obj);
    }
    exports.isPrimitive = isPrimitive;
    function hasConstructor(value, type) {
        return value.constructor === type;
    }
    exports.hasConstructor = hasConstructor;
    function bitWiseOr(values) {
        return values.reduce(function (a, b) {
            return a | b;
        });
    }
    exports.bitWiseOr = bitWiseOr;
    function bitWiseAnd(values) {
        return values.reduce(function (a, b) {
            return a & b;
        });
    }
    exports.bitWiseAnd = bitWiseAnd;
    function escape(s) {
        return _global.encodeURI(s);
    }
    exports.escape = escape;
    

    return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/util/decorators.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var _nextClassId = 0;
  function extractAnnotation(annotation) {
    if (lang_1.isFunction(annotation) && annotation.hasOwnProperty('annotation')) {
      annotation = annotation.annotation;
    }
    return annotation;
  }
  function applyParams(fnOrArray, key) {
    if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function || fnOrArray === Number || fnOrArray === Array) {
      throw new Error("Can not use native " + lang_1.stringify(fnOrArray) + " as constructor");
    }
    if (lang_1.isFunction(fnOrArray)) {
      return fnOrArray;
    } else if (fnOrArray instanceof Array) {
      var annotations = fnOrArray;
      var fn = fnOrArray[fnOrArray.length - 1];
      if (!lang_1.isFunction(fn)) {
        throw new Error("Last position of Class method array must be Function in key " + key + " was '" + lang_1.stringify(fn) + "'");
      }
      var annoLength = annotations.length - 1;
      if (annoLength != fn.length) {
        throw new Error("Number of annotations (" + annoLength + ") does not match number of arguments (" + fn.length + ") in the function: " + lang_1.stringify(fn));
      }
      var paramsAnnotations = [];
      for (var i = 0, ii = annotations.length - 1; i < ii; i++) {
        var paramAnnotations = [];
        paramsAnnotations.push(paramAnnotations);
        var annotation = annotations[i];
        if (annotation instanceof Array) {
          for (var j = 0; j < annotation.length; j++) {
            paramAnnotations.push(extractAnnotation(annotation[j]));
          }
        } else if (lang_1.isFunction(annotation)) {
          paramAnnotations.push(extractAnnotation(annotation));
        } else {
          paramAnnotations.push(annotation);
        }
      }
      Reflect.defineMetadata('parameters', paramsAnnotations, fn);
      return fn;
    } else {
      throw new Error("Only Function or Array is supported in Class definition for key '" + key + "' is '" + lang_1.stringify(fnOrArray) + "'");
    }
  }
  function Class(clsDef) {
    var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');
    var proto = constructor.prototype;
    if (clsDef.hasOwnProperty('extends')) {
      if (lang_1.isFunction(clsDef.extends)) {
        constructor.prototype = proto = Object.create(clsDef.extends.prototype);
      } else {
        throw new Error("Class definition 'extends' property must be a constructor function was: " + lang_1.stringify(clsDef.extends));
      }
    }
    for (var key in clsDef) {
      if (key != 'extends' && key != 'prototype' && clsDef.hasOwnProperty(key)) {
        proto[key] = applyParams(clsDef[key], key);
      }
    }
    if (this && this.annotations instanceof Array) {
      Reflect.defineMetadata('annotations', this.annotations, constructor);
    }
    if (!constructor['name']) {
      constructor['overriddenName'] = "class" + _nextClassId++;
    }
    return constructor;
  }
  exports.Class = Class;
  var Reflect = lang_1.global.Reflect;
  (function checkReflect() {
    if (!(Reflect && Reflect.getMetadata)) {
      throw 'reflect-metadata shim is required when using class decorators';
    }
  })();
  function makeDecorator(annotationCls, chainFn) {
    if (chainFn === void 0) {
      chainFn = null;
    }
    function DecoratorFactory(objOrType) {
      var annotationInstance = new annotationCls(objOrType);
      if (this instanceof annotationCls) {
        return annotationInstance;
      } else {
        var chainAnnotation = lang_1.isFunction(this) && this.annotations instanceof Array ? this.annotations : [];
        chainAnnotation.push(annotationInstance);
        var TypeDecorator = function TypeDecorator(cls) {
          var annotations = Reflect.getOwnMetadata('annotations', cls);
          annotations = annotations || [];
          annotations.push(annotationInstance);
          Reflect.defineMetadata('annotations', annotations, cls);
          return cls;
        };
        TypeDecorator.annotations = chainAnnotation;
        TypeDecorator.Class = Class;
        if (chainFn) chainFn(TypeDecorator);
        return TypeDecorator;
      }
    }
    DecoratorFactory.prototype = Object.create(annotationCls.prototype);
    DecoratorFactory.annotationCls = annotationCls;
    return DecoratorFactory;
  }
  exports.makeDecorator = makeDecorator;
  function makeParamDecorator(annotationCls) {
    function ParamDecoratorFactory() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
      }
      var annotationInstance = Object.create(annotationCls.prototype);
      annotationCls.apply(annotationInstance, args);
      if (this instanceof annotationCls) {
        return annotationInstance;
      } else {
        ParamDecorator.annotation = annotationInstance;
        return ParamDecorator;
      }
      function ParamDecorator(cls, unusedKey, index) {
        var parameters = Reflect.getMetadata('parameters', cls);
        parameters = parameters || [];
        while (parameters.length <= index) {
          parameters.push(null);
        }
        parameters[index] = parameters[index] || [];
        var annotationsForParam = parameters[index];
        annotationsForParam.push(annotationInstance);
        Reflect.defineMetadata('parameters', parameters, cls);
        return cls;
      }
    }
    ParamDecoratorFactory.prototype = Object.create(annotationCls.prototype);
    ParamDecoratorFactory.annotationCls = annotationCls;
    return ParamDecoratorFactory;
  }
  exports.makeParamDecorator = makeParamDecorator;
  function makePropDecorator(annotationCls) {
    function PropDecoratorFactory() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
      }
      var decoratorInstance = Object.create(annotationCls.prototype);
      annotationCls.apply(decoratorInstance, args);
      if (this instanceof annotationCls) {
        return decoratorInstance;
      } else {
        return function PropDecorator(target, name) {
          var meta = Reflect.getOwnMetadata('propMetadata', target.constructor);
          meta = meta || {};
          meta[name] = meta[name] || [];
          meta[name].unshift(decoratorInstance);
          Reflect.defineMetadata('propMetadata', meta, target.constructor);
        };
      }
    }
    PropDecoratorFactory.prototype = Object.create(annotationCls.prototype);
    PropDecoratorFactory.annotationCls = annotationCls;
    return PropDecoratorFactory;
  }
  exports.makePropDecorator = makePropDecorator;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js', ['npm:@angular/core@2.0.0-rc.1/src/di/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/util/decorators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var metadata_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/metadata.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/util/decorators.js');
  exports.Inject = decorators_1.makeParamDecorator(metadata_1.InjectMetadata);
  exports.Optional = decorators_1.makeParamDecorator(metadata_1.OptionalMetadata);
  exports.Injectable = decorators_1.makeDecorator(metadata_1.InjectableMetadata);
  exports.Self = decorators_1.makeParamDecorator(metadata_1.SelfMetadata);
  exports.Host = decorators_1.makeParamDecorator(metadata_1.HostMetadata);
  exports.SkipSelf = decorators_1.makeParamDecorator(metadata_1.SkipSelfMetadata);
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/src/console.js', ['npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/di/decorators.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  var decorators_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/di/decorators.js');
  var _warnImpl = lang_1.warn;
  var Console = function () {
    function Console() {}
    Console.prototype.log = function (message) {
      lang_1.print(message);
    };
    Console.prototype.warn = function (message) {
      _warnImpl(message);
    };
    Console.decorators = [{ type: decorators_1.Injectable }];
    return Console;
  }();
  exports.Console = Console;
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/private_export.js', ['npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js', 'npm:@angular/core@2.0.0-rc.1/src/security.js', 'npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js', 'npm:@angular/core@2.0.0-rc.1/src/metadata/lifecycle_hooks.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/element.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js', 'npm:@angular/core@2.0.0-rc.1/src/metadata/view.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/debug_context.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js', 'npm:@angular/core@2.0.0-rc.1/src/render/api.js', 'npm:@angular/core@2.0.0-rc.1/src/linker/template_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/profile/wtf_init.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflection_capabilities.js', 'npm:@angular/core@2.0.0-rc.1/src/util/decorators.js', 'npm:@angular/core@2.0.0-rc.1/src/debug/debug_renderer.js', 'npm:@angular/core@2.0.0-rc.1/src/di/provider_util.js', 'npm:@angular/core@2.0.0-rc.1/src/console.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var constants = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/constants.js');
  var security = $__require('npm:@angular/core@2.0.0-rc.1/src/security.js');
  var reflective_provider = $__require('npm:@angular/core@2.0.0-rc.1/src/di/reflective_provider.js');
  var lifecycle_hooks = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/lifecycle_hooks.js');
  var reflector_reader = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflector_reader.js');
  var component_resolver = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/component_resolver.js');
  var element = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/element.js');
  var view = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view.js');
  var view_type = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_type.js');
  var view_utils = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/view_utils.js');
  var metadata_view = $__require('npm:@angular/core@2.0.0-rc.1/src/metadata/view.js');
  var debug_context = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/debug_context.js');
  var change_detection_util = $__require('npm:@angular/core@2.0.0-rc.1/src/change_detection/change_detection_util.js');
  var api = $__require('npm:@angular/core@2.0.0-rc.1/src/render/api.js');
  var template_ref = $__require('npm:@angular/core@2.0.0-rc.1/src/linker/template_ref.js');
  var wtf_init = $__require('npm:@angular/core@2.0.0-rc.1/src/profile/wtf_init.js');
  var reflection_capabilities = $__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection_capabilities.js');
  var decorators = $__require('npm:@angular/core@2.0.0-rc.1/src/util/decorators.js');
  var debug = $__require('npm:@angular/core@2.0.0-rc.1/src/debug/debug_renderer.js');
  var provider_util = $__require('npm:@angular/core@2.0.0-rc.1/src/di/provider_util.js');
  var console = $__require('npm:@angular/core@2.0.0-rc.1/src/console.js');
  exports.__core_private__ = {
    isDefaultChangeDetectionStrategy: constants.isDefaultChangeDetectionStrategy,
    ChangeDetectorState: constants.ChangeDetectorState,
    CHANGE_DETECTION_STRATEGY_VALUES: constants.CHANGE_DETECTION_STRATEGY_VALUES,
    constructDependencies: reflective_provider.constructDependencies,
    LifecycleHooks: lifecycle_hooks.LifecycleHooks,
    LIFECYCLE_HOOKS_VALUES: lifecycle_hooks.LIFECYCLE_HOOKS_VALUES,
    ReflectorReader: reflector_reader.ReflectorReader,
    ReflectorComponentResolver: component_resolver.ReflectorComponentResolver,
    AppElement: element.AppElement,
    AppView: view.AppView,
    DebugAppView: view.DebugAppView,
    ViewType: view_type.ViewType,
    MAX_INTERPOLATION_VALUES: view_utils.MAX_INTERPOLATION_VALUES,
    checkBinding: view_utils.checkBinding,
    flattenNestedViewRenderNodes: view_utils.flattenNestedViewRenderNodes,
    interpolate: view_utils.interpolate,
    ViewUtils: view_utils.ViewUtils,
    VIEW_ENCAPSULATION_VALUES: metadata_view.VIEW_ENCAPSULATION_VALUES,
    DebugContext: debug_context.DebugContext,
    StaticNodeDebugInfo: debug_context.StaticNodeDebugInfo,
    devModeEqual: change_detection_util.devModeEqual,
    uninitialized: change_detection_util.uninitialized,
    ValueUnwrapper: change_detection_util.ValueUnwrapper,
    RenderDebugInfo: api.RenderDebugInfo,
    SecurityContext: security.SecurityContext,
    SanitizationService: security.SanitizationService,
    TemplateRef_: template_ref.TemplateRef_,
    wtfInit: wtf_init.wtfInit,
    ReflectionCapabilities: reflection_capabilities.ReflectionCapabilities,
    makeDecorator: decorators.makeDecorator,
    DebugDomRootRenderer: debug.DebugDomRootRenderer,
    createProvider: provider_util.createProvider,
    isProviderLiteral: provider_util.isProviderLiteral,
    EMPTY_ARRAY: view_utils.EMPTY_ARRAY,
    EMPTY_MAP: view_utils.EMPTY_MAP,
    pureProxy1: view_utils.pureProxy1,
    pureProxy2: view_utils.pureProxy2,
    pureProxy3: view_utils.pureProxy3,
    pureProxy4: view_utils.pureProxy4,
    pureProxy5: view_utils.pureProxy5,
    pureProxy6: view_utils.pureProxy6,
    pureProxy7: view_utils.pureProxy7,
    pureProxy8: view_utils.pureProxy8,
    pureProxy9: view_utils.pureProxy9,
    pureProxy10: view_utils.pureProxy10,
    castByValue: view_utils.castByValue,
    Console: console.Console
  };
  return module.exports;
});
System.registerDynamic('npm:@angular/core@2.0.0-rc.1/index.js', ['npm:@angular/core@2.0.0-rc.1/src/metadata.js', 'npm:@angular/core@2.0.0-rc.1/src/util.js', 'npm:@angular/core@2.0.0-rc.1/src/di.js', 'npm:@angular/core@2.0.0-rc.1/src/application_ref.js', 'npm:@angular/core@2.0.0-rc.1/src/application_tokens.js', 'npm:@angular/core@2.0.0-rc.1/src/zone.js', 'npm:@angular/core@2.0.0-rc.1/src/render.js', 'npm:@angular/core@2.0.0-rc.1/src/linker.js', 'npm:@angular/core@2.0.0-rc.1/src/debug/debug_node.js', 'npm:@angular/core@2.0.0-rc.1/src/testability/testability.js', 'npm:@angular/core@2.0.0-rc.1/src/change_detection.js', 'npm:@angular/core@2.0.0-rc.1/src/platform_directives_and_pipes.js', 'npm:@angular/core@2.0.0-rc.1/src/platform_common_providers.js', 'npm:@angular/core@2.0.0-rc.1/src/application_common_providers.js', 'npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js', 'npm:@angular/core@2.0.0-rc.1/src/profile/profile.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/lang.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/async.js', 'npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js', 'npm:@angular/core@2.0.0-rc.1/private_export.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/metadata.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/util.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/di.js'));
  var application_ref_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_ref.js');
  exports.createPlatform = application_ref_1.createPlatform;
  exports.assertPlatform = application_ref_1.assertPlatform;
  exports.disposePlatform = application_ref_1.disposePlatform;
  exports.getPlatform = application_ref_1.getPlatform;
  exports.coreBootstrap = application_ref_1.coreBootstrap;
  exports.coreLoadAndBootstrap = application_ref_1.coreLoadAndBootstrap;
  exports.createNgZone = application_ref_1.createNgZone;
  exports.PlatformRef = application_ref_1.PlatformRef;
  exports.ApplicationRef = application_ref_1.ApplicationRef;
  var application_tokens_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/application_tokens.js');
  exports.APP_ID = application_tokens_1.APP_ID;
  exports.APP_INITIALIZER = application_tokens_1.APP_INITIALIZER;
  exports.PACKAGE_ROOT_URL = application_tokens_1.PACKAGE_ROOT_URL;
  exports.PLATFORM_INITIALIZER = application_tokens_1.PLATFORM_INITIALIZER;
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/zone.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/render.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/linker.js'));
  var debug_node_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/debug/debug_node.js');
  exports.DebugElement = debug_node_1.DebugElement;
  exports.DebugNode = debug_node_1.DebugNode;
  exports.asNativeElements = debug_node_1.asNativeElements;
  exports.getDebugNode = debug_node_1.getDebugNode;
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/testability/testability.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/change_detection.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/platform_directives_and_pipes.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/platform_common_providers.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/application_common_providers.js'));
  __export($__require('npm:@angular/core@2.0.0-rc.1/src/reflection/reflection.js'));
  var profile_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/profile/profile.js');
  exports.wtfCreateScope = profile_1.wtfCreateScope;
  exports.wtfLeave = profile_1.wtfLeave;
  exports.wtfStartTimeRange = profile_1.wtfStartTimeRange;
  exports.wtfEndTimeRange = profile_1.wtfEndTimeRange;
  var lang_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/lang.js');
  exports.Type = lang_1.Type;
  exports.enableProdMode = lang_1.enableProdMode;
  var async_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/async.js');
  exports.EventEmitter = async_1.EventEmitter;
  var exceptions_1 = $__require('npm:@angular/core@2.0.0-rc.1/src/facade/exceptions.js');
  exports.ExceptionHandler = exceptions_1.ExceptionHandler;
  exports.WrappedException = exceptions_1.WrappedException;
  exports.BaseException = exceptions_1.BaseException;
  __export($__require('npm:@angular/core@2.0.0-rc.1/private_export.js'));
  return module.exports;
});
System.registerDynamic("npm:@angular/core@2.0.0-rc.1.js", ["npm:@angular/core@2.0.0-rc.1/index.js"], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@angular/core@2.0.0-rc.1/index.js");
  return module.exports;
});
System.register("src/components/slides/slideCommon/slideCommon.js", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var SlideCommon;
    return {
        setters: [],
        execute: function () {
            SlideCommon = function () {
                function SlideCommon(elt, hostClass) {
                    console.log('there');
                    var classes = elt.nativeElement.classList;
                    if (!classes.contains(hostClass)) {
                        classes.add(hostClass);
                    }
                }
                return SlideCommon;
            }();
            exports_1("SlideCommon", SlideCommon);
        }
    };
});
System.register("src/services/constants.js", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var HOST_SLIDE_CONTAINER_CLASS, GPRETTIFYER, JQUERY;
    return {
        setters: [],
        execute: function () {
            exports_1("HOST_SLIDE_CONTAINER_CLASS", HOST_SLIDE_CONTAINER_CLASS = "hostSlideContainer");
            exports_1("GPRETTIFYER", GPRETTIFYER = "GPRETTIFYER");
            exports_1("JQUERY", JQUERY = "JQUERY");
        }
    };
});
System.register("src/components/slides/todo/todo.js", ["npm:@angular/core@2.0.0-rc.1.js", "src/components/slides/slideCommon/slideCommon.js", "src/services/constants.js"], function (exports_1, context_1) {
    "use strict";

    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = this && this.__param || function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, slideCommon_1, constants_1, Todo;
    return {
        setters: [function (core_1_1) {
            core_1 = core_1_1;
        }, function (slideCommon_1_1) {
            slideCommon_1 = slideCommon_1_1;
        }, function (constants_1_1) {
            constants_1 = constants_1_1;
        }],
        execute: function () {
            Todo = function (_super) {
                __extends(Todo, _super);
                function Todo(elt, hostClass) {
                    _super.call(this, elt, hostClass);
                }
                return Todo;
            }(slideCommon_1.SlideCommon);
            Todo = __decorate([core_1.Component({
                selector: 'todo',
                templateUrl: 'src/components/slides/todo/todo.html'
            }), __param(1, core_1.Inject(constants_1.HOST_SLIDE_CONTAINER_CLASS)), __metadata("design:paramtypes", [core_1.ElementRef, String])], Todo);
            exports_1("Todo", Todo);
        }
    };
});